// Generated by dart2js, the Dart to JavaScript compiler version: 1.2.0-edge.0.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
(function($) {
function dart() {}var A = new dart;
delete A.x;
var B = new dart;
delete B.x;
var C = new dart;
delete C.x;
var D = new dart;
delete D.x;
var E = new dart;
delete E.x;
var F = new dart;
delete F.x;
var G = new dart;
delete G.x;
var H = new dart;
delete H.x;
var J = new dart;
delete J.x;
var K = new dart;
delete K.x;
var L = new dart;
delete L.x;
var M = new dart;
delete M.x;
var N = new dart;
delete N.x;
var O = new dart;
delete O.x;
var P = new dart;
delete P.x;
var Q = new dart;
delete Q.x;
var R = new dart;
delete R.x;
var S = new dart;
delete S.x;
var T = new dart;
delete T.x;
var U = new dart;
delete U.x;
var V = new dart;
delete V.x;
var W = new dart;
delete W.x;
var X = new dart;
delete X.x;
var Y = new dart;
delete Y.x;
var Z = new dart;
delete Z.x;
function Isolate() {}
init();

$ = Isolate.$isolateProperties;
var $$ = {};

// Native classes
init.mangledNames = {get$$$: "$", get$__isExpanded: "__isExpanded", get$_annotations$__$annotations: "__$annotations", get$_breadcrumbs$__$breadcrumbs: "__$breadcrumbs", get$_breadcrumbs$__$lastCrumb: "__$lastCrumb", get$_buildIdentifier: "_buildIdentifier", get$_category$__$accordionStyle: "__$accordionStyle", get$_category$__$caretStyle: "__$caretStyle", get$_category$__$category: "__$category", get$_category$__$divClass: "__$divClass", get$_category$__$hasItems: "__$hasItems", get$_category$__$items: "__$items", get$_category$__$lineHeight: "__$lineHeight", get$_category$__$methods: "__$methods", get$_category$__$stylizedName: "__$stylizedName", get$_category$__$title: "__$title", get$_category$__$variables: "__$variables", get$_category_item$__$comment: "__$comment", get$_category_item$_owner: "_owner", get$_child: "_child", get$_comment$__$item: "__$item", get$_comment$__$preview: "__$preview", get$_commentElement: "_commentElement", get$_instanceFunctions: "_instanceFunctions", get$_instanceVariables: "_instanceVariables", get$_item: "_item", get$_library$_loader: "_loader", get$_link$__$type: "__$type", get$_loader: "_loader", get$_main$__$pageContentClass: "__$pageContentClass", get$_main$__$shouldShowClassMinimap: "__$shouldShowClassMinimap", get$_main$__$shouldShowLibraryMinimap: "__$shouldShowLibraryMinimap", get$_main$__$shouldShowLibraryPanel: "__$shouldShowLibraryPanel", get$_main$__$showOrHideInherited: "__$showOrHideInherited", get$_main$__$showOrHideLibraries: "__$showOrHideLibraries", get$_main$__$showOrHideMinimap: "__$showOrHideMinimap", get$_main$__$showOrHideObjectMembers: "__$showOrHideObjectMembers", get$_main$__$showOrHidePackages: "__$showOrHidePackages", get$_member$__$commentFrom: "__$commentFrom", get$_member$__$hasInheritedComment: "__$hasInheritedComment", get$_member$__$idName: "__$idName", get$_member$__$inheritedFrom: "__$inheritedFrom", get$_member$__$isInherited: "__$isInherited", get$_member$__$shouldShowComment: "__$shouldShowComment", get$_member$__$shouldShowCommentFrom: "__$shouldShowCommentFrom", get$_method$__$constantModifier: "__$constantModifier", get$_method$__$isNotConstructor: "__$isNotConstructor", get$_method$__$modifiers: "__$modifiers", get$_method$__$staticModifier: "__$staticModifier", get$_minimap_element$__$camelCaseName: "__$camelCaseName", get$_minimap_element$__$category: "__$category", get$_minimap_element$__$categoryLink: "__$categoryLink", get$_minimap_element$__$item: "__$item", get$_minimap_element$__$itemsToShow: "__$itemsToShow", get$_openedAt: "_openedAt", get$_page$__$isClass: "__$isClass", get$_page$__$isHome: "__$isHome", get$_page$__$isLibrary: "__$isLibrary", get$_page$__$isMethod: "__$isMethod", get$_page$__$isTypedef: "__$isTypedef", get$_page$__$item: "__$item", get$_parameters$__$parameters: "__$parameters", get$_pathname: "_pathname", get$_results$__$descriptiveName: "__$descriptiveName", get$_results$__$descriptiveType: "__$descriptiveType", get$_results$__$item: "__$item", get$_results$__$outerLibrary: "__$outerLibrary", get$_search0$__$dropdownOpen: "__$dropdownOpen", get$_search0$__$isFocused: "__$isFocused", get$_search0$__$results: "__$results", get$_search0$__$searchQuery: "__$searchQuery", get$_staticFunctions: "_staticFunctions", get$_staticVariables: "_staticVariables", get$_type$__$type: "__$type", get$_variable$__$annotations: "__$annotations", get$_variable_heading$__$getter: "__$getter", get$_variable_heading$__$isNotSetter: "__$isNotSetter", get$_variable_heading$__$name: "__$name", get$annotations: "annotations", get$box_0: "box_0", get$className: "className", get$className_3: "className_3", get$classes: "classes", get$commentFrom: "commentFrom", get$constructs: "constructs", get$content: "content", get$currentIndex: "currentIndex", get$defaultValue: "defaultValue", get$domName: "domName", get$element: "element", get$errors: "errors", get$filter_0: "filter_0", get$functions: "functions", get$generics: "generics", get$getters_3: "getters_3", get$hasDefault: "hasDefault", get$hidden_2: "hidden_2", get$hidden_3: "hidden_3", get$home: "home", get$index: "index", get$inheritedCounter: "inheritedCounter", get$inheritedFrom: "inheritedFrom", get$inner: "inner", get$interfaces: "interfaces", get$isAbstract: "isAbstract", get$isConstant: "isConstant", get$isConstructor: "isConstructor", get$isConstructor_2: "isConstructor_2", get$isFinal: "isFinal", get$isGetter: "isGetter", get$isGetter_2: "isGetter_2", get$isLoaded: "isLoaded", get$isNamed: "isNamed", get$isOperator: "isOperator", get$isOperator_1: "isOperator_1", get$isOperator_4: "isOperator_4", get$isOptional: "isOptional", get$isSetter: "isSetter", get$isSetter_1: "isSetter_1", get$isStatic: "isStatic", get$item_0: "item_0", get$lazyClasses: "lazyClasses", get$lazyConstructors: "lazyConstructors", get$lazyErrors: "lazyErrors", get$lazyFunctions: "lazyFunctions", get$lazyInstanceFunctions: "lazyInstanceFunctions", get$lazyInstanceVariables: "lazyInstanceVariables", get$lazyOperators: "lazyOperators", get$lazyStaticFunctions: "lazyStaticFunctions", get$lazyStaticVariables: "lazyStaticVariables", get$lazyTypedefs: "lazyTypedefs", get$lazyVariables: "lazyVariables", get$libraries: "libraries", get$libraries_3: "libraries_3", get$link: "link", get$loc: "loc", get$mainLib_2: "mainLib_2", get$memberCounter: "memberCounter", get$memberNames: "memberNames", get$name: "name", get$name_0: "name_0", get$operators: "operators", get$originalPadding: "originalPadding", get$outer: "outer", get$outerSpan_0: "outerSpan_0", get$owner: "owner", get$owner_5: "owner_5", get$packageName_2: "packageName_2", get$packages_0: "packages_0", get$parameters: "parameters", get$path: "path", get$position: "position", get$previewComment: "previewComment", get$qualifiedName: "qualifiedName", get$score: "score", get$set_1: "set_1", get$setterParameter: "setterParameter", get$setters_5: "setters_5", get$subclasses: "subclasses", get$superClass: "superClass", get$supportedBrowsers: "supportedBrowsers", get$this_0: "this_0", get$this_1: "this_1", get$this_2: "this_2", get$this_4: "this_4", get$type: "type", get$typedefs: "typedefs", get$value: "value", get$values_1: "values_1", get$variables: "variables", get$variables_1: "variables_1", get$yaml_1: "yaml_1"};
init.mangledGlobalNames = {ClassElement_MAX_SUBCLASSES_TO_SHOW: "MAX_SUBCLASSES_TO_SHOW", ClassElement__defaultItem: "_defaultItem", ItemElement__defaultItem: "_defaultItem", LibraryElement__defaultItem: "_defaultItem", MethodElement__defaultItem: "_defaultItem", MinimapElementClass__defaultItem: "_defaultItem", MinimapElementLibrary__defaultItem: "_defaultItem", SearchResult_typesThatLinkWithinAParentPage: "typesThatLinkWithinAParentPage", TypedefElement__defaultItem: "_defaultItem", VariableElement__defaultItem: "_defaultItem", VariableHeading__defaultItem: "_defaultItem", docsPath: "docsPath"};
(function (reflectionData) {
  "use strict";
  function map(x){x={x:x};delete x.x;return x}
    function processStatics(descriptor) {
      for (var property in descriptor) {
        if (!hasOwnProperty.call(descriptor, property)) continue;
        if (property === "") continue;
        var element = descriptor[property];
        var firstChar = property.substring(0, 1);
        var previousProperty;
        if (firstChar === "+") {
          mangledGlobalNames[previousProperty] = property.substring(1);
          if (descriptor[property] == 1) descriptor[previousProperty].$reflectable = 1;
          if (element && element.length) init.typeInformation[previousProperty] = element;
        } else if (firstChar === "@") {
          property = property.substring(1);
          $[property]["@"] = element;
        } else if (firstChar === "*") {
          globalObject[previousProperty].$defaultValues = element;
          var optionalMethods = descriptor.$methodsWithOptionalArguments;
          if (!optionalMethods) {
            descriptor.$methodsWithOptionalArguments = optionalMethods = {}
          }
          optionalMethods[property] = previousProperty;
        } else if (typeof element === "function") {
          globalObject[previousProperty = property] = element;
          functions.push(property);
          init.globalFunctions[property] = element;
        } else if (element.constructor === Array) {
          addStubs(globalObject, element, property, true, descriptor, functions);
        } else {
          previousProperty = property;
          var newDesc = {};
          var previousProp;
          for (var prop in element) {
            if (!hasOwnProperty.call(element, prop)) continue;
            firstChar = prop.substring(0, 1);
            if (prop === "static") {
              processStatics(init.statics[property] = element[prop]);
            } else if (firstChar === "+") {
              mangledNames[previousProp] = prop.substring(1);
              if (element[prop] == 1) element[previousProp].$reflectable = 1;
            } else if (firstChar === "@" && prop !== "@") {
              newDesc[prop.substring(1)]["@"] = element[prop];
            } else if (firstChar === "*") {
              newDesc[previousProp].$defaultValues = element[prop];
              var optionalMethods = newDesc.$methodsWithOptionalArguments;
              if (!optionalMethods) {
                newDesc.$methodsWithOptionalArguments = optionalMethods={}
              }
              optionalMethods[prop] = previousProp;
            } else {
              var elem = element[prop];
              if (prop && elem != null && elem.constructor === Array && prop !== "<>") {
                addStubs(newDesc, elem, prop, false, element, []);
              } else {
                newDesc[previousProp = prop] = elem;
              }
            }
          }
          $$[property] = [globalObject, newDesc];
          classes.push(property);
        }
      }
    }
  function addStubs(descriptor, array, name, isStatic, originalDescriptor, functions) {
    var f, funcs = [originalDescriptor[name] = descriptor[name] = f = (function() {
  var result = array[0];
  if (result != null && typeof result != "function") {
    throw new Error(
        name + ": expected value of type 'function' at index " + (0) +
        " but got " + (typeof result));
  }
  return result;
})()];
    f.$stubName = name;
    functions.push(name);
    for (var index = 0; index < array.length; index += 2) {
      f = array[index + 1];
      if (typeof f != "function") break;
      f.$stubName = (function() {
  var result = array[index + 2];
  if (result != null && typeof result != "string") {
    throw new Error(
        name + ": expected value of type 'string' at index " + (index + 2) +
        " but got " + (typeof result));
  }
  return result;
})();
      funcs.push(f);
      if (f.$stubName) {
        originalDescriptor[f.$stubName] = descriptor[f.$stubName] = f;
        functions.push(f.$stubName);
      }
    }
    for (var i = 0; i < funcs.length; index++, i++) {
      funcs[i].$callName = (function() {
  var result = array[index + 1];
  if (result != null && typeof result != "string") {
    throw new Error(
        name + ": expected value of type 'string' at index " + (index + 1) +
        " but got " + (typeof result));
  }
  return result;
})();
    }
    var getterStubName = (function() {
  var result = array[++index];
  if (result != null && typeof result != "string") {
    throw new Error(
        name + ": expected value of type 'string' at index " + (++index) +
        " but got " + (typeof result));
  }
  return result;
})();
    array = array.slice(++index);
    var requiredParameterInfo = (function() {
  var result = array[0];
  if (result != null && (typeof result != "number" || (result|0) !== result)) {
    throw new Error(
        name + ": expected value of type 'int' at index " + (0) +
        " but got " + (typeof result));
  }
  return result;
})();
    var requiredParameterCount = requiredParameterInfo >> 1;
    var isAccessor = (requiredParameterInfo & 1) === 1;
    var isSetter = requiredParameterInfo === 3;
    var isGetter = requiredParameterInfo === 1;
    var optionalParameterInfo = (function() {
  var result = array[1];
  if (result != null && (typeof result != "number" || (result|0) !== result)) {
    throw new Error(
        name + ": expected value of type 'int' at index " + (1) +
        " but got " + (typeof result));
  }
  return result;
})();
    var optionalParameterCount = optionalParameterInfo >> 1;
    var optionalParametersAreNamed = (optionalParameterInfo & 1) === 1;
    var isIntercepted = requiredParameterCount + optionalParameterCount != funcs[0].length;
    var functionTypeIndex = (function() {
  var result = array[2];
  if (result != null && (typeof result != "number" || (result|0) !== result) && typeof result != "function") {
    throw new Error(
        name + ": expected value of type 'function or int' at index " + (2) +
        " but got " + (typeof result));
  }
  return result;
})();
    var isReflectable = array.length > requiredParameterCount + optionalParameterCount + 3;
    if (getterStubName) {
      f = tearOff(funcs, array, isStatic, name, isIntercepted);
      if (isStatic) init.globalFunctions[name] = f;
      originalDescriptor[getterStubName] = descriptor[getterStubName] = f;
      funcs.push(f);
      if (getterStubName) functions.push(getterStubName);
      f.$stubName = getterStubName;
      f.$callName = null;
    }
    if (isReflectable) {
      for (var i = 0; i < funcs.length; i++) {
        funcs[i].$reflectable = 1;
        funcs[i].$reflectionInfo = array;
      }
    }
    if (isReflectable) {
      var unmangledNameIndex = optionalParameterCount * 2 + requiredParameterCount + 3;
      var unmangledName = (function() {
  var result = array[unmangledNameIndex];
  if (result != null && typeof result != "string") {
    throw new Error(
        name + ": expected value of type 'string' at index " + (unmangledNameIndex) +
        " but got " + (typeof result));
  }
  return result;
})();
      var reflectionName = unmangledName + ":" + requiredParameterCount + ":" + optionalParameterCount;
      if (isGetter) {
        reflectionName = unmangledName;
      } else if (isSetter) {
        reflectionName = unmangledName + "=";
      }
      if (isStatic) {
        init.mangledGlobalNames[name] = reflectionName;
      } else {
        init.mangledNames[name] = reflectionName;
      }
      funcs[0].$reflectionName = reflectionName;
      funcs[0].$metadataIndex = unmangledNameIndex + 1;
      if (optionalParameterCount) descriptor[unmangledName + "*"] = funcs[0];
    }
  }
  function tearOffGetterNoCsp(funcs, reflectionInfo, name, isIntercepted) {
    return isIntercepted
        ? new Function("funcs", "reflectionInfo", "name", "H", "c",
            "return function tearOff_" + name + (functionCounter++)+ "(x) {" +
              "if (c === null) c = H.closureFromTearOff(" +
                  "this, funcs, reflectionInfo, false, [x], name);" +
              "return new c(this, funcs[0], x, name);" +
            "}")(funcs, reflectionInfo, name, H, null)
        : new Function("funcs", "reflectionInfo", "name", "H", "c",
            "return function tearOff_" + name + (functionCounter++)+ "() {" +
              "if (c === null) c = H.closureFromTearOff(" +
                  "this, funcs, reflectionInfo, false, [], name);" +
              "return new c(this, funcs[0], null, name);" +
            "}")(funcs, reflectionInfo, name, H, null)
  }
  function tearOffGetterCsp(funcs, reflectionInfo, name, isIntercepted) {
    var cache = null;
    return isIntercepted
        ? function(x) {
            if (cache === null) cache = H.closureFromTearOff(this, funcs, reflectionInfo, false, [x], name);
            return new cache(this, funcs[0], x, name)
          }
        : function() {
            if (cache === null) cache = H.closureFromTearOff(this, funcs, reflectionInfo, false, [], name);
            return new cache(this, funcs[0], null, name)
          }
  }
  function tearOff(funcs, reflectionInfo, isStatic, name, isIntercepted) {
    var cache;
    return isStatic
        ? function() {
            if (cache === void 0) cache = H.closureFromTearOff(this, funcs, reflectionInfo, true, [], name).prototype;
            return cache;
          }
        : tearOffGetter(funcs, reflectionInfo, name, isIntercepted);
  }
  var functionCounter = 0;
  var tearOffGetter = (typeof dart_precompiled == "function")
      ? tearOffGetterCsp : tearOffGetterNoCsp;
  if (!init.libraries) init.libraries = [];
  if (!init.mangledNames) init.mangledNames = map();
  if (!init.mangledGlobalNames) init.mangledGlobalNames = map();
  if (!init.statics) init.statics = map();
  if (!init.typeInformation) init.typeInformation = map();
  if (!init.globalFunctions) init.globalFunctions = map();
  var libraries = init.libraries;
  var mangledNames = init.mangledNames;
  var mangledGlobalNames = init.mangledGlobalNames;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var length = reflectionData.length;
  for (var i = 0; i < length; i++) {
    var data = reflectionData[i];
    var name = data[0];
    var uri = data[1];
    var metadata = data[2];
    var globalObject = data[3];
    var descriptor = data[4];
    var isRoot = !!data[5];
    var fields = descriptor && descriptor[""];
    var classes = [];
    var functions = [];
    processStatics(descriptor);
    libraries.push([name, uri, classes, functions, metadata, fields, isRoot,
                    globalObject]);
  }
})
([
["_foreign_helper", "dart:_foreign_helper", , H, {
  "": "",
  JS_CONST: {
    "": "Object;code"
  }
}],
["_interceptors", "dart:_interceptors", , J, {
  "": "",
  getInterceptor: [function(object) {
    return void 0;
  }, "call$1", "getInterceptor$closure", 2, 0, null, 6],
  makeDispatchRecord: [function(interceptor, proto, extension, indexability) {
    return {i: interceptor, p: proto, e: extension, x: indexability};
  }, "call$4", "makeDispatchRecord$closure", 8, 0, null, 7, 8, 9, 10],
  getNativeInterceptor: [function(object) {
    var record, proto, objectProto, interceptor;
    record = object[init.dispatchPropertyName];
    if (record == null)
      if ($.initNativeDispatchFlag == null) {
        H.initNativeDispatch();
        record = object[init.dispatchPropertyName];
      }
    if (record != null) {
      proto = record.p;
      if (false === proto)
        return record.i;
      if (true === proto)
        return object;
      objectProto = Object.getPrototypeOf(object);
      if (proto === objectProto)
        return record.i;
      if (record.e === objectProto)
        throw H.wrapException(P.UnimplementedError$("Return interceptor for " + H.S(proto(object, record))));
    }
    interceptor = H.lookupAndCacheInterceptor(object);
    if (interceptor == null)
      return C.UnknownJavaScriptObject_methods;
    return interceptor;
  }, "call$1", "getNativeInterceptor$closure", 2, 0, null, 6],
  findIndexForNativeSubclassType: [function(type) {
    var t1, map, t2, i;
    t1 = $.mapTypeToInterceptor;
    if (t1 == null)
      return;
    map = t1;
    for (t1 = map.length, t2 = J.getInterceptor(type), i = 0; i + 1 < t1; i += 3) {
      if (i >= t1)
        return H.ioore(map, i);
      if (t2.$eq(type, map[i]) === true)
        return i;
    }
    return;
  }, "call$1", "findIndexForNativeSubclassType$closure", 2, 0, null, 11],
  findInterceptorConstructorForType: [function(type) {
    var index, map, t1;
    index = J.findIndexForNativeSubclassType(type);
    if (index == null)
      return;
    map = $.mapTypeToInterceptor;
    if (typeof index !== "number")
      return index.$add();
    t1 = index + 1;
    if (t1 >= map.length)
      return H.ioore(map, t1);
    return map[t1];
  }, "call$1", "findInterceptorConstructorForType$closure", 2, 0, null, 11],
  findConstructorForNativeSubclassType: [function(type, $name) {
    var index, map, t1;
    index = J.findIndexForNativeSubclassType(type);
    if (index == null)
      return;
    map = $.mapTypeToInterceptor;
    if (typeof index !== "number")
      return index.$add();
    t1 = index + 2;
    if (t1 >= map.length)
      return H.ioore(map, t1);
    return map[t1][$name];
  }, "call$2", "findConstructorForNativeSubclassType$closure", 4, 0, null, 11, 12],
  Interceptor: {
    "": "Object;",
    $eq: [function(receiver, other) {
      return receiver === other;
    }, "call$1", "get$==", 2, 0, null, 104],
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    toString$0: [function(receiver) {
      return H.Primitives_objectToString(receiver);
    }, "call$0", "get$toString", 0, 0, null],
    noSuchMethod$1: [function(receiver, invocation) {
      throw H.wrapException(P.NoSuchMethodError$(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
    }, "call$1", "get$noSuchMethod", 2, 0, null, 410],
    get$runtimeType: function(receiver) {
      return new H.TypeImpl(H.getRuntimeTypeString(receiver), null);
    },
    $isInterceptor: true,
    "%": "DOMImplementation|MediaError|MediaKeyError|SVGAnimatedEnumeration|SVGAnimatedLength|SVGAnimatedLengthList|SVGAnimatedNumber|SVGAnimatedNumberList|SVGAnimatedString"
  },
  JSBool: {
    "": "bool/Interceptor;",
    toString$0: [function(receiver) {
      return String(receiver);
    }, "call$0", "get$toString", 0, 0, null],
    get$hashCode: function(receiver) {
      return receiver ? 519018 : 218159;
    },
    get$runtimeType: function(receiver) {
      return C.Type_EsU;
    },
    $isbool: true
  },
  JSNull: {
    "": "Interceptor;",
    $eq: [function(receiver, other) {
      return null == other;
    }, "call$1", "get$==", 2, 0, null, 104],
    toString$0: [function(receiver) {
      return "null";
    }, "call$0", "get$toString", 0, 0, null],
    get$hashCode: function(receiver) {
      return 0;
    },
    get$runtimeType: function(receiver) {
      return C.Type_eZO;
    }
  },
  JavaScriptObject: {
    "": "Interceptor;",
    get$hashCode: function(_) {
      return 0;
    },
    get$runtimeType: function(_) {
      return C.Type_XXD;
    }
  },
  PlainJavaScriptObject: {
    "": "JavaScriptObject;"
  },
  UnknownJavaScriptObject: {
    "": "JavaScriptObject;"
  },
  JSArray: {
    "": "List/Interceptor;",
    add$1: [function(receiver, value) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("add"));
      receiver.push(value);
    }, "call$1", "get$add", 2, 0, null, 23],
    insert$2: [function(receiver, index, value) {
      if (index < 0 || index > receiver.length)
        throw H.wrapException(new P.RangeError("value " + index));
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("insert"));
      receiver.splice(index, 0, value);
    }, "call$2", "get$insert", 4, 0, null, 47, 23],
    removeLast$0: [function(receiver) {
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeLast"));
      if (receiver.length === 0)
        throw H.wrapException(new P.RangeError("value -1"));
      return receiver.pop();
    }, "call$0", "get$removeLast", 0, 0, null],
    remove$1: [function(receiver, element) {
      var i;
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("remove"));
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq(receiver[i], element) === true) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    }, "call$1", "get$remove", 2, 0, null, 169],
    where$1: [function(receiver, f) {
      return H.setRuntimeTypeInfo(new H.WhereIterable(receiver, f), [null]);
    }, "call$1", "get$where", 2, 0, null, 154],
    addAll$1: [function(receiver, collection) {
      var t1;
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        this.add$1(receiver, t1.get$current());
    }, "call$1", "get$addAll", 2, 0, null, 411],
    clear$0: [function(receiver) {
      this.set$length(receiver, 0);
    }, "call$0", "get$clear", 0, 0, null],
    forEach$1: [function(receiver, f) {
      return H.IterableMixinWorkaround_forEach(receiver, f);
    }, "call$1", "get$forEach", 2, 0, null, 154],
    map$1: [function(receiver, f) {
      return H.setRuntimeTypeInfo(new H.MappedListIterable(receiver, f), [null, null]);
    }, "call$1", "get$map", 2, 0, null, 154],
    join$1: [function(receiver, separator) {
      var t1, list, i, t2;
      t1 = receiver.length;
      list = Array(t1);
      list.fixed$length = init;
      for (i = 0; i < receiver.length; ++i) {
        t2 = H.S(receiver[i]);
        if (i >= t1)
          return H.ioore(list, i);
        list[i] = t2;
      }
      return list.join(separator);
    }, function($receiver) {
      return this.join$1($receiver, "");
    }, "join$0", "call$1", null, "get$join", 0, 2, null, 122, 412],
    take$1: [function(receiver, n) {
      return H.SubListIterable$(receiver, 0, n, null);
    }, "call$1", "get$take", 2, 0, null, 347],
    skip$1: [function(receiver, n) {
      return H.SubListIterable$(receiver, n, null, null);
    }, "call$1", "get$skip", 2, 0, null, 347],
    fold$2: [function(receiver, initialValue, combine) {
      return H.IterableMixinWorkaround_fold(receiver, initialValue, combine);
    }, "call$2", "get$fold", 4, 0, null, 155, 156],
    firstWhere$2$orElse: [function(receiver, test, orElse) {
      return H.IterableMixinWorkaround_firstWhere(receiver, test, orElse);
    }, function($receiver, test) {
      return this.firstWhere$2$orElse($receiver, test, null);
    }, "firstWhere$1", "call$2$orElse", null, "get$firstWhere", 2, 3, null, 77, 157, 158],
    elementAt$1: [function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        return H.ioore(receiver, index);
      return receiver[index];
    }, "call$1", "get$elementAt", 2, 0, null, 47],
    sublist$2: [function(receiver, start, end) {
      if (typeof start !== "number" || Math.floor(start) !== start)
        throw H.wrapException(new P.ArgumentError(start));
      if (start < 0 || start > receiver.length)
        throw H.wrapException(P.RangeError$range(start, 0, receiver.length));
      if (end == null)
        end = receiver.length;
      else {
        if (typeof end !== "number" || Math.floor(end) !== end)
          throw H.wrapException(new P.ArgumentError(end));
        if (end < start || end > receiver.length)
          throw H.wrapException(P.RangeError$range(end, start, receiver.length));
      }
      if (start === end)
        return H.setRuntimeTypeInfo([], [H.getTypeArgumentByIndex(receiver, 0)]);
      return H.setRuntimeTypeInfo(receiver.slice(start, end), [H.getTypeArgumentByIndex(receiver, 0)]);
    }, function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }, "sublist$1", "call$2", null, "get$sublist", 2, 2, null, 77, 161, 162],
    getRange$2: [function(receiver, start, end) {
      H.IterableMixinWorkaround__rangeCheck(receiver, start, end);
      return H.SubListIterable$(receiver, start, end, null);
    }, "call$2", "get$getRange", 4, 0, null, 161, 162],
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(new P.StateError("No elements"));
    },
    get$last: function(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw H.wrapException(new P.StateError("No elements"));
    },
    removeRange$2: [function(receiver, start, end) {
      var receiverLength, t1;
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("removeRange"));
      receiverLength = receiver.length;
      t1 = J.getInterceptor$n(start);
      if (t1.$lt(start, 0) || t1.$gt(start, receiverLength))
        throw H.wrapException(P.RangeError$range(start, 0, receiverLength));
      t1 = J.getInterceptor$n(end);
      if (t1.$lt(end, start) || t1.$gt(end, receiverLength))
        throw H.wrapException(P.RangeError$range(end, start, receiverLength));
      if (typeof end !== "number")
        return H.iae(end);
      H.Lists_copy(receiver, end, receiver, start, receiverLength - end);
      if (typeof start !== "number")
        return H.iae(start);
      this.set$length(receiver, receiverLength - (end - start));
    }, "call$2", "get$removeRange", 4, 0, null, 161, 162],
    any$1: [function(receiver, f) {
      return H.IterableMixinWorkaround_any(receiver, f);
    }, "call$1", "get$any", 2, 0, null, 154],
    get$reversed: function(receiver) {
      return H.setRuntimeTypeInfo(new H.ReversedListIterable(receiver), [null]);
    },
    sort$1: [function(receiver, compare) {
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("sort"));
      if (compare == null)
        compare = P.Comparable_compare$closure();
      H.Sort__doSort(receiver, 0, receiver.length - 1, compare);
    }, "call$1", "get$sort", 0, 2, null, 77, 173],
    indexOf$2: [function(receiver, element, start) {
      return H.Lists_indexOf(receiver, element, start, receiver.length);
    }, function($receiver, element) {
      return this.indexOf$2($receiver, element, 0);
    }, "indexOf$1", "call$2", null, "get$indexOf", 2, 2, null, 413, 169, 161],
    lastIndexOf$2: [function(receiver, element, start) {
      return H.Lists_lastIndexOf(receiver, element, receiver.length - 1);
    }, function($receiver, element) {
      return this.lastIndexOf$2($receiver, element, null);
    }, "lastIndexOf$1", "call$2", null, "get$lastIndexOf", 2, 2, null, 77, 169, 161],
    contains$1: [function(receiver, other) {
      var i;
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq(receiver[i], other) === true)
          return true;
      return false;
    }, "call$1", "get$contains", 2, 0, null, 104],
    get$isEmpty: function(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty: function(receiver) {
      return receiver.length !== 0;
    },
    toString$0: [function(receiver) {
      return H.IterableMixinWorkaround_toStringIterable(receiver, "[", "]");
    }, "call$0", "get$toString", 0, 0, null],
    toList$1$growable: [function(receiver, growable) {
      var t1;
      if (growable)
        return H.setRuntimeTypeInfo(receiver.slice(), [H.getTypeArgumentByIndex(receiver, 0)]);
      else {
        t1 = H.setRuntimeTypeInfo(receiver.slice(), [H.getTypeArgumentByIndex(receiver, 0)]);
        t1.fixed$length = init;
        return t1;
      }
    }, function($receiver) {
      return this.toList$1$growable($receiver, true);
    }, "toList$0", "call$1$growable", null, "get$toList", 0, 3, null, 414, 415],
    get$iterator: function(receiver) {
      return H.setRuntimeTypeInfo(new H.ListIterator(receiver, receiver.length, 0, null), [H.getTypeArgumentByIndex(receiver, 0)]);
    },
    get$hashCode: function(receiver) {
      return H.Primitives_objectHashCode(receiver);
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    set$length: function(receiver, newLength) {
      if (typeof newLength !== "number" || Math.floor(newLength) !== newLength)
        throw H.wrapException(new P.ArgumentError(newLength));
      if (newLength < 0)
        throw H.wrapException(P.RangeError$value(newLength));
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("set length"));
      receiver.length = newLength;
    },
    $index: [function(receiver, index) {
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(new P.ArgumentError(index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(receiver, index, value) {
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("indexed set"));
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(new P.ArgumentError(index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    $isList: true,
    $isList: true,
    $asList: null,
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: null,
    static: {JSArray_JSArray$fixed: function($length, $E) {
        var t1;
        if (typeof $length !== "number" || Math.floor($length) !== $length || $length < 0)
          throw H.wrapException(P.ArgumentError$("Length must be a non-negative integer: " + H.S($length)));
        t1 = H.setRuntimeTypeInfo(new Array($length), [$E]);
        t1.fixed$length = init;
        return t1;
      }}
  },
  JSMutableArray: {
    "": "JSArray;",
    $isJSMutableArray: true
  },
  JSFixedArray: {
    "": "JSMutableArray;"
  },
  JSExtendableArray: {
    "": "JSMutableArray;",
    $isJSExtendableArray: true
  },
  JSNumber: {
    "": "num/Interceptor;",
    compareTo$1: [function(receiver, b) {
      var bIsNegative;
      if (typeof b !== "number")
        throw H.wrapException(new P.ArgumentError(b));
      if (receiver < b)
        return -1;
      else if (receiver > b)
        return 1;
      else if (receiver === b) {
        if (receiver === 0) {
          bIsNegative = this.get$isNegative(b);
          if (this.get$isNegative(receiver) === bIsNegative)
            return 0;
          if (this.get$isNegative(receiver))
            return -1;
          return 1;
        }
        return 0;
      } else if (isNaN(receiver)) {
        if (this.get$isNaN(b))
          return 0;
        return 1;
      } else
        return -1;
    }, "call$1", "get$compareTo", 2, 0, null, 134],
    get$isNegative: function(receiver) {
      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
    },
    get$isNaN: function(receiver) {
      return isNaN(receiver);
    },
    remainder$1: [function(receiver, b) {
      return receiver % b;
    }, "call$1", "get$remainder", 2, 0, null, 134],
    toInt$0: [function(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw H.wrapException(P.UnsupportedError$('' + receiver));
    }, "call$0", "get$toInt", 0, 0, null],
    round$0: [function(receiver) {
      return this.toInt$0(this.roundToDouble$0(receiver));
    }, "call$0", "get$round", 0, 0, null],
    roundToDouble$0: [function(receiver) {
      if (receiver < 0)
        return -Math.round(-receiver);
      else
        return Math.round(receiver);
    }, "call$0", "get$roundToDouble", 0, 0, null],
    toStringAsExponential$1: [function(receiver, fractionDigits) {
      var result;
      if (fractionDigits > 20)
        throw H.wrapException(P.RangeError$(fractionDigits));
      result = receiver.toExponential(fractionDigits);
      if (receiver === 0 && this.get$isNegative(receiver))
        return "-" + result;
      return result;
    }, "call$1", "get$toStringAsExponential", 0, 2, null, 77, 416],
    toRadixString$1: [function(receiver, radix) {
      if (radix < 2 || radix > 36)
        throw H.wrapException(P.RangeError$(radix));
      return receiver.toString(radix);
    }, "call$1", "get$toRadixString", 2, 0, null, 28],
    toString$0: [function(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    }, "call$0", "get$toString", 0, 0, null],
    get$hashCode: function(receiver) {
      return receiver & 0x1FFFFFFF;
    },
    $negate: [function(receiver) {
      return -receiver;
    }, "call$0", "get$unary-", 0, 0, null],
    $add: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      return receiver + other;
    }, "call$1", "get$+", 2, 0, null, 104],
    $sub: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver - other;
    }, "call$1", "get$-", 2, 0, null, 104],
    $div: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      return receiver / other;
    }, "call$1", "get$/", 2, 0, null, 104],
    $mul: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      return receiver * other;
    }, "call$1", "get$*", 2, 0, null, 104],
    $tdiv: [function(receiver, other) {
      if ((receiver | 0) === receiver && (other | 0) === other && 0 !== other && -1 !== other)
        return receiver / other | 0;
      else {
        if (typeof other !== "number")
          H.throwExpression(new P.ArgumentError(other));
        return this.toInt$0(receiver / other);
      }
    }, "call$1", "get$~/", 2, 0, null, 104],
    _tdivFast$1: [function(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this.toInt$0(receiver / other);
    }, "call$1", "get$_tdivFast", 2, 0, null, 104],
    $shl: [function(receiver, other) {
      if (other < 0)
        throw H.wrapException(new P.ArgumentError(other));
      return other > 31 ? 0 : receiver << other >>> 0;
    }, "call$1", "get$<<", 2, 0, null, 104],
    _shlPositive$1: [function(receiver, other) {
      return other > 31 ? 0 : receiver << other >>> 0;
    }, "call$1", "get$_shlPositive", 2, 0, null, 104],
    $shr: [function(receiver, other) {
      var t1;
      if (other < 0)
        throw H.wrapException(new P.ArgumentError(other));
      if (receiver > 0)
        t1 = other > 31 ? 0 : receiver >>> other;
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    }, "call$1", "get$>>", 2, 0, null, 104],
    _shrOtherPositive$1: [function(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = other > 31 ? 0 : receiver >>> other;
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    }, "call$1", "get$_shrOtherPositive", 2, 0, null, 104],
    $and: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      return (receiver & other) >>> 0;
    }, "call$1", "get$&", 2, 0, null, 104],
    $xor: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      return (receiver ^ other) >>> 0;
    }, "call$1", "get$^", 2, 0, null, 104],
    $lt: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver < other;
    }, "call$1", "get$<", 2, 0, null, 104],
    $gt: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver > other;
    }, "call$1", "get$>", 2, 0, null, 104],
    $le: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(new P.ArgumentError(other));
      return receiver <= other;
    }, "call$1", "get$<=", 2, 0, null, 104],
    $ge: [function(receiver, other) {
      if (typeof other !== "number")
        throw H.wrapException(P.ArgumentError$(other));
      return receiver >= other;
    }, "call$1", "get$>=", 2, 0, null, 104],
    $isnum: true,
    static: {"": "JSNumber__MIN_INT32,JSNumber__MAX_INT32"}
  },
  JSInt: {
    "": "int/JSNumber;",
    get$runtimeType: function(receiver) {
      return C.Type_SnA;
    },
    $isdouble: true,
    $isnum: true,
    $isint: true
  },
  JSDouble: {
    "": "double/JSNumber;",
    get$runtimeType: function(receiver) {
      return C.Type_qq1;
    },
    $isdouble: true,
    $isnum: true
  },
  JSPositiveInt: {
    "": "JSInt;"
  },
  JSUInt32: {
    "": "JSPositiveInt;"
  },
  JSUInt31: {
    "": "JSUInt32;"
  },
  JSString: {
    "": "String/Interceptor;",
    codeUnitAt$1: [function(receiver, index) {
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(P.ArgumentError$(index));
      if (index < 0)
        throw H.wrapException(P.RangeError$value(index));
      if (index >= receiver.length)
        throw H.wrapException(P.RangeError$value(index));
      return receiver.charCodeAt(index);
    }, "call$1", "get$codeUnitAt", 2, 0, null, 47],
    allMatches$1: [function(receiver, str) {
      return H.allMatchesInStringUnchecked(receiver, str);
    }, "call$1", "get$allMatches", 2, 0, null, 417],
    matchAsPrefix$2: [function(receiver, string, start) {
      var t1, t2, i, t3;
      if (start < 0 || start > string.length)
        throw H.wrapException(P.RangeError$range(start, 0, string.length));
      t1 = receiver.length;
      t2 = string.length;
      if (start + t1 > t2)
        return;
      for (i = 0; i < t1; ++i) {
        t3 = start + i;
        if (t3 < 0)
          H.throwExpression(P.RangeError$value(t3));
        if (t3 >= t2)
          H.throwExpression(P.RangeError$value(t3));
        t3 = string.charCodeAt(t3);
        if (i >= t1)
          H.throwExpression(P.RangeError$value(i));
        if (t3 !== receiver.charCodeAt(i))
          return;
      }
      return new H.StringMatch(start, string, receiver);
    }, "call$2", "get$matchAsPrefix", 2, 2, null, 413, 26, 161],
    $add: [function(receiver, other) {
      if (typeof other !== "string")
        throw H.wrapException(new P.ArgumentError(other));
      return receiver + other;
    }, "call$1", "get$+", 2, 0, null, 104],
    endsWith$1: [function(receiver, other) {
      var t1, otherLength, t2;
      if (typeof other !== "string")
        H.throwExpression(new P.ArgumentError(other));
      t1 = J.getInterceptor$asx(other);
      otherLength = t1.get$length(other);
      t2 = receiver.length;
      if (J.$gt$n(otherLength, t2))
        return false;
      if (typeof otherLength !== "number")
        return H.iae(otherLength);
      return t1.$eq(other, this.substring$1(receiver, t2 - otherLength));
    }, "call$1", "get$endsWith", 2, 0, null, 104],
    replaceAll$2: [function(receiver, from, to) {
      return H.stringReplaceAllUnchecked(receiver, from, to);
    }, "call$2", "get$replaceAll", 4, 0, null, 105, 106],
    split$1: [function(receiver, pattern) {
      return receiver.split(pattern);
    }, "call$1", "get$split", 2, 0, null, 98],
    startsWith$2: [function(receiver, pattern, index) {
      var endIndex;
      if (index > receiver.length)
        throw H.wrapException(P.RangeError$range(index, 0, receiver.length));
      if (typeof pattern === "string") {
        endIndex = index + pattern.length;
        if (endIndex > receiver.length)
          return false;
        return pattern === receiver.substring(index, endIndex);
      }
      return J.matchAsPrefix$2$s(pattern, receiver, index) != null;
    }, function($receiver, pattern) {
      return this.startsWith$2($receiver, pattern, 0);
    }, "startsWith$1", "call$2", null, "get$startsWith", 2, 2, null, 413, 98, 47],
    substring$2: [function(receiver, startIndex, endIndex) {
      var t1;
      if (typeof startIndex !== "number" || Math.floor(startIndex) !== startIndex)
        H.throwExpression(P.ArgumentError$(startIndex));
      if (endIndex == null)
        endIndex = receiver.length;
      if (typeof endIndex !== "number" || Math.floor(endIndex) !== endIndex)
        H.throwExpression(P.ArgumentError$(endIndex));
      t1 = J.getInterceptor$n(startIndex);
      if (t1.$lt(startIndex, 0))
        throw H.wrapException(P.RangeError$value(startIndex));
      if (t1.$gt(startIndex, endIndex))
        throw H.wrapException(P.RangeError$value(startIndex));
      if (J.$gt$n(endIndex, receiver.length))
        throw H.wrapException(P.RangeError$value(endIndex));
      return receiver.substring(startIndex, endIndex);
    }, function($receiver, startIndex) {
      return this.substring$2($receiver, startIndex, null);
    }, "substring$1", "call$2", null, "get$substring", 2, 2, null, 77, 80, 170],
    toLowerCase$0: [function(receiver) {
      return receiver.toLowerCase();
    }, "call$0", "get$toLowerCase", 0, 0, null],
    toUpperCase$0: [function(receiver) {
      return receiver.toUpperCase();
    }, "call$0", "get$toUpperCase", 0, 0, null],
    trim$0: [function(receiver) {
      var endIndex, startIndex, codeUnit, endIndex0, endIndex1;
      for (endIndex = receiver.length, startIndex = 0; startIndex < endIndex;) {
        if (startIndex >= endIndex)
          H.throwExpression(P.RangeError$value(startIndex));
        codeUnit = receiver.charCodeAt(startIndex);
        if (codeUnit === 32 || codeUnit === 13 || J.JSString__isWhitespace(codeUnit))
          ++startIndex;
        else
          break;
      }
      if (startIndex === endIndex)
        return "";
      for (endIndex0 = endIndex; true; endIndex0 = endIndex1) {
        endIndex1 = endIndex0 - 1;
        if (endIndex1 < 0)
          H.throwExpression(P.RangeError$value(endIndex1));
        if (endIndex1 >= endIndex)
          H.throwExpression(P.RangeError$value(endIndex1));
        codeUnit = receiver.charCodeAt(endIndex1);
        if (codeUnit === 32 || codeUnit === 13 || J.JSString__isWhitespace(codeUnit))
          ;
        else
          break;
      }
      if (startIndex === 0 && endIndex0 === endIndex)
        return receiver;
      return receiver.substring(startIndex, endIndex0);
    }, "call$0", "get$trim", 0, 0, null],
    get$codeUnits: function(receiver) {
      return new J._CodeUnits(receiver);
    },
    indexOf$2: [function(receiver, pattern, start) {
      if (start < 0 || start > receiver.length)
        throw H.wrapException(P.RangeError$range(start, 0, receiver.length));
      return receiver.indexOf(pattern, start);
    }, function($receiver, pattern) {
      return this.indexOf$2($receiver, pattern, 0);
    }, "indexOf$1", "call$2", null, "get$indexOf", 2, 2, null, 413, 98, 161],
    lastIndexOf$2: [function(receiver, pattern, start) {
      var t1, t2, i;
      start = receiver.length;
      if (typeof pattern === "string") {
        t1 = pattern.length;
        if (typeof start !== "number")
          return start.$add();
        t2 = receiver.length;
        if (start + t1 > t2)
          start = t2 - t1;
        return receiver.lastIndexOf(pattern, start);
      }
      t1 = J.getInterceptor$s(pattern);
      i = start;
      while (true) {
        if (typeof i !== "number")
          return i.$ge();
        if (!(i >= 0))
          break;
        if (t1.matchAsPrefix$2(pattern, receiver, i) != null)
          return i;
        --i;
      }
      return -1;
    }, function($receiver, pattern) {
      return this.lastIndexOf$2($receiver, pattern, null);
    }, "lastIndexOf$1", "call$2", null, "get$lastIndexOf", 2, 2, null, 77, 98, 161],
    contains$2: [function(receiver, other, startIndex) {
      if (other == null)
        H.throwExpression(new P.ArgumentError(null));
      if (startIndex > receiver.length)
        throw H.wrapException(P.RangeError$range(startIndex, 0, receiver.length));
      return H.stringContainsUnchecked(receiver, other, startIndex);
    }, function($receiver, other) {
      return this.contains$2($receiver, other, 0);
    }, "contains$1", "call$2", null, "get$contains", 2, 2, null, 413, 104, 80],
    get$isEmpty: function(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty: function(receiver) {
      return receiver.length !== 0;
    },
    compareTo$1: [function(receiver, other) {
      var t1;
      if (typeof other !== "string")
        throw H.wrapException(new P.ArgumentError(other));
      if (receiver === other)
        t1 = 0;
      else
        t1 = receiver < other ? -1 : 1;
      return t1;
    }, "call$1", "get$compareTo", 2, 0, null, 104],
    toString$0: [function(receiver) {
      return receiver;
    }, "call$0", "get$toString", 0, 0, null],
    get$hashCode: function(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = 536870911 & hash + receiver.charCodeAt(i);
        hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
        hash ^= hash >> 6;
      }
      hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
      hash ^= hash >> 11;
      return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
    },
    get$runtimeType: function(receiver) {
      return C.Type_Ejg;
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: [function(receiver, index) {
      if (typeof index !== "number" || Math.floor(index) !== index)
        throw H.wrapException(new P.ArgumentError(index));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $isString: true,
    static: {JSString__isWhitespace: [function(codeUnit) {
        if (codeUnit < 256)
          switch (codeUnit) {
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 32:
            case 133:
            case 160:
              return true;
            default:
              return false;
          }
        switch (codeUnit) {
          case 5760:
          case 6158:
          case 8192:
          case 8193:
          case 8194:
          case 8195:
          case 8196:
          case 8197:
          case 8198:
          case 8199:
          case 8200:
          case 8201:
          case 8202:
          case 8232:
          case 8233:
          case 8239:
          case 8287:
          case 12288:
          case 65279:
            return true;
          default:
            return false;
        }
      }, "call$1", "JSString__isWhitespace$closure", 2, 0, null, 13]}
  },
  _CodeUnits: {
    "": "UnmodifiableListBase;__interceptors$_string",
    get$length: function(_) {
      return this.__interceptors$_string.length;
    },
    $index: [function(_, i) {
      var t1, t2;
      t1 = this.__interceptors$_string;
      if (typeof i !== "number" || Math.floor(i) !== i)
        H.throwExpression(new P.ArgumentError(i));
      t2 = J.getInterceptor$n(i);
      if (t2.$lt(i, 0))
        H.throwExpression(new P.RangeError("value " + H.S(i)));
      if (t2.$ge(i, t1.length))
        H.throwExpression(new P.RangeError("value " + H.S(i)));
      return t1.charCodeAt(i);
    }, "call$1", "get$[]", 2, 0, null, 418],
    $asUnmodifiableListBase: function() {
      return [J.JSInt];
    },
    $asListBase: function() {
      return [J.JSInt];
    },
    $asList: function() {
      return [J.JSInt];
    },
    $asIterable: function() {
      return [J.JSInt];
    }
  }
}],
["_isolate_helper", "dart:_isolate_helper", , H, {
  "": "",
  _callInIsolate: [function(isolate, $function) {
    var result = isolate.eval$1($function);
    init.globalState.topEventLoop.run$0();
    return result;
  }, "call$2", "_callInIsolate$closure", 4, 0, null, 14, 15],
  startRootIsolate: [function(entry) {
    var t1, t2, rootContext;
    t1 = new H._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null, entry);
    t1._Manager$1(entry);
    init.globalState = t1;
    if (init.globalState.isWorker === true)
      return;
    t1 = init.globalState;
    t2 = t1.nextIsolateId;
    t1.nextIsolateId = t2 + 1;
    rootContext = new H._IsolateContext(t2, P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H.RawReceivePortImpl), P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSInt), new Isolate());
    init.globalState.rootContext = rootContext;
    init.globalState.currentContext = rootContext;
    t1 = H.getDynamicRuntimeType();
    t2 = H.buildFunctionType(t1, [t1])._isTest$1(entry);
    if (t2)
      rootContext.eval$1(new H.startRootIsolate_closure(entry));
    else {
      t1 = H.buildFunctionType(t1, [t1, t1])._isTest$1(entry);
      if (t1)
        rootContext.eval$1(new H.startRootIsolate_closure0(entry));
      else
        rootContext.eval$1(entry);
    }
    init.globalState.topEventLoop.run$0();
  }, "call$1", "startRootIsolate$closure", 2, 0, null, 16],
  IsolateNatives_computeThisScript: [function() {
    var currentScript = init.currentScript;
    if (currentScript != null)
      return String(currentScript.src);
    if (typeof version == "function" && typeof os == "object" && "system" in os)
      return H.IsolateNatives_computeThisScriptD8();
    if (typeof version == "function" && typeof system == "function")
      return thisFilename();
    return;
  }, "call$0", "IsolateNatives_computeThisScript$closure", 0, 0, null],
  IsolateNatives_computeThisScriptD8: [function() {
    var stack, matches;
    stack = new Error().stack;
    if (stack == null) {
      stack = (function() {try { throw new Error() } catch(e) { return e.stack }})();
      if (stack == null)
        throw H.wrapException(P.UnsupportedError$("No stack trace"));
    }
    matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
    if (matches != null)
      return matches[1];
    matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
    if (matches != null)
      return matches[1];
    throw H.wrapException(P.UnsupportedError$("Cannot extract URI from \"" + stack + "\""));
  }, "call$0", "IsolateNatives_computeThisScriptD8$closure", 0, 0, null],
  IsolateNatives__processWorkerMessage: [function(sender, e) {
    var msg, t1, functionName, entryPoint, args, message, isSpawnUri, replyTo, t2, context, uri, t3, t4, t5, worker, t6, workerId;
    msg = H._deserializeMessage(e.data);
    t1 = J.getInterceptor$asx(msg);
    switch (t1.$index(msg, "command")) {
      case "start":
        init.globalState.currentManagerId = t1.$index(msg, "id");
        functionName = t1.$index(msg, "functionName");
        entryPoint = functionName == null ? init.globalState.entry : init.globalFunctions[functionName]();
        args = t1.$index(msg, "args");
        message = H._deserializeMessage(t1.$index(msg, "msg"));
        isSpawnUri = t1.$index(msg, "isSpawnUri");
        replyTo = H._deserializeMessage(t1.$index(msg, "replyTo"));
        t1 = init.globalState;
        t2 = t1.nextIsolateId;
        t1.nextIsolateId = t2 + 1;
        context = new H._IsolateContext(t2, P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H.RawReceivePortImpl), P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSInt), new Isolate());
        init.globalState.topEventLoop.events._add$1(0, new H._IsolateEvent(context, new H.IsolateNatives__processWorkerMessage_closure(entryPoint, args, message, isSpawnUri, replyTo), "worker-start"));
        init.globalState.currentContext = context;
        init.globalState.topEventLoop.run$0();
        break;
      case "spawn-worker":
        t2 = t1.$index(msg, "functionName");
        uri = t1.$index(msg, "uri");
        t3 = t1.$index(msg, "args");
        t4 = t1.$index(msg, "msg");
        t5 = t1.$index(msg, "isSpawnUri");
        t1 = t1.$index(msg, "replyPort");
        if (uri == null)
          uri = $.get$IsolateNatives_thisScript();
        worker = new Worker(uri);
        worker.onmessage = function(e) { H.IsolateNatives__processWorkerMessage(worker, e); };
        t6 = init.globalState;
        workerId = t6.nextManagerId;
        t6.nextManagerId = workerId + 1;
        $.get$IsolateNatives_workerIds().$indexSet(0, worker, workerId);
        init.globalState.managers.$indexSet(0, workerId, worker);
        worker.postMessage(H._serializeMessage(H.fillLiteralMap(["command", "start", "id", workerId, "replyTo", H._serializeMessage(t1), "args", t3, "msg", H._serializeMessage(t4), "isSpawnUri", t5, "functionName", t2], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null))));
        break;
      case "message":
        if (t1.$index(msg, "port") != null)
          J.send$1$x(t1.$index(msg, "port"), t1.$index(msg, "msg"));
        init.globalState.topEventLoop.run$0();
        break;
      case "close":
        init.globalState.managers.remove$1(0, $.get$IsolateNatives_workerIds().$index(0, sender));
        sender.terminate();
        init.globalState.topEventLoop.run$0();
        break;
      case "log":
        H.IsolateNatives__log(t1.$index(msg, "msg"));
        break;
      case "print":
        if (init.globalState.isWorker === true) {
          t1 = init.globalState.mainManager;
          t2 = H._serializeMessage(H.fillLiteralMap(["command", "print", "msg", msg], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
          t1.toString;
          self.postMessage(t2);
        } else
          P.print(t1.$index(msg, "msg"));
        break;
      case "error":
        throw H.wrapException(t1.$index(msg, "msg"));
      default:
    }
  }, "call$2", "IsolateNatives__processWorkerMessage$closure", 4, 0, null, 17, 18],
  IsolateNatives__log: [function(msg) {
    var trace, t1, t2, exception;
    if (init.globalState.isWorker === true) {
      t1 = init.globalState.mainManager;
      t2 = H._serializeMessage(H.fillLiteralMap(["command", "log", "msg", msg], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
      t1.toString;
      self.postMessage(t2);
    } else
      try {
        $.get$globalThis().console.log(msg);
      } catch (exception) {
        H.unwrapException(exception);
        trace = new H._StackTrace(exception, null);
        throw H.wrapException(P.Exception_Exception(trace));
      }

  }, "call$1", "IsolateNatives__log$closure", 2, 0, null, 19],
  _serializeMessage: [function(message) {
    var t1;
    if (init.globalState.supportsWorkers === true) {
      t1 = new H._JsSerializer(0, new H._MessageTraverserVisitedMap());
      t1._visited = new H._JsVisitedMap(null);
      return t1.traverse$1(message);
    } else {
      t1 = new H._JsCopier(new H._MessageTraverserVisitedMap());
      t1._visited = new H._JsVisitedMap(null);
      return t1.traverse$1(message);
    }
  }, "call$1", "_serializeMessage$closure", 2, 0, null, 20],
  _deserializeMessage: [function(message) {
    if (init.globalState.supportsWorkers === true)
      return new H._JsDeserializer(null).deserialize$1(message);
    else
      return message;
  }, "call$1", "_deserializeMessage$closure", 2, 0, null, 20],
  _MessageTraverser_isPrimitive: [function(x) {
    return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
  }, "call$1", "_MessageTraverser_isPrimitive$closure", 2, 0, null, 21],
  _Deserializer_isPrimitive: [function(x) {
    return x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean";
  }, "call$1", "_Deserializer_isPrimitive$closure", 2, 0, null, 21],
  startRootIsolate_closure: {
    "": "Closure:108;entry_0",
    call$0: [function() {
      this.entry_0.call$1([]);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  startRootIsolate_closure0: {
    "": "Closure:108;entry_1",
    call$0: [function() {
      this.entry_1.call$2([], null);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _Manager: {
    "": "Object;nextIsolateId,currentManagerId,nextManagerId,currentContext,rootContext,topEventLoop,fromCommandLine,isWorker,supportsWorkers,isolates,mainManager,managers,entry",
    _Manager$1: function(entry) {
      var t1, t2, t3, $function;
      t1 = $.get$globalWindow() == null;
      t2 = $.get$globalWorker();
      t3 = t1 && $.get$globalPostMessageDefined() === true;
      this.isWorker = t3;
      if (!t3)
        t2 = t2 != null && $.get$IsolateNatives_thisScript() != null;
      else
        t2 = true;
      this.supportsWorkers = t2;
      this.fromCommandLine = t1 && !t3;
      t2 = H._IsolateEvent;
      t3 = H.setRuntimeTypeInfo(new P.ListQueue(null, 0, 0, 0), [t2]);
      t3.ListQueue$1(null, t2);
      this.topEventLoop = new H._EventLoop(t3, 0);
      this.isolates = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, H._IsolateContext);
      this.managers = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSInt, null);
      if (this.isWorker === true) {
        t1 = new H._MainManagerStub();
        this.mainManager = t1;
        $function = function (e) { H.IsolateNatives__processWorkerMessage(t1, e); };
        $.get$globalThis().onmessage = $function;
        $.get$globalThis().dartPrint = function (object) {};
      }
    }
  },
  _IsolateContext: {
    "": "Object;id>,ports,weakPorts,isolateStatics<",
    eval$1: [function(code) {
      var old, result;
      old = init.globalState.currentContext;
      init.globalState.currentContext = this;
      $ = this.isolateStatics;
      result = null;
      try {
        result = code.call$0();
      } finally {
        init.globalState.currentContext = old;
        if (old != null)
          $ = old.get$isolateStatics();
      }
      return result;
    }, "call$1", "get$eval", 2, 0, null, 180],
    lookup$1: [function(portId) {
      return this.ports.$index(0, portId);
    }, "call$1", "get$lookup", 2, 0, null, 419],
    register$2: [function(_, portId, port) {
      var t1 = this.ports;
      if (t1.containsKey$1(portId))
        throw H.wrapException(P.Exception_Exception("Registry: ports must be registered only once."));
      t1.$indexSet(0, portId, port);
      this._updateGlobalState$0();
    }, "call$2", "get$register", 4, 0, null, 419, 420],
    _updateGlobalState$0: [function() {
      var t1 = this.id;
      if (this.ports._collection$_length - this.weakPorts._collection$_length > 0)
        init.globalState.isolates.$indexSet(0, t1, this);
      else
        init.globalState.isolates.remove$1(0, t1);
    }, "call$0", "get$_updateGlobalState", 0, 0, null],
    $is_IsolateContext: true
  },
  _EventLoop: {
    "": "Object;events,activeTimerCount",
    dequeue$0: [function() {
      var t1 = this.events;
      if (t1._head === t1._tail)
        return;
      return t1.removeFirst$0();
    }, "call$0", "get$dequeue", 0, 0, null],
    runIteration$0: [function() {
      var $event, t1, t2;
      $event = this.dequeue$0();
      if ($event == null) {
        if (init.globalState.rootContext != null && init.globalState.isolates.containsKey$1(init.globalState.rootContext.id) && init.globalState.fromCommandLine === true && init.globalState.rootContext.ports._collection$_length === 0)
          H.throwExpression(P.Exception_Exception("Program exited with open ReceivePorts."));
        t1 = init.globalState;
        if (t1.isWorker === true && t1.isolates._collection$_length === 0 && t1.topEventLoop.activeTimerCount === 0) {
          t1 = t1.mainManager;
          t2 = H._serializeMessage(H.fillLiteralMap(["command", "close"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
          t1.toString;
          self.postMessage(t2);
        }
        return false;
      }
      $event.process$0();
      return true;
    }, "call$0", "get$runIteration", 0, 0, null],
    _runHelper$0: [function() {
      if ($.get$globalWindow() != null)
        new H._EventLoop__runHelper_next(this).call$0();
      else
        for (; this.runIteration$0();)
          ;
    }, "call$0", "get$_runHelper", 0, 0, null],
    run$0: [function() {
      var e, trace, exception, t1, t2;
      if (init.globalState.isWorker !== true)
        this._runHelper$0();
      else
        try {
          this._runHelper$0();
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          trace = new H._StackTrace(exception, null);
          t1 = init.globalState.mainManager;
          t2 = H._serializeMessage(H.fillLiteralMap(["command", "error", "msg", H.S(e) + "\n" + H.S(trace)], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
          t1.toString;
          self.postMessage(t2);
        }

    }, "call$0", "get$run", 0, 0, null]
  },
  _EventLoop__runHelper_next: {
    "": "Closure:107;this_0",
    call$0: [function() {
      if (!this.this_0.runIteration$0())
        return;
      P.Timer_Timer(C.Duration_0, this);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _IsolateEvent: {
    "": "Object;isolate,fn,message>",
    process$0: [function() {
      this.isolate.eval$1(this.fn);
    }, "call$0", "get$process", 0, 0, null],
    $is_IsolateEvent: true
  },
  _MainManagerStub: {
    "": "Object;"
  },
  IsolateNatives__processWorkerMessage_closure: {
    "": "Closure:108;entryPoint_0,args_1,message_2,isSpawnUri_3,replyTo_4",
    call$0: [function() {
      var t1, t2, t3, t4, t5, t6;
      t1 = this.entryPoint_0;
      t2 = this.args_1;
      t3 = this.message_2;
      t4 = init.globalState.currentContext.id;
      $.Primitives_mirrorFunctionCacheName = $.Primitives_mirrorFunctionCacheName + ("_" + t4);
      $.Primitives_mirrorInvokeCacheName = $.Primitives_mirrorInvokeCacheName + ("_" + t4);
      t4 = $.RawReceivePortImpl__nextFreeId;
      $.RawReceivePortImpl__nextFreeId = t4 + 1;
      t5 = new H.RawReceivePortImpl(t4, null, false);
      t6 = init.globalState.currentContext;
      t6.weakPorts.add$1(0, t4);
      t6.register$2(0, t4, t5);
      t4 = new H.ReceivePortImpl(t5, null);
      t4.ReceivePortImpl$fromRawReceivePort$1(t5);
      $.controlPort = t4;
      J.send$1$x(this.replyTo_4, ["spawned", new H._NativeJsSendPort(t5, init.globalState.currentContext.id)]);
      if (this.isSpawnUri_3 !== true)
        t1.call$1(t3);
      else {
        t4 = H.getDynamicRuntimeType();
        t5 = H.buildFunctionType(t4, [t4, t4])._isTest$1(t1);
        if (t5)
          t1.call$2(t2, t3);
        else {
          t3 = H.buildFunctionType(t4, [t4])._isTest$1(t1);
          if (t3)
            t1.call$1(t2);
          else
            t1.call$0();
        }
      }
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _BaseSendPort: {
    "": "Object;",
    $isSendPort: true
  },
  _NativeJsSendPort: {
    "": "_BaseSendPort;_receivePort,_isolateId",
    send$1: [function(_, message) {
      var t1, t2, isolate, shouldSerialize, t3;
      t1 = {};
      t2 = this._isolateId;
      isolate = init.globalState.isolates.$index(0, t2);
      if (isolate == null)
        return;
      if (this._receivePort.get$_isClosed())
        return;
      shouldSerialize = init.globalState.currentContext != null && init.globalState.currentContext.id !== t2;
      t1.msg_0 = message;
      if (shouldSerialize)
        t1.msg_0 = H._serializeMessage(message);
      t2 = init.globalState.topEventLoop;
      t3 = "receive " + H.S(message);
      t2.events._add$1(0, new H._IsolateEvent(isolate, new H._NativeJsSendPort_send_closure(t1, this, shouldSerialize), t3));
    }, "call$1", "get$send", 2, 0, null, 20],
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$is_NativeJsSendPort && J.$eq(this._receivePort, other._receivePort) === true;
    }, "call$1", "get$==", 2, 0, null, 104],
    get$hashCode: function(_) {
      return this._receivePort.get$_id();
    },
    $is_NativeJsSendPort: true,
    $isSendPort: true
  },
  _NativeJsSendPort_send_closure: {
    "": "Closure:108;box_0,this_1,shouldSerialize_2",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_1._receivePort;
      if (!t1.get$_isClosed()) {
        if (this.shouldSerialize_2) {
          t2 = this.box_0;
          t2.msg_0 = H._deserializeMessage(t2.msg_0);
        }
        J.__isolate_helper$_add$1$x(t1, this.box_0.msg_0);
      }
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _WorkerSendPort: {
    "": "_BaseSendPort;_workerId,_receivePortId,_isolateId",
    send$1: [function(_, message) {
      var workerMessage, manager;
      workerMessage = H._serializeMessage(H.fillLiteralMap(["command", "message", "port", this, "msg", message], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
      if (init.globalState.isWorker === true) {
        init.globalState.mainManager.toString;
        self.postMessage(workerMessage);
      } else {
        manager = init.globalState.managers.$index(0, this._workerId);
        if (manager != null)
          manager.postMessage(workerMessage);
      }
    }, "call$1", "get$send", 2, 0, null, 20],
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$is_WorkerSendPort && J.$eq(this._workerId, other._workerId) === true && J.$eq(this._isolateId, other._isolateId) === true && J.$eq(this._receivePortId, other._receivePortId) === true;
    }, "call$1", "get$==", 2, 0, null, 104],
    get$hashCode: function(_) {
      var t1, t2, t3;
      t1 = J.$shl$n(this._workerId, 16);
      t2 = J.$shl$n(this._isolateId, 8);
      t3 = this._receivePortId;
      if (typeof t3 !== "number")
        return H.iae(t3);
      return (t1 ^ t2 ^ t3) >>> 0;
    },
    $is_WorkerSendPort: true,
    $isSendPort: true
  },
  RawReceivePortImpl: {
    "": "Object;_id<,_handler,_isClosed<",
    _handler$1: function(arg0) {
      return this._handler.call$1(arg0);
    },
    close$0: [function(_) {
      var t1;
      if (this._isClosed)
        return;
      this._isClosed = true;
      this._handler = null;
      t1 = init.globalState.currentContext;
      t1.ports.remove$1(0, this._id);
      t1._updateGlobalState$0();
    }, "call$0", "get$close", 0, 0, null],
    __isolate_helper$_add$1: [function(_, dataEvent) {
      if (this._isClosed)
        return;
      this._handler$1(dataEvent);
    }, "call$1", "get$__isolate_helper$_add", 2, 0, null, 421],
    $isRawReceivePortImpl: true,
    static: {"": "RawReceivePortImpl__nextFreeId"}
  },
  ReceivePortImpl: {
    "": "Stream;_rawPort,__isolate_helper$_controller",
    listen$4$cancelOnError$onDone$onError: [function(onData, cancelOnError, onDone, onError) {
      var t1 = this.__isolate_helper$_controller;
      t1.toString;
      return H.setRuntimeTypeInfo(new P._ControllerStream(t1), [null]).listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
    }, function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }, "listen$3$onDone$onError", function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    }, "listen$1", "call$4$cancelOnError$onDone$onError", null, null, "get$listen", 2, 7, null, 77, 77, 77, 422, 423, 424, 200],
    close$0: [function(_) {
      this._rawPort.close$0(0);
      this.__isolate_helper$_controller.close$0(0);
    }, "call$0", "get$close", 0, 0, 107],
    ReceivePortImpl$fromRawReceivePort$1: function(_rawPort) {
      var t1 = P.StreamController_StreamController(this.get$close(this), null, null, null, true, null);
      this.__isolate_helper$_controller = t1;
      this._rawPort._handler = t1.get$add(t1);
    },
    $asStream: function() {
      return [null];
    },
    $isStream: true
  },
  _JsSerializer: {
    "": "_Serializer;_nextFreeRefId,_visited",
    visitSendPort$1: [function(x) {
      if (!!x.$is_NativeJsSendPort)
        return ["sendport", init.globalState.currentManagerId, x._isolateId, x._receivePort.get$_id()];
      if (!!x.$is_WorkerSendPort)
        return ["sendport", x._workerId, x._isolateId, x._receivePortId];
      throw H.wrapException("Illegal underlying port " + H.S(x));
    }, "call$1", "get$visitSendPort", 2, 0, null, 21]
  },
  _JsCopier: {
    "": "_Copier;_visited",
    visitSendPort$1: [function(x) {
      if (!!x.$is_NativeJsSendPort)
        return new H._NativeJsSendPort(x._receivePort, x._isolateId);
      if (!!x.$is_WorkerSendPort)
        return new H._WorkerSendPort(x._workerId, x._receivePortId, x._isolateId);
      throw H.wrapException("Illegal underlying port " + H.S(x));
    }, "call$1", "get$visitSendPort", 2, 0, null, 21]
  },
  _JsDeserializer: {
    "": "_Deserializer;_deserialized",
    deserializeSendPort$1: [function(list) {
      var t1, managerId, isolateId, receivePortId, isolate, receivePort;
      t1 = J.getInterceptor$asx(list);
      managerId = t1.$index(list, 1);
      isolateId = t1.$index(list, 2);
      receivePortId = t1.$index(list, 3);
      if (J.$eq(managerId, init.globalState.currentManagerId) === true) {
        isolate = init.globalState.isolates.$index(0, isolateId);
        if (isolate == null)
          return;
        receivePort = isolate.lookup$1(receivePortId);
        if (receivePort == null)
          return;
        return new H._NativeJsSendPort(receivePort, isolateId);
      } else
        return new H._WorkerSendPort(managerId, receivePortId, isolateId);
    }, "call$1", "get$deserializeSendPort", 2, 0, null, 68]
  },
  _JsVisitedMap: {
    "": "Object;tagged",
    $index: [function(_, object) {
      return object.__MessageTraverser__attached_info__;
    }, "call$1", "get$[]", 2, 0, null, 6],
    $indexSet: [function(_, object, info) {
      this.tagged.push(object);
      object.__MessageTraverser__attached_info__ = info;
    }, "call$2", "get$[]=", 4, 0, null, 6, 425],
    reset$0: [function(_) {
      this.tagged = [];
    }, "call$0", "get$reset", 0, 0, null],
    cleanup$0: [function() {
      var $length, i, t1;
      for ($length = this.tagged.length, i = 0; i < $length; ++i) {
        t1 = this.tagged;
        if (i >= t1.length)
          return H.ioore(t1, i);
        t1[i].__MessageTraverser__attached_info__ = null;
      }
      this.tagged = null;
    }, "call$0", "get$cleanup", 0, 0, null]
  },
  _MessageTraverserVisitedMap: {
    "": "Object;",
    $index: [function(_, object) {
      return;
    }, "call$1", "get$[]", 2, 0, null, 6],
    $indexSet: [function(_, object, info) {
    }, "call$2", "get$[]=", 4, 0, null, 6, 425],
    reset$0: [function(_) {
    }, "call$0", "get$reset", 0, 0, null],
    cleanup$0: [function() {
      return;
    }, "call$0", "get$cleanup", 0, 0, null]
  },
  _MessageTraverser: {
    "": "Object;",
    traverse$1: [function(x) {
      var result;
      if (H._MessageTraverser_isPrimitive(x))
        return this.visitPrimitive$1(x);
      this._visited.reset$0(0);
      result = null;
      try {
        result = this._dispatch$1(x);
      } finally {
        this._visited.cleanup$0();
      }
      return result;
    }, "call$1", "get$traverse", 2, 0, null, 21],
    _dispatch$1: [function(x) {
      var t1;
      if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
        return this.visitPrimitive$1(x);
      t1 = J.getInterceptor(x);
      if (typeof x === "object" && x !== null && (x.constructor === Array || !!t1.$isList))
        return this.visitList$1(x);
      if (typeof x === "object" && x !== null && !!t1.$isMap)
        return this.visitMap$1(x);
      if (typeof x === "object" && x !== null && !!t1.$isSendPort)
        return this.visitSendPort$1(x);
      return this.visitObject$1(x);
    }, "call$1", "get$_dispatch", 2, 0, null, 21],
    visitObject$1: [function(x) {
      throw H.wrapException("Message serialization: Illegal value " + H.S(x) + " passed");
    }, "call$1", "get$visitObject", 2, 0, null, 21]
  },
  _Copier: {
    "": "_MessageTraverser;",
    visitPrimitive$1: [function(x) {
      return x;
    }, "call$1", "get$visitPrimitive", 2, 0, null, 21],
    visitList$1: [function(list) {
      var copy, t1, len, t2, i, t3;
      copy = this._visited.$index(0, list);
      if (copy != null)
        return copy;
      t1 = J.getInterceptor$asx(list);
      len = t1.get$length(list);
      if (typeof len !== "number")
        return H.iae(len);
      copy = Array(len);
      copy.fixed$length = init;
      this._visited.$indexSet(0, list, copy);
      for (t2 = copy.length, i = 0; i < len; ++i) {
        t3 = this._dispatch$1(t1.$index(list, i));
        if (i >= t2)
          return H.ioore(copy, i);
        copy[i] = t3;
      }
      return copy;
    }, "call$1", "get$visitList", 2, 0, null, 68],
    visitMap$1: [function(map) {
      var t1, copy;
      t1 = {};
      copy = this._visited.$index(0, map);
      t1.copy_0 = copy;
      if (copy != null)
        return copy;
      copy = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      t1.copy_0 = copy;
      this._visited.$indexSet(0, map, copy);
      map.forEach$1(0, new H._Copier_visitMap_closure(t1, this));
      return t1.copy_0;
    }, "call$1", "get$visitMap", 2, 0, null, 140],
    visitSendPort$1: [function(x) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1", "get$visitSendPort", 2, 0, null, 21]
  },
  _Copier_visitMap_closure: {
    "": "Closure:426;box_0,this_1",
    call$2: [function(key, val) {
      var t1 = this.this_1;
      J.$indexSet$ax(this.box_0.copy_0, t1._dispatch$1(key), t1._dispatch$1(val));
    }, "call$2", null, 4, 0, null, 42, 243, "call"],
    $isFunction: true
  },
  _Serializer: {
    "": "_MessageTraverser;",
    visitPrimitive$1: [function(x) {
      return x;
    }, "call$1", "get$visitPrimitive", 2, 0, null, 21],
    visitList$1: [function(list) {
      var copyId, id;
      copyId = this._visited.$index(0, list);
      if (copyId != null)
        return ["ref", copyId];
      id = this._nextFreeRefId;
      this._nextFreeRefId = id + 1;
      this._visited.$indexSet(0, list, id);
      return ["list", id, this._serializeList$1(list)];
    }, "call$1", "get$visitList", 2, 0, null, 68],
    visitMap$1: [function(map) {
      var copyId, id;
      copyId = this._visited.$index(0, map);
      if (copyId != null)
        return ["ref", copyId];
      id = this._nextFreeRefId;
      this._nextFreeRefId = id + 1;
      this._visited.$indexSet(0, map, id);
      return ["map", id, this._serializeList$1(J.toList$0$ax(map.get$keys())), this._serializeList$1(J.toList$0$ax(map.get$values(map)))];
    }, "call$1", "get$visitMap", 2, 0, null, 140],
    _serializeList$1: [function(list) {
      var t1, len, result, i, t2;
      t1 = J.getInterceptor$asx(list);
      len = t1.get$length(list);
      result = [];
      C.JSArray_methods.set$length(result, len);
      if (typeof len !== "number")
        return H.iae(len);
      i = 0;
      for (; i < len; ++i) {
        t2 = this._dispatch$1(t1.$index(list, i));
        if (i >= result.length)
          return H.ioore(result, i);
        result[i] = t2;
      }
      return result;
    }, "call$1", "get$_serializeList", 2, 0, null, 68],
    visitSendPort$1: [function(x) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1", "get$visitSendPort", 2, 0, null, 21]
  },
  _Deserializer: {
    "": "Object;",
    deserialize$1: [function(x) {
      if (H._Deserializer_isPrimitive(x))
        return x;
      this._deserialized = P.HashMap_HashMap(null, null, null, null, null);
      return this._deserializeHelper$1(x);
    }, "call$1", "get$deserialize", 2, 0, null, 21],
    _deserializeHelper$1: [function(x) {
      var t1, id;
      if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
        return x;
      t1 = J.getInterceptor$asx(x);
      switch (t1.$index(x, 0)) {
        case "ref":
          id = t1.$index(x, 1);
          return this._deserialized.$index(0, id);
        case "list":
          return this._deserializeList$1(x);
        case "map":
          return this._deserializeMap$1(x);
        case "sendport":
          return this.deserializeSendPort$1(x);
        default:
          return this.deserializeObject$1(x);
      }
    }, "call$1", "get$_deserializeHelper", 2, 0, null, 21],
    _deserializeList$1: [function(x) {
      var t1, id, dartList, len, i;
      t1 = J.getInterceptor$asx(x);
      id = t1.$index(x, 1);
      dartList = t1.$index(x, 2);
      this._deserialized.$indexSet(0, id, dartList);
      t1 = J.getInterceptor$asx(dartList);
      len = t1.get$length(dartList);
      if (typeof len !== "number")
        return H.iae(len);
      i = 0;
      for (; i < len; ++i)
        t1.$indexSet(dartList, i, this._deserializeHelper$1(t1.$index(dartList, i)));
      return dartList;
    }, "call$1", "get$_deserializeList", 2, 0, null, 21],
    _deserializeMap$1: [function(x) {
      var result, t1, id, keys, values, len, t2, i;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      t1 = J.getInterceptor$asx(x);
      id = t1.$index(x, 1);
      this._deserialized.$indexSet(0, id, result);
      keys = t1.$index(x, 2);
      values = t1.$index(x, 3);
      t1 = J.getInterceptor$asx(keys);
      len = t1.get$length(keys);
      if (typeof len !== "number")
        return H.iae(len);
      t2 = J.getInterceptor$asx(values);
      i = 0;
      for (; i < len; ++i)
        result.$indexSet(0, this._deserializeHelper$1(t1.$index(keys, i)), this._deserializeHelper$1(t2.$index(values, i)));
      return result;
    }, "call$1", "get$_deserializeMap", 2, 0, null, 21],
    deserializeObject$1: [function(x) {
      throw H.wrapException("Unexpected serialized object");
    }, "call$1", "get$deserializeObject", 2, 0, null, 21]
  },
  TimerImpl: {
    "": "Object;_once,_inEventLoop,_handle",
    cancel$0: [function() {
      var t1, t2, t3;
      t1 = $.get$globalThis();
      if (t1.setTimeout != null) {
        if (this._inEventLoop)
          throw H.wrapException(P.UnsupportedError$("Timer in event loop cannot be canceled."));
        t2 = this._handle;
        if (t2 == null)
          return;
        t3 = init.globalState.topEventLoop;
        t3.activeTimerCount = t3.activeTimerCount - 1;
        if (this._once)
          t1.clearTimeout(t2);
        else
          t1.clearInterval(t2);
        this._handle = null;
      } else
        throw H.wrapException(P.UnsupportedError$("Canceling a timer."));
    }, "call$0", "get$cancel", 0, 0, null],
    TimerImpl$2: function(milliseconds, callback) {
      var t1, t2;
      if (milliseconds === 0)
        t1 = $.get$globalThis().setTimeout == null || init.globalState.isWorker === true;
      else
        t1 = false;
      if (t1) {
        this._handle = 1;
        t1 = init.globalState.topEventLoop;
        t2 = init.globalState.currentContext;
        t1.events._add$1(0, new H._IsolateEvent(t2, new H.TimerImpl_internalCallback(this, callback), "timer"));
        this._inEventLoop = true;
      } else {
        t1 = $.get$globalThis();
        if (t1.setTimeout != null) {
          t2 = init.globalState.topEventLoop;
          t2.activeTimerCount = t2.activeTimerCount + 1;
          this._handle = t1.setTimeout(H.convertDartClosureToJS(new H.TimerImpl_internalCallback0(this, callback), 0), milliseconds);
        } else
          throw H.wrapException(P.UnsupportedError$("Timer greater than 0."));
      }
    },
    static: {TimerImpl$: function(milliseconds, callback) {
        var t1 = new H.TimerImpl(true, false, null);
        t1.TimerImpl$2(milliseconds, callback);
        return t1;
      }}
  },
  TimerImpl_internalCallback: {
    "": "Closure:107;this_0,callback_1",
    call$0: [function() {
      this.this_0._handle = null;
      this.callback_1.call$0();
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  TimerImpl_internalCallback0: {
    "": "Closure:107;this_2,callback_3",
    call$0: [function() {
      this.this_2._handle = null;
      var t1 = init.globalState.topEventLoop;
      t1.activeTimerCount = t1.activeTimerCount - 1;
      this.callback_3.call$0();
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  }
}],
["_js_helper", "dart:_js_helper", , H, {
  "": "",
  isJsIndexable: [function(object, record) {
    var result, t1;
    if (record != null) {
      result = record.x;
      if (result != null)
        return result;
    }
    t1 = J.getInterceptor(object);
    return typeof object === "object" && object !== null && !!t1.$isJavaScriptIndexingBehavior;
  }, "call$2", "isJsIndexable$closure", 4, 0, null, 6, 22],
  S: [function(value) {
    var res;
    if (typeof value === "string")
      return value;
    if (typeof value === "number") {
      if (value !== 0)
        return "" + value;
    } else if (true === value)
      return "true";
    else if (false === value)
      return "false";
    else if (value == null)
      return "null";
    res = J.toString$0(value);
    if (typeof res !== "string")
      throw H.wrapException(P.ArgumentError$(value));
    return res;
  }, "call$1", "S$closure", 2, 0, null, 23],
  throwInvalidReflectionError: [function(memberName) {
    throw H.wrapException(P.UnsupportedError$("Can't use '" + H.S(memberName) + "' in reflection because it is not included in a @MirrorsUsed annotation."));
  }, "call$1", "throwInvalidReflectionError$closure", 2, 0, null, 24],
  Primitives_objectHashCode: [function(object) {
    var hash = object.$identityHash;
    if (hash == null) {
      hash = Math.random() * 0x3fffffff | 0;
      object.$identityHash = hash;
    }
    return hash;
  }, "call$1", "Primitives_objectHashCode$closure", 2, 0, null, 6],
  Primitives__throwFormatException: [function(string) {
    throw H.wrapException(P.FormatException$(string));
  }, "call$1", "Primitives__throwFormatException$closure", 2, 0, 25, 26],
  Primitives_parseInt: [function(source, radix, handleError) {
    var match, t1, maxCharCode, digitsPart, i, t2;
    if (handleError == null)
      handleError = H.Primitives__throwFormatException$closure();
    if (typeof source !== "string")
      H.throwExpression(new P.ArgumentError(source));
    match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
    if (radix == null) {
      if (match != null) {
        t1 = match.length;
        if (2 >= t1)
          return H.ioore(match, 2);
        if (match[2] != null)
          return parseInt(source, 16);
        if (3 >= t1)
          return H.ioore(match, 3);
        if (match[3] != null)
          return parseInt(source, 10);
        return handleError.call$1(source);
      }
      radix = 10;
    } else {
      if (typeof radix !== "number" || Math.floor(radix) !== radix)
        throw H.wrapException(new P.ArgumentError("Radix is not an integer"));
      if (radix < 2 || radix > 36)
        throw H.wrapException(P.RangeError$("Radix " + H.S(radix) + " not in range 2..36"));
      if (match != null) {
        if (radix === 10) {
          if (3 >= match.length)
            return H.ioore(match, 3);
          t1 = match[3] != null;
        } else
          t1 = false;
        if (t1)
          return parseInt(source, 10);
        if (!(radix < 10)) {
          if (3 >= match.length)
            return H.ioore(match, 3);
          t1 = match[3] == null;
        } else
          t1 = true;
        if (t1) {
          maxCharCode = radix <= 10 ? 48 + radix - 1 : 97 + radix - 10 - 1;
          if (1 >= match.length)
            return H.ioore(match, 1);
          digitsPart = match[1];
          t1 = J.getInterceptor$asx(digitsPart);
          i = 0;
          while (true) {
            t2 = t1.get$length(digitsPart);
            if (typeof t2 !== "number")
              return H.iae(t2);
            if (!(i < t2))
              break;
            t1.codeUnitAt$1(digitsPart, 0);
            if (t1.codeUnitAt$1(digitsPart, i) > maxCharCode)
              return handleError.call$1(source);
            ++i;
          }
        }
      }
    }
    if (match == null)
      return handleError.call$1(source);
    return parseInt(source, radix);
  }, "call$3", "Primitives_parseInt$closure", 6, 0, null, 27, 28, 29],
  Primitives_parseDouble: [function(source, handleError) {
    var result, trimmed;
    if (typeof source !== "string")
      H.throwExpression(new P.ArgumentError(source));
    if (handleError == null)
      handleError = H.Primitives__throwFormatException$closure();
    if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(source))
      return handleError.call$1(source);
    result = parseFloat(source);
    if (isNaN(result)) {
      trimmed = J.trim$0$s(source);
      if (trimmed === "NaN" || trimmed === "+NaN" || trimmed === "-NaN")
        return result;
      return handleError.call$1(source);
    }
    return result;
  }, "call$2", "Primitives_parseDouble$closure", 4, 0, null, 27, 29],
  Primitives_objectTypeName: [function(object) {
    var $name, decompiled, t1;
    $name = C.JS_CONST_IX5(J.getInterceptor(object));
    if ($name === "Object") {
      decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
      if (typeof decompiled === "string")
        $name = decompiled;
    }
    t1 = J.getInterceptor$s($name);
    if (t1.codeUnitAt$1($name, 0) === 36)
      $name = t1.substring$1($name, 1);
    t1 = H.getRuntimeTypeInfo(object);
    return H.S($name) + H.joinArguments(t1, 0, null);
  }, "call$1", "Primitives_objectTypeName$closure", 2, 0, null, 6],
  Primitives_objectToString: [function(object) {
    return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
  }, "call$1", "Primitives_objectToString$closure", 2, 0, null, 6],
  Primitives_numMicroseconds: [function() {
    if (typeof window != "undefined" && window !== null) {
      var performance = window.performance;
      if (performance != null && typeof performance.webkitNow == "function")
        return C.JSNumber_methods.toInt$0(Math.floor(1000 * performance.webkitNow()));
    }
    return 1000 * Date.now();
  }, "call$0", "Primitives_numMicroseconds$closure", 0, 0, null],
  Primitives_currentUri: [function() {
    var workingDirectory, $length, t1;
    if (typeof self != "undefined")
      return self.location.href;
    if (typeof version == "function" && typeof os == "object" && "system" in os) {
      workingDirectory = os.system("pwd");
      $length = workingDirectory.length;
      t1 = $length - 1;
      if (t1 < 0)
        return H.ioore(workingDirectory, t1);
      if (workingDirectory[t1] === "\n")
        workingDirectory = C.JSString_methods.substring$2(workingDirectory, 0, t1);
    } else
      workingDirectory = null;
    if (typeof version == "function" && typeof system == "function")
      workingDirectory = environment.PWD;
    return workingDirectory != null ? C.JSString_methods.$add("file://", workingDirectory) + "/" : null;
  }, "call$0", "Primitives_currentUri$closure", 0, 0, null],
  Primitives__fromCharCodeApply: [function(array) {
    var end, t1, result, i, subarray, t2;
    end = array.length;
    for (t1 = end <= 500, result = "", i = 0; i < end; i += 500) {
      if (t1)
        subarray = array;
      else {
        t2 = i + 500;
        t2 = t2 < end ? t2 : end;
        subarray = array.slice(i, t2);
      }
      result += String.fromCharCode.apply(null, subarray);
    }
    return result;
  }, "call$1", "Primitives__fromCharCodeApply$closure", 2, 0, null, 30],
  Primitives_stringFromCodePoints: [function(codePoints) {
    var a, t1, i;
    a = [];
    a.$builtinTypeInfo = [J.JSInt];
    t1 = new H.ListIterator(codePoints, codePoints.length, 0, null);
    t1.$builtinTypeInfo = [H.getTypeArgumentByIndex(codePoints, 0)];
    for (; t1.moveNext$0();) {
      i = t1._current;
      if (typeof i !== "number" || Math.floor(i) !== i)
        throw H.wrapException(P.ArgumentError$(i));
      if (i <= 65535)
        a.push(i);
      else if (i <= 1114111) {
        a.push(55296 + (C.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
        a.push(56320 + (i & 1023));
      } else
        throw H.wrapException(P.ArgumentError$(i));
    }
    return H.Primitives__fromCharCodeApply(a);
  }, "call$1", "Primitives_stringFromCodePoints$closure", 2, 0, null, 31],
  Primitives_stringFromCharCodes: [function(charCodes) {
    var t1, i;
    for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(charCodes, charCodes.length, 0, null), [H.getTypeArgumentByIndex(charCodes, 0)]); t1.moveNext$0();) {
      i = t1._current;
      if (typeof i !== "number" || Math.floor(i) !== i)
        throw H.wrapException(P.ArgumentError$(i));
      if (i < 0)
        throw H.wrapException(P.ArgumentError$(i));
      if (i > 65535)
        return H.Primitives_stringFromCodePoints(charCodes);
    }
    return H.Primitives__fromCharCodeApply(charCodes);
  }, "call$1", "Primitives_stringFromCharCodes$closure", 2, 0, null, 32],
  Primitives_valueFromDecomposedDate: [function(years, month, day, hours, minutes, seconds, milliseconds, isUtc) {
    var jsMonth, value, t1, date;
    if (typeof years !== "number" || Math.floor(years) !== years)
      H.throwExpression(new P.ArgumentError(years));
    if (typeof month !== "number" || Math.floor(month) !== month)
      H.throwExpression(new P.ArgumentError(month));
    if (typeof day !== "number" || Math.floor(day) !== day)
      H.throwExpression(new P.ArgumentError(day));
    if (typeof hours !== "number" || Math.floor(hours) !== hours)
      H.throwExpression(new P.ArgumentError(hours));
    if (typeof minutes !== "number" || Math.floor(minutes) !== minutes)
      H.throwExpression(new P.ArgumentError(minutes));
    if (typeof seconds !== "number" || Math.floor(seconds) !== seconds)
      H.throwExpression(new P.ArgumentError(seconds));
    jsMonth = J.$sub$n(month, 1);
    value = isUtc ? Date.UTC(years, jsMonth, day, hours, minutes, seconds, milliseconds) : new Date(years, jsMonth, day, hours, minutes, seconds, milliseconds).valueOf();
    if (isNaN(value) || value < -8640000000000000 || value > 8640000000000000)
      throw H.wrapException(new P.ArgumentError(null));
    t1 = J.getInterceptor$n(years);
    if (t1.$le(years, 0) || t1.$lt(years, 100)) {
      date = new Date(value);
      if (isUtc)
        date.setUTCFullYear(years);
      else
        date.setFullYear(years);
      return date.valueOf();
    }
    return value;
  }, "call$8", "Primitives_valueFromDecomposedDate$closure", 16, 0, null, 33, 34, 35, 36, 37, 38, 39, 40],
  Primitives_lazyAsJsDate: [function(receiver) {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver.millisecondsSinceEpoch);
    return receiver.date;
  }, "call$1", "Primitives_lazyAsJsDate$closure", 2, 0, null, 41],
  Primitives_getProperty: [function(object, key) {
    if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
      throw H.wrapException(new P.ArgumentError(object));
    return object[key];
  }, "call$2", "Primitives_getProperty$closure", 4, 0, null, 6, 42],
  Primitives_setProperty: [function(object, key, value) {
    if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
      throw H.wrapException(new P.ArgumentError(object));
    object[key] = value;
  }, "call$3", "Primitives_setProperty$closure", 6, 0, null, 6, 42, 23],
  Primitives_functionNoSuchMethod: [function($function, positionalArguments, namedArguments) {
    var t1, $arguments, namedArgumentList;
    t1 = {};
    t1.argumentCount_0 = 0;
    $arguments = [];
    namedArgumentList = [];
    if (positionalArguments != null) {
      t1.argumentCount_0 = 0 + positionalArguments.length;
      C.JSArray_methods.addAll$1($arguments, positionalArguments);
    }
    t1.names_1 = "";
    if (namedArguments != null && !namedArguments.get$isEmpty(namedArguments))
      namedArguments.forEach$1(0, new H.Primitives_functionNoSuchMethod_closure(t1, $arguments, namedArgumentList));
    return J.noSuchMethod$1($function, new H.JSInvocationMirror(C.Symbol_call, "call$" + t1.argumentCount_0 + t1.names_1, 0, $arguments, namedArgumentList, null));
  }, "call$3", "Primitives_functionNoSuchMethod$closure", 6, 0, null, 15, 43, 44],
  Primitives_applyFunction: [function($function, positionalArguments, namedArguments) {
    var t1, jsFunction, info, t2, defaultArguments, t3, t4, i, t5, $arguments, argumentCount;
    t1 = {};
    if (namedArguments != null && !namedArguments.get$isEmpty(namedArguments)) {
      jsFunction = J.getInterceptor($function)["call*"];
      if (jsFunction == null)
        return H.Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments);
      info = H.ReflectionInfo_ReflectionInfo(jsFunction);
      if (info == null || !info.areOptionalParametersNamed)
        return H.Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments);
      positionalArguments = P.List_List$from(positionalArguments, true, null);
      t2 = info.requiredParameterCount;
      if (t2 !== positionalArguments.length)
        return H.Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments);
      defaultArguments = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      for (t3 = info.optionalParameterCount, t4 = info.data, i = 0; i < t3; ++i) {
        t5 = i + t2;
        defaultArguments.$indexSet(0, init.metadata[t4[t5 + t3 + 3]], init.metadata[info.defaultValue$1(0, t5)]);
      }
      t1.bad_0 = false;
      namedArguments.forEach$1(0, new H.Primitives_applyFunction_closure(t1, defaultArguments));
      if (t1.bad_0)
        return H.Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments);
      J.addAll$1$ax(positionalArguments, defaultArguments.get$values(defaultArguments));
      return jsFunction.apply($function, positionalArguments);
    }
    $arguments = [];
    argumentCount = 0 + positionalArguments.length;
    C.JSArray_methods.addAll$1($arguments, positionalArguments);
    jsFunction = $function["call$" + argumentCount];
    if (jsFunction == null)
      return H.Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments);
    return jsFunction.apply($function, $arguments);
  }, "call$3", "Primitives_applyFunction$closure", 6, 0, null, 15, 43, 44],
  Primitives_getConstructorOrInterceptor: [function(className) {
    if (className == "String")
      return C.C_JSString;
    if (className == "int")
      return C.C_JSInt;
    if (className == "double")
      return C.C_JSDouble;
    if (className == "num")
      return C.C_JSNumber;
    if (className == "bool")
      return C.C_JSBool;
    if (className == "List")
      return C.C_JSArray;
    return init.allClasses[className];
  }, "call$1", "Primitives_getConstructorOrInterceptor$closure", 2, 0, null, 45],
  JsCache_allocate: [function() {
    var result = {x:0};
    delete result.x;
    return result;
  }, "call$0", "JsCache_allocate$closure", 0, 0, null],
  iae: [function(argument) {
    throw H.wrapException(P.ArgumentError$(argument));
  }, "call$1", "iae$closure", 2, 0, null, 46],
  ioore: [function(receiver, index) {
    if (receiver == null)
      J.get$length$asx(receiver);
    if (typeof index !== "number" || Math.floor(index) !== index)
      H.iae(index);
    throw H.wrapException(P.RangeError$value(index));
  }, "call$2", "ioore$closure", 4, 0, null, 41, 47],
  wrapException: [function(ex) {
    var wrapper;
    if (ex == null)
      ex = new P.NullThrownError();
    wrapper = new Error();
    wrapper.dartException = ex;
    if ("defineProperty" in Object) {
      Object.defineProperty(wrapper, "message", { get: H.toStringWrapper });
      wrapper.name = "";
    } else
      wrapper.toString = H.toStringWrapper;
    return wrapper;
  }, "call$1", "wrapException$closure", 2, 0, null, 48],
  toStringWrapper: [function() {
    return J.toString$0(this.dartException);
  }, "call$0", "toStringWrapper$closure", 0, 0, null],
  throwExpression: [function(ex) {
    var wrapper;
    if (ex == null)
      ex = new P.NullThrownError();
    wrapper = new Error();
    wrapper.dartException = ex;
    if ("defineProperty" in Object) {
      Object.defineProperty(wrapper, "message", { get: H.toStringWrapper });
      wrapper.name = "";
    } else
      wrapper.toString = H.toStringWrapper;
    throw wrapper;
  }, "call$1", "throwExpression$closure", 2, 0, null, 48],
  unwrapException: [function(ex) {
    var t1, message, number, ieErrorCode, t2, t3, t4, nullLiteralCall, t5, t6, t7, t8, t9, match;
    t1 = new H.unwrapException_saveStackTrace(ex);
    if (ex == null)
      return;
    if (typeof ex !== "object")
      return ex;
    if ("dartException" in ex)
      return t1.call$1(ex.dartException);
    else if (!("message" in ex))
      return ex;
    message = ex.message;
    if ("number" in ex && typeof ex.number == "number") {
      number = ex.number;
      ieErrorCode = number & 65535;
      if ((C.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
        switch (ieErrorCode) {
          case 438:
            return t1.call$1(H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", null));
          case 445:
          case 5007:
            t2 = H.S(message) + " (Error " + ieErrorCode + ")";
            return t1.call$1(new H.NullError(t2, null));
          default:
        }
    }
    if (ex instanceof TypeError) {
      t2 = $.get$TypeErrorDecoder_noSuchMethodPattern();
      t3 = $.get$TypeErrorDecoder_notClosurePattern();
      t4 = $.get$TypeErrorDecoder_nullCallPattern();
      nullLiteralCall = $.get$TypeErrorDecoder_nullLiteralCallPattern();
      t5 = $.get$TypeErrorDecoder_undefinedCallPattern();
      t6 = $.get$TypeErrorDecoder_undefinedLiteralCallPattern();
      t7 = $.get$TypeErrorDecoder_nullPropertyPattern();
      $.get$TypeErrorDecoder_nullLiteralPropertyPattern();
      t8 = $.get$TypeErrorDecoder_undefinedPropertyPattern();
      t9 = $.get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
      match = t2.matchTypeError$1(message);
      if (match != null)
        return t1.call$1(H.JsNoSuchMethodError$(message, match));
      else {
        match = t3.matchTypeError$1(message);
        if (match != null) {
          match.method = "call";
          return t1.call$1(H.JsNoSuchMethodError$(message, match));
        } else {
          match = t4.matchTypeError$1(message);
          if (match == null) {
            match = nullLiteralCall.matchTypeError$1(message);
            if (match == null) {
              match = t5.matchTypeError$1(message);
              if (match == null) {
                match = t6.matchTypeError$1(message);
                if (match == null) {
                  match = t7.matchTypeError$1(message);
                  if (match == null) {
                    match = nullLiteralCall.matchTypeError$1(message);
                    if (match == null) {
                      match = t8.matchTypeError$1(message);
                      if (match == null) {
                        match = t9.matchTypeError$1(message);
                        t2 = match != null;
                      } else
                        t2 = true;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
          } else
            t2 = true;
          if (t2) {
            t2 = match == null ? null : match.method;
            return t1.call$1(new H.NullError(message, t2));
          }
        }
      }
      t2 = typeof message === "string" ? message : "";
      return t1.call$1(new H.UnknownJsTypeError(t2));
    }
    if (ex instanceof RangeError) {
      if (typeof message === "string" && message.indexOf("call stack") !== -1)
        return new P.StackOverflowError();
      return t1.call$1(new P.ArgumentError(null));
    }
    if (typeof InternalError == "function" && ex instanceof InternalError)
      if (typeof message === "string" && message === "too much recursion")
        return new P.StackOverflowError();
    return ex;
  }, "call$1", "unwrapException$closure", 2, 0, null, 48],
  objectHashCode: [function(object) {
    if (object == null || typeof object != 'object')
      return J.get$hashCode$(object);
    else
      return H.Primitives_objectHashCode(object);
  }, "call$1", "objectHashCode$closure", 2, 0, null, 6],
  fillLiteralMap: [function(keyValuePairs, result) {
    var $length, index, index0, index1;
    $length = keyValuePairs.length;
    for (index = 0; index < $length; index = index1) {
      index0 = index + 1;
      index1 = index0 + 1;
      result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
    }
    return result;
  }, "call$2", "fillLiteralMap$closure", 4, 0, null, 50, 51],
  invokeClosure: [function(closure, isolate, numberOfArguments, arg1, arg2, arg3, arg4) {
    var t1 = J.getInterceptor(numberOfArguments);
    if (t1.$eq(numberOfArguments, 0) === true)
      return H._callInIsolate(isolate, new H.invokeClosure_closure(closure));
    else if (t1.$eq(numberOfArguments, 1) === true)
      return H._callInIsolate(isolate, new H.invokeClosure_closure0(closure, arg1));
    else if (t1.$eq(numberOfArguments, 2) === true)
      return H._callInIsolate(isolate, new H.invokeClosure_closure1(closure, arg1, arg2));
    else if (t1.$eq(numberOfArguments, 3) === true)
      return H._callInIsolate(isolate, new H.invokeClosure_closure2(closure, arg1, arg2, arg3));
    else if (t1.$eq(numberOfArguments, 4) === true)
      return H._callInIsolate(isolate, new H.invokeClosure_closure3(closure, arg1, arg2, arg3, arg4));
    else
      throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
  }, "call$7", "invokeClosure$closure", 14, 0, null, 52, 14, 53, 54, 55, 56, 57],
  convertDartClosureToJS: [function(closure, arity) {
    var $function;
    if (closure == null)
      return;
    $function = closure.$identity;
    if (!!$function)
      return $function;
    $function = (function(closure, arity, context, invoke) {  return function(a1, a2, a3, a4) {     return invoke(closure, context, arity, a1, a2, a3, a4);  };})(closure,arity,init.globalState.currentContext,H.invokeClosure);
    closure.$identity = $function;
    return $function;
  }, "call$2", "convertDartClosureToJS$closure", 4, 0, null, 52, 58],
  Closure_fromTearOff: [function(receiver, functions, reflectionInfo, isStatic, jsArguments, propertyName) {
    var $function, callName, functionType, $prototype, $constructor, t1, isIntercepted, trampoline, signatureFunction, getReceiver, i, stub, stubCallName, t2;
    $function = functions[0];
    $function.$stubName;
    callName = $function.$callName;
    $function.$reflectionInfo = reflectionInfo;
    functionType = H.ReflectionInfo_ReflectionInfo($function).functionType;
    $prototype = isStatic ? Object.create(new H.TearOffClosure().constructor.prototype) : Object.create(new H.BoundClosure(null, null, null, null).constructor.prototype);
    $prototype.$initialize = $prototype.constructor;
    if (isStatic)
      $constructor = function(){this.$initialize()};
    else if (typeof dart_precompiled == "function") {
      t1 = function(a,b,c,d) {this.$initialize(a,b,c,d)};
      $constructor = t1;
    } else {
      t1 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t1, 1);
      t1 = new Function("a", "b", "c", "d", "this.$initialize(a,b,c,d);" + t1);
      $constructor = t1;
    }
    $prototype.constructor = $constructor;
    $constructor.prototype = $prototype;
    t1 = !isStatic;
    if (t1) {
      isIntercepted = jsArguments.length == 1 && true;
      trampoline = H.Closure_forwardCallTo($function, isIntercepted);
    } else {
      $prototype.$name = propertyName;
      trampoline = $function;
      isIntercepted = false;
    }
    if (typeof functionType == "number")
      signatureFunction = (function(s){return function(){return init.metadata[s]}})(functionType);
    else if (t1 && typeof functionType == "function") {
      getReceiver = isIntercepted ? H.BoundClosure_receiverOf : H.BoundClosure_selfOf;
      signatureFunction = function(f,r){return function(){return f.apply({$receiver:r(this)},arguments)}}(functionType,getReceiver);
    } else
      throw H.wrapException("Error in reflectionInfo.");
    $prototype.$signature = signatureFunction;
    $prototype[callName] = trampoline;
    for (t1 = functions.length, i = 1; i < t1; ++i) {
      stub = functions[i];
      stubCallName = stub.$callName;
      if (stubCallName != null) {
        t2 = isStatic ? stub : H.Closure_forwardCallTo(stub, isIntercepted);
        $prototype[stubCallName] = t2;
      }
    }
    $prototype["call*"] = $function;
    return $constructor;
  }, "call$6", "Closure_fromTearOff$closure", 12, 0, null, 41, 59, 60, 61, 62, 63],
  Closure_cspForwardCall: [function(arity, $function) {
    var getSelf = H.BoundClosure_selfOf;
    switch (arity) {
      case 0:
        return function(F,S){return function(){return F.call(S(this))}}($function,getSelf);
      case 1:
        return function(F,S){return function(a){return F.call(S(this),a)}}($function,getSelf);
      case 2:
        return function(F,S){return function(a,b){return F.call(S(this),a,b)}}($function,getSelf);
      case 3:
        return function(F,S){return function(a,b,c){return F.call(S(this),a,b,c)}}($function,getSelf);
      case 4:
        return function(F,S){return function(a,b,c,d){return F.call(S(this),a,b,c,d)}}($function,getSelf);
      case 5:
        return function(F,S){return function(a,b,c,d,e){return F.call(S(this),a,b,c,d,e)}}($function,getSelf);
      default:
        return function(f,s){return function(){return f.apply(s(this),arguments)}}($function,getSelf);
    }
  }, "call$2", "Closure_cspForwardCall$closure", 4, 0, null, 58, 15],
  Closure_forwardCallTo: [function($function, isIntercepted) {
    var arity, t1, t2, $arguments;
    if (isIntercepted)
      return H.Closure_forwardInterceptedCallTo($function);
    arity = $function.length;
    if (typeof dart_precompiled == "function")
      return H.Closure_cspForwardCall(arity, $function);
    else if (arity === 0) {
      t1 = $.BoundClosure_selfFieldNameCache;
      if (t1 == null) {
        t1 = H.BoundClosure_computeFieldNamed("self");
        $.BoundClosure_selfFieldNameCache = t1;
      }
      t1 = "return function(){return F.call(this." + H.S(t1) + ");";
      t2 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t2, 1);
      return new Function("F", t1 + H.S(t2) + "}")($function);
    } else if (1 <= arity && arity < 27) {
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity).join(",");
      t1 = "return function(" + $arguments + "){return F.call(this.";
      t2 = $.BoundClosure_selfFieldNameCache;
      if (t2 == null) {
        t2 = H.BoundClosure_computeFieldNamed("self");
        $.BoundClosure_selfFieldNameCache = t2;
      }
      t2 = t1 + H.S(t2) + "," + $arguments + ");";
      t1 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t1, 1);
      return new Function("F", t2 + H.S(t1) + "}")($function);
    } else
      return H.Closure_cspForwardCall(arity, $function);
  }, "call$2", "Closure_forwardCallTo$closure", 4, 0, null, 15, 64],
  Closure_cspForwardInterceptedCall: [function(arity, $name, $function) {
    var getSelf, getReceiver;
    getSelf = H.BoundClosure_selfOf;
    getReceiver = H.BoundClosure_receiverOf;
    switch (arity) {
      case 0:
        throw H.wrapException(H.RuntimeError$("Intercepted function with no arguments."));
      case 1:
        return function(n,s,r){return function(){return s(this)[n](r(this))}}($name,getSelf,getReceiver);
      case 2:
        return function(n,s,r){return function(a){return s(this)[n](r(this),a)}}($name,getSelf,getReceiver);
      case 3:
        return function(n,s,r){return function(a,b){return s(this)[n](r(this),a,b)}}($name,getSelf,getReceiver);
      case 4:
        return function(n,s,r){return function(a,b,c){return s(this)[n](r(this),a,b,c)}}($name,getSelf,getReceiver);
      case 5:
        return function(n,s,r){return function(a,b,c,d){return s(this)[n](r(this),a,b,c,d)}}($name,getSelf,getReceiver);
      case 6:
        return function(n,s,r){return function(a,b,c,d,e){return s(this)[n](r(this),a,b,c,d,e)}}($name,getSelf,getReceiver);
      default:
        return function(f,s,r,a){return function(){a=[r(this)];Array.prototype.push.apply(a,arguments);return f.apply(s(this),a)}}($function,getSelf,getReceiver);
    }
  }, "call$3", "Closure_cspForwardInterceptedCall$closure", 6, 0, null, 58, 12, 15],
  Closure_forwardInterceptedCallTo: [function($function) {
    var stubName, arity, t1, t2, $arguments;
    stubName = $function.$stubName;
    arity = $function.length;
    if (typeof dart_precompiled == "function")
      return H.Closure_cspForwardInterceptedCall(arity, stubName, $function);
    else if (arity === 1) {
      t1 = "return this." + H.S(H.BoundClosure_selfFieldName()) + "." + stubName + "(this." + H.S(H.BoundClosure_receiverFieldName()) + ");";
      t2 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t2, 1);
      return new Function(t1 + H.S(t2));
    } else if (1 < arity && arity < 28) {
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity - 1).join(",");
      t1 = "return function(" + $arguments + "){return this." + H.S(H.BoundClosure_selfFieldName()) + "." + stubName + "(this." + H.S(H.BoundClosure_receiverFieldName()) + "," + $arguments + ");";
      t2 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t2, 1);
      return new Function(t1 + H.S(t2) + "}")();
    } else
      return H.Closure_cspForwardInterceptedCall(arity, stubName, $function);
  }, "call$1", "Closure_forwardInterceptedCallTo$closure", 2, 0, null, 15],
  closureFromTearOff: [function(receiver, functions, reflectionInfo, isStatic, jsArguments, $name) {
    functions.fixed$length = init;
    reflectionInfo.fixed$length = init;
    return H.Closure_fromTearOff(receiver, functions, reflectionInfo, !!isStatic, jsArguments, $name);
  }, "call$6", "closureFromTearOff$closure", 12, 0, null, 41, 59, 60, 61, 62, 12],
  propertyTypeCastError: [function(value, property) {
    var t1 = J.getInterceptor$asx(property);
    throw H.wrapException(H.CastErrorImplementation$(H.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
  }, "call$2", "propertyTypeCastError$closure", 4, 0, null, 23, 66],
  interceptedTypeCast: [function(value, property) {
    var t1;
    if (value != null)
      t1 = typeof value === "object" && J.getInterceptor(value)[property];
    else
      t1 = true;
    if (t1)
      return value;
    H.propertyTypeCastError(value, property);
  }, "call$2", "interceptedTypeCast$closure", 4, 0, null, 23, 66],
  throwCyclicInit: [function(staticName) {
    throw H.wrapException(P.CyclicInitializationError$("Cyclic initialization for static " + H.S(staticName)));
  }, "call$1", "throwCyclicInit$closure", 2, 0, null, 67],
  buildFunctionType: [function(returnType, parameterTypes, optionalParameterTypes) {
    return new H.RuntimeFunctionType(returnType, parameterTypes, optionalParameterTypes, null);
  }, "call$3", "buildFunctionType$closure", 6, 0, null, 69, 70, 71],
  buildInterfaceType: [function(rti, typeArguments) {
    var $name = rti.name;
    if (typeArguments == null || typeArguments.length === 0)
      return new H.RuntimeTypePlain($name);
    return new H.RuntimeTypeGeneric($name, typeArguments, null);
  }, "call$2", "buildInterfaceType$closure", 4, 0, null, 72, 73],
  getDynamicRuntimeType: [function() {
    return C.C_DynamicRuntimeType;
  }, "call$0", "getDynamicRuntimeType$closure", 0, 0, null],
  createRuntimeType: [function($name) {
    return new H.TypeImpl($name, null);
  }, "call$1", "createRuntimeType$closure", 2, 0, null, 12],
  setRuntimeTypeInfo: [function(target, typeInfo) {
    if (target != null)
      target.$builtinTypeInfo = typeInfo;
    return target;
  }, "call$2", "setRuntimeTypeInfo$closure", 4, 0, null, 74, 75],
  getRuntimeTypeInfo: [function(target) {
    if (target == null)
      return;
    return target.$builtinTypeInfo;
  }, "call$1", "getRuntimeTypeInfo$closure", 2, 0, null, 74],
  getRuntimeTypeArguments: [function(target, substitutionName) {
    return H.substitute(target["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(target));
  }, "call$2", "getRuntimeTypeArguments$closure", 4, 0, null, 74, 76],
  getRuntimeTypeArgument: [function(target, substitutionName, index) {
    var $arguments = H.getRuntimeTypeArguments(target, substitutionName);
    return $arguments == null ? null : $arguments[index];
  }, "call$3", "getRuntimeTypeArgument$closure", 6, 0, null, 74, 76, 47],
  getTypeArgumentByIndex: [function(target, index) {
    var rti = H.getRuntimeTypeInfo(target);
    return rti == null ? null : rti[index];
  }, "call$2", "getTypeArgumentByIndex$closure", 4, 0, null, 74, 47],
  runtimeTypeToString: [function(type, onTypeVariable) {
    if (type == null)
      return "dynamic";
    else if (typeof type === "object" && type !== null && type.constructor === Array)
      return type[0].builtin$cls + H.joinArguments(type, 1, onTypeVariable);
    else if (typeof type == "function")
      return type.builtin$cls;
    else if (typeof type === "number" && Math.floor(type) === type)
      if (onTypeVariable == null)
        return C.JSInt_methods.toString$0(type);
      else
        return onTypeVariable.call$1(type);
    else
      return;
  }, "call$2$onTypeVariable", "runtimeTypeToString$closure", 2, 3, null, 77, 11, 78],
  joinArguments: [function(types, startIndex, onTypeVariable) {
    var buffer, index, firstArgument, allDynamic, argument, str;
    if (types == null)
      return "";
    buffer = P.StringBuffer$("");
    for (index = startIndex, firstArgument = true, allDynamic = true; index < types.length; ++index) {
      if (firstArgument)
        firstArgument = false;
      else
        buffer._contents = buffer._contents + ", ";
      argument = types[index];
      if (argument != null)
        allDynamic = false;
      str = H.runtimeTypeToString(argument, onTypeVariable);
      str = typeof str === "string" ? str : H.S(str);
      buffer._contents = buffer._contents + str;
    }
    return allDynamic ? "" : "<" + H.S(buffer) + ">";
  }, "call$3$onTypeVariable", "joinArguments$closure", 4, 3, null, 77, 79, 80, 78],
  getRuntimeTypeString: [function(object) {
    var className = typeof object === "object" && object !== null && object.constructor === Array ? "List" : J.getInterceptor(object).constructor.builtin$cls;
    return className + H.joinArguments(object.$builtinTypeInfo, 0, null);
  }, "call$1", "getRuntimeTypeString$closure", 2, 0, null, 6],
  substitute: [function(substitution, $arguments) {
    if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
      $arguments = substitution;
    else if (typeof substitution == "function") {
      substitution = H.invokeOn(substitution, null, $arguments);
      if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
        $arguments = substitution;
      else if (typeof substitution == "function")
        $arguments = H.invokeOn(substitution, null, $arguments);
    }
    return $arguments;
  }, "call$2", "substitute$closure", 4, 0, null, 81, 82],
  checkSubtype: [function(object, isField, checks, asField) {
    var $arguments, interceptor;
    if (object == null)
      return false;
    $arguments = H.getRuntimeTypeInfo(object);
    interceptor = J.getInterceptor(object);
    if (interceptor[isField] == null)
      return false;
    return H.areSubtypes(H.substitute(interceptor[asField], $arguments), checks);
  }, "call$4", "checkSubtype$closure", 8, 0, null, 6, 83, 84, 85],
  areSubtypes: [function(s, t) {
    var len, i;
    if (s == null || t == null)
      return true;
    len = s.length;
    for (i = 0; i < len; ++i)
      if (!H.isSubtype(s[i], t[i]))
        return false;
    return true;
  }, "call$2", "areSubtypes$closure", 4, 0, null, 86, 87],
  computeSignature: [function(signature, context, contextName) {
    return H.invokeOn(signature, context, H.getRuntimeTypeArguments(context, contextName));
  }, "call$3", "computeSignature$closure", 6, 0, null, 88, 89, 90],
  checkSubtypeOfRuntimeType: [function(o, t) {
    var rti, type;
    if (o == null)
      return t == null || t.builtin$cls === "Object" || t.builtin$cls === "JSNull";
    if (t == null)
      return true;
    rti = H.getRuntimeTypeInfo(o);
    o = J.getInterceptor(o);
    if (rti != null) {
      type = rti.slice();
      type.splice(0, 0, o);
    } else
      type = o;
    return H.isSubtype(type, t);
  }, "call$2", "checkSubtypeOfRuntimeType$closure", 4, 0, null, 91, 87],
  isSubtype: [function(s, t) {
    var targetSignatureFunction, t1, typeOfS, t2, typeOfT, $name, substitution;
    if (s === t)
      return true;
    if (s == null || t == null)
      return true;
    if ("func" in t) {
      if (!("func" in s)) {
        if ("$is_" + H.S(t.func) in s)
          return true;
        targetSignatureFunction = s.$signature;
        if (targetSignatureFunction == null)
          return false;
        s = targetSignatureFunction.apply(s, null);
      }
      return H.isFunctionSubtype(s, t);
    }
    if (t.builtin$cls === "Function" && "func" in s)
      return true;
    t1 = typeof s === "object" && s !== null && s.constructor === Array;
    typeOfS = t1 ? s[0] : s;
    t2 = typeof t === "object" && t !== null && t.constructor === Array;
    typeOfT = t2 ? t[0] : t;
    $name = H.runtimeTypeToString(typeOfT, null);
    if (typeOfT !== typeOfS) {
      if (!("$is" + H.S($name) in typeOfS))
        return false;
      substitution = typeOfS["$as" + H.S(H.runtimeTypeToString(typeOfT, null))];
    } else
      substitution = null;
    if (!t1 && substitution == null || !t2)
      return true;
    t1 = t1 ? s.slice(1) : null;
    t2 = t2 ? t.slice(1) : null;
    return H.areSubtypes(H.substitute(substitution, t1), t2);
  }, "call$2", "isSubtype$closure", 4, 0, null, 86, 87],
  areAssignable: [function(s, t, allowShorter) {
    var sLength, tLength, i, t1, t2;
    if (t == null && s == null)
      return true;
    if (t == null)
      return allowShorter;
    if (s == null)
      return false;
    sLength = s.length;
    tLength = t.length;
    if (allowShorter) {
      if (sLength < tLength)
        return false;
    } else if (sLength !== tLength)
      return false;
    for (i = 0; i < tLength; ++i) {
      t1 = s[i];
      t2 = t[i];
      if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
        return false;
    }
    return true;
  }, "call$3", "areAssignable$closure", 6, 0, null, 86, 87, 92],
  areAssignableMaps: [function(s, t) {
    var t1, names, i, $name, tType, sType;
    if (t == null)
      return true;
    if (s == null)
      return false;
    t1 = Object.getOwnPropertyNames(t);
    t1.fixed$length = init;
    names = t1;
    for (t1 = names.length, i = 0; i < t1; ++i) {
      $name = names[i];
      if (!Object.hasOwnProperty.call(s, $name))
        return false;
      tType = t[$name];
      sType = s[$name];
      if (!(H.isSubtype(tType, sType) || H.isSubtype(sType, tType)))
        return false;
    }
    return true;
  }, "call$2", "areAssignableMaps$closure", 4, 0, null, 86, 87],
  isFunctionSubtype: [function(s, t) {
    var sReturnType, tReturnType, sParameterTypes, tParameterTypes, sOptionalParameterTypes, tOptionalParameterTypes, sParametersLen, tParametersLen, sOptionalParametersLen, tOptionalParametersLen, pos, t1, t2, tPos, sPos;
    if (!("func" in s))
      return false;
    if ("void" in s) {
      if (!("void" in t) && "ret" in t)
        return false;
    } else if (!("void" in t)) {
      sReturnType = s.ret;
      tReturnType = t.ret;
      if (!(H.isSubtype(sReturnType, tReturnType) || H.isSubtype(tReturnType, sReturnType)))
        return false;
    }
    sParameterTypes = s.args;
    tParameterTypes = t.args;
    sOptionalParameterTypes = s.opt;
    tOptionalParameterTypes = t.opt;
    sParametersLen = sParameterTypes != null ? sParameterTypes.length : 0;
    tParametersLen = tParameterTypes != null ? tParameterTypes.length : 0;
    sOptionalParametersLen = sOptionalParameterTypes != null ? sOptionalParameterTypes.length : 0;
    tOptionalParametersLen = tOptionalParameterTypes != null ? tOptionalParameterTypes.length : 0;
    if (sParametersLen > tParametersLen)
      return false;
    if (sParametersLen + sOptionalParametersLen < tParametersLen + tOptionalParametersLen)
      return false;
    if (sParametersLen === tParametersLen) {
      if (!H.areAssignable(sParameterTypes, tParameterTypes, false))
        return false;
      if (!H.areAssignable(sOptionalParameterTypes, tOptionalParameterTypes, true))
        return false;
    } else {
      for (pos = 0; pos < sParametersLen; ++pos) {
        t1 = sParameterTypes[pos];
        t2 = tParameterTypes[pos];
        if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
          return false;
      }
      for (tPos = pos, sPos = 0; tPos < tParametersLen; ++sPos, ++tPos) {
        t1 = sOptionalParameterTypes[sPos];
        t2 = tParameterTypes[tPos];
        if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
          return false;
      }
      for (tPos = 0; tPos < tOptionalParametersLen; ++sPos, ++tPos) {
        t1 = sOptionalParameterTypes[sPos];
        t2 = tOptionalParameterTypes[tPos];
        if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
          return false;
      }
    }
    return H.areAssignableMaps(s.named, t.named);
  }, "call$2", "isFunctionSubtype$closure", 4, 0, null, 86, 87],
  invokeOn: [function($function, receiver, $arguments) {
    return $function.apply(receiver, $arguments);
  }, "call$3", "invokeOn$closure", 6, 0, null, 15, 41, 82],
  toStringForNativeObject: [function(obj) {
    var t1 = $.getTagFunction;
    return "Instance of " + (t1 == null ? "<Unknown>" : t1.call$1(obj));
  }, "call$1", "toStringForNativeObject$closure", 2, 0, null, 93],
  hashCodeForNativeObject: [function(object) {
    return H.Primitives_objectHashCode(object);
  }, "call$1", "hashCodeForNativeObject$closure", 2, 0, null, 6],
  defineProperty: [function(obj, property, value) {
    Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
  }, "call$3", "defineProperty$closure", 6, 0, null, 93, 66, 23],
  lookupAndCacheInterceptor: [function(obj) {
    var tag, record, interceptor, interceptorClass, mark, t1;
    tag = $.getTagFunction.call$1(obj);
    record = $.dispatchRecordsForInstanceTags[tag];
    if (record != null) {
      Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
      return record.i;
    }
    interceptor = $.interceptorsForUncacheableTags[tag];
    if (interceptor != null)
      return interceptor;
    interceptorClass = init.interceptorsByTag[tag];
    if (interceptorClass == null) {
      tag = $.alternateTagFunction.call$2(obj, tag);
      if (tag != null) {
        record = $.dispatchRecordsForInstanceTags[tag];
        if (record != null) {
          Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
          return record.i;
        }
        interceptor = $.interceptorsForUncacheableTags[tag];
        if (interceptor != null)
          return interceptor;
        interceptorClass = init.interceptorsByTag[tag];
      }
    }
    if (interceptorClass == null)
      return;
    interceptor = interceptorClass.prototype;
    mark = tag[0];
    if (mark === "!") {
      record = H.makeLeafDispatchRecord(interceptor);
      $.dispatchRecordsForInstanceTags[tag] = record;
      Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
      return record.i;
    }
    if (mark === "~") {
      $.interceptorsForUncacheableTags[tag] = interceptor;
      return interceptor;
    }
    if (mark === "-") {
      t1 = H.makeLeafDispatchRecord(interceptor);
      Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
      return t1.i;
    }
    if (mark === "+")
      return H.patchInteriorProto(obj, interceptor);
    if (mark === "*")
      throw H.wrapException(P.UnimplementedError$(tag));
    if (init.leafTags[tag] === true) {
      t1 = H.makeLeafDispatchRecord(interceptor);
      Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
      return t1.i;
    } else
      return H.patchInteriorProto(obj, interceptor);
  }, "call$1", "lookupAndCacheInterceptor$closure", 2, 0, null, 93],
  patchInteriorProto: [function(obj, interceptor) {
    var proto, record;
    proto = Object.getPrototypeOf(obj);
    record = J.makeDispatchRecord(interceptor, proto, null, null);
    Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
    return interceptor;
  }, "call$2", "patchInteriorProto$closure", 4, 0, null, 93, 7],
  makeLeafDispatchRecord: [function(interceptor) {
    return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
  }, "call$1", "makeLeafDispatchRecord$closure", 2, 0, null, 7],
  makeDefaultDispatchRecord: [function(tag, interceptorClass, proto) {
    var interceptor = interceptorClass.prototype;
    if (init.leafTags[tag] === true)
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    else
      return J.makeDispatchRecord(interceptor, proto, null, null);
  }, "call$3", "makeDefaultDispatchRecord$closure", 6, 0, null, 94, 95, 8],
  initNativeDispatch: [function() {
    if (true === $.initNativeDispatchFlag)
      return;
    $.initNativeDispatchFlag = true;
    H.initNativeDispatchContinue();
  }, "call$0", "initNativeDispatch$closure", 0, 0, null],
  initNativeDispatchContinue: [function() {
    var map, tags, i, tag, proto, record, interceptorClass;
    $.dispatchRecordsForInstanceTags = Object.create(null);
    $.interceptorsForUncacheableTags = Object.create(null);
    H.initHooks();
    map = init.interceptorsByTag;
    tags = Object.getOwnPropertyNames(map);
    if (typeof window != "undefined") {
      window;
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        proto = $.prototypeForTagFunction.call$1(tag);
        if (proto != null) {
          record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
          if (record != null)
            Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        }
      }
    }
    for (i = 0; i < tags.length; ++i) {
      tag = tags[i];
      if (/^[A-Za-z_]/.test(tag)) {
        interceptorClass = map[tag];
        map["!" + tag] = interceptorClass;
        map["~" + tag] = interceptorClass;
        map["-" + tag] = interceptorClass;
        map["+" + tag] = interceptorClass;
        map["*" + tag] = interceptorClass;
      }
    }
  }, "call$0", "initNativeDispatchContinue$closure", 0, 0, null],
  initHooks: [function() {
    var hooks, transformers, i, transformer, getTag, getUnknownTag, prototypeForTag;
    hooks = C.JS_CONST_aQP();
    hooks = H.applyHooksTransformer(C.JS_CONST_0, H.applyHooksTransformer(C.JS_CONST_rr7, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_gkc, H.applyHooksTransformer(C.JS_CONST_U4w, H.applyHooksTransformer(C.JS_CONST_QJm(C.JS_CONST_IX5), hooks)))))));
    if (typeof dartNativeDispatchHooksTransformer != "undefined") {
      transformers = dartNativeDispatchHooksTransformer;
      if (typeof transformers == "function")
        transformers = [transformers];
      if (transformers.constructor == Array)
        for (i = 0; i < transformers.length; ++i) {
          transformer = transformers[i];
          if (typeof transformer == "function")
            hooks = transformer(hooks) || hooks;
        }
    }
    getTag = hooks.getTag;
    getUnknownTag = hooks.getUnknownTag;
    prototypeForTag = hooks.prototypeForTag;
    $.getTagFunction = new H.initHooks_closure(getTag);
    $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);
    $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);
  }, "call$0", "initHooks$closure", 0, 0, null],
  applyHooksTransformer: [function(transformer, hooks) {
    return transformer(hooks) || hooks;
  }, "call$2", "applyHooksTransformer$closure", 4, 0, null, 96, 97],
  allMatchesInStringUnchecked: [function(needle, haystack) {
    var result, $length, patternLength, startIndex, position, endIndex;
    result = H.setRuntimeTypeInfo([], [P.Match]);
    $length = haystack.length;
    patternLength = needle.length;
    for (startIndex = 0; true;) {
      position = C.JSString_methods.indexOf$2(haystack, needle, startIndex);
      if (position === -1)
        break;
      result.push(new H.StringMatch(position, haystack, needle));
      endIndex = position + patternLength;
      if (endIndex === $length)
        break;
      else
        startIndex = position === endIndex ? startIndex + 1 : endIndex;
    }
    return result;
  }, "call$2", "allMatchesInStringUnchecked$closure", 4, 0, null, 102, 103],
  stringContainsUnchecked: [function(receiver, other, startIndex) {
    var t1, t2;
    if (typeof other === "string")
      return C.JSString_methods.indexOf$2(receiver, other, startIndex) !== -1;
    else {
      t1 = J.getInterceptor$s(other);
      if (typeof other === "object" && other !== null && !!t1.$isJSSyntaxRegExp) {
        t1 = C.JSString_methods.substring$1(receiver, startIndex);
        t2 = other._nativeRegExp;
        return t2.test(t1);
      } else
        return J.get$isNotEmpty$asx(t1.allMatches$1(other, C.JSString_methods.substring$1(receiver, startIndex)));
    }
  }, "call$3", "stringContainsUnchecked$closure", 6, 0, null, 41, 104, 80],
  stringReplaceAllUnchecked: [function(receiver, from, to) {
    var result, $length, i, t1, nativeRegexp;
    if (typeof from === "string")
      if (from === "")
        if (receiver === "")
          return to;
        else {
          result = P.StringBuffer$("");
          $length = receiver.length;
          result.write$1(to);
          for (i = 0; i < $length; ++i) {
            t1 = receiver[i];
            t1 = result._contents + t1;
            result._contents = t1;
            result._contents = t1 + to;
          }
          return result._contents;
        }
      else
        return receiver.replace(new RegExp(from.replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), "\\$&"), 'g'), to.replace("$", "$$$$"));
    else {
      t1 = J.getInterceptor(from);
      if (typeof from === "object" && from !== null && !!t1.$isJSSyntaxRegExp) {
        nativeRegexp = from.get$_nativeGlobalVersion();
        nativeRegexp.lastIndex = 0;
        return receiver.replace(nativeRegexp, to.replace("$", "$$$$"));
      } else {
        if (from == null)
          H.throwExpression(new P.ArgumentError(null));
        throw H.wrapException("String.replaceAll(Pattern) UNIMPLEMENTED");
      }
    }
  }, "call$3", "stringReplaceAllUnchecked$closure", 6, 0, null, 41, 105, 106],
  stringReplaceFirstUnchecked: [function(receiver, from, to) {
    var t1;
    if (typeof from === "string")
      return receiver.replace(from, to.replace("$", "$$$$"));
    else {
      t1 = J.getInterceptor(from);
      if (typeof from === "object" && from !== null && !!t1.$isJSSyntaxRegExp)
        return receiver.replace(from._nativeRegExp, to.replace("$", "$$$$"));
      else
        throw H.wrapException("String.replace(Pattern) UNIMPLEMENTED");
    }
  }, "call$3", "stringReplaceFirstUnchecked$closure", 6, 0, null, 41, 105, 106],
  NoSideEffects: {
    "": "Object;"
  },
  NoThrows: {
    "": "Object;"
  },
  NoInline: {
    "": "Object;"
  },
  ConstantMap: {
    "": "Object;",
    get$isEmpty: function(_) {
      return J.$eq(this.get$length(this), 0);
    },
    get$isNotEmpty: function(_) {
      return J.$eq(this.get$length(this), 0) !== true;
    },
    toString$0: [function(_) {
      return P.Maps_mapToString(this);
    }, "call$0", "get$toString", 0, 0, null],
    _throwUnmodifiable$0: [function() {
      throw H.wrapException(P.UnsupportedError$("Cannot modify unmodifiable Map"));
    }, "call$0", "get$_throwUnmodifiable", 0, 0, null],
    $indexSet: [function(_, key, val) {
      return this._throwUnmodifiable$0();
    }, "call$2", "get$[]=", 4, 0, null, 42, 243],
    putIfAbsent$2: [function(key, ifAbsent) {
      return this._throwUnmodifiable$0();
    }, "call$2", "get$putIfAbsent", 4, 0, null, 42, 427],
    remove$1: [function(_, key) {
      return this._throwUnmodifiable$0();
    }, "call$1", "get$remove", 2, 0, null, 42],
    clear$0: [function(_) {
      return this._throwUnmodifiable$0();
    }, "call$0", "get$clear", 0, 0, null],
    addAll$1: [function(_, other) {
      return this._throwUnmodifiable$0();
    }, "call$1", "get$addAll", 2, 0, null, 104],
    $isMap: true
  },
  ConstantStringMap: {
    "": "ConstantMap;length>,__js_helper$_jsObject,__js_helper$_keys",
    containsValue$1: [function(needle) {
      return this.get$values(this).any$1(0, new H.ConstantStringMap_containsValue_closure(this, needle));
    }, "call$1", "get$containsValue", 2, 0, null, 102],
    containsKey$1: [function(key) {
      if (typeof key !== "string")
        return false;
      if (key === "__proto__")
        return false;
      return this.__js_helper$_jsObject.hasOwnProperty(key);
    }, "call$1", "get$containsKey", 2, 0, null, 42],
    $index: [function(_, key) {
      if (typeof key !== "string")
        return;
      if (!this.containsKey$1(key))
        return;
      return this.__js_helper$_jsObject[key];
    }, "call$1", "get$[]", 2, 0, null, 42],
    forEach$1: [function(_, f) {
      J.forEach$1$ax(this.__js_helper$_keys, new H.ConstantStringMap_forEach_closure(this, f));
    }, "call$1", "get$forEach", 2, 0, null, 154],
    get$keys: function() {
      return H.setRuntimeTypeInfo(new H._ConstantMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]);
    },
    get$values: function(_) {
      return H.MappedIterable_MappedIterable(this.__js_helper$_keys, new H.ConstantStringMap_values_closure(this), H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1));
    },
    $isEfficientLength: true
  },
  ConstantStringMap_containsValue_closure: {
    "": "Closure;this_0,needle_1",
    call$1: [function(value) {
      return J.$eq(value, this.needle_1);
    }, "call$1", null, 2, 0, null, 23, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(K, V) {
        return {func: "dynamic__V", args: [V]};
      }, this.this_0, "ConstantStringMap");
    }
  },
  ConstantStringMap_forEach_closure: {
    "": "Closure:271;this_0,f_1",
    call$1: [function(key) {
      return this.f_1.call$2(key, this.this_0.$index(0, key));
    }, "call$1", null, 2, 0, null, 42, "call"],
    $isFunction: true
  },
  ConstantStringMap_values_closure: {
    "": "Closure:271;this_0",
    call$1: [function(key) {
      return this.this_0.$index(0, key);
    }, "call$1", null, 2, 0, null, 42, "call"],
    $isFunction: true
  },
  _ConstantMapKeyIterable: {
    "": "IterableBase;__js_helper$_map",
    get$iterator: function(_) {
      return J.get$iterator$ax(this.__js_helper$_map.__js_helper$_keys);
    }
  },
  JSInvocationMirror: {
    "": "Object;__js_helper$_memberName,_internalName,_kind,_arguments,_namedArgumentNames,_namedIndices",
    get$memberName: function() {
      var $name, t1, unmangledName;
      $name = this.__js_helper$_memberName;
      t1 = J.getInterceptor($name);
      if (typeof $name === "object" && $name !== null && !!t1.$isSymbol)
        return $name;
      unmangledName = $.get$mangledNames().$index(0, $name);
      if (unmangledName != null) {
        t1 = J.split$1$s(unmangledName, ":");
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        $name = t1[0];
      }
      t1 = new H.Symbol0($name);
      this.__js_helper$_memberName = t1;
      return t1;
    },
    get$isMethod: function(_) {
      return this._kind === 0;
    },
    get$isGetter: function() {
      return this._kind === 1;
    },
    get$isSetter: function() {
      return this._kind === 2;
    },
    get$positionalArguments: function() {
      var t1, argumentCount, list, index;
      if (this._kind === 1)
        return C.List_empty;
      t1 = this._arguments;
      argumentCount = t1.length - this._namedArgumentNames.length;
      if (argumentCount === 0)
        return C.List_empty;
      list = [];
      for (index = 0; index < argumentCount; ++index) {
        if (index >= t1.length)
          return H.ioore(t1, index);
        list.push(t1[index]);
      }
      list.immutable$list = true;
      list.fixed$length = true;
      return list;
    },
    get$namedArguments: function() {
      var t1, namedArgumentCount, t2, namedArgumentsStartIndex, map, i, t3, t4;
      if (this._kind !== 0)
        return H.setRuntimeTypeInfo(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [P.Symbol, null]);
      t1 = this._namedArgumentNames;
      namedArgumentCount = t1.length;
      t2 = this._arguments;
      namedArgumentsStartIndex = t2.length - namedArgumentCount;
      if (namedArgumentCount === 0)
        return H.setRuntimeTypeInfo(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [P.Symbol, null]);
      map = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol, null);
      for (i = 0; i < namedArgumentCount; ++i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        t3 = t1[i];
        t4 = namedArgumentsStartIndex + i;
        if (t4 < 0 || t4 >= t2.length)
          return H.ioore(t2, t4);
        map.$indexSet(0, new H.Symbol0(t3), t2[t4]);
      }
      return map;
    },
    _getCachedInvocation$1: [function(object) {
      var interceptor, $name, isIntercepted, interceptor0, receiver, method, baseName, isCatchAll;
      interceptor = J.getInterceptor(object);
      $name = this._internalName;
      isIntercepted = $.interceptedNames.indexOf($name) !== -1;
      if (isIntercepted) {
        interceptor0 = object === interceptor ? null : interceptor;
        receiver = interceptor;
        interceptor = interceptor0;
      } else {
        receiver = object;
        interceptor = null;
      }
      method = receiver[$name];
      if (typeof method != "function") {
        baseName = J.get$_name$x(this.get$memberName());
        method = receiver[baseName + "*"];
        if (method == null) {
          interceptor = J.getInterceptor(object);
          method = interceptor[baseName + "*"];
          if (method != null)
            isIntercepted = true;
          else
            interceptor = null;
        }
        isCatchAll = true;
      } else
        isCatchAll = false;
      if (typeof method == "function") {
        if (!("$reflectable" in method))
          H.throwInvalidReflectionError(J.get$_name$x(this.get$memberName()));
        if (isCatchAll)
          return new H.CachedCatchAllInvocation(H.ReflectionInfo_ReflectionInfo(method), method, isIntercepted, interceptor);
        else
          return new H.CachedInvocation(method, isIntercepted, interceptor);
      } else
        return new H.CachedNoSuchMethodInvocation(interceptor);
    }, "call$1", "get$_getCachedInvocation", 2, 0, null, 6],
    static: {"": "JSInvocationMirror_METHOD,JSInvocationMirror_GETTER,JSInvocationMirror_SETTER"}
  },
  CachedInvocation: {
    "": "Object;jsFunction,isIntercepted,cachedInterceptor",
    get$isNoSuchMethod: function() {
      return false;
    },
    invokeOn$2: [function(victim, $arguments) {
      var receiver, arguments0;
      if (!this.isIntercepted) {
        if (typeof $arguments !== "object" || $arguments === null || $arguments.constructor !== Array)
          $arguments = P.List_List$from($arguments, true, null);
        receiver = victim;
      } else {
        arguments0 = [victim];
        C.JSArray_methods.addAll$1(arguments0, $arguments);
        receiver = this.cachedInterceptor;
        receiver = receiver != null ? receiver : victim;
        $arguments = arguments0;
      }
      return this.jsFunction.apply(receiver, $arguments);
    }, "call$2", "get$invokeOn", 4, 0, null, 183, 82]
  },
  CachedCatchAllInvocation: {
    "": "CachedInvocation;info,jsFunction,isIntercepted,cachedInterceptor",
    info$1: function(arg0) {
      return this.info.call$1(arg0);
    },
    invokeOn$2: [function(victim, $arguments) {
      var providedArgumentCount, receiver, arguments0, t1, t2, fullParameterCount, i;
      if (!this.isIntercepted) {
        if (typeof $arguments !== "object" || $arguments === null || $arguments.constructor !== Array)
          $arguments = P.List_List$from($arguments, true, null);
        providedArgumentCount = J.get$length$asx($arguments);
        receiver = victim;
      } else {
        arguments0 = [victim];
        C.JSArray_methods.addAll$1(arguments0, $arguments);
        receiver = this.cachedInterceptor;
        receiver = receiver != null ? receiver : victim;
        providedArgumentCount = arguments0.length - 1;
        $arguments = arguments0;
      }
      t1 = this.info;
      t2 = t1.requiredParameterCount;
      fullParameterCount = t2 + t1.optionalParameterCount;
      if (t1.areOptionalParametersNamed && providedArgumentCount > t2)
        throw H.wrapException(H.UnimplementedNoSuchMethodError$("Invocation of unstubbed method '" + t1.get$reflectionName() + "' with " + J.get$length$asx($arguments) + " arguments."));
      else if (providedArgumentCount < t2)
        throw H.wrapException(H.UnimplementedNoSuchMethodError$("Invocation of unstubbed method '" + t1.get$reflectionName() + "' with " + providedArgumentCount + " arguments (too few)."));
      else if (providedArgumentCount > fullParameterCount)
        throw H.wrapException(H.UnimplementedNoSuchMethodError$("Invocation of unstubbed method '" + t1.get$reflectionName() + "' with " + providedArgumentCount + " arguments (too many)."));
      for (t2 = J.getInterceptor$ax($arguments), i = providedArgumentCount; i < fullParameterCount; ++i)
        t2.add$1($arguments, init.metadata[t1.defaultValue$1(0, i)]);
      return this.jsFunction.apply(receiver, $arguments);
    }, "call$2", "get$invokeOn", 4, 0, null, 183, 82]
  },
  CachedNoSuchMethodInvocation: {
    "": "Object;interceptor",
    get$isNoSuchMethod: function() {
      return true;
    },
    invokeOn$2: [function(victim, invocation) {
      var receiver = this.interceptor;
      return J.noSuchMethod$1(receiver == null ? victim : receiver, invocation);
    }, "call$2", "get$invokeOn", 4, 0, null, 183, 410]
  },
  ReflectionInfo: {
    "": "Object;jsFunction,data,isAccessor,requiredParameterCount,optionalParameterCount,areOptionalParametersNamed,functionType",
    defaultValue$1: [function(_, parameter) {
      var t1 = this.requiredParameterCount;
      if (parameter < t1)
        return;
      return this.data[3 + parameter - t1];
    }, "call$1", "get$defaultValue", 2, 0, 428, 429],
    computeFunctionRti$1: [function(jsConstructor) {
      var t1, fakeInstance;
      t1 = this.functionType;
      if (typeof t1 == "number")
        return init.metadata[t1];
      else if (typeof t1 == "function") {
        fakeInstance = new jsConstructor();
        H.setRuntimeTypeInfo(fakeInstance, fakeInstance["<>"]);
        return t1.apply({$receiver:fakeInstance});
      } else
        throw H.wrapException(H.RuntimeError$("Unexpected function type"));
    }, "call$1", "get$computeFunctionRti", 2, 0, null, 430],
    get$reflectionName: function() {
      return this.jsFunction.$reflectionName;
    },
    static: {"": "ReflectionInfo_REQUIRED_PARAMETERS_INFO,ReflectionInfo_OPTIONAL_PARAMETERS_INFO,ReflectionInfo_FUNCTION_TYPE_INDEX,ReflectionInfo_FIRST_DEFAULT_ARGUMENT", ReflectionInfo_ReflectionInfo: function(jsFunction) {
        var data, requiredParametersInfo, requiredParameterCount, optionalParametersInfo;
        data = jsFunction.$reflectionInfo;
        if (data == null)
          return;
        data.fixed$length = init;
        data = data;
        requiredParametersInfo = data[0];
        requiredParameterCount = requiredParametersInfo >> 1;
        optionalParametersInfo = data[1];
        return new H.ReflectionInfo(jsFunction, data, (requiredParametersInfo & 1) === 1, requiredParameterCount, optionalParametersInfo >> 1, (optionalParametersInfo & 1) === 1, data[2]);
      }}
  },
  Primitives_functionNoSuchMethod_closure: {
    "": "Closure:431;box_0,arguments_1,namedArgumentList_2",
    call$2: [function($name, argument) {
      var t1 = this.box_0;
      t1.names_1 = t1.names_1 + "$" + H.S($name);
      this.namedArgumentList_2.push($name);
      this.arguments_1.push(argument);
      t1.argumentCount_0 = t1.argumentCount_0 + 1;
    }, "call$2", null, 4, 0, null, 12, 46, "call"],
    $isFunction: true
  },
  Primitives_applyFunction_closure: {
    "": "Closure:431;box_0,defaultArguments_1",
    call$2: [function(parameter, value) {
      var t1 = this.defaultArguments_1;
      if (t1.containsKey$1(parameter))
        t1.$indexSet(0, parameter, value);
      else
        this.box_0.bad_0 = true;
    }, "call$2", null, 4, 0, null, 429, 23, "call"],
    $isFunction: true
  },
  TypeErrorDecoder: {
    "": "Object;_pattern,_arguments,_argumentsExpr,_expr,_method,_receiver",
    matchTypeError$1: [function(message) {
      var match, result, t1;
      match = new RegExp(this._pattern).exec(message);
      if (match == null)
        return;
      result = {};
      t1 = this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }, "call$1", "get$matchTypeError", 2, 0, null, 20],
    static: {"": "TypeErrorDecoder_noSuchMethodPattern,TypeErrorDecoder_notClosurePattern,TypeErrorDecoder_nullCallPattern,TypeErrorDecoder_nullLiteralCallPattern,TypeErrorDecoder_undefinedCallPattern,TypeErrorDecoder_undefinedLiteralCallPattern,TypeErrorDecoder_nullPropertyPattern,TypeErrorDecoder_nullLiteralPropertyPattern,TypeErrorDecoder_undefinedPropertyPattern,TypeErrorDecoder_undefinedLiteralPropertyPattern", TypeErrorDecoder_extractPattern: [function(message) {
        var match, $arguments, argumentsExpr, expr, method, receiver;
        message = message.replace(String({}), '$receiver$').replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), '\\$&');
        match = message.match(/\\\$[a-zA-Z]+\\\$/g);
        if (match == null)
          match = [];
        $arguments = match.indexOf("\\$arguments\\$");
        argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
        expr = match.indexOf("\\$expr\\$");
        method = match.indexOf("\\$method\\$");
        receiver = match.indexOf("\\$receiver\\$");
        return new H.TypeErrorDecoder(message.replace('\\$arguments\\$', '((?:x|[^x])*)').replace('\\$argumentsExpr\\$', '((?:x|[^x])*)').replace('\\$expr\\$', '((?:x|[^x])*)').replace('\\$method\\$', '((?:x|[^x])*)').replace('\\$receiver\\$', '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
      }, "call$1", "TypeErrorDecoder_extractPattern$closure", 2, 0, null, 20], TypeErrorDecoder_provokeCallErrorOn: [function(expression) {
        return function($expr$) {
  var $argumentsExpr$ = '$arguments$'
  try {
    $expr$.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}(expression);
      }, "call$1", "TypeErrorDecoder_provokeCallErrorOn$closure", 2, 0, null, 49], TypeErrorDecoder_provokePropertyErrorOn: [function(expression) {
        return function($expr$) {
  try {
    $expr$.$method$;
  } catch (e) {
    return e.message;
  }
}(expression);
      }, "call$1", "TypeErrorDecoder_provokePropertyErrorOn$closure", 2, 0, null, 49]}
  },
  NullError: {
    "": "Error;_message,_method",
    toString$0: [function(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NullError: " + H.S(this._message);
      return "NullError: Cannot call \"" + H.S(t1) + "\" on null";
    }, "call$0", "get$toString", 0, 0, null],
    $isNoSuchMethodError: true,
    $isError: true
  },
  JsNoSuchMethodError: {
    "": "Error;_message,_method,_receiver",
    toString$0: [function(_) {
      var t1, t2;
      t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + H.S(this._message);
      t2 = this._receiver;
      if (t2 == null)
        return "NoSuchMethodError: Cannot call \"" + t1 + "\" (" + H.S(this._message) + ")";
      return "NoSuchMethodError: Cannot call \"" + t1 + "\" on \"" + t2 + "\" (" + H.S(this._message) + ")";
    }, "call$0", "get$toString", 0, 0, null],
    $isNoSuchMethodError: true,
    $isError: true,
    static: {JsNoSuchMethodError$: function(_message, match) {
        var t1, t2;
        t1 = match == null;
        t2 = t1 ? null : match.method;
        t1 = t1 ? null : match.receiver;
        return new H.JsNoSuchMethodError(_message, t2, t1);
      }}
  },
  UnknownJsTypeError: {
    "": "Error;_message",
    toString$0: [function(_) {
      var t1 = this._message;
      return C.JSString_methods.get$isEmpty(t1) ? "Error" : "Error: " + t1;
    }, "call$0", "get$toString", 0, 0, null]
  },
  unwrapException_saveStackTrace: {
    "": "Closure:271;ex_0",
    call$1: [function(error) {
      var t1 = J.getInterceptor(error);
      if (typeof error === "object" && error !== null && !!t1.$isError)
        if (error.$thrownJsError == null)
          error.$thrownJsError = this.ex_0;
      return error;
    }, "call$1", null, 2, 0, null, 188, "call"],
    $isFunction: true
  },
  _StackTrace: {
    "": "Object;_exception,_trace",
    toString$0: [function(_) {
      var t1, trace;
      t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = typeof t1 === "object" ? t1.stack : null;
      t1 = trace == null ? "" : trace;
      this._trace = t1;
      return t1;
    }, "call$0", "get$toString", 0, 0, null]
  },
  invokeClosure_closure: {
    "": "Closure:108;closure_0",
    call$0: [function() {
      return this.closure_0.call$0();
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  invokeClosure_closure0: {
    "": "Closure:108;closure_1,arg1_2",
    call$0: [function() {
      return this.closure_1.call$1(this.arg1_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  invokeClosure_closure1: {
    "": "Closure:108;closure_3,arg1_4,arg2_5",
    call$0: [function() {
      return this.closure_3.call$2(this.arg1_4, this.arg2_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  invokeClosure_closure2: {
    "": "Closure:108;closure_6,arg1_7,arg2_8,arg3_9",
    call$0: [function() {
      return this.closure_6.call$3(this.arg1_7, this.arg2_8, this.arg3_9);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  invokeClosure_closure3: {
    "": "Closure:108;closure_10,arg1_11,arg2_12,arg3_13,arg4_14",
    call$0: [function() {
      return this.closure_10.call$4(this.arg1_11, this.arg2_12, this.arg3_13, this.arg4_14);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Closure: {
    "": "Object;",
    toString$0: [function(_) {
      return "Closure";
    }, "call$0", "get$toString", 0, 0, null],
    $isClosure: true,
    $isFunction: true
  },
  TearOffClosure: {
    "": "Closure;"
  },
  BoundClosure: {
    "": "TearOffClosure;_self,__js_helper$_target,_receiver,__js_helper$_name",
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isBoundClosure)
        return false;
      return this._self === other._self && this.__js_helper$_target === other.__js_helper$_target && this._receiver === other._receiver;
    }, "call$1", "get$==", 2, 0, null, 104],
    get$hashCode: function(_) {
      var t1, receiverHashCode;
      t1 = this._receiver;
      if (t1 == null)
        receiverHashCode = H.Primitives_objectHashCode(this._self);
      else
        receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
      return J.$xor$n(receiverHashCode, H.Primitives_objectHashCode(this.__js_helper$_target));
    },
    $isBoundClosure: true,
    static: {"": "BoundClosure_selfFieldNameCache,BoundClosure_receiverFieldNameCache", BoundClosure_selfOf: [function(closure) {
        return closure._self;
      }, "call$1", "BoundClosure_selfOf$closure", 2, 0, null, 52], BoundClosure_receiverOf: [function(closure) {
        return closure._receiver;
      }, "call$1", "BoundClosure_receiverOf$closure", 2, 0, null, 52], BoundClosure_selfFieldName: [function() {
        var t1 = $.BoundClosure_selfFieldNameCache;
        if (t1 == null) {
          t1 = H.BoundClosure_computeFieldNamed("self");
          $.BoundClosure_selfFieldNameCache = t1;
        }
        return t1;
      }, "call$0", "BoundClosure_selfFieldName$closure", 0, 0, null], BoundClosure_receiverFieldName: [function() {
        var t1 = $.BoundClosure_receiverFieldNameCache;
        if (t1 == null) {
          t1 = H.BoundClosure_computeFieldNamed("receiver");
          $.BoundClosure_receiverFieldNameCache = t1;
        }
        return t1;
      }, "call$0", "BoundClosure_receiverFieldName$closure", 0, 0, null], BoundClosure_computeFieldNamed: [function(fieldName) {
        var template, t1, names, i, $name;
        template = new H.BoundClosure("self", "target", "receiver", "name");
        t1 = Object.getOwnPropertyNames(template);
        t1.fixed$length = init;
        names = t1;
        for (t1 = names.length, i = 0; i < t1; ++i) {
          $name = names[i];
          if (template[$name] === fieldName)
            return $name;
        }
      }, "call$1", "BoundClosure_computeFieldNamed$closure", 2, 0, null, 65]}
  },
  Creates: {
    "": "Object;types"
  },
  Returns: {
    "": "Object;types"
  },
  JSName: {
    "": "Object;name>"
  },
  CastErrorImplementation: {
    "": "Error;message>",
    toString$0: [function(_) {
      return this.message;
    }, "call$0", "get$toString", 0, 0, null],
    $isError: true,
    static: {CastErrorImplementation$: function(actualType, expectedType) {
        return new H.CastErrorImplementation("CastError: Casting value of type " + actualType + " to incompatible type " + H.S(expectedType));
      }}
  },
  RuntimeError: {
    "": "Error;message>",
    toString$0: [function(_) {
      return "RuntimeError: " + H.S(this.message);
    }, "call$0", "get$toString", 0, 0, null],
    static: {RuntimeError$: function(message) {
        return new H.RuntimeError(message);
      }}
  },
  RuntimeType: {
    "": "Object;"
  },
  RuntimeFunctionType: {
    "": "RuntimeType;returnType,parameterTypes,optionalParameterTypes,namedParameters",
    _isTest$1: [function(expression) {
      var functionTypeObject = this._extractFunctionTypeObjectFrom$1(expression);
      return functionTypeObject == null ? false : H.isFunctionSubtype(functionTypeObject, this.toRti$0());
    }, "call$1", "get$_isTest", 2, 0, null, 49],
    _extractFunctionTypeObjectFrom$1: [function(o) {
      var interceptor = J.getInterceptor(o);
      return "$signature" in interceptor ? interceptor.$signature() : null;
    }, "call$1", "get$_extractFunctionTypeObjectFrom", 2, 0, null, 91],
    toRti$0: [function() {
      var result, t1, t2, namedRti, keys, i, $name;
      result = { "func": "dynafunc" };
      t1 = this.returnType;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isVoidRuntimeType)
        result.void = true;
      else if (typeof t1 !== "object" || t1 === null || !t2.$isDynamicRuntimeType)
        result.ret = t1.toRti$0();
      t1 = this.parameterTypes;
      if (t1 != null && t1.length !== 0)
        result.args = H.RuntimeFunctionType_listToRti(t1);
      t1 = this.optionalParameterTypes;
      if (t1 != null && t1.length !== 0)
        result.opt = H.RuntimeFunctionType_listToRti(t1);
      t1 = this.namedParameters;
      if (t1 != null) {
        namedRti = {};
        keys = H.extractKeys(t1);
        for (t2 = keys.length, i = 0; i < t2; ++i) {
          $name = keys[i];
          namedRti[$name] = t1[$name].toRti$0();
        }
        result.named = namedRti;
      }
      return result;
    }, "call$0", "get$toRti", 0, 0, null],
    toString$0: [function(_) {
      var t1, t2, result, needsComma, i, type, keys, $name;
      t1 = this.parameterTypes;
      if (t1 != null)
        for (t2 = t1.length, result = "(", needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
          type = t1[i];
          if (needsComma)
            result += ", ";
          result += H.S(type);
        }
      else {
        result = "(";
        needsComma = false;
      }
      t1 = this.optionalParameterTypes;
      if (t1 != null && t1.length !== 0) {
        result = (needsComma ? result + ", " : result) + "[";
        for (t2 = t1.length, needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
          type = t1[i];
          if (needsComma)
            result += ", ";
          result += H.S(type);
        }
        result += "]";
      } else {
        t1 = this.namedParameters;
        if (t1 != null) {
          result = (needsComma ? result + ", " : result) + "{";
          keys = H.extractKeys(t1);
          for (t2 = keys.length, needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
            $name = keys[i];
            if (needsComma)
              result += ", ";
            result += H.S(t1[$name].toRti$0()) + " " + $name;
          }
          result += "}";
        }
      }
      return result + (") -> " + H.S(this.returnType));
    }, "call$0", "get$toString", 0, 0, null],
    static: {"": "RuntimeFunctionType_inAssert", RuntimeFunctionType_listToRti: [function(list) {
        var result, t1, i;
        list = list;
        result = [];
        for (t1 = list.length, i = 0; i < t1; ++i)
          result.push(list[i].toRti$0());
        return result;
      }, "call$1", "RuntimeFunctionType_listToRti$closure", 2, 0, null, 68]}
  },
  DynamicRuntimeType: {
    "": "RuntimeType;",
    toString$0: [function(_) {
      return "dynamic";
    }, "call$0", "get$toString", 0, 0, null],
    toRti$0: [function() {
      return;
    }, "call$0", "get$toRti", 0, 0, null],
    $isDynamicRuntimeType: true
  },
  RuntimeTypePlain: {
    "": "RuntimeType;name>",
    toRti$0: [function() {
      var t1, rti;
      t1 = this.name;
      rti = init.allClasses[t1];
      if (rti == null)
        throw H.wrapException("no type for '" + t1 + "'");
      return rti;
    }, "call$0", "get$toRti", 0, 0, null],
    toString$0: [function(_) {
      return this.name;
    }, "call$0", "get$toString", 0, 0, null]
  },
  RuntimeTypeGeneric: {
    "": "RuntimeType;name>,arguments<,rti",
    toRti$0: [function() {
      var t1, result;
      t1 = this.rti;
      if (t1 != null)
        return t1;
      t1 = this.name;
      result = [init.allClasses[t1]];
      if (0 >= result.length)
        return H.ioore(result, 0);
      if (result[0] == null)
        throw H.wrapException("no type for '" + t1 + "<...>'");
      for (t1 = this.arguments, t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();)
        result.push(t1._current.toRti$0());
      this.rti = result;
      return result;
    }, "call$0", "get$toRti", 0, 0, null],
    toString$0: [function(_) {
      return this.name + "<" + J.join$1$ax(this.arguments, ", ") + ">";
    }, "call$0", "get$toString", 0, 0, null]
  },
  UnimplementedNoSuchMethodError: {
    "": "Error;_message",
    toString$0: [function(_) {
      return "Unsupported operation: " + this._message;
    }, "call$0", "get$toString", 0, 0, null],
    $isNoSuchMethodError: true,
    $isError: true,
    static: {UnimplementedNoSuchMethodError$: function(_message) {
        return new H.UnimplementedNoSuchMethodError(_message);
      }}
  },
  TypeImpl: {
    "": "Object;_typeName<,_unmangledName",
    toString$0: [function(_) {
      var t1, unmangledName, unmangledName0;
      t1 = this._unmangledName;
      if (t1 != null)
        return t1;
      unmangledName = this._typeName;
      unmangledName0 = init.mangledGlobalNames[unmangledName];
      unmangledName = unmangledName0 == null ? unmangledName : unmangledName0;
      this._unmangledName = unmangledName;
      return unmangledName;
    }, "call$0", "get$toString", 0, 0, null],
    get$hashCode: function(_) {
      return J.get$hashCode$(this._typeName);
    },
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$isTypeImpl && J.$eq(this._typeName, other._typeName) === true;
    }, "call$1", "get$==", 2, 0, null, 104],
    $isTypeImpl: true,
    $isType: true
  },
  TypeVariable: {
    "": "Object;owner<,name>,bound>"
  },
  initHooks_closure: {
    "": "Closure:271;getTag_0",
    call$1: [function(o) {
      return this.getTag_0(o);
    }, "call$1", null, 2, 0, null, 91, "call"],
    $isFunction: true
  },
  initHooks_closure0: {
    "": "Closure:432;getUnknownTag_1",
    call$2: [function(o, tag) {
      return this.getUnknownTag_1(o, tag);
    }, "call$2", null, 4, 0, null, 91, 94, "call"],
    $isFunction: true
  },
  initHooks_closure1: {
    "": "Closure:25;prototypeForTag_2",
    call$1: [function(tag) {
      return this.prototypeForTag_2(tag);
    }, "call$1", null, 2, 0, null, 94, "call"],
    $isFunction: true
  },
  JSSyntaxRegExp: {
    "": "Object;_nativeRegExp,_nativeGlobalRegExp,_nativeAnchoredRegExp",
    get$_nativeGlobalVersion: function() {
      var t1 = this._nativeGlobalRegExp;
      if (t1 != null)
        return t1;
      t1 = this._nativeRegExp;
      t1 = H.JSSyntaxRegExp_makeNative(t1.source, t1.multiline, !t1.ignoreCase, true);
      this._nativeGlobalRegExp = t1;
      return t1;
    },
    get$_nativeAnchoredVersion: function() {
      var t1 = this._nativeAnchoredRegExp;
      if (t1 != null)
        return t1;
      t1 = this._nativeRegExp;
      t1 = H.JSSyntaxRegExp_makeNative(t1.source + "|()", t1.multiline, !t1.ignoreCase, true);
      this._nativeAnchoredRegExp = t1;
      return t1;
    },
    firstMatch$1: [function(str) {
      var m;
      if (typeof str !== "string")
        H.throwExpression(new P.ArgumentError(str));
      m = this._nativeRegExp.exec(str);
      if (m == null)
        return;
      return H._MatchImplementation$(this, m);
    }, "call$1", "get$firstMatch", 2, 0, null, 417],
    hasMatch$1: [function(str) {
      if (typeof str !== "string")
        H.throwExpression(new P.ArgumentError(str));
      return this._nativeRegExp.test(str);
    }, "call$1", "get$hasMatch", 2, 0, null, 417],
    allMatches$1: [function(_, str) {
      if (typeof str !== "string")
        H.throwExpression(new P.ArgumentError(str));
      return new H._AllMatchesIterable(this, str);
    }, "call$1", "get$allMatches", 2, 0, null, 417],
    _execGlobal$2: [function(string, start) {
      var regexp, match;
      regexp = this.get$_nativeGlobalVersion();
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return;
      return H._MatchImplementation$(this, match);
    }, "call$2", "get$_execGlobal", 4, 0, null, 26, 161],
    _execAnchored$2: [function(string, start) {
      var regexp, match, t1, t2;
      regexp = this.get$_nativeAnchoredVersion();
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return;
      t1 = match.length;
      t2 = t1 - 1;
      if (t2 < 0)
        return H.ioore(match, t2);
      if (match[t2] != null)
        return;
      J.set$length$asx(match, t2);
      return H._MatchImplementation$(this, match);
    }, "call$2", "get$_execAnchored", 4, 0, null, 26, 161],
    matchAsPrefix$2: [function(_, string, start) {
      var t1;
      if (!(start < 0)) {
        t1 = J.get$length$asx(string);
        if (typeof t1 !== "number")
          return H.iae(t1);
        t1 = start > t1;
      } else
        t1 = true;
      if (t1)
        throw H.wrapException(P.RangeError$range(start, 0, J.get$length$asx(string)));
      return this._execAnchored$2(string, start);
    }, function($receiver, string) {
      return this.matchAsPrefix$2($receiver, string, 0);
    }, "matchAsPrefix$1", "call$2", null, "get$matchAsPrefix", 2, 2, null, 413, 26, 161],
    $isJSSyntaxRegExp: true,
    $isRegExp: true,
    static: {JSSyntaxRegExp_makeNative: [function(pattern, multiLine, caseSensitive, global) {
        var m, i, g, regexp, errorMessage;
        m = multiLine ? "m" : "";
        i = caseSensitive ? "" : "i";
        g = global ? "g" : "";
        regexp = (function() {try {return new RegExp(pattern, m + i + g);} catch (e) {return e;}})();
        if (regexp instanceof RegExp)
          return regexp;
        errorMessage = String(regexp);
        throw H.wrapException(P.FormatException$("Illegal RegExp pattern: " + pattern + ", " + errorMessage));
      }, "call$4", "JSSyntaxRegExp_makeNative$closure", 8, 0, null, 98, 99, 100, 101]}
  },
  _MatchImplementation: {
    "": "Object;pattern,_match",
    $index: [function(_, index) {
      var t1 = this._match;
      if (index >>> 0 !== index || index >= t1.length)
        return H.ioore(t1, index);
      return t1[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    _MatchImplementation$2: function(pattern, _match) {
    },
    $isMatch: true,
    static: {_MatchImplementation$: function(pattern, _match) {
        var t1 = new H._MatchImplementation(pattern, _match);
        t1._MatchImplementation$2(pattern, _match);
        return t1;
      }}
  },
  _AllMatchesIterable: {
    "": "IterableBase;_re,_string",
    get$iterator: function(_) {
      return new H._AllMatchesIterator(this._re, this._string, null);
    },
    $asIterableBase: function() {
      return [P.Match];
    },
    $asIterable: function() {
      return [P.Match];
    }
  },
  _AllMatchesIterator: {
    "": "Object;_regExp,_string,__js_helper$_current",
    get$current: function() {
      return this.__js_helper$_current;
    },
    moveNext$0: [function() {
      var t1, t2, index;
      if (this._string == null)
        return false;
      t1 = this.__js_helper$_current;
      if (t1 != null) {
        t1 = t1._match;
        t2 = t1.index;
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        t1 = J.get$length$asx(t1[0]);
        if (typeof t1 !== "number")
          return H.iae(t1);
        index = t2 + t1;
        if (this.__js_helper$_current._match.index === index)
          ++index;
      } else
        index = 0;
      t1 = this._regExp._execGlobal$2(this._string, index);
      this.__js_helper$_current = t1;
      if (t1 == null) {
        this._string = null;
        return false;
      }
      return true;
    }, "call$0", "get$moveNext", 0, 0, null]
  },
  StringMatch: {
    "": "Object;start,input,pattern",
    $index: [function(_, g) {
      if (J.$eq(g, 0) !== true)
        H.throwExpression(P.RangeError$value(g));
      return this.pattern;
    }, "call$1", "get$[]", 2, 0, null, 433],
    $isMatch: true
  }
}],
["app_bootstrap", "index.html_bootstrap.dart", , E, {
  "": "",
  main0: [function() {
    $._librariesToLoad = ["comment.dart", "parameters.dart", "item.dart", "annotations.dart", "link.dart", "type.dart", "variable-heading.dart", "variable.dart", "method.dart", "typedef.dart", "category.dart", "minimap-element.dart", "homepage.dart", "class.dart", "library.dart", "page.dart", "results.dart", "search.dart", "minimap-library.dart", "library-panel.dart", "minimap-class.dart", "breadcrumbs.dart", "main.dart", "app.dart"];
    $._useDirtyChecking = false;
    A.initPolymer();
  }, "call$0", "main0$closure", 0, 0, 107]
},
1],
["category_item", "package:dartdoc_viewer/item.dart", , E, {
  "": "",
  nothing: [function() {
    return;
  }, "call$0", "nothing$closure", 0, 0, 108],
  _wrapComment: [function(comment) {
    return "<div>" + H.S(comment == null ? "" : comment) + "</div>";
  }, "call$1", "_wrapComment$closure", 2, 0, null, 110],
  _sort: [function(items) {
    J.forEach$1$ax(items, new E._sort_closure());
  }, "call$1", "_sort$closure", 2, 0, 130, 131, "_sort", 132],
  _compareLibraryNames: [function(a, b) {
    var t1, aIsDart;
    t1 = J.getInterceptor$s(a);
    aIsDart = t1.startsWith$1(a, "dart");
    if (aIsDart === J.startsWith$1$s(b, "dart"))
      return t1.compareTo$1(a, b);
    return aIsDart ? -1 : 1;
  }, "call$2", "_compareLibraryNames$closure", 4, 0, null, 133, 134],
  buildHierarchy: [function(page, previous) {
    var t1, t2;
    t1 = J.getInterceptor$x(page);
    if (J.get$isEmpty$asx(t1.get$path(page)) === true) {
      t1 = t1.get$path(page);
      t2 = J.getInterceptor$ax(t1);
      t2.addAll$1(t1, J.get$path$x(previous));
      t2.add$1(t1, page);
    }
    page.addToHierarchy$0();
  }, "call$2", "buildHierarchy$closure", 4, 0, 135, 136, 137, "buildHierarchy", 132],
  _boolFor: [function(key, input) {
    var value, t1;
    value = J.$index$asx(input, key);
    t1 = J.getInterceptor(value);
    if (t1.$eq(value, true) === true || t1.$eq(value, "true") === true)
      return true;
    if (value == null || t1.$eq(value, false) === true || t1.$eq(value, "false") === true)
      return false;
    throw H.wrapException(P.FormatException$("Invalid format, expected boolean key: " + key + " value: " + H.S(value)));
  }, "call$2", "_boolFor$closure", 4, 0, null, 42, 152],
  Container: {
    "": "ChangeNotifier;name>-434,_category_item$__$comment@-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records",
    get$comment: [function() {
      return this._category_item$__$comment;
    }, null, null, 1, 0, 435, "comment", 132, 436],
    set$comment: [function(value) {
      this._category_item$__$comment = F.notifyPropertyChangeHelper(this, C.Symbol_comment, this._category_item$__$comment, value);
    }, null, null, 3, 0, 25, 23, "comment", 132],
    get$hasComment: [function() {
      return !(J.$eq(this._category_item$__$comment, "<span></span>") === true || J.$eq(this._category_item$__$comment, "<div></div>") === true);
    }, null, null, 1, 0, 437, "hasComment"],
    get$hasNoComment: [function() {
      return J.$eq(this._category_item$__$comment, "<span></span>") === true || J.$eq(this._category_item$__$comment, "<div></div>") === true;
    }, null, null, 1, 0, 437, "hasNoComment"],
    toString$0: [function(_) {
      return H.S(new H.TypeImpl(H.getRuntimeTypeString(this), null)) + "(" + H.S(this.name) + ")";
    }, "call$0", "get$toString", 0, 0, 435, "toString"],
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {Container$: [function($name, comment) {
        return new E.Container($name, comment, null, null);
      }, null, null, 2, 2, 109, 77, 12, 110, "new Container" /* new Container:2:0 */]}
  },
  "+Container": [438],
  Category: {
    "": "Container;content*-439,memberNames@-440,inheritedCounter@-441,memberCounter@-441,name-434,_category_item$__$comment-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records",
    memberNamed$2$orElse: [function($name, orElse) {
      return J.firstWhere$2$orElse$ax(this.content, new E.Category_memberNamed_closure($name), orElse);
    }, function(name) {
      return this.memberNamed$2$orElse(name, E.nothing$closure());
    }, "memberNamed$1", "call$2$orElse", null, "get$memberNamed", 2, 3, 442, 443, 12, 158, "memberNamed"],
    addInheritedItem$2: [function(clazz, item) {
      if (J.contains$1$asx(this.memberNames, J.get$name$x(item)) !== true) {
        this.memberCounter = J.$add$ns(this.memberCounter, 1);
        this.inheritedCounter = J.$add$ns(this.inheritedCounter, 1);
        J.add$1$ax(this.content, item);
      } else
        J.firstWhere$1$ax(this.content, new E.Category_addInheritedItem_closure(item)).addInheritedComment$1(item);
    }, "call$2", "get$addInheritedItem", 4, 0, 444, 445, 446, "addInheritedItem"],
    get$hasNonInherited: [function() {
      return J.$lt$n(this.inheritedCounter, this.memberCounter);
    }, null, null, 1, 0, 437, "hasNonInherited"],
    filteredContent$1: [function(filter) {
      if (filter.get$shouldShowEverything())
        return this.content;
      return J.where$1$ax(this.content, new E.Category_filteredContent_closure(filter)).toList$0(0);
    }, "call$1", "get$filteredContent", 2, 0, 447, 338, "filteredContent"],
    Category$forInstanceMembers$2: [function(members, $name) {
      var t1, member, t2;
      for (t1 = J.get$iterator$ax(members); t1.moveNext$0();) {
        member = t1.get$current();
        if (member.get$isStatic() !== true) {
          t2 = J.getInterceptor$x(member);
          J.add$1$ax(this.memberNames, t2.get$name(member));
          this.memberCounter = J.$add$ns(this.memberCounter, 1);
          if (t2.get$isInherited(member) === true)
            this.inheritedCounter = J.$add$ns(this.inheritedCounter, 1);
          J.add$1$ax(this.content, member);
        }
      }
    }, null, null, 4, 0, 119, 120, 12, "forInstanceMembers"],
    Category$forStaticMembers$2: [function(members, $name) {
      var t1, member;
      for (t1 = J.get$iterator$ax(members); t1.moveNext$0();) {
        member = t1.get$current();
        if (member.get$isStatic() === true) {
          J.add$1$ax(this.memberNames, J.get$name$x(member));
          this.memberCounter = J.$add$ns(this.memberCounter, 1);
          J.add$1$ax(this.content, member);
        }
      }
    }, null, null, 4, 0, 119, 120, 12, "forStaticMembers"],
    Category$forTypedefs$1: [function(yaml) {
      if (yaml != null)
        J.forEach$1$ax(yaml.get$keys(), new E.Category$forTypedefs_closure(this, yaml));
    }, null, null, 2, 0, 127, 123, "forTypedefs"],
    Category$forClasses$3$isAbstract: [function(classes, $name, isAbstract) {
      if (classes != null)
        J.forEach$1$ax(classes, new E.Category$forClasses_closure(this));
    }, null, null, 4, 3, 111, 112, 113, 12, 114, "forClasses"],
    Category$forVariables$3: [function(variables, getters, setters) {
      if (variables != null)
        J.forEach$1$ax(variables.get$keys(), new E.Category$forVariables_closure(this, variables));
      if (getters != null)
        J.forEach$1$ax(getters.get$keys(), new E.Category$forVariables_closure0(this, getters));
      if (setters != null)
        J.forEach$1$ax(setters.get$keys(), new E.Category$forVariables_closure1(this, setters));
    }, null, null, 6, 0, 115, 116, 117, 118, "forVariables"],
    Category$forFunctions$6$className$isConstructor$isOperator$owner: [function(yaml, $name, className, isConstructor, isOperator, owner) {
      if (yaml != null)
        J.forEach$1$ax(yaml.get$keys(), new E.Category$forFunctions_closure(this, yaml, isConstructor, className, isOperator, owner));
    }, null, null, 4, 9, 121, 122, 112, 112, 77, 123, 12, 45, 124, 125, 126, "forFunctions"],
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {Category$forClasses: [function(classes, $name, isAbstract) {
        var t1 = new E.Category([], P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSString), 0, 0, $name, null, null, null);
        t1.Category$forClasses$3$isAbstract(classes, $name, isAbstract);
        return t1;
      }, null, null, 4, 3, 111, 112, 113, 12, 114, "new Category$forClasses" /* new Category$forClasses:2:1:isAbstract */], Category$forVariables: [function(variables, getters, setters) {
        var t1 = new E.Category([], P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSString), 0, 0, "Properties", null, null, null);
        t1.Category$forVariables$3(variables, getters, setters);
        return t1;
      }, null, null, 6, 0, 115, 116, 117, 118, "new Category$forVariables" /* new Category$forVariables:3:0 */], Category$forInstanceMembers: [function(members, $name) {
        var t1 = new E.Category([], P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSString), 0, 0, $name, null, null, null);
        t1.Category$forInstanceMembers$2(members, $name);
        return t1;
      }, null, null, 4, 0, 119, 120, 12, "new Category$forInstanceMembers" /* new Category$forInstanceMembers:2:0 */], Category$forStaticMembers: [function(members, $name) {
        var t1 = new E.Category([], P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSString), 0, 0, $name, null, null, null);
        t1.Category$forStaticMembers$2(members, $name);
        return t1;
      }, null, null, 4, 0, 119, 120, 12, "new Category$forStaticMembers" /* new Category$forStaticMembers:2:0 */], Category$forFunctions: [function(yaml, $name, className, isConstructor, isOperator, owner) {
        var t1 = new E.Category([], P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSString), 0, 0, $name, null, null, null);
        t1.Category$forFunctions$6$className$isConstructor$isOperator$owner(yaml, $name, className, isConstructor, isOperator, owner);
        return t1;
      }, null, null, 4, 9, 121, 122, 112, 112, 77, 123, 12, 45, 124, 125, 126, "new Category$forFunctions" /* new Category$forFunctions:2:4:className:isConstructor:isOperator:owner */], Category$forTypedefs: [function(yaml) {
        var t1 = new E.Category([], P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSString), 0, 0, "Typedefs", null, null, null);
        t1.Category$forTypedefs$1(yaml);
        return t1;
      }, null, null, 2, 0, 127, 123, "new Category$forTypedefs" /* new Category$forTypedefs:1:0 */]}
  },
  "+Category": [448],
  Category_memberNamed_closure: {
    "": "Closure:271;name_0-434",
    call$1: [function(x) {
      return J.$eq(J.get$name$x(x), this.name_0);
    }, "call$1", null, 2, 0, 271, 21, "call"],
    $isFunction: true
  },
  "+Category_memberNamed_closure": [449],
  Category$forClasses_closure: {
    "": "Closure:271;this_0-77",
    call$1: [function(clazz) {
      var t1 = J.getInterceptor$asx(clazz);
      return J.add$1$ax(J.get$content$x(this.this_0), E.Class$forPlaceholder(t1.$index(clazz, "qualifiedName"), t1.$index(clazz, "preview")));
    }, "call$1", null, 2, 0, 271, 445, "call"],
    $isFunction: true
  },
  "+Category$forClasses_closure": [449],
  Category$forVariables_closure: {
    "": "Closure:271;this_0-77,variables_1-450",
    call$1: [function(key) {
      var t1 = this.this_0;
      J.add$1$ax(t1.get$memberNames(), key);
      t1.set$memberCounter(J.$add$ns(t1.get$memberCounter(), 1));
      J.add$1$ax(J.get$content$x(t1), E.Variable$(J.$index$asx(this.variables_1, key), "", "", false, false, null));
    }, "call$1", null, 2, 0, 271, 42, "call"],
    $isFunction: true
  },
  "+Category$forVariables_closure": [449],
  Category$forVariables_closure0: {
    "": "Closure:271;this_2-77,getters_3-450",
    call$1: [function(key) {
      var t1 = this.this_2;
      J.add$1$ax(t1.get$memberNames(), key);
      t1.set$memberCounter(J.$add$ns(t1.get$memberCounter(), 1));
      J.add$1$ax(J.get$content$x(t1), E.Variable$(J.$index$asx(this.getters_3, key), "", "", true, false, null));
    }, "call$1", null, 2, 0, 271, 42, "call"],
    $isFunction: true
  },
  "+Category$forVariables_closure": [449],
  Category$forVariables_closure1: {
    "": "Closure:271;this_4-77,setters_5-450",
    call$1: [function(key) {
      var t1 = this.this_4;
      J.add$1$ax(t1.get$memberNames(), key);
      t1.set$memberCounter(J.$add$ns(t1.get$memberCounter(), 1));
      J.add$1$ax(J.get$content$x(t1), E.Variable$(J.$index$asx(this.setters_5, key), "", "", false, true, null));
    }, "call$1", null, 2, 0, 271, 42, "call"],
    $isFunction: true
  },
  "+Category$forVariables_closure": [449],
  Category$forFunctions_closure: {
    "": "Closure:271;this_0-77,yaml_1-450,isConstructor_2-451,className_3-434,isOperator_4-451,owner_5-452",
    call$1: [function(key) {
      var t1 = this.this_0;
      J.add$1$ax(t1.get$memberNames(), key);
      t1.set$memberCounter(J.$add$ns(t1.get$memberCounter(), 1));
      J.add$1$ax(J.get$content$x(t1), E.Method$(J.$index$asx(this.yaml_1, key), this.className_3, "", "", this.isConstructor_2, this.isOperator_4, this.owner_5));
    }, "call$1", null, 2, 0, 271, 42, "call"],
    $isFunction: true
  },
  "+Category$forFunctions_closure": [449],
  Category$forTypedefs_closure: {
    "": "Closure:271;this_0-77,yaml_1-450",
    call$1: [function(key) {
      return J.add$1$ax(J.get$content$x(this.this_0), E.Typedef$(J.$index$asx(this.yaml_1, key)));
    }, "call$1", null, 2, 0, 271, 42, "call"],
    $isFunction: true
  },
  "+Category$forTypedefs_closure": [449],
  Category_addInheritedItem_closure: {
    "": "Closure:271;item_0-453",
    call$1: [function(innerItem) {
      return J.$eq(J.get$name$x(innerItem), J.get$name$x(this.item_0));
    }, "call$1", null, 2, 0, 271, 454, "call"],
    $isFunction: true
  },
  "+Category_addInheritedItem_closure": [449],
  Category_filteredContent_closure: {
    "": "Closure:271;filter_0-455",
    call$1: [function(c) {
      return this.filter_0.shouldShow$1(c);
    }, "call$1", null, 2, 0, 271, 331, "call"],
    $isFunction: true
  },
  "+Category_filteredContent_closure": [449],
  Filter: {
    "": "Object;showInherited,showObjectMembers@",
    get$shouldShowEverything: function() {
      return this.showInherited === true && this.showObjectMembers === true;
    },
    shouldShow$1: [function(item) {
      var t1 = J.getInterceptor$x(item);
      if (t1.get$isInherited(item) !== true)
        return true;
      if (J.startsWith$1$s(t1.get$inheritedFrom(item), "dart-core.Object"))
        return this.showInherited === true && this.showObjectMembers === true;
      else
        return this.showInherited;
    }, "call$1", "get$shouldShow", 2, 0, null, 446]
  },
  Item: {
    "": ["Container;path*-456,qualifiedName<-434,_category_item$_owner@-453,name-434,_category_item$__$comment-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records", null, function() {
      return [C.C_ObservableProperty];
    }, null, null, null, null, null],
    get$decoratedName: [function() {
      return this.name;
    }, null, null, 1, 0, 435, "decoratedName", 436],
    get$hashDecoratedName: [function() {
      return this.name;
    }, null, null, 1, 0, 435, "hashDecoratedName", 436],
    addToHierarchy$0: [function() {
      $.get$pageIndex().$indexSet(0, this.qualifiedName, this);
    }, "call$0", "get$addToHierarchy", 0, 0, 107, "addToHierarchy"],
    load$0: [function(_) {
      return P._Future$immediate(this, null);
    }, "call$0", "get$load", 0, 0, 457, "load"],
    addInheritedComment$1: [function(item) {
    }, "call$1", "get$addInheritedComment", 2, 0, 458, 446, "addInheritedComment"],
    get$isInherited: [function(_) {
      return false;
    }, null, null, 1, 0, 437, "isInherited", 436],
    get$linkHref: [function() {
      return this.qualifiedName;
    }, null, null, 1, 0, 435, "linkHref"],
    get$prefixedLinkHref: [function() {
      return "#!" + H.S(this.get$linkHref());
    }, null, null, 1, 0, 435, "prefixedLinkHref"],
    get$location: [function(_) {
      var t1 = new Y.DocsLocation(null, null, null, null, null);
      t1._extractPieces$1(this.qualifiedName);
      return t1;
    }, null, null, 1, 0, 459, "location"],
    get$anchorHrefLocation: [function() {
      var $parent = this.get$localLocation().get$parentLocation();
      if ($parent.get$isEmpty($parent))
        return $parent;
      $parent.anchor = C.JSString_methods.$add("id_", this.get$hashDecoratedName());
      return $parent;
    }, null, null, 1, 0, 459, "anchorHrefLocation"],
    get$localLocation: [function() {
      var t1 = new Y.DocsLocation(null, null, null, null, null);
      t1._extractPieces$1(this.qualifiedName);
      return t1;
    }, null, null, 1, 0, 459, "localLocation"],
    get$anchorHref: [function() {
      var t1, t2, t3, t4, t5;
      t1 = this.get$anchorHrefLocation();
      t2 = t1.get$packagePlus();
      t3 = t1.libraryName;
      if (t3 == null)
        t3 = "";
      t4 = t1.memberName;
      t4 = t4 == null ? "" : "." + H.S(t4);
      t5 = t1.subMemberName;
      t2 = C.JSArray_methods.join$1([t2, t3, t4, t5 == null ? "" : "." + H.S(t5)], "");
      t1 = t1.anchor;
      return t2 + (t1 == null ? "" : "@" + H.S(t1));
    }, null, null, 1, 0, 435, "anchorHref"],
    get$prefixedAnchorHref: [function() {
      return "#!" + this.get$anchorHref();
    }, null, null, 1, 0, 435, "prefixedAnchorHref"],
    get$isLoaded: [function() {
      return true;
    }, null, null, 1, 0, 437, "isLoaded"],
    memberNamed$2$orElse: [function($name, orElse) {
      return;
    }, function(name) {
      return this.memberNamed$2$orElse(name, E.nothing$closure());
    }, "memberNamed$1", "call$2$orElse", null, "get$memberNamed", 2, 3, 460, 443, 12, 158, "memberNamed"],
    get$owner: [function() {
      var t1, t2, t3, t4, t5;
      t1 = this._category_item$_owner;
      if (t1 == null) {
        t1 = $.get$pageIndex();
        t2 = new Y.DocsLocation(null, null, null, null, null);
        t2._extractPieces$1(this.qualifiedName);
        t2 = t2.get$componentNames();
        if (0 >= t2.length)
          return H.ioore(t2, 0);
        t2.pop();
        t2 = Y.DocsLocation$fromList(t2);
        t3 = t2.get$packagePlus();
        t4 = t2.libraryName;
        if (t4 == null)
          t4 = "";
        t5 = t2.memberName;
        t5 = t5 == null ? "" : "." + H.S(t5);
        t2 = t2.subMemberName;
        t1 = t1.$index(0, C.JSArray_methods.join$1([t3, t4, t5, t2 == null ? "" : "." + H.S(t2)], ""));
        this._category_item$_owner = t1;
      }
      return t1;
    }, null, null, 1, 0, 461, "owner"],
    isOwnedBy$1: [function(possibleOwner) {
      if (this.get$owner() == null || possibleOwner == null)
        return false;
      if (J.$eq(this.get$owner(), possibleOwner) === true)
        return true;
      return this.get$owner().isOwnedBy$1(possibleOwner);
    }, "call$1", "get$isOwnedBy", 2, 0, 462, 463, "isOwnedBy"],
    get$firstItemUsableAsPage: [function() {
      return this;
    }, null, null, 1, 0, 461, "firstItemUsableAsPage"],
    get$home: [function() {
      return this.get$owner() == null ? null : this.get$owner().get$home();
    }, null, null, 1, 0, 464, "home"],
    $isItem: true,
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {Item$: [function($name, qualifiedName, comment) {
        return new E.Item([], qualifiedName, null, $name, comment, null, null);
      }, null, null, 4, 2, 128, 77, 12, 129, 110, "new Item" /* new Item:3:0 */]}
  },
  "+Item": [448],
  _sort_closure: {
    "": "Closure:271;",
    call$1: [function(item) {
      J.sort$1$ax(item, new E._sort__closure());
    }, "call$1", null, 2, 0, 271, 446, "call"],
    $isFunction: true
  },
  "+_sort_closure": [449],
  _sort__closure: {
    "": "Closure:465;",
    call$2: [function(a, b) {
      return E._compareLibraryNames(a.get$decoratedName(), b.get$decoratedName());
    }, "call$2", null, 4, 0, 465, 133, 134, "call"],
    $isFunction: true
  },
  "+_sort__closure": [449],
  Home: {
    "": ["Item;owner@-466,libraries@-456,path-456,qualifiedName-434,_category_item$_owner-453,name-434,_category_item$__$comment-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records", null, null, null, function() {
      return [C.C_ObservableProperty];
    }, null, null, null, null, null],
    get$home: [function() {
      return this;
    }, null, null, 1, 0, 461, "home"],
    get$anchorHrefLocation: [function() {
      var t1, t2;
      t1 = this.name;
      if (t1 == null)
        t1 = "home";
      t2 = new Y.DocsLocation(null, null, null, null, null);
      t2._extractPieces$1(t1);
      return t2;
    }, null, null, 1, 0, 459, "anchorHrefLocation"],
    get$isTopLevelHome: [function() {
      return J.$eq(this.name, "home");
    }, null, null, 1, 0, 437, "isTopLevelHome"],
    makeMainLibrarySpecial$1: [function(yaml) {
      var mainLib, intro, t1;
      mainLib = J.firstWhere$2$orElse$ax(this.libraries, new E.Home_makeMainLibrarySpecial_closure(this), new E.Home_makeMainLibrarySpecial_closure0(this));
      if (mainLib != null) {
        J.remove$1$ax(this.libraries, mainLib);
        J.insert$2$ax(this.libraries, 0, mainLib);
        intro = J.$index$asx(J.firstWhere$1$ax(J.$index$asx(yaml, "libraries"), new E.Home_makeMainLibrarySpecial_closure1(mainLib)), "packageIntro");
        if (intro != null && J.get$isEmpty$asx(intro) !== true) {
          t1 = E._wrapComment(intro);
          this._category_item$__$comment = F.notifyPropertyChangeHelper(this, C.Symbol_comment, this._category_item$__$comment, t1);
        }
      }
    }, "call$1", "get$makeMainLibrarySpecial", 2, 0, 196, 123, "makeMainLibrarySpecial"],
    memberNamed$2$orElse: [function($name, orElse) {
      return J.firstWhere$2$orElse$ax(this.libraries, new E.Home_memberNamed_closure($name), orElse);
    }, function(name) {
      return this.memberNamed$2$orElse(name, E.nothing$closure());
    }, "memberNamed$1", "call$2$orElse", null, "get$memberNamed", 2, 3, 460, 443, 12, 158, "memberNamed"],
    Home$1: [function(yaml) {
      var libraryList, packages, t1, t2, t3, library, t4, t5, t6, newLibrary;
      libraryList = J.$index$asx(yaml, "libraries");
      packages = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      t1 = this.name;
      t2 = J.getInterceptor(t1);
      if (t2.$eq(t1, "home") === true)
        J.forEach$1$ax(libraryList, new E.Home_closure(packages));
      for (t3 = J.get$iterator$ax(t2.$eq(t1, "home") === true ? packages.$index(0, "") : libraryList); t3.moveNext$0();) {
        library = t3.get$current();
        t4 = J.getInterceptor$asx(library);
        t4.$index(library, "name");
        t5 = t4.$index(library, "qualifiedName");
        t6 = t4.$index(library, "name");
        newLibrary = new E.Library(null, null, null, null, null, null, null, false, null, [], t5, null, t6, null, null, null);
        newLibrary.previewComment = t4.$index(library, "preview");
        newLibrary.home = this;
        J.add$1$ax(this.libraries, newLibrary);
        $.get$pageIndex().$indexSet(0, t5, newLibrary);
      }
      packages.remove$1(0, "");
      packages.forEach$1(0, new E.Home_closure0(this));
      E._sort([this.libraries]);
      this.makeMainLibrarySpecial$1(yaml);
      $.get$pageIndex().$indexSet(0, this.qualifiedName, this);
      if (t2.$eq(t1, "home") === true)
        $.get$pageIndex().$indexSet(0, "", this);
    }, null, null, 2, 0, 127, 123, ""],
    $isHome: true,
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {Home__nameFromYaml: [function(yaml) {
        var $package = J.$index$asx(yaml, "packageName");
        return $package == null ? "home" : $package;
      }, "call$1", "Home__nameFromYaml$closure", 2, 0, 127, 123, "_nameFromYaml"], Home$: [function(yaml) {
        var t1 = E.Home__nameFromYaml(yaml);
        t1 = new E.Home(null, [], [], E.Home__nameFromYaml(yaml), null, t1, E._wrapComment(J.$index$asx(yaml, "introduction")), null, null);
        t1.Home$1(yaml);
        return t1;
      }, null, null, 2, 0, 127, 123, "new Home" /* new Home:1:0 */]}
  },
  "+Home": [453],
  Home_closure: {
    "": "Closure:271;packages_0-77",
    call$1: [function(each) {
      return J.add$1$ax(this.packages_0.putIfAbsent$2(J.$index$asx(each, "packageName"), new E.Home__closure1()), each);
    }, "call$1", null, 2, 0, 271, 467, "call"],
    $isFunction: true
  },
  "+Home_closure": [449],
  Home__closure1: {
    "": "Closure:108;",
    call$0: [function() {
      return [];
    }, "call$0", null, 0, 0, 108, "call"],
    $isFunction: true
  },
  "+Home__closure": [449],
  Home_closure0: {
    "": "Closure:426;this_1-77",
    call$2: [function(packageName, libraries) {
      var $package, t1;
      J.firstWhere$2$orElse$ax(libraries, new E.Home__closure(packageName), new E.Home__closure0(libraries));
      $package = E.Home$(H.fillLiteralMap(["libraries", libraries, "packageName", packageName], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
      t1 = this.this_1;
      $package.owner = t1;
      J.add$1$ax(t1.get$libraries(), $package);
    }, "call$2", null, 4, 0, 426, 468, 469, "call"],
    $isFunction: true
  },
  "+Home_closure": [449],
  Home__closure: {
    "": "Closure:271;packageName_2-77",
    call$1: [function(each) {
      return J.$eq(J.$index$asx(each, "name"), this.packageName_2);
    }, "call$1", null, 2, 0, 271, 467, "call"],
    $isFunction: true
  },
  "+Home__closure": [449],
  Home__closure0: {
    "": "Closure:108;libraries_3-77",
    call$0: [function() {
      return J.get$first$ax(this.libraries_3);
    }, "call$0", null, 0, 0, 108, "call"],
    $isFunction: true
  },
  "+Home__closure": [449],
  Home_makeMainLibrarySpecial_closure: {
    "": "Closure:271;this_0-77",
    call$1: [function(each) {
      return J.$eq(J.get$name$x(each), J.get$name$x(this.this_0));
    }, "call$1", null, 2, 0, 271, 467, "call"],
    $isFunction: true
  },
  "+Home_makeMainLibrarySpecial_closure": [449],
  Home_makeMainLibrarySpecial_closure0: {
    "": "Closure:108;this_1-77",
    call$0: [function() {
      var t1 = this.this_1;
      return J.get$isEmpty$asx(t1.get$libraries()) === true ? null : J.get$first$ax(t1.get$libraries());
    }, "call$0", null, 0, 0, 108, "call"],
    $isFunction: true
  },
  "+Home_makeMainLibrarySpecial_closure": [449],
  Home_makeMainLibrarySpecial_closure1: {
    "": "Closure:271;mainLib_2-77",
    call$1: [function(each) {
      return J.$eq(J.$index$asx(each, "name"), J.get$name$x(this.mainLib_2));
    }, "call$1", null, 2, 0, 271, 467, "call"],
    $isFunction: true
  },
  "+Home_makeMainLibrarySpecial_closure": [449],
  Home_memberNamed_closure: {
    "": "Closure:271;name_0-434",
    call$1: [function(each) {
      var t1 = this.name_0;
      return J.$eq(J.get$name$x(each), t1) === true || J.$eq(each.get$decoratedName(), t1) === true;
    }, "call$1", null, 2, 0, 271, 467, "call"],
    $isFunction: true
  },
  "+Home_memberNamed_closure": [449],
  LazyItem: {
    "": ["Item;isLoaded@-451,previewComment@-434,path-456,qualifiedName-434,_category_item$_owner-453,name-434,_category_item$__$comment-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records", null, null, null, function() {
      return [C.C_ObservableProperty];
    }, null, null, null, null, null],
    load$0: [function(_) {
      var t1;
      if (this.isLoaded === true)
        return P._Future$immediate(this, null);
      t1 = "docs/" + H.S(this.qualifiedName) + ".";
      return W.HttpRequest_getString(P.Uri__uriEncode(C.List_CVk, t1 + ($.isYaml === true ? "yaml" : "json"), C.Utf8Codec_false, false), null, null).then$1(new E.LazyItem_load_closure(this));
    }, "call$0", "get$load", 0, 0, 457, "load"],
    $isLazyItem: true,
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {LazyItem$: [function(qualifiedName, $name, previewComment, comment) {
        var t1 = new E.LazyItem(false, null, [], qualifiedName, null, $name, comment, null, null);
        t1.previewComment = previewComment;
        return t1;
      }, null, null, 6, 2, 138, 77, 129, 12, 139, 110, "new LazyItem" /* new LazyItem:4:0 */]}
  },
  "+LazyItem": [453],
  LazyItem_load_closure: {
    "": "Closure:271;this_0-77",
    call$1: [function(response) {
      var stream, t1, yaml;
      if ($.isYaml === true) {
        stream = O.loadYamlStream(response);
        t1 = stream.length;
        if (t1 !== 1)
          H.throwExpression(K.YamlException$("Expected 1 document, were " + t1));
        if (0 >= stream.length)
          return H.ioore(stream, 0);
        yaml = stream[0];
      } else
        yaml = C.C_JsonCodec.decode$1(response);
      t1 = this.this_0;
      t1.loadValues$1(yaml);
      E.buildHierarchy(t1, t1);
      return P._Future$immediate(t1, null);
    }, "call$1", null, 2, 0, 271, 470, "call"],
    $isFunction: true
  },
  "+LazyItem_load_closure": [449],
  Library: {
    "": ["LazyItem;classes*-471,errors@-471,typedefs@-471,variables*-471,functions@-471,operators@-471,home@-466,isLoaded-451,previewComment-434,path-456,qualifiedName-434,_category_item$_owner-453,name-434,_category_item$__$comment-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records", null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_ObservableProperty];
    }, null, null, null, null, null],
    addToHierarchy$0: [function() {
      var t1, t2, clazz, t3, t4;
      E.Item.prototype.addToHierarchy$0.call(this);
      for (t1 = [this.classes, this.typedefs, this.errors, this.functions], t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, 4, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();)
        for (t2 = J.get$iterator$ax(J.get$content$x(t1._current)); t2.moveNext$0();) {
          clazz = t2.get$current();
          t3 = J.getInterceptor$x(clazz);
          if (J.get$isEmpty$asx(t3.get$path(clazz)) === true) {
            t3 = t3.get$path(clazz);
            t4 = J.getInterceptor$ax(t3);
            t4.addAll$1(t3, this.path);
            t4.add$1(t3, clazz);
          }
          clazz.addToHierarchy$0();
        }
    }, "call$0", "get$addToHierarchy", 0, 0, 107, "addToHierarchy"],
    loadValues$1: [function(yaml) {
      var t1, t2, allClasses, classes, exceptions, typedefs, allFunctions, setters, getters, methods, operators;
      t1 = J.getInterceptor$asx(yaml);
      t2 = E._wrapComment(t1.$index(yaml, "comment"));
      this._category_item$__$comment = F.notifyPropertyChangeHelper(this, C.Symbol_comment, this._category_item$__$comment, t2);
      allClasses = t1.$index(yaml, "classes");
      if (allClasses != null) {
        t2 = J.getInterceptor$asx(allClasses);
        classes = t2.$index(allClasses, "class");
        exceptions = t2.$index(allClasses, "error");
        typedefs = t2.$index(allClasses, "typedef");
      } else {
        classes = null;
        exceptions = null;
        typedefs = null;
      }
      this.typedefs = E.Category$forTypedefs(typedefs);
      this.errors = E.Category$forClasses(exceptions, "Exceptions", false);
      this.classes = E.Category$forClasses(classes, "Classes", false);
      allFunctions = t1.$index(yaml, "functions");
      if (allFunctions != null) {
        t2 = J.getInterceptor$asx(allFunctions);
        setters = t2.$index(allFunctions, "setters");
        getters = t2.$index(allFunctions, "getters");
        methods = t2.$index(allFunctions, "methods");
        operators = t2.$index(allFunctions, "operators");
      } else {
        setters = null;
        getters = null;
        methods = null;
        operators = null;
      }
      this.variables = E.Category$forVariables(t1.$index(yaml, "variables"), getters, setters);
      this.functions = E.Category$forFunctions(methods, "Functions", "", false, false, null);
      this.operators = E.Category$forFunctions(operators, "Operators", "", false, true, null);
      E._sort([J.get$content$x(this.classes), J.get$content$x(this.errors), J.get$content$x(this.typedefs), J.get$content$x(this.variables), J.get$content$x(this.functions), J.get$content$x(this.operators)]);
      this.isLoaded = true;
    }, "call$1", "get$loadValues", 2, 0, 472, 123, "loadValues"],
    get$decoratedName: [function() {
      var t1, t2;
      t1 = this.home;
      t1 = t1 != null && t1.get$isTopLevelHome() === true;
      t2 = this.name;
      if (t1)
        return C.JSString_methods.replaceAll$2(J.replaceAll$2$s(t2, "-dom-", "-"), "-", ":");
      else
        return J.replaceAll$2$s(t2, "-", ".");
    }, null, null, 1, 0, 435, "decoratedName"],
    get$isDartLibrary: [function() {
      var t1 = this.home;
      return t1 != null && t1.get$isTopLevelHome() === true;
    }, null, null, 1, 0, 437, "isDartLibrary"],
    memberNamed$2$orElse: [function($name, orElse) {
      var t1, member;
      if ($name == null)
        return orElse.call$0();
      if (this.isLoaded !== true)
        return orElse.call$0();
      for (t1 = [this.classes, this.functions, this.variables, this.operators, this.typedefs, this.errors], t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, 6, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();) {
        member = t1._current.memberNamed$2$orElse($name, E.nothing$closure());
        if (member != null)
          return member;
      }
      return orElse.call$0();
    }, function(name) {
      return this.memberNamed$2$orElse(name, E.nothing$closure());
    }, "memberNamed$1", "call$2$orElse", null, "get$memberNamed", 2, 3, 460, 443, 12, 158, "memberNamed"],
    Library$1: [function(yaml) {
      this.loadValues$1(yaml);
      E.buildHierarchy(this, this);
    }, null, null, 2, 0, 127, 123, ""],
    $isLibrary: true,
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {Library$forPlaceholder: [function(map) {
        var t1, t2, t3;
        t1 = J.getInterceptor$asx(map);
        t2 = t1.$index(map, "qualifiedName");
        t3 = t1.$index(map, "name");
        t3 = new E.Library(null, null, null, null, null, null, null, false, null, [], t2, null, t3, null, null, null);
        t3.previewComment = t1.$index(map, "preview");
        return t3;
      }, null, null, 2, 0, 127, 140, "new Library$forPlaceholder" /* new Library$forPlaceholder:1:0 */], Library$: [function(yaml) {
        var t1 = J.getInterceptor$asx(yaml);
        t1 = new E.Library(null, null, null, null, null, null, null, false, null, [], t1.$index(yaml, "qualifiedName"), null, t1.$index(yaml, "name"), null, null, null);
        t1.previewComment = "";
        t1.Library$1(yaml);
        return t1;
      }, null, null, 2, 0, 127, 123, "new Library" /* new Library:1:0 */]}
  },
  "+Library": [473],
  Class: {
    "": ["LazyItem;functions@-471,variables*-471,constructs@-471,operators@-471,superClass@-474,isAbstract@-451,annotations*-475,interfaces@-476,subclasses@-476,generics@-477,_instanceVariables@-471,_staticVariables@-471,_instanceFunctions@-471,_staticFunctions@-471,isLoaded-451,previewComment-434,path-456,qualifiedName-434,_category_item$_owner-453,name-434,_category_item$__$comment-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_ObservableProperty];
    }, null, null, null, null, null],
    get$constructors: [function() {
      return this.constructs;
    }, null, null, 1, 0, 108, "constructors"],
    flushCaches$0: [function() {
      this._instanceVariables = null;
      this._staticVariables = null;
      this._instanceFunctions = null;
      this._staticFunctions = null;
    }, "call$0", "get$flushCaches", 0, 0, 107, "flushCaches"],
    get$instanceVariables: [function() {
      var t1 = this._instanceVariables;
      if (t1 == null) {
        t1 = E.Category$forInstanceMembers(J.get$content$x(this.variables), "Properties");
        this._instanceVariables = t1;
      }
      return t1;
    }, null, null, 1, 0, 478, "instanceVariables"],
    get$staticVariables: [function() {
      var t1 = this._staticVariables;
      if (t1 == null) {
        t1 = E.Category$forStaticMembers(J.get$content$x(this.variables), "Static properties");
        this._staticVariables = t1;
      }
      return t1;
    }, null, null, 1, 0, 478, "staticVariables"],
    get$instanceFunctions: [function() {
      var t1 = this._instanceFunctions;
      if (t1 == null) {
        t1 = E.Category$forInstanceMembers(J.get$content$x(this.functions), "Methods");
        this._instanceFunctions = t1;
      }
      return t1;
    }, null, null, 1, 0, 478, "instanceFunctions"],
    get$staticFunctions: [function() {
      var t1 = this._staticFunctions;
      if (t1 == null) {
        t1 = E.Category$forStaticMembers(J.get$content$x(this.functions), "Static methods");
        this._staticFunctions = t1;
      }
      return t1;
    }, null, null, 1, 0, 478, "staticFunctions"],
    get$categories: [function() {
      var t1, t2, t3, t4, t5, t6;
      t1 = this.constructs;
      t2 = this.operators;
      t3 = this._instanceFunctions;
      if (t3 == null) {
        t3 = E.Category$forInstanceMembers(J.get$content$x(this.functions), "Methods");
        this._instanceFunctions = t3;
      }
      t4 = this._staticFunctions;
      if (t4 == null) {
        t4 = E.Category$forStaticMembers(J.get$content$x(this.functions), "Static methods");
        this._staticFunctions = t4;
      }
      t5 = this._instanceVariables;
      if (t5 == null) {
        t5 = E.Category$forInstanceMembers(J.get$content$x(this.variables), "Properties");
        this._instanceVariables = t5;
      }
      t6 = this._staticVariables;
      if (t6 == null) {
        t6 = E.Category$forStaticMembers(J.get$content$x(this.variables), "Static properties");
        this._staticVariables = t6;
      }
      return [t1, t2, t3, t4, t5, t6];
    }, null, null, 1, 0, 479, "categories"],
    get$anchorHrefLocation: [function() {
      var t1 = new Y.DocsLocation(null, null, null, null, null);
      t1._extractPieces$1(this.qualifiedName);
      return t1;
    }, null, null, 1, 0, 459, "anchorHrefLocation"],
    addToHierarchy$0: [function() {
      E.Item.prototype.addToHierarchy$0.call(this);
      if (this.isLoaded === true)
        H.IterableMixinWorkaround_forEach([this.functions, this.constructs, this.operators], new E.Class_addToHierarchy_closure(this));
    }, "call$0", "get$addToHierarchy", 0, 0, 107, "addToHierarchy"],
    loadValues$1: [function(yaml) {
      var t1, t2, t3, genericValues, allMethods, setters, getters, methods, operates, constructors, inheritedMethods, inheritedVariables;
      this._instanceVariables = null;
      this._staticVariables = null;
      this._instanceFunctions = null;
      this._staticFunctions = null;
      t1 = J.getInterceptor$asx(yaml);
      t2 = E._wrapComment(t1.$index(yaml, "comment"));
      this._category_item$__$comment = F.notifyPropertyChangeHelper(this, C.Symbol_comment, this._category_item$__$comment, t2);
      this.isAbstract = E._boolFor("isAbstract", yaml);
      t2 = new E.LinkableType(null);
      t3 = new Y.DocsLocation(null, null, null, null, null);
      t3._extractPieces$1(t1.$index(yaml, "superclass"));
      t2.loc = t3;
      this.superClass = t2;
      this.subclasses = t1.$index(yaml, "subclass") == null ? [] : J.toList$0$ax(J.map$1$ax(t1.$index(yaml, "subclass"), new E.Class_loadValues_closure()));
      this.annotations = E.AnnotationGroup$(t1.$index(yaml, "annotations"));
      this.interfaces = t1.$index(yaml, "implements") == null ? [] : J.toList$0$ax(J.map$1$ax(t1.$index(yaml, "implements"), new E.Class_loadValues_closure0()));
      genericValues = t1.$index(yaml, "generics");
      if (genericValues != null)
        J.forEach$1$ax(genericValues.get$keys(), new E.Class_loadValues_closure1(this));
      allMethods = t1.$index(yaml, "methods");
      if (allMethods != null) {
        t2 = J.getInterceptor$asx(allMethods);
        setters = t2.$index(allMethods, "setters");
        getters = t2.$index(allMethods, "getters");
        methods = t2.$index(allMethods, "methods");
        operates = t2.$index(allMethods, "operators");
        constructors = t2.$index(allMethods, "constructors");
      } else {
        setters = null;
        getters = null;
        methods = null;
        operates = null;
        constructors = null;
      }
      this.variables = E.Category$forVariables(t1.$index(yaml, "variables"), getters, setters);
      t2 = this.name;
      this.functions = E.Category$forFunctions(methods, "Methods", t2, false, false, this);
      this.operators = E.Category$forFunctions(operates, "Operators", t2, false, true, this);
      this.constructs = E.Category$forFunctions(constructors, "Constructors", t2, true, false, this);
      inheritedMethods = t1.$index(yaml, "inheritedMethods");
      inheritedVariables = t1.$index(yaml, "inheritedVariables");
      if (inheritedMethods != null) {
        t1 = J.getInterceptor$asx(inheritedMethods);
        setters = t1.$index(inheritedMethods, "setters");
        getters = t1.$index(inheritedMethods, "getters");
        methods = t1.$index(inheritedMethods, "methods");
        operates = t1.$index(inheritedMethods, "operators");
      }
      this._addVariable$1(inheritedVariables);
      this._addVariable$2$isSetter(setters, true);
      this._addVariable$2$isGetter(getters, true);
      this._addMethod$1(methods);
      this._addMethod$2$isOperator(operates, true);
      E._sort([J.get$content$x(this.functions), J.get$content$x(this.variables), J.get$content$x(this.constructs), J.get$content$x(this.operators)]);
      this.isLoaded = true;
    }, "call$1", "get$loadValues", 2, 0, 472, 123, "loadValues"],
    _addVariable$3$isGetter$isSetter: [function(items, isGetter, isSetter) {
      if (items != null)
        J.forEach$1$ax(J.get$values$x(items), new E.Class__addVariable_closure(this, isSetter, isGetter));
    }, function(items) {
      return this._addVariable$3$isGetter$isSetter(items, false, false);
    }, "_addVariable$1", function(items, isSetter) {
      return this._addVariable$3$isGetter$isSetter(items, false, isSetter);
    }, "_addVariable$2$isSetter", function(items, isGetter) {
      return this._addVariable$3$isGetter$isSetter(items, isGetter, false);
    }, "_addVariable$2$isGetter", "call$3$isGetter$isSetter", null, null, null, "get$_addVariable", 2, 5, 480, 112, 112, 131, 150, 151, "_addVariable"],
    _addMethod$2$isOperator: [function(items, isOperator) {
      if (items != null)
        J.forEach$1$ax(J.get$values$x(items), new E.Class__addMethod_closure(this, isOperator));
    }, function(items) {
      return this._addMethod$2$isOperator(items, false);
    }, "_addMethod$1", "call$2$isOperator", null, "get$_addMethod", 2, 3, 481, 112, 131, 125, "_addMethod"],
    get$nameWithGeneric: [function() {
      var out = P.StringBuffer$("");
      out.write$1(this.name);
      if (J.get$isNotEmpty$asx(this.generics)) {
        out.write$1("<");
        out.write$1(J.join$1$ax(this.generics, ",\u00a0"));
        out.write$1(">");
      }
      return out._contents;
    }, null, null, 1, 0, 435, "nameWithGeneric"],
    memberNamed$2$orElse: [function($name, orElse) {
      var t1, category, member;
      if ($name == null)
        return orElse.call$0();
      for (t1 = [this.annotations, this.constructs, this.functions, this.operators, this.variables], t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, 5, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();) {
        category = t1._current;
        member = category == null ? null : category.memberNamed$2$orElse($name, E.nothing$closure());
        if (member != null)
          return member;
      }
      return orElse.call$0();
    }, function(name) {
      return this.memberNamed$2$orElse(name, E.nothing$closure());
    }, "memberNamed$1", "call$2$orElse", null, "get$memberNamed", 2, 3, 460, 443, 12, 158, "memberNamed"],
    Class$1: [function(yaml) {
      this.loadValues$1(yaml);
    }, null, null, 2, 0, 127, 123, ""],
    Class$forPlaceholder$2: [function($location, previewComment) {
      this.operators = E.Category$forFunctions(null, "placeholder", "", false, false, null);
      this.variables = E.Category$forVariables(null, null, null);
      this.constructs = E.Category$forFunctions(null, "placeholder", "", false, false, null);
      this.functions = E.Category$forFunctions(null, "placeholder", "", false, false, null);
    }, null, null, 4, 0, 141, 142, 139, "forPlaceholder"],
    $isClass: true,
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {Class$forPlaceholder: [function($location, previewComment) {
        var t1 = new Y.DocsLocation(null, null, null, null, null);
        t1._extractPieces$1($location);
        t1 = new E.Class(null, null, null, null, null, null, null, [], [], [], null, null, null, null, false, null, [], $location, null, t1.memberName, null, null, null);
        t1.previewComment = previewComment;
        t1.Class$forPlaceholder$2($location, previewComment);
        return t1;
      }, null, null, 4, 0, 141, 142, 139, "new Class$forPlaceholder" /* new Class$forPlaceholder:2:0 */], Class$: [function(yaml) {
        var t1 = J.getInterceptor$asx(yaml);
        t1 = new E.Class(null, null, null, null, null, null, null, [], [], [], null, null, null, null, false, null, [], t1.$index(yaml, "qualifiedName"), null, t1.$index(yaml, "name"), null, null, null);
        t1.previewComment = "";
        t1.Class$1(yaml);
        return t1;
      }, null, null, 2, 0, 127, 123, "new Class" /* new Class:1:0 */]}
  },
  "+Class": [473],
  Class_addToHierarchy_closure: {
    "": "Closure:271;this_0-77",
    call$1: [function(category) {
      J.forEach$1$ax(J.get$content$x(category), new E.Class_addToHierarchy__closure(this.this_0));
    }, "call$1", null, 2, 0, 271, 482, "call"],
    $isFunction: true
  },
  "+Class_addToHierarchy_closure": [449],
  Class_addToHierarchy__closure: {
    "": "Closure:271;this_1-77",
    call$1: [function(clazz) {
      E.buildHierarchy(clazz, this.this_1);
    }, "call$1", null, 2, 0, 271, 445, "call"],
    $isFunction: true
  },
  "+Class_addToHierarchy__closure": [449],
  Class_loadValues_closure: {
    "": "Closure:271;",
    call$1: [function(item) {
      var t1, t2;
      t1 = new E.LinkableType(null);
      t2 = new Y.DocsLocation(null, null, null, null, null);
      t2._extractPieces$1(item);
      t1.loc = t2;
      return t1;
    }, "call$1", null, 2, 0, 271, 446, "call"],
    $isFunction: true
  },
  "+Class_loadValues_closure": [449],
  Class_loadValues_closure0: {
    "": "Closure:271;",
    call$1: [function(item) {
      var t1, t2;
      t1 = new E.LinkableType(null);
      t2 = new Y.DocsLocation(null, null, null, null, null);
      t2._extractPieces$1(item);
      t1.loc = t2;
      return t1;
    }, "call$1", null, 2, 0, 271, 446, "call"],
    $isFunction: true
  },
  "+Class_loadValues_closure": [449],
  Class_loadValues_closure1: {
    "": "Closure:271;this_0-77",
    call$1: [function(generic) {
      return J.add$1$ax(this.this_0.get$generics(), generic);
    }, "call$1", null, 2, 0, 271, 483, "call"],
    $isFunction: true
  },
  "+Class_loadValues_closure": [449],
  Class__addVariable_closure: {
    "": "Closure:271;this_0-77,isSetter_1-77,isGetter_2-77",
    call$1: [function(item) {
      var t1, t2, t3, object;
      t1 = J.getInterceptor$asx(item);
      t2 = t1.$index(item, "inheritedFrom");
      t3 = this.this_0;
      object = E.Variable$(item, t1.$index(item, "commentFrom"), t2, this.isGetter_2, this.isSetter_1, t3);
      J.get$variables$x(t3).addInheritedItem$2(t3, object);
    }, "call$1", null, 2, 0, 271, 446, "call"],
    $isFunction: true
  },
  "+Class__addVariable_closure": [449],
  Class__addMethod_closure: {
    "": "Closure:271;this_0-77,isOperator_1-77",
    call$1: [function(item) {
      var t1, t2, t3, t4, object;
      t1 = this.isOperator_1;
      t2 = J.getInterceptor$asx(item);
      t3 = t2.$index(item, "inheritedFrom");
      t2 = t2.$index(item, "commentFrom");
      t4 = this.this_0;
      object = E.Method$(item, J.get$name$x(t4), t2, t3, false, t1, t4);
      (t1 === true ? t4.get$operators() : t4.get$functions()).addInheritedItem$2(t4, object);
    }, "call$1", null, 2, 0, 271, 446, "call"],
    $isFunction: true
  },
  "+Class__addMethod_closure": [449],
  AnnotationGroup: {
    "": "Object;supportedBrowsers@-477,annotations*-484,domName@-434",
    memberNamed$2$orElse: [function($name, orElse) {
      var t1, annotation;
      for (t1 = J.get$iterator$ax(this.annotations); t1.moveNext$0();) {
        annotation = t1.get$current();
        if (J.$eq(annotation.get$qualifiedName(), $name) === true)
          return annotation;
      }
      return orElse.call$0();
    }, function(name) {
      return this.memberNamed$2$orElse(name, E.nothing$closure());
    }, "memberNamed$1", "call$2$orElse", null, "get$memberNamed", 2, 3, 460, 443, 12, 158, "memberNamed"],
    AnnotationGroup$1: [function(annotes) {
      var set, t1;
      set = P.LinkedHashSet_LinkedHashSet(null, null, null, null);
      if (annotes != null) {
        J.forEach$1$ax(annotes, new E.AnnotationGroup_closure(this, set));
        t1 = set.toList$0(0);
        this.annotations = t1;
        C.JSArray_methods.sort$1(t1, new E.AnnotationGroup_closure0());
      }
    }, null, null, 2, 0, 143, 144, ""],
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {AnnotationGroup$: [function(annotes) {
        var t1 = new E.AnnotationGroup([], [], null);
        t1.AnnotationGroup$1(annotes);
        return t1;
      }, null, null, 2, 0, 143, 144, "new AnnotationGroup" /* new AnnotationGroup:1:0 */]}
  },
  "+AnnotationGroup": [0],
  AnnotationGroup_closure: {
    "": "Closure:271;this_0-77,set_1-77",
    call$1: [function(annotation) {
      var t1 = J.getInterceptor$asx(annotation);
      if (J.$eq(C.JSArray_methods.get$last(J.split$1$s(t1.$index(annotation, "name"), ".")), "SupportedBrowser") === true)
        J.add$1$ax(this.this_0.get$supportedBrowsers(), J.join$1$ax(J.toList$0$ax(t1.$index(annotation, "parameters")), " "));
      else if (J.$eq(C.JSArray_methods.get$last(J.split$1$s(t1.$index(annotation, "name"), ".")), "DomName") === true)
        this.this_0.set$domName(J.get$first$ax(t1.$index(annotation, "parameters")));
      else {
        t1 = new E.Annotation(null, null, null);
        t1.Annotation$1(annotation);
        J.add$1$ax(this.set_1, t1);
      }
    }, "call$1", null, 2, 0, 271, 485, "call"],
    $isFunction: true
  },
  "+AnnotationGroup_closure": [449],
  AnnotationGroup_closure0: {
    "": "Closure:426;",
    call$2: [function(a, b) {
      return J.compareTo$1$ns(a.get$shortName(), b.get$shortName());
    }, "call$2", null, 4, 0, 426, 133, 134, "call"],
    $isFunction: true
  },
  "+AnnotationGroup_closure": [449],
  Annotation: {
    "": "Object;qualifiedName@-434,link@-474,parameters*-477",
    get$hashCode: [function(_) {
      return J.fold$2$ax(this.parameters, J.get$hashCode$(this.qualifiedName), new E.Annotation_hashCode_closure());
    }, null, null, 1, 0, 108, "hashCode"],
    $eq: [function(_, other) {
      if (other == null)
        return false;
      return J.$eq(this.qualifiedName, other.get$qualifiedName()) === true && C.ListEquality_DefaultEquality.equals$2(this.parameters, J.get$parameters$x(other));
    }, "call$1", "get$==", 2, 0, 271, 104, "=="],
    get$shortName: [function() {
      var t1 = new Y.DocsLocation(null, null, null, null, null);
      t1._extractPieces$1(this.qualifiedName);
      return t1.get$lastName();
    }, null, null, 1, 0, 108, "shortName"],
    toString$0: [function(_) {
      var t1 = new Y.DocsLocation(null, null, null, null, null);
      t1._extractPieces$1(this.qualifiedName);
      return "Annotation(" + H.S(t1.get$lastName()) + ")";
    }, "call$0", "get$toString", 0, 0, 108, "toString"],
    Annotation$1: [function(yaml) {
      var t1, t2, t3, t4;
      t1 = J.getInterceptor$asx(yaml);
      t2 = t1.$index(yaml, "name");
      this.qualifiedName = t2;
      t3 = new E.LinkableType(null);
      t4 = new Y.DocsLocation(null, null, null, null, null);
      t4._extractPieces$1(t2);
      t3.loc = t4;
      this.link = t3;
      this.parameters = t1.$index(yaml, "parameters") == null ? [] : t1.$index(yaml, "parameters");
    }, null, null, 2, 0, 127, 123, ""],
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {Annotation$: [function(yaml) {
        var t1 = new E.Annotation(null, null, null);
        t1.Annotation$1(yaml);
        return t1;
      }, null, null, 2, 0, 127, 123, "new Annotation" /* new Annotation:1:0 */]}
  },
  "+Annotation": [0],
  Annotation_hashCode_closure: {
    "": "Closure:426;",
    call$2: [function(a, param) {
      return J.$xor$n(a, J.get$hashCode$(param));
    }, "call$2", null, 4, 0, 426, 133, 486, "call"],
    $isFunction: true
  },
  "+Annotation_hashCode_closure": [449],
  Parameterized: {
    "": ["Item;parameters*-487,path-456,qualifiedName-434,_category_item$_owner-453,name-434,_category_item$__$comment-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records", null, null, function() {
      return [C.C_ObservableProperty];
    }, null, null, null, null, null],
    getParameters$1: [function(parameters) {
      var values = [];
      if (parameters != null)
        J.forEach$1$ax(parameters, new E.Parameterized_getParameters_closure(this, values));
      return values;
    }, "call$1", "get$getParameters", 2, 0, 488, 489, "getParameters"],
    parameterNamed$1: [function($name) {
      return J.firstWhere$2$orElse$ax(this.parameters, new E.Parameterized_parameterNamed_closure($name), new E.Parameterized_parameterNamed_closure0());
    }, "call$1", "get$parameterNamed", 2, 0, 490, 12, "parameterNamed"],
    memberNamed$2$orElse: [function($name, orElse) {
      var result = this.parameterNamed$1($name);
      return result == null ? orElse.call$0() : result;
    }, function(name) {
      return this.memberNamed$2$orElse(name, E.nothing$closure());
    }, "memberNamed$1", "call$2$orElse", null, "get$memberNamed", 2, 3, 460, 443, 12, 158, "memberNamed"],
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {Parameterized$: [function($name, qualifiedName, comment) {
        return new E.Parameterized(null, [], qualifiedName, null, $name, comment, null, null);
      }, null, null, 4, 2, 128, 77, 12, 129, 110, "new Parameterized" /* new Parameterized:3:0 */]}
  },
  "+Parameterized": [453],
  Parameterized_getParameters_closure: {
    "": "Closure:426;this_0-77,values_1-77",
    call$2: [function($name, data) {
      J.add$1$ax(this.values_1, E.Parameter$($name, data, this.this_0));
    }, "call$2", null, 4, 0, 426, 12, 377, "call"],
    $isFunction: true
  },
  "+Parameterized_getParameters_closure": [449],
  Parameterized_parameterNamed_closure: {
    "": "Closure:271;name_0-434",
    call$1: [function(x) {
      return J.$eq(J.get$name$x(x), this.name_0);
    }, "call$1", null, 2, 0, 271, 21, "call"],
    $isFunction: true
  },
  "+Parameterized_parameterNamed_closure": [449],
  Parameterized_parameterNamed_closure0: {
    "": "Closure:108;",
    call$0: [function() {
      return;
    }, "call$0", null, 0, 0, 108, "call"],
    $isFunction: true
  },
  "+Parameterized_parameterNamed_closure": [449],
  Typedef: {
    "": ["Parameterized;type*-474,annotations*-475,parameters-487,path-456,qualifiedName-434,_category_item$_owner-453,name-434,_category_item$__$comment-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records", null, null, null, null, function() {
      return [C.C_ObservableProperty];
    }, null, null, null, null, null],
    Typedef$1: [function(yaml) {
      var t1, t2, t3;
      t1 = J.getInterceptor$asx(yaml);
      t2 = new E.LinkableType(null);
      t3 = new Y.DocsLocation(null, null, null, null, null);
      t3._extractPieces$1(t1.$index(yaml, "return"));
      t2.loc = t3;
      this.type = t2;
      this.parameters = this.getParameters$1(t1.$index(yaml, "parameters"));
      this.annotations = E.AnnotationGroup$(t1.$index(yaml, "annotations"));
    }, null, null, 2, 0, 127, 123, ""],
    $isTypedef: true,
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {Typedef$: [function(yaml) {
        var t1, t2;
        t1 = J.getInterceptor$asx(yaml);
        t2 = t1.$index(yaml, "name");
        t1 = new E.Typedef(null, null, null, [], t1.$index(yaml, "qualifiedName"), null, t2, E._wrapComment(t1.$index(yaml, "comment")), null, null);
        t1.Typedef$1(yaml);
        return t1;
      }, null, null, 2, 0, 127, 123, "new Typedef" /* new Typedef:1:0 */]}
  },
  "+Typedef": [491],
  Method: {
    "": ["Parameterized;isStatic@-451,isAbstract@-451,isConstant@-451,isConstructor@-451,inheritedFrom*-434,commentFrom*-434,className*-434,isOperator@-451,annotations*-475,type*-492,parameters-487,path-456,qualifiedName-434,_category_item$_owner-453,name-434,_category_item$__$comment-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records", null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_ObservableProperty];
    }, null, null, null, null, null],
    addToHierarchy$0: [function() {
      return;
    }, "call$0", "get$addToHierarchy", 0, 0, 107, "addToHierarchy"],
    addInheritedComment$1: [function(item) {
      var t1;
      if (J.$eq(this._category_item$__$comment, "<span></span>") === true || J.$eq(this._category_item$__$comment, "<div></div>") === true) {
        t1 = item.get$comment();
        this._category_item$__$comment = F.notifyPropertyChangeHelper(this, C.Symbol_comment, this._category_item$__$comment, t1);
        this.commentFrom = J.get$commentFrom$x(item);
      }
    }, "call$1", "get$addInheritedComment", 2, 0, 196, 446, "addInheritedComment"],
    get$isInherited: [function(_) {
      return J.$eq(this.inheritedFrom, "") !== true && this.inheritedFrom != null;
    }, null, null, 1, 0, 437, "isInherited"],
    get$decoratedName: [function() {
      var t1, t2, t3;
      if (this.isConstructor === true) {
        t1 = this.name;
        t2 = J.$eq(t1, "");
        t3 = this.className;
        t1 = t2 !== true ? H.S(t3) + "." + H.S(t1) : t3;
      } else
        t1 = this.name;
      return t1;
    }, null, null, 1, 0, 435, "decoratedName"],
    get$hashDecoratedName: [function() {
      var t1 = this.name;
      return this.isConstructor === true ? H.S(this.className) + "-" + H.S(t1) : t1;
    }, null, null, 1, 0, 435, "hashDecoratedName"],
    get$linkHref: [function() {
      var t1, t2, t3, t4, t5;
      t1 = this.get$anchorHrefLocation();
      t2 = t1.get$packagePlus();
      t3 = t1.libraryName;
      if (t3 == null)
        t3 = "";
      t4 = t1.memberName;
      t4 = t4 == null ? "" : "." + H.S(t4);
      t5 = t1.subMemberName;
      t2 = C.JSArray_methods.join$1([t2, t3, t4, t5 == null ? "" : "." + H.S(t5)], "");
      t1 = t1.anchor;
      return t2 + (t1 == null ? "" : "@" + H.S(t1));
    }, null, null, 1, 0, 108, "linkHref"],
    get$localLocation: [function() {
      var t1, local;
      if (!(J.$eq(this.inheritedFrom, "") !== true && this.inheritedFrom != null) || this.get$owner() == null) {
        t1 = new Y.DocsLocation(null, null, null, null, null);
        t1._extractPieces$1(this.qualifiedName);
        return t1;
      }
      local = J.get$location$x(this.get$owner());
      local.set$subMemberName(this.name);
      return local;
    }, null, null, 1, 0, 459, "localLocation"],
    get$isUnnamedConstructor: [function() {
      return this.isConstructor === true && J.$eq(this.name, "") === true;
    }, null, null, 1, 0, 437, "isUnnamedConstructor"],
    toString$0: [function(_) {
      return this.get$decoratedName();
    }, "call$0", "get$toString", 0, 0, 435, "toString"],
    Method$7$className$commentFrom$inheritedFrom$isConstructor$isOperator$owner: [function(yaml, className, commentFrom, inheritedFrom, isConstructor, isOperator, owner) {
      var t1;
      this.isStatic = E._boolFor("static", yaml);
      this.isAbstract = E._boolFor("abstract", yaml);
      this.isConstant = E._boolFor("constant", yaml);
      if (J.$eq(commentFrom, "") === true)
        J.$index$asx(yaml, "commentFrom");
      t1 = J.getInterceptor$asx(yaml);
      this.type = E.NestedType$(J.get$first$ax(t1.$index(yaml, "return")));
      this.parameters = this.getParameters$1(t1.$index(yaml, "parameters"));
      this.annotations = E.AnnotationGroup$(t1.$index(yaml, "annotations"));
      this._category_item$_owner = owner;
    }, null, null, 2, 13, 145, 122, 122, 122, 112, 112, 77, 123, 45, 146, 147, 124, 125, 126, ""],
    $isMethod: true,
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {Method$: [function(yaml, className, commentFrom, inheritedFrom, isConstructor, isOperator, owner) {
        var t1, t2;
        t1 = J.getInterceptor$asx(yaml);
        t2 = t1.$index(yaml, "name");
        t1 = new E.Method(null, null, null, isConstructor, inheritedFrom, null, className, isOperator, null, null, null, [], t1.$index(yaml, "qualifiedName"), null, t2, E._wrapComment(t1.$index(yaml, "comment")), null, null);
        t1.Method$7$className$commentFrom$inheritedFrom$isConstructor$isOperator$owner(yaml, className, commentFrom, inheritedFrom, isConstructor, isOperator, owner);
        return t1;
      }, null, null, 2, 13, 145, 122, 122, 122, 112, 112, 77, 123, 45, 146, 147, 124, 125, 126, "new Method" /* new Method:1:6:className:commentFrom:inheritedFrom:isConstructor:isOperator:owner */]}
  },
  "+Method": [491],
  Parameter: {
    "": ["Item;isOptional@-451,isNamed@-451,hasDefault@-451,type*-492,defaultValue*-434,annotations*-475,path-456,qualifiedName-434,_category_item$_owner-453,name-434,_category_item$__$comment-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records", null, null, null, null, null, null, null, function() {
      return [C.C_ObservableProperty];
    }, null, null, null, null, null],
    get$decoratedName: [function() {
      return H.S(this.name) + this.get$decoration();
    }, null, null, 1, 0, 435, "decoratedName"],
    get$decoration: [function() {
      var t1, t2;
      if (this.hasDefault === true) {
        t1 = this.isNamed;
        t2 = this.defaultValue;
        if (t1 === true)
          return ": " + H.S(t2);
        else
          return "=" + H.S(t2);
      }
      return "";
    }, null, null, 1, 0, 435, "decoration"],
    isOwnedBy$1: [function(possibleOwner) {
      if (this.get$owner() == null || possibleOwner == null)
        return false;
      if (J.$eq(this.get$owner(), possibleOwner) === true)
        return true;
      return this.get$owner().isOwnedBy$1(possibleOwner);
    }, "call$1", "get$isOwnedBy", 2, 0, 462, 463, "isOwnedBy"],
    get$anchorHrefLocation: [function() {
      var ownerLocation, ownerAnchor, t1;
      if (this.get$owner() == null)
        return;
      ownerLocation = this.get$owner().get$anchorHrefLocation();
      ownerAnchor = ownerLocation.anchor;
      t1 = this.name;
      ownerLocation.anchor = ownerAnchor == null ? "," + H.S(t1) : H.S(ownerAnchor) + ("," + H.S(t1));
      return ownerLocation;
    }, null, null, 1, 0, 459, "anchorHrefLocation"],
    get$hashDecoratedName: [function() {
      return "," + H.S(this.name);
    }, null, null, 1, 0, 435, "hashDecoratedName"],
    get$anchorHref: [function() {
      var t1, t2, t3, t4, t5;
      t1 = this.get$anchorHrefLocation();
      t2 = t1.get$packagePlus();
      t3 = t1.libraryName;
      if (t3 == null)
        t3 = "";
      t4 = t1.memberName;
      t4 = t4 == null ? "" : "." + H.S(t4);
      t5 = t1.subMemberName;
      t2 = C.JSArray_methods.join$1([t2, t3, t4, t5 == null ? "" : "." + H.S(t5)], "");
      t1 = t1.anchor;
      return t2 + (t1 == null ? "" : "@" + H.S(t1));
    }, null, null, 1, 0, 435, "anchorHref"],
    get$firstItemUsableAsPage: [function() {
      return this.get$owner();
    }, null, null, 1, 0, 461, "firstItemUsableAsPage"],
    toString$0: [function(_) {
      return "Parameter named " + H.S(this.name) + " in " + H.S(this.get$owner());
    }, "call$0", "get$toString", 0, 0, 108, "toString"],
    Parameter$3: [function($name, yaml, owner) {
      var t1;
      this.isOptional = E._boolFor("optional", yaml);
      this.isNamed = E._boolFor("named", yaml);
      this.hasDefault = E._boolFor("default", yaml);
      t1 = J.getInterceptor$asx(yaml);
      this.type = E.NestedType$(J.get$first$ax(t1.$index(yaml, "type")));
      this.defaultValue = t1.$index(yaml, "value");
      this._category_item$_owner = owner;
      this.annotations = E.AnnotationGroup$(t1.$index(yaml, "annotations"));
    }, null, null, 4, 2, 148, 77, 12, 123, 126, ""],
    $isParameter: true,
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {Parameter$: [function($name, yaml, owner) {
        var t1 = new E.Parameter(null, null, null, null, null, null, [], null, null, $name, null, null, null);
        t1.Parameter$3($name, yaml, owner);
        return t1;
      }, null, null, 4, 2, 148, 77, 12, 123, 126, "new Parameter" /* new Parameter:3:0 */]}
  },
  "+Parameter": [453],
  Variable: {
    "": ["Item;isFinal*-451,isStatic@-451,isAbstract@-451,isConstant@-451,isGetter@-451,isSetter@-451,inheritedFrom*-434,commentFrom*-434,setterParameter@-493,type*-492,annotations*-475,path-456,qualifiedName-434,_category_item$_owner-453,name-434,_category_item$__$comment-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records", null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_ObservableProperty];
    }, null, null, null, null, null],
    addInheritedComment$1: [function(item) {
      var t1;
      if (J.$eq(this._category_item$__$comment, "<span></span>") === true || J.$eq(this._category_item$__$comment, "<div></div>") === true) {
        t1 = item.get$comment();
        this._category_item$__$comment = F.notifyPropertyChangeHelper(this, C.Symbol_comment, this._category_item$__$comment, t1);
        t1 = J.getInterceptor(item);
        if (typeof item === "object" && item !== null && !!t1.$isVariable)
          this.commentFrom = item.commentFrom;
      }
    }, "call$1", "get$addInheritedComment", 2, 0, 458, 446, "addInheritedComment"],
    get$isInherited: [function(_) {
      return J.$eq(this.inheritedFrom, "") !== true && this.inheritedFrom != null;
    }, null, null, 1, 0, 437, "isInherited"],
    addToHierarchy$0: [function() {
      if (J.$eq(this.inheritedFrom, "") !== true)
        E.Item.prototype.addToHierarchy$0.call(this);
    }, "call$0", "get$addToHierarchy", 0, 0, 107, "addToHierarchy"],
    get$localLocation: [function() {
      var t1, local;
      if (!(J.$eq(this.inheritedFrom, "") !== true && this.inheritedFrom != null) || this.get$owner() == null) {
        t1 = new Y.DocsLocation(null, null, null, null, null);
        t1._extractPieces$1(this.qualifiedName);
        return t1;
      }
      local = J.get$location$x(this.get$owner());
      local.set$subMemberName(this.name);
      return local;
    }, null, null, 1, 0, 459, "localLocation"],
    parameterNamed$1: [function($name) {
      return;
    }, "call$1", "get$parameterNamed", 2, 0, 490, 12, "parameterNamed"],
    get$firstItemUsableAsPage: [function() {
      return this.get$owner();
    }, null, null, 1, 0, 461, "firstItemUsableAsPage"],
    Variable$6$commentFrom$inheritedFrom$isGetter$isSetter$owner: [function(yaml, commentFrom, inheritedFrom, isGetter, isSetter, owner) {
      var t1, parameters, parameterName;
      this.isGetter = isGetter;
      this.isSetter = isSetter;
      this.inheritedFrom = inheritedFrom;
      this.commentFrom = J.$eq(commentFrom, "") === true ? J.$index$asx(yaml, "commentFrom") : commentFrom;
      this._category_item$_owner = owner;
      this.isFinal = E._boolFor("final", yaml);
      this.isStatic = E._boolFor("static", yaml);
      this.isConstant = E._boolFor("constant", yaml);
      this.isAbstract = E._boolFor("abstract", yaml);
      if (isGetter === true)
        this.type = E.NestedType$(J.get$first$ax(J.$index$asx(yaml, "return")));
      else {
        t1 = J.getInterceptor$asx(yaml);
        if (isSetter === true) {
          this.type = E.NestedType$(J.get$first$ax(t1.$index(yaml, "return")));
          parameters = t1.$index(yaml, "parameters");
          parameterName = J.get$first$ax(parameters.get$keys());
          this.setterParameter = E.Parameter$(parameterName, J.$index$asx(parameters, parameterName), null);
        } else
          this.type = E.NestedType$(J.get$first$ax(t1.$index(yaml, "type")));
      }
      this.annotations = E.AnnotationGroup$(J.$index$asx(yaml, "annotations"));
    }, null, null, 2, 11, 149, 122, 122, 112, 112, 77, 123, 146, 147, 150, 151, 126, ""],
    $isVariable: true,
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {Variable$: [function(yaml, commentFrom, inheritedFrom, isGetter, isSetter, owner) {
        var t1, t2;
        t1 = J.getInterceptor$asx(yaml);
        t2 = t1.$index(yaml, "name");
        t1 = new E.Variable(null, null, null, null, null, null, null, null, null, null, null, [], t1.$index(yaml, "qualifiedName"), null, t2, E._wrapComment(t1.$index(yaml, "comment")), null, null);
        t1.Variable$6$commentFrom$inheritedFrom$isGetter$isSetter$owner(yaml, commentFrom, inheritedFrom, isGetter, isSetter, owner);
        return t1;
      }, null, null, 2, 11, 149, 122, 122, 112, 112, 77, 123, 146, 147, 150, 151, 126, "new Variable" /* new Variable:1:5:commentFrom:inheritedFrom:isGetter:isSetter:owner */]}
  },
  "+Variable": [453],
  NestedType: {
    "": "Object;outer@-474,inner@-494",
    get$isDynamic: [function() {
      return this.outer.get$isDynamic();
    }, null, null, 1, 0, 108, "isDynamic"],
    NestedType$1: [function(yaml) {
      var t1, t2, t3, innerMap;
      if (yaml == null) {
        t1 = new E.LinkableType(null);
        t2 = new Y.DocsLocation(null, null, null, null, null);
        t2._extractPieces$1("void");
        t1.loc = t2;
        this.outer = t1;
      } else {
        t1 = J.getInterceptor$asx(yaml);
        t2 = new E.LinkableType(null);
        t3 = new Y.DocsLocation(null, null, null, null, null);
        t3._extractPieces$1(t1.$index(yaml, "outer"));
        t2.loc = t3;
        this.outer = t2;
        innerMap = t1.$index(yaml, "inner");
        if (innerMap != null)
          J.forEach$1$ax(innerMap, new E.NestedType_closure(this));
      }
    }, null, null, 2, 0, 127, 123, ""],
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {NestedType$: [function(yaml) {
        var t1 = new E.NestedType(null, []);
        t1.NestedType$1(yaml);
        return t1;
      }, null, null, 2, 0, 127, 123, "new NestedType" /* new NestedType:1:0 */]}
  },
  "+NestedType": [0],
  NestedType_closure: {
    "": "Closure:271;this_0-77",
    call$1: [function(element) {
      return J.add$1$ax(this.this_0.get$inner(), E.NestedType$(element));
    }, "call$1", null, 2, 0, 271, 169, "call"],
    $isFunction: true
  },
  "+NestedType_closure": [449],
  LinkableType: {
    "": "Object;loc@-495",
    get$isDocumented: [function() {
      return $.get$searchIndex()._search$_map.containsKey$1(this.loc.get$withoutAnchor());
    }, null, null, 1, 0, 437, "isDocumented"],
    get$simpleType: [function() {
      var t1 = this.loc.get$locationWithoutAnchor();
      return t1.get$name(t1);
    }, null, null, 1, 0, 435, "simpleType"],
    get$location: [function(_) {
      return this.loc.get$withoutAnchor();
    }, null, null, 1, 0, 435, "location"],
    get$qualifiedName: [function() {
      return this.loc.get$withoutAnchor();
    }, null, null, 1, 0, 435, "qualifiedName"],
    get$isDynamic: [function() {
      var t1 = this.loc.get$locationWithoutAnchor();
      return J.$eq(t1.get$name(t1), "dynamic");
    }, null, null, 1, 0, 108, "isDynamic"],
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {LinkableType$: [function(type) {
        var t1, t2;
        t1 = new E.LinkableType(null);
        t2 = new Y.DocsLocation(null, null, null, null, null);
        t2._extractPieces$1(type);
        t1.loc = t2;
        return t1;
      }, null, null, 2, 0, 25, 11, "new LinkableType" /* new LinkableType:1:0 */]}
  },
  "+LinkableType": [0],
  "": ["docsPath<-77", function() {
    return [C.C_Reflectable];
  }]
}],
["composer", "package:yaml/src/composer.dart", , T, {
  "": "",
  Composer: {
    "": "Visitor;_composer$_root,_anchors,_idCounter",
    visitAlias$1: [function(alias) {
      var t1 = this._anchors;
      if (!t1.containsKey$1(alias.anchor))
        throw H.wrapException(K.YamlException$("no anchor for alias " + H.S(alias.anchor)));
      return t1.$index(0, alias.anchor);
    }, "call$1", "get$visitAlias", 2, 0, null, 496],
    visitScalar$1: [function(scalar) {
      var t1, t2, t3, fn, result, tagParsers, key;
      if (J.$eq(J.get$name$x(scalar.tag), "!") === true) {
        t1 = scalar._model$_content;
        t1 = t1 != null ? t1 : scalar.get$canonicalContent();
        return this.setAnchor$2(scalar, new R.ScalarNode(null, t1, new R.Tag("tag:yaml.org,2002:str", 0), null));
      } else if (J.$eq(J.get$name$x(scalar.tag), "?") === true) {
        for (t1 = [this.get$parseNull(), this.get$parseBool(), this.get$parseInt(), this.get$parseFloat()], t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, 4, 0, null), [H.getTypeArgumentByIndex(t1, 0)]), t2 = scalar._model$_content, t3 = t2 != null; t1.moveNext$0();) {
          fn = t1._current;
          result = fn.call$1(t3 ? t2 : scalar.get$canonicalContent());
          if (result != null)
            return result;
        }
        t1 = t3 ? t2 : scalar.get$canonicalContent();
        return this.setAnchor$2(scalar, new R.ScalarNode(null, t1, new R.Tag("tag:yaml.org,2002:str", 0), null));
      }
      tagParsers = H.fillLiteralMap(["null", this.get$parseNull(), "bool", this.get$parseBool(), "int", this.get$parseInt(), "float", this.get$parseFloat(), "str", this.get$parseString()], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
      for (t1 = tagParsers.get$keys(), t2 = t1._collection$_map, t1 = H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterator(t2, t2._modifications, null, null), [H.getTypeArgumentByIndex(t1, 0)]), t1._cell = t1._collection$_map._first; t1.moveNext$0();) {
        key = t1._collection$_current;
        if (J.$eq(J.get$name$x(scalar.tag), "tag:yaml.org,2002:" + H.S(key)) !== true)
          continue;
        t1 = tagParsers.$index(0, key);
        t2 = scalar._model$_content;
        t3 = t2 != null;
        result = t1.call$1(t3 ? t2 : scalar.get$canonicalContent());
        if (result != null)
          return this.setAnchor$2(scalar, result);
        t1 = "invalid literal for " + H.S(key) + ": \"";
        throw H.wrapException(K.YamlException$(t1 + H.S(t3 ? t2 : scalar.get$canonicalContent()) + "\""));
      }
      throw H.wrapException(K.YamlException$("undefined tag: \"" + H.S(J.get$name$x(scalar.tag)) + "\""));
    }, "call$1", "get$visitScalar", 2, 0, null, 497],
    visitSequence$1: [function(seq) {
      var tagName, t1, result;
      tagName = J.get$name$x(seq.tag);
      t1 = J.getInterceptor(tagName);
      if (t1.$eq(tagName, "!") !== true && t1.$eq(tagName, "?") !== true && t1.$eq(tagName, "tag:yaml.org,2002:seq") !== true)
        throw H.wrapException(K.YamlException$("invalid tag for sequence: " + H.S(tagName)));
      result = this.setAnchor$2(seq, new R.SequenceNode(null, new R.Tag("tag:yaml.org,2002:seq", 1), null));
      J.set$content$x(result, O.Visitor.prototype.visitSequence$1.call(this, seq));
      return result;
    }, "call$1", "get$visitSequence", 2, 0, null, 498],
    visitMapping$1: [function(map) {
      var tagName, t1, result;
      tagName = J.get$name$x(map.tag);
      t1 = J.getInterceptor(tagName);
      if (t1.$eq(tagName, "!") !== true && t1.$eq(tagName, "?") !== true && t1.$eq(tagName, "tag:yaml.org,2002:map") !== true)
        throw H.wrapException(K.YamlException$("invalid tag for mapping: " + H.S(tagName)));
      result = this.setAnchor$2(map, new R.MappingNode(null, new R.Tag("tag:yaml.org,2002:map", 2), null));
      J.set$content$x(result, O.Visitor.prototype.visitMapping$1.call(this, map));
      return result;
    }, "call$1", "get$visitMapping", 2, 0, null, 140],
    setAnchor$2: [function(anchored, result) {
      var t1;
      if (anchored.anchor == null)
        return result;
      t1 = this._idCounter;
      this._idCounter = t1 + 1;
      result.set$anchor("" + t1);
      this._anchors.$indexSet(0, anchored.anchor, result);
      return result;
    }, "call$2", "get$setAnchor", 4, 0, null, 499, 51],
    parseNull$1: [function($content) {
      var t1 = H.JSSyntaxRegExp_makeNative("^(null|Null|NULL|~|)$", false, true, false);
      if (typeof $content !== "string")
        H.throwExpression(new P.ArgumentError($content));
      if (!t1.test($content))
        return;
      return new R.ScalarNode(null, null, new R.Tag("tag:yaml.org,2002:null", 0), null);
    }, "call$1", "get$parseNull", 2, 0, 500, 345],
    parseBool$1: [function($content) {
      var match, t1;
      match = new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^(?:(true|True|TRUE)|(false|False|FALSE))$", false, true, false), null, null).firstMatch$1($content);
      if (match == null)
        return;
      t1 = match._match;
      if (1 >= t1.length)
        return H.ioore(t1, 1);
      return new R.ScalarNode(null, t1[1] != null, new R.Tag("tag:yaml.org,2002:bool", 0), null);
    }, "call$1", "get$parseBool", 2, 0, 500, 345],
    parseInt$1: [function($content) {
      var match, t1;
      match = new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^[-+]?[0-9]+$", false, true, false), null, null).firstMatch$1($content);
      if (match != null) {
        t1 = match._match;
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        return new R.ScalarNode(null, H.Primitives_parseInt(t1[0], null, null), new R.Tag("tag:yaml.org,2002:int", 0), null);
      }
      match = new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^0o([0-7]+)$", false, true, false), null, null).firstMatch$1($content);
      if (match != null) {
        t1 = match._match;
        if (1 >= t1.length)
          return H.ioore(t1, 1);
        return new R.ScalarNode(null, H.Primitives_parseInt(t1[1], 8, null), new R.Tag("tag:yaml.org,2002:int", 0), null);
      }
      match = new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^0x[0-9a-fA-F]+$", false, true, false), null, null).firstMatch$1($content);
      if (match != null) {
        t1 = match._match;
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        return new R.ScalarNode(null, H.Primitives_parseInt(t1[0], null, null), new R.Tag("tag:yaml.org,2002:int", 0), null);
      }
      return;
    }, "call$1", "get$parseInt", 2, 0, 500, 345],
    parseFloat$1: [function($content) {
      var match, t1, value;
      match = new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^[-+]?(\\.[0-9]+|[0-9]+(\\.[0-9]*)?)([eE][-+]?[0-9]+)?$", false, true, false), null, null).firstMatch$1($content);
      if (match != null) {
        t1 = match._match;
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        return new R.ScalarNode(null, H.Primitives_parseDouble(J.replaceAll$2$s(t1[0], new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("\\.$", false, true, false), null, null), ""), null), new R.Tag("tag:yaml.org,2002:float", 0), null);
      }
      match = new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^([+-]?)\\.(inf|Inf|INF)$", false, true, false), null, null).firstMatch$1($content);
      if (match != null) {
        t1 = match._match;
        if (1 >= t1.length)
          return H.ioore(t1, 1);
        value = J.$eq(t1[1], "-") === true ? -1 / 0 : 1 / 0;
        return new R.ScalarNode(null, value, new R.Tag("tag:yaml.org,2002:float", 0), null);
      }
      if (new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^\\.(nan|NaN|NAN)$", false, true, false), null, null).firstMatch$1($content) != null)
        return new R.ScalarNode(null, 0 / 0, new R.Tag("tag:yaml.org,2002:float", 0), null);
      return;
    }, "call$1", "get$parseFloat", 2, 0, 500, 345],
    parseString$1: [function($content) {
      return new R.ScalarNode(null, $content, new R.Tag("tag:yaml.org,2002:str", 0), null);
    }, "call$1", "get$parseString", 2, 0, 500, 345]
  }
}],
["constructor", "package:yaml/src/constructor.dart", , T, {
  "": "",
  Constructor: {
    "": "Visitor;_$constructor$_root,_$constructor$_anchors",
    visitScalar$1: [function(scalar) {
      return scalar.value;
    }, "call$1", "get$visitScalar", 2, 0, null, 497],
    visitSequence$1: [function(seq) {
      var anchor, dartSeq;
      anchor = this.getAnchor$1(seq);
      if (anchor != null)
        return anchor;
      dartSeq = this.setAnchor$2(seq, []);
      J.addAll$1$ax(dartSeq, O.Visitor.prototype.visitSequence$1.call(this, seq));
      return dartSeq;
    }, "call$1", "get$visitSequence", 2, 0, null, 498],
    visitMapping$1: [function(map) {
      var anchor, dartMap;
      anchor = this.getAnchor$1(map);
      if (anchor != null)
        return anchor;
      dartMap = this.setAnchor$2(map, new L.YamlMap(P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
      O.Visitor.prototype.visitMapping$1.call(this, map).forEach$1(0, new T.Constructor_visitMapping_closure(dartMap));
      return dartMap;
    }, "call$1", "get$visitMapping", 2, 0, null, 140],
    getAnchor$1: [function(anchored) {
      var t1, t2;
      t1 = anchored.anchor;
      if (t1 == null)
        return;
      t2 = this._$constructor$_anchors;
      if (t2.containsKey$1(t1))
        return t2.$index(0, anchored.anchor);
    }, "call$1", "get$getAnchor", 2, 0, null, 499],
    setAnchor$2: [function(anchored, value) {
      var t1 = anchored.anchor;
      if (t1 == null)
        return value;
      this._$constructor$_anchors.$indexSet(0, t1, value);
      return value;
    }, "call$2", "get$setAnchor", 4, 0, null, 499, 23]
  },
  Constructor_visitMapping_closure: {
    "": "Closure:426;dartMap_0",
    call$2: [function(k, v) {
      J.$indexSet$ax(this.dartMap_0, k, v);
    }, "call$2", null, 4, 0, null, 501, 326, "call"],
    $isFunction: true
  }
}],
["custom_element.polyfill", "package:custom_element/polyfill.dart", , B, {
  "": "",
  _isReady: function() {
    var t1, customElements;
    t1 = $.get$context();
    if (t1 == null)
      return true;
    customElements = J.$index$asx(t1, "CustomElements");
    if (customElements == null)
      return "register" in document;
    return J.$eq(J.$index$asx(customElements, "ready"), true);
  },
  closure: {
    "": "Closure:108;",
    call$0: [function() {
      if (B._isReady() === true)
        return P._Future$immediate(null, null);
      var t1 = H.setRuntimeTypeInfo(new W._EventStream(document, "WebComponentsReady", false), [null]);
      return t1.get$first(t1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  }
}],
["dart._internal", "dart:_internal", , H, {
  "": "",
  IterableMixinWorkaround_forEach: [function(iterable, f) {
    var t1;
    for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(iterable, iterable.length, 0, null), [H.getTypeArgumentByIndex(iterable, 0)]); t1.moveNext$0();)
      f.call$1(t1._current);
  }, "call$2", "IterableMixinWorkaround_forEach$closure", 4, 0, null, 153, 154],
  IterableMixinWorkaround_any: [function(iterable, f) {
    var t1;
    for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(iterable, iterable.length, 0, null), [H.getTypeArgumentByIndex(iterable, 0)]); t1.moveNext$0();)
      if (f.call$1(t1._current) === true)
        return true;
    return false;
  }, "call$2", "IterableMixinWorkaround_any$closure", 4, 0, null, 153, 154],
  IterableMixinWorkaround_fold: [function(iterable, initialValue, combine) {
    var t1;
    for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(iterable, iterable.length, 0, null), [H.getTypeArgumentByIndex(iterable, 0)]); t1.moveNext$0();)
      initialValue = combine.call$2(initialValue, t1._current);
    return initialValue;
  }, "call$3", "IterableMixinWorkaround_fold$closure", 6, 0, null, 153, 155, 156],
  IterableMixinWorkaround_firstWhere: [function(iterable, test, orElse) {
    var t1, element;
    for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(iterable, iterable.length, 0, null), [H.getTypeArgumentByIndex(iterable, 0)]); t1.moveNext$0();) {
      element = t1._current;
      if (test.call$1(element) === true)
        return element;
    }
    if (orElse != null)
      return orElse.call$0();
    throw H.wrapException(new P.StateError("No matching element"));
  }, "call$3", "IterableMixinWorkaround_firstWhere$closure", 6, 0, null, 153, 157, 158],
  IterableMixinWorkaround_toStringIterable: [function(iterable, leftDelimiter, rightDelimiter) {
    var result, i, t1;
    for (i = 0; t1 = $.get$IterableMixinWorkaround__toStringList(), i < t1.length; ++i)
      if (t1[i] === iterable)
        return H.S(leftDelimiter) + "..." + H.S(rightDelimiter);
    result = P.StringBuffer$("");
    try {
      $.get$IterableMixinWorkaround__toStringList().push(iterable);
      result.write$1(leftDelimiter);
      result.writeAll$2(iterable, ", ");
      result.write$1(rightDelimiter);
    } finally {
      t1 = $.get$IterableMixinWorkaround__toStringList();
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1.pop();
    }
    return result.get$_contents();
  }, "call$3", "IterableMixinWorkaround_toStringIterable$closure", 6, 0, null, 153, 159, 160],
  IterableMixinWorkaround__rangeCheck: [function(list, start, end) {
    var t1 = J.getInterceptor$n(start);
    if (t1.$lt(start, 0) || t1.$gt(start, list.length))
      throw H.wrapException(P.RangeError$range(start, 0, list.length));
    t1 = J.getInterceptor$n(end);
    if (t1.$lt(end, start) || t1.$gt(end, list.length))
      throw H.wrapException(P.RangeError$range(end, start, list.length));
  }, "call$3", "IterableMixinWorkaround__rangeCheck$closure", 6, 0, null, 68, 161, 162],
  IterableMixinWorkaround_setRangeList: [function(list, start, end, from, skipCount) {
    var $length, t1;
    H.IterableMixinWorkaround__rangeCheck(list, start, end);
    $length = J.$sub$n(end, start);
    if (J.$eq($length, 0))
      return;
    t1 = J.getInterceptor$n(skipCount);
    if (t1.$lt(skipCount, 0))
      throw H.wrapException(new P.ArgumentError(skipCount));
    if (J.$gt$n(t1.$add(skipCount, $length), J.get$length$asx(from)))
      throw H.wrapException(P.StateError$("Not enough elements"));
    H.Lists_copy(from, skipCount, list, start, $length);
  }, "call$5", "IterableMixinWorkaround_setRangeList$closure", 10, 0, null, 68, 161, 162, 105, 163],
  IterableMixinWorkaround_insertAllList: [function(list, index, iterable) {
    var t1, t2, insertionLength, t3, element, index0;
    t1 = J.getInterceptor$n(index);
    if (t1.$lt(index, 0) || t1.$gt(index, list.length))
      throw H.wrapException(P.RangeError$range(index, 0, list.length));
    t2 = J.getInterceptor$asx(iterable);
    insertionLength = t2.get$length(iterable);
    t3 = list.length;
    if (typeof insertionLength !== "number")
      return H.iae(insertionLength);
    C.JSArray_methods.set$length(list, t3 + insertionLength);
    t1 = t1.$add(index, insertionLength);
    t3 = list.length;
    if (!!list.immutable$list)
      H.throwExpression(P.UnsupportedError$("set range"));
    H.IterableMixinWorkaround_setRangeList(list, t1, t3, list, index);
    for (t1 = t2.get$iterator(iterable); t1.moveNext$0(); index = index0) {
      element = t1._current;
      index0 = J.$add$ns(index, 1);
      C.JSArray_methods.$indexSet(list, index, element);
    }
  }, "call$3", "IterableMixinWorkaround_insertAllList$closure", 6, 0, null, 68, 47, 153],
  Lists_copy: [function(src, srcStart, dst, dstStart, count) {
    var t1, i, j, t2, t3;
    t1 = J.getInterceptor$n(srcStart);
    if (t1.$lt(srcStart, dstStart))
      for (i = J.$sub$n(t1.$add(srcStart, count), 1), j = J.$sub$n(J.$add$ns(dstStart, count), 1), t1 = J.getInterceptor$asx(src); t2 = J.getInterceptor$n(i), t2.$ge(i, srcStart); i = t2.$sub(i, 1), j = J.$sub$n(j, 1))
        C.JSArray_methods.$indexSet(dst, j, t1.$index(src, i));
    else
      for (t2 = J.getInterceptor$asx(src), j = dstStart, i = srcStart; t3 = J.getInterceptor$n(i), t3.$lt(i, t1.$add(srcStart, count)); i = t3.$add(i, 1), j = J.$add$ns(j, 1))
        C.JSArray_methods.$indexSet(dst, j, t2.$index(src, i));
  }, "call$5", "Lists_copy$closure", 10, 0, null, 164, 165, 166, 167, 168],
  Lists_indexOf: [function(a, element, startIndex, endIndex) {
    var i;
    if (startIndex >= a.length)
      return -1;
    for (i = startIndex; i < endIndex; ++i) {
      if (i >= a.length)
        return H.ioore(a, i);
      if (J.$eq(a[i], element) === true)
        return i;
    }
    return -1;
  }, "call$4", "Lists_indexOf$closure", 8, 0, null, 133, 169, 80, 170],
  Lists_lastIndexOf: [function(a, element, startIndex) {
    var t1, i;
    if (typeof startIndex !== "number")
      return startIndex.$lt();
    if (startIndex < 0)
      return -1;
    t1 = a.length;
    if (startIndex >= t1)
      startIndex = t1 - 1;
    for (i = startIndex; i >= 0; --i) {
      if (i >= a.length)
        return H.ioore(a, i);
      if (J.$eq(a[i], element) === true)
        return i;
    }
    return -1;
  }, "call$3", "Lists_lastIndexOf$closure", 6, 0, null, 133, 169, 80],
  Sort__doSort: [function(a, left, right, compare) {
    if (J.$le$n(J.$sub$n(right, left), 32))
      H.Sort__insertionSort(a, left, right, compare);
    else
      H.Sort__dualPivotQuicksort(a, left, right, compare);
  }, "call$4", "Sort__doSort$closure", 8, 0, null, 133, 171, 172, 173],
  Sort__insertionSort: [function(a, left, right, compare) {
    var i, t1, t2, el, j, t3;
    for (i = J.$add$ns(left, 1), t1 = J.getInterceptor$asx(a); t2 = J.getInterceptor$n(i), t2.$le(i, right); i = t2.$add(i, 1)) {
      el = t1.$index(a, i);
      j = i;
      while (true) {
        t3 = J.getInterceptor$n(j);
        if (!(t3.$gt(j, left) && J.$gt$n(compare.call$2(t1.$index(a, t3.$sub(j, 1)), el), 0)))
          break;
        t1.$indexSet(a, j, t1.$index(a, t3.$sub(j, 1)));
        j = t3.$sub(j, 1);
      }
      t1.$indexSet(a, j, el);
    }
  }, "call$4", "Sort__insertionSort$closure", 8, 0, null, 133, 171, 172, 173],
  Sort__dualPivotQuicksort: [function(a, left, right, compare) {
    var t1, sixth, t2, index1, index5, index3, t3, index2, index4, el1, el2, el3, el4, el5, t0, less, great, k, ak, comp, t4, t5, less0, great0;
    t1 = J.getInterceptor$n(right);
    sixth = J.$tdiv$n(J.$add$ns(t1.$sub(right, left), 1), 6);
    t2 = J.getInterceptor$ns(left);
    index1 = t2.$add(left, sixth);
    index5 = t1.$sub(right, sixth);
    index3 = J.$tdiv$n(t2.$add(left, right), 2);
    t3 = J.getInterceptor$n(index3);
    index2 = t3.$sub(index3, sixth);
    index4 = t3.$add(index3, sixth);
    t3 = J.getInterceptor$asx(a);
    el1 = t3.$index(a, index1);
    el2 = t3.$index(a, index2);
    el3 = t3.$index(a, index3);
    el4 = t3.$index(a, index4);
    el5 = t3.$index(a, index5);
    if (J.$gt$n(compare.call$2(el1, el2), 0)) {
      t0 = el2;
      el2 = el1;
      el1 = t0;
    }
    if (J.$gt$n(compare.call$2(el4, el5), 0)) {
      t0 = el5;
      el5 = el4;
      el4 = t0;
    }
    if (J.$gt$n(compare.call$2(el1, el3), 0)) {
      t0 = el3;
      el3 = el1;
      el1 = t0;
    }
    if (J.$gt$n(compare.call$2(el2, el3), 0)) {
      t0 = el3;
      el3 = el2;
      el2 = t0;
    }
    if (J.$gt$n(compare.call$2(el1, el4), 0)) {
      t0 = el4;
      el4 = el1;
      el1 = t0;
    }
    if (J.$gt$n(compare.call$2(el3, el4), 0)) {
      t0 = el4;
      el4 = el3;
      el3 = t0;
    }
    if (J.$gt$n(compare.call$2(el2, el5), 0)) {
      t0 = el5;
      el5 = el2;
      el2 = t0;
    }
    if (J.$gt$n(compare.call$2(el2, el3), 0)) {
      t0 = el3;
      el3 = el2;
      el2 = t0;
    }
    if (J.$gt$n(compare.call$2(el4, el5), 0)) {
      t0 = el5;
      el5 = el4;
      el4 = t0;
    }
    t3.$indexSet(a, index1, el1);
    t3.$indexSet(a, index3, el3);
    t3.$indexSet(a, index5, el5);
    t3.$indexSet(a, index2, t3.$index(a, left));
    t3.$indexSet(a, index4, t3.$index(a, right));
    less = t2.$add(left, 1);
    great = t1.$sub(right, 1);
    t1 = J.$eq(compare.call$2(el2, el4), 0) === true;
    if (t1)
      for (k = less; t2 = J.getInterceptor$n(k), t2.$le(k, great); k = t2.$add(k, 1)) {
        ak = t3.$index(a, k);
        comp = compare.call$2(ak, el2);
        t4 = J.getInterceptor(comp);
        if (t4.$eq(comp, 0) === true)
          continue;
        if (t4.$lt(comp, 0)) {
          if (!t2.$eq(k, less)) {
            t3.$indexSet(a, k, t3.$index(a, less));
            t3.$indexSet(a, less, ak);
          }
          less = J.$add$ns(less, 1);
        } else
          for (; true;) {
            comp = compare.call$2(t3.$index(a, great), el2);
            t4 = J.getInterceptor$n(comp);
            if (t4.$gt(comp, 0)) {
              great = J.$sub$n(great, 1);
              continue;
            } else {
              t5 = J.getInterceptor$n(great);
              if (t4.$lt(comp, 0)) {
                t3.$indexSet(a, k, t3.$index(a, less));
                less0 = J.$add$ns(less, 1);
                t3.$indexSet(a, less, t3.$index(a, great));
                great0 = t5.$sub(great, 1);
                t3.$indexSet(a, great, ak);
                great = great0;
                less = less0;
                break;
              } else {
                t3.$indexSet(a, k, t3.$index(a, great));
                great0 = t5.$sub(great, 1);
                t3.$indexSet(a, great, ak);
                great = great0;
                break;
              }
            }
          }
      }
    else
      for (k = less; t2 = J.getInterceptor$n(k), t2.$le(k, great); k = t2.$add(k, 1)) {
        ak = t3.$index(a, k);
        if (J.$lt$n(compare.call$2(ak, el2), 0)) {
          if (!t2.$eq(k, less)) {
            t3.$indexSet(a, k, t3.$index(a, less));
            t3.$indexSet(a, less, ak);
          }
          less = J.$add$ns(less, 1);
        } else if (J.$gt$n(compare.call$2(ak, el4), 0))
          for (; true;)
            if (J.$gt$n(compare.call$2(t3.$index(a, great), el4), 0)) {
              great = J.$sub$n(great, 1);
              if (J.$lt$n(great, k))
                break;
              continue;
            } else {
              t4 = J.getInterceptor$n(great);
              if (J.$lt$n(compare.call$2(t3.$index(a, great), el2), 0)) {
                t3.$indexSet(a, k, t3.$index(a, less));
                less0 = J.$add$ns(less, 1);
                t3.$indexSet(a, less, t3.$index(a, great));
                great0 = t4.$sub(great, 1);
                t3.$indexSet(a, great, ak);
                great = great0;
                less = less0;
              } else {
                t3.$indexSet(a, k, t3.$index(a, great));
                great0 = t4.$sub(great, 1);
                t3.$indexSet(a, great, ak);
                great = great0;
              }
              break;
            }
      }
    t2 = J.getInterceptor$n(less);
    t3.$indexSet(a, left, t3.$index(a, t2.$sub(less, 1)));
    t3.$indexSet(a, t2.$sub(less, 1), el2);
    t4 = J.getInterceptor$ns(great);
    t3.$indexSet(a, right, t3.$index(a, t4.$add(great, 1)));
    t3.$indexSet(a, t4.$add(great, 1), el4);
    H.Sort__doSort(a, left, t2.$sub(less, 2), compare);
    H.Sort__doSort(a, t4.$add(great, 2), right, compare);
    if (t1)
      return;
    if (t2.$lt(less, index1) && t4.$gt(great, index5)) {
      for (; J.$eq(compare.call$2(t3.$index(a, less), el2), 0) === true;)
        less = J.$add$ns(less, 1);
      for (; J.$eq(compare.call$2(t3.$index(a, great), el4), 0) === true;)
        great = J.$sub$n(great, 1);
      for (k = less; t1 = J.getInterceptor$n(k), t1.$le(k, great); k = t1.$add(k, 1)) {
        ak = t3.$index(a, k);
        if (J.$eq(compare.call$2(ak, el2), 0) === true) {
          if (!t1.$eq(k, less)) {
            t3.$indexSet(a, k, t3.$index(a, less));
            t3.$indexSet(a, less, ak);
          }
          less = J.$add$ns(less, 1);
        } else if (J.$eq(compare.call$2(ak, el4), 0) === true)
          for (; true;)
            if (J.$eq(compare.call$2(t3.$index(a, great), el4), 0) === true) {
              great = J.$sub$n(great, 1);
              if (J.$lt$n(great, k))
                break;
              continue;
            } else {
              t2 = J.getInterceptor$n(great);
              if (J.$lt$n(compare.call$2(t3.$index(a, great), el2), 0)) {
                t3.$indexSet(a, k, t3.$index(a, less));
                less0 = J.$add$ns(less, 1);
                t3.$indexSet(a, less, t3.$index(a, great));
                great0 = t2.$sub(great, 1);
                t3.$indexSet(a, great, ak);
                great = great0;
                less = less0;
              } else {
                t3.$indexSet(a, k, t3.$index(a, great));
                great0 = t2.$sub(great, 1);
                t3.$indexSet(a, great, ak);
                great = great0;
              }
              break;
            }
      }
      H.Sort__doSort(a, less, great, compare);
    } else
      H.Sort__doSort(a, less, great, compare);
  }, "call$4", "Sort__dualPivotQuicksort$closure", 8, 0, null, 133, 171, 172, 173],
  ListIterable: {
    "": "IterableBase;",
    get$iterator: function(_) {
      return H.setRuntimeTypeInfo(new H.ListIterator(this, this.get$length(this), 0, null), [H.getRuntimeTypeArgument(this, "ListIterable", 0)]);
    },
    forEach$1: [function(_, action) {
      var $length, i;
      $length = this.get$length(this);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        action.call$1(this.elementAt$1(0, i));
        if ($length !== this.get$length(this))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
    }, "call$1", "get$forEach", 2, 0, null, 502],
    get$isEmpty: function(_) {
      return J.$eq(this.get$length(this), 0);
    },
    get$first: function(_) {
      if (J.$eq(this.get$length(this), 0) === true)
        throw H.wrapException(new P.StateError("No elements"));
      return this.elementAt$1(0, 0);
    },
    get$last: function(_) {
      if (J.$eq(this.get$length(this), 0) === true)
        throw H.wrapException(new P.StateError("No elements"));
      return this.elementAt$1(0, J.$sub$n(this.get$length(this), 1));
    },
    contains$1: [function(_, element) {
      var $length, i;
      $length = this.get$length(this);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        if (J.$eq(this.elementAt$1(0, i), element) === true)
          return true;
        if ($length !== this.get$length(this))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      return false;
    }, "call$1", "get$contains", 2, 0, null, 169],
    any$1: [function(_, test) {
      var $length, i;
      $length = this.get$length(this);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        if (test.call$1(this.elementAt$1(0, i)) === true)
          return true;
        if ($length !== this.get$length(this))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      return false;
    }, "call$1", "get$any", 2, 0, null, 157],
    firstWhere$2$orElse: [function(_, test, orElse) {
      var $length, i, element;
      $length = this.get$length(this);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        element = this.elementAt$1(0, i);
        if (test.call$1(element) === true)
          return element;
        if ($length !== this.get$length(this))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      if (orElse != null)
        return orElse.call$0();
      throw H.wrapException(new P.StateError("No matching element"));
    }, function($receiver, test) {
      return this.firstWhere$2$orElse($receiver, test, null);
    }, "firstWhere$1", "call$2$orElse", null, "get$firstWhere", 2, 3, null, 77, 157, 158],
    join$1: [function(_, separator) {
      var $length, t1, first, buffer, i, str;
      $length = this.get$length(this);
      if (separator.length !== 0) {
        t1 = J.getInterceptor($length);
        if (t1.$eq($length, 0) === true)
          return "";
        first = H.S(this.elementAt$1(0, 0));
        if (t1.$eq($length, this.get$length(this)) !== true)
          throw H.wrapException(P.ConcurrentModificationError$(this));
        buffer = P.StringBuffer$(first);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 1;
        for (; i < $length; ++i) {
          buffer._contents = buffer._contents + separator;
          str = this.elementAt$1(0, i);
          str = typeof str === "string" ? str : H.S(str);
          buffer._contents = buffer._contents + str;
          if ($length !== this.get$length(this))
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
        return buffer._contents;
      } else {
        buffer = P.StringBuffer$("");
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          str = this.elementAt$1(0, i);
          str = typeof str === "string" ? str : H.S(str);
          buffer._contents = buffer._contents + str;
          if ($length !== this.get$length(this))
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
        return buffer._contents;
      }
    }, function($receiver) {
      return this.join$1($receiver, "");
    }, "join$0", "call$1", null, "get$join", 0, 2, null, 122, 412],
    where$1: [function(_, test) {
      return P.IterableBase.prototype.where$1.call(this, this, test);
    }, "call$1", "get$where", 2, 0, null, 157],
    map$1: [function(_, f) {
      return H.setRuntimeTypeInfo(new H.MappedListIterable(this, f), [null, null]);
    }, "call$1", "get$map", 2, 0, null, 154],
    fold$2: [function(_, initialValue, combine) {
      var $length, value, i;
      $length = this.get$length(this);
      if (typeof $length !== "number")
        return H.iae($length);
      value = initialValue;
      i = 0;
      for (; i < $length; ++i) {
        value = combine.call$2(value, this.elementAt$1(0, i));
        if ($length !== this.get$length(this))
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
      return value;
    }, "call$2", "get$fold", 4, 0, null, 155, 156],
    skip$1: [function(_, count) {
      return H.SubListIterable$(this, count, null, null);
    }, "call$1", "get$skip", 2, 0, null, 168],
    take$1: [function(_, count) {
      return H.SubListIterable$(this, 0, count, null);
    }, "call$1", "get$take", 2, 0, null, 168],
    toList$1$growable: [function(_, growable) {
      var result, t1, i;
      if (growable) {
        result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgument(this, "ListIterable", 0)]);
        C.JSArray_methods.set$length(result, this.get$length(this));
      } else {
        t1 = this.get$length(this);
        if (typeof t1 !== "number")
          return H.iae(t1);
        t1 = Array(t1);
        t1.fixed$length = init;
        result = H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(this, "ListIterable", 0)]);
      }
      i = 0;
      while (true) {
        t1 = this.get$length(this);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        t1 = this.elementAt$1(0, i);
        if (i >= result.length)
          return H.ioore(result, i);
        result[i] = t1;
        ++i;
      }
      return result;
    }, function($receiver) {
      return this.toList$1$growable($receiver, true);
    }, "toList$0", "call$1$growable", null, "get$toList", 0, 3, null, 414, 415],
    $isEfficientLength: true
  },
  SubListIterable: {
    "": "ListIterable;_iterable,_start,_endOrLength",
    get$_endIndex: function() {
      var $length, t1;
      $length = J.get$length$asx(this._iterable);
      t1 = this._endOrLength;
      if (t1 == null || J.$gt$n(t1, $length))
        return $length;
      return t1;
    },
    get$_startIndex: function() {
      var $length, t1;
      $length = J.get$length$asx(this._iterable);
      t1 = this._start;
      if (J.$gt$n(t1, $length))
        return $length;
      return t1;
    },
    get$length: function(_) {
      var $length, t1, t2;
      $length = J.get$length$asx(this._iterable);
      t1 = this._start;
      if (J.$ge$n(t1, $length))
        return 0;
      t2 = this._endOrLength;
      if (t2 == null || J.$ge$n(t2, $length))
        return J.$sub$n($length, t1);
      return J.$sub$n(t2, t1);
    },
    elementAt$1: [function(_, index) {
      var realIndex = J.$add$ns(this.get$_startIndex(), index);
      if (J.$lt$n(index, 0) || J.$ge$n(realIndex, this.get$_endIndex()))
        throw H.wrapException(P.RangeError$range(index, 0, this.get$length(this)));
      return J.elementAt$1$ax(this._iterable, realIndex);
    }, "call$1", "get$elementAt", 2, 0, null, 47],
    skip$1: [function(_, count) {
      return H.SubListIterable$(this._iterable, J.$add$ns(this._start, count), this._endOrLength, null);
    }, "call$1", "get$skip", 2, 0, null, 168],
    take$1: [function(_, count) {
      var t1, t2, newEnd;
      if (J.$lt$n(count, 0))
        throw H.wrapException(P.RangeError$value(count));
      t1 = this._endOrLength;
      t2 = this._start;
      if (t1 == null)
        return H.SubListIterable$(this._iterable, t2, J.$add$ns(t2, count), null);
      else {
        newEnd = J.$add$ns(t2, count);
        if (J.$lt$n(t1, newEnd))
          return this;
        return H.SubListIterable$(this._iterable, t2, newEnd, null);
      }
    }, "call$1", "get$take", 2, 0, null, 168],
    SubListIterable$3: function(_iterable, _start, _endOrLength, $E) {
      var t1, t2, t3;
      t1 = this._start;
      t2 = J.getInterceptor$n(t1);
      if (t2.$lt(t1, 0))
        throw H.wrapException(P.RangeError$value(t1));
      t3 = this._endOrLength;
      if (t3 != null) {
        if (J.$lt$n(t3, 0))
          throw H.wrapException(P.RangeError$value(t3));
        if (t2.$gt(t1, t3))
          throw H.wrapException(P.RangeError$range(t1, 0, t3));
      }
    },
    static: {SubListIterable$: function(_iterable, _start, _endOrLength, $E) {
        var t1 = H.setRuntimeTypeInfo(new H.SubListIterable(_iterable, _start, _endOrLength), [$E]);
        t1.SubListIterable$3(_iterable, _start, _endOrLength, $E);
        return t1;
      }}
  },
  ListIterator: {
    "": "Object;_iterable,_length,_index,_current",
    get$current: function() {
      return this._current;
    },
    moveNext$0: [function() {
      var t1, t2, $length, t3;
      t1 = this._iterable;
      t2 = J.getInterceptor$asx(t1);
      $length = t2.get$length(t1);
      if (J.$eq(this._length, $length) !== true)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      t3 = this._index;
      if (typeof $length !== "number")
        return H.iae($length);
      if (t3 >= $length) {
        this._current = null;
        return false;
      }
      this._current = t2.elementAt$1(t1, t3);
      this._index = this._index + 1;
      return true;
    }, "call$0", "get$moveNext", 0, 0, null]
  },
  MappedIterable: {
    "": "IterableBase;_iterable,_f",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    get$iterator: function(_) {
      var t1 = new H.MappedIterator(null, J.get$iterator$ax(this._iterable), this._f);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    },
    get$length: function(_) {
      return J.get$length$asx(this._iterable);
    },
    get$isEmpty: function(_) {
      return J.get$isEmpty$asx(this._iterable);
    },
    get$first: function(_) {
      return this._f$1(J.get$first$ax(this._iterable));
    },
    get$last: function(_) {
      return this._f$1(J.get$last$ax(this._iterable));
    },
    elementAt$1: [function(_, index) {
      return this._f$1(J.elementAt$1$ax(this._iterable, index));
    }, "call$1", "get$elementAt", 2, 0, null, 47],
    $asIterableBase: function($S, $T) {
      return [$T];
    },
    $asIterable: function($S, $T) {
      return [$T];
    },
    static: {MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {
        var t1 = J.getInterceptor(iterable);
        if (typeof iterable === "object" && iterable !== null && !!t1.$isEfficientLength)
          return H.setRuntimeTypeInfo(new H.EfficientLengthMappedIterable(iterable, $function), [$S, $T]);
        return H.setRuntimeTypeInfo(new H.MappedIterable(iterable, $function), [$S, $T]);
      }}
  },
  EfficientLengthMappedIterable: {
    "": "MappedIterable;_iterable,_f",
    $isEfficientLength: true
  },
  MappedIterator: {
    "": "Iterator;_current,_iterator,_f",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    moveNext$0: [function() {
      var t1 = this._iterator;
      if (t1.moveNext$0()) {
        this._current = this._f$1(t1.get$current());
        return true;
      }
      this._current = null;
      return false;
    }, "call$0", "get$moveNext", 0, 0, null],
    get$current: function() {
      return this._current;
    },
    $asIterator: function($S, $T) {
      return [$T];
    }
  },
  MappedListIterable: {
    "": "ListIterable;_source,_f",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    get$length: function(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1: [function(_, index) {
      return this._f$1(J.elementAt$1$ax(this._source, index));
    }, "call$1", "get$elementAt", 2, 0, null, 47],
    $asListIterable: function($S, $T) {
      return [$T];
    },
    $asIterableBase: function($S, $T) {
      return [$T];
    },
    $asIterable: function($S, $T) {
      return [$T];
    },
    $isEfficientLength: true
  },
  WhereIterable: {
    "": "IterableBase;_iterable,_f",
    get$iterator: function(_) {
      var t1 = new H.WhereIterator(J.get$iterator$ax(this._iterable), this._f);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }
  },
  WhereIterator: {
    "": "Iterator;_iterator,_f",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    moveNext$0: [function() {
      for (var t1 = this._iterator; t1.moveNext$0();)
        if (this._f$1(t1.get$current()) === true)
          return true;
      return false;
    }, "call$0", "get$moveNext", 0, 0, null],
    get$current: function() {
      return this._iterator.get$current();
    }
  },
  ExpandIterable: {
    "": "IterableBase;_iterable,_f",
    get$iterator: function(_) {
      var t1 = new H.ExpandIterator(J.get$iterator$ax(this._iterable), this._f, C.C_EmptyIterator, null);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    },
    $asIterableBase: function($S, $T) {
      return [$T];
    },
    $asIterable: function($S, $T) {
      return [$T];
    }
  },
  ExpandIterator: {
    "": "Object;_iterator,_f,_currentExpansion,_current",
    _f$1: function(arg0) {
      return this._f.call$1(arg0);
    },
    get$current: function() {
      return this._current;
    },
    moveNext$0: [function() {
      var t1, t2;
      t1 = this._currentExpansion;
      if (t1 == null)
        return false;
      for (t2 = this._iterator; !t1.moveNext$0();) {
        this._current = null;
        if (t2.moveNext$0()) {
          this._currentExpansion = null;
          t1 = J.get$iterator$ax(this._f$1(t2.get$current()));
          this._currentExpansion = t1;
        } else
          return false;
      }
      this._current = this._currentExpansion.get$current();
      return true;
    }, "call$0", "get$moveNext", 0, 0, null]
  },
  TakeIterable: {
    "": "IterableBase;_iterable,_takeCount",
    get$iterator: function(_) {
      var t1 = this._iterable;
      t1 = new H.TakeIterator(t1.get$iterator(t1), this._takeCount);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    },
    static: {TakeIterable_TakeIterable: function(iterable, takeCount, $E) {
        if (!!iterable.$isEfficientLength)
          return H.setRuntimeTypeInfo(new H.EfficientLengthTakeIterable(iterable, takeCount), [$E]);
        return H.setRuntimeTypeInfo(new H.TakeIterable(iterable, takeCount), [$E]);
      }}
  },
  EfficientLengthTakeIterable: {
    "": "TakeIterable;_iterable,_takeCount",
    get$length: function(_) {
      var t1, iterableLength;
      t1 = this._iterable;
      iterableLength = t1.get$length(t1);
      t1 = this._takeCount;
      if (J.$gt$n(iterableLength, t1))
        return t1;
      return iterableLength;
    },
    $isEfficientLength: true
  },
  TakeIterator: {
    "": "Iterator;_iterator,__internal$_remaining",
    moveNext$0: [function() {
      var t1 = this.__internal$_remaining - 1;
      this.__internal$_remaining = t1;
      if (t1 >= 0)
        return this._iterator.moveNext$0();
      this.__internal$_remaining = -1;
      return false;
    }, "call$0", "get$moveNext", 0, 0, null],
    get$current: function() {
      if (this.__internal$_remaining < 0)
        return;
      return this._iterator.get$current();
    }
  },
  SkipIterable: {
    "": "IterableBase;_iterable,_skipCount",
    skip$1: [function(_, n) {
      return H.SkipIterable_SkipIterable(this._iterable, this._skipCount + n, H.getTypeArgumentByIndex(this, 0));
    }, "call$1", "get$skip", 2, 0, null, 347],
    get$iterator: function(_) {
      var t1 = this._iterable;
      t1 = new H.SkipIterator(t1.get$iterator(t1), this._skipCount);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    },
    SkipIterable$_$2: function(_iterable, _skipCount, $E) {
    },
    static: {SkipIterable_SkipIterable: function(iterable, skipCount, $E) {
        var t1;
        if (!!iterable.$isEfficientLength) {
          t1 = H.setRuntimeTypeInfo(new H.EfficientLengthSkipIterable(iterable, skipCount), [$E]);
          t1.SkipIterable$_$2(iterable, skipCount, $E);
          return t1;
        }
        return H.SkipIterable$_(iterable, skipCount, $E);
      }, SkipIterable$_: function(_iterable, _skipCount, $E) {
        var t1 = H.setRuntimeTypeInfo(new H.SkipIterable(_iterable, _skipCount), [$E]);
        t1.SkipIterable$_$2(_iterable, _skipCount, $E);
        return t1;
      }}
  },
  EfficientLengthSkipIterable: {
    "": "SkipIterable;_iterable,_skipCount",
    get$length: function(_) {
      var t1, $length;
      t1 = this._iterable;
      $length = J.$sub$n(t1.get$length(t1), this._skipCount);
      if (J.$ge$n($length, 0))
        return $length;
      return 0;
    },
    $isEfficientLength: true
  },
  SkipIterator: {
    "": "Iterator;_iterator,_skipCount",
    moveNext$0: [function() {
      var t1, i;
      for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
        t1.moveNext$0();
      this._skipCount = 0;
      return t1.moveNext$0();
    }, "call$0", "get$moveNext", 0, 0, null],
    get$current: function() {
      return this._iterator.get$current();
    }
  },
  EmptyIterator: {
    "": "Object;",
    moveNext$0: [function() {
      return false;
    }, "call$0", "get$moveNext", 0, 0, null],
    get$current: function() {
      return;
    }
  },
  FixedLengthListMixin: {
    "": "Object;",
    set$length: function(receiver, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot change the length of a fixed-length list"));
    },
    add$1: [function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to a fixed-length list"));
    }, "call$1", "get$add", 2, 0, null, 23],
    insert$2: [function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to a fixed-length list"));
    }, "call$2", "get$insert", 4, 0, null, 47, 23],
    addAll$1: [function(receiver, iterable) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to a fixed-length list"));
    }, "call$1", "get$addAll", 2, 0, null, 153],
    remove$1: [function(receiver, element) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from a fixed-length list"));
    }, "call$1", "get$remove", 2, 0, null, 169],
    clear$0: [function(receiver) {
      throw H.wrapException(P.UnsupportedError$("Cannot clear a fixed-length list"));
    }, "call$0", "get$clear", 0, 0, null],
    removeLast$0: [function(receiver) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from a fixed-length list"));
    }, "call$0", "get$removeLast", 0, 0, null]
  },
  UnmodifiableListMixin: {
    "": "Object;",
    $indexSet: [function(_, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    set$length: function(_, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot change the length of an unmodifiable list"));
    },
    add$1: [function(_, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to an unmodifiable list"));
    }, "call$1", "get$add", 2, 0, null, 23],
    insert$2: [function(_, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to an unmodifiable list"));
    }, "call$2", "get$insert", 4, 0, null, 47, 23],
    addAll$1: [function(_, iterable) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to an unmodifiable list"));
    }, "call$1", "get$addAll", 2, 0, null, 153],
    remove$1: [function(_, element) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from an unmodifiable list"));
    }, "call$1", "get$remove", 2, 0, null, 169],
    sort$1: [function(_, compare) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
    }, "call$1", "get$sort", 0, 2, null, 77, 173],
    clear$0: [function(_) {
      throw H.wrapException(P.UnsupportedError$("Cannot clear an unmodifiable list"));
    }, "call$0", "get$clear", 0, 0, null],
    removeLast$0: [function(_) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from an unmodifiable list"));
    }, "call$0", "get$removeLast", 0, 0, null],
    setRange$4: [function(_, start, end, iterable, skipCount) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
    }, "call$4", "get$setRange", 6, 2, null, 413, 161, 162, 153, 163],
    $isList: true,
    $asList: null,
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: null
  },
  UnmodifiableListBase: {
    "": "ListBase+UnmodifiableListMixin;",
    $isList: true,
    $asList: null,
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: null
  },
  ReversedListIterable: {
    "": "ListIterable;_source",
    get$length: function(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1: [function(_, index) {
      var t1, t2;
      t1 = this._source;
      t2 = J.getInterceptor$asx(t1);
      return t2.elementAt$1(t1, J.$sub$n(J.$sub$n(t2.get$length(t1), 1), index));
    }, "call$1", "get$elementAt", 2, 0, null, 47]
  },
  Symbol0: {
    "": "Object;_name>",
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$isSymbol0 && J.$eq(this._name, other._name) === true;
    }, "call$1", "get$==", 2, 0, null, 104],
    get$hashCode: function(_) {
      var t1 = J.get$hashCode$(this._name);
      if (typeof t1 !== "number")
        return H.iae(t1);
      return 536870911 & 664597 * t1;
    },
    toString$0: [function(_) {
      return "Symbol(\"" + H.S(this._name) + "\")";
    }, "call$0", "get$toString", 0, 0, null],
    $isSymbol0: true,
    $isSymbol: true,
    static: {"": "Symbol_validationPattern", Symbol_validate: [function($name) {
        var t1 = J.getInterceptor$asx($name);
        if (t1.get$isEmpty($name) === true)
          return $name;
        if (t1.startsWith$1($name, "_"))
          throw H.wrapException(new P.ArgumentError("\"" + H.S($name) + "\" is a private identifier"));
        t1 = $.get$Symbol_validationPattern()._nativeRegExp;
        if (typeof $name !== "string")
          H.throwExpression(new P.ArgumentError($name));
        if (!t1.test($name))
          throw H.wrapException(new P.ArgumentError("\"" + H.S($name) + "\" is not an identifier or an empty String"));
        return $name;
      }, "call$1", "Symbol_validate$closure", 2, 0, null, 12]}
  }
}],
["dart._js_mirrors", "dart:_js_mirrors", , H, {
  "": "",
  s: [function($name) {
    if ($name == null)
      return;
    return new H.Symbol0($name);
  }, "call$1", "s$closure", 2, 0, null, 12],
  setterSymbol: [function(symbol) {
    return H.s(H.S(symbol._name) + "=");
  }, "call$1", "setterSymbol$closure", 2, 0, null, 174],
  reflect: [function(reflectee) {
    var t1 = J.getInterceptor(reflectee);
    if (typeof reflectee === "object" && reflectee !== null && !!t1.$isClosure)
      return new H.JsClosureMirror(reflectee);
    else
      return new H.JsInstanceMirror(reflectee);
  }, "call$1", "reflect$closure", 2, 0, 175, 176],
  reflectClassByMangledName: [function(mangledName) {
    var unmangledName, t1;
    unmangledName = $.get$mangledGlobalNames().$index(0, mangledName);
    t1 = J.getInterceptor(mangledName);
    if (t1.$eq(mangledName, "dynamic") === true)
      return $.get$JsMirrorSystem__dynamicType();
    if (t1.$eq(mangledName, "void") === true)
      return $.get$JsMirrorSystem__voidType();
    return H.reflectClassByName(H.s(unmangledName == null ? mangledName : unmangledName), mangledName);
  }, "call$1", "reflectClassByMangledName$closure", 2, 0, null, 177],
  reflectClassByName: [function(symbol, mangledName) {
    var t1, mirror, typeArgIndex, t2, constructorOrInterceptor, index, $constructor, descriptor, fields, fieldsMetadata, mixins, classMirror, typeVariables, typeArguments, i;
    t1 = $.classMirrors;
    if (t1 == null) {
      t1 = H.JsCache_allocate();
      $.classMirrors = t1;
    }
    mirror = t1[mangledName];
    if (mirror != null)
      return mirror;
    t1 = J.getInterceptor$asx(mangledName);
    typeArgIndex = t1.indexOf$1(mangledName, "<");
    if (typeArgIndex !== -1) {
      t2 = H.reflectClassByMangledName(t1.substring$2(mangledName, 0, typeArgIndex)).get$originalDeclaration();
      mirror = new H.JsTypeBoundClassMirror(t2, t1.substring$2(mangledName, typeArgIndex + 1, J.$sub$n(t1.get$length(mangledName), 1)), null, null, null, null, null, null, null, null, null, null, null, null, null, t2.get$simpleName());
      $.classMirrors[mangledName] = mirror;
      return mirror;
    }
    constructorOrInterceptor = H.Primitives_getConstructorOrInterceptor(mangledName);
    if (constructorOrInterceptor == null) {
      index = init.functionAliases[mangledName];
      if (index != null) {
        mirror = new H.JsTypedefMirror(mangledName, null, symbol);
        mirror.referent = new H.JsFunctionTypeMirror(init.metadata[index], null, null, null, mirror);
        $.classMirrors[mangledName] = mirror;
        return mirror;
      }
      throw H.wrapException(P.UnsupportedError$("Cannot find class for: " + H.S(symbol._name)));
    }
    t1 = J.getInterceptor(constructorOrInterceptor);
    $constructor = typeof constructorOrInterceptor === "object" && constructorOrInterceptor !== null && !!t1.$isInterceptor ? constructorOrInterceptor.constructor : constructorOrInterceptor;
    descriptor = $constructor["@"];
    if (descriptor == null) {
      fields = null;
      fieldsMetadata = null;
    } else {
      fields = descriptor[""];
      t1 = J.getInterceptor$asx(fields);
      if (typeof fields === "object" && fields !== null && (fields.constructor === Array || !!t1.$isList)) {
        fieldsMetadata = t1.getRange$2(fields, 1, t1.get$length(fields)).toList$0(0);
        fields = t1.$index(fields, 0);
      } else
        fieldsMetadata = null;
      if (typeof fields !== "string")
        fields = "";
    }
    t1 = J.split$1$s(fields, ";");
    if (0 >= t1.length)
      return H.ioore(t1, 0);
    mixins = J.split$1$s(t1[0], "+");
    if (mixins.length > 1 && $.get$mangledGlobalNames().$index(0, mangledName) == null)
      mirror = H.reflectMixinApplication(mixins, mangledName);
    else {
      classMirror = new H.JsClassMirror(mangledName, constructorOrInterceptor, fields, fieldsMetadata, H.JsCache_allocate(), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, symbol);
      typeVariables = $constructor.prototype["<>"];
      if (typeVariables == null || typeVariables.length === 0)
        mirror = classMirror;
      else {
        for (t1 = typeVariables.length, typeArguments = "dynamic", i = 1; i < t1; ++i)
          typeArguments += ",dynamic";
        mirror = new H.JsTypeBoundClassMirror(classMirror, typeArguments, null, null, null, null, null, null, null, null, null, null, null, null, null, classMirror.simpleName);
      }
    }
    $.classMirrors[mangledName] = mirror;
    return mirror;
  }, "call$2", "reflectClassByName$closure", 4, 0, null, 174, 177],
  filterMethods: [function(methods) {
    var result, t1, method;
    result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
    for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(methods, methods.length, 0, null), [H.getTypeArgumentByIndex(methods, 0)]); t1.moveNext$0();) {
      method = t1._current;
      if (method.get$isConstructor() !== true && method.get$isGetter() !== true && method.get$isSetter() !== true)
        result.$indexSet(0, method.get$simpleName(), method);
    }
    return result;
  }, "call$1", "filterMethods$closure", 2, 0, null, 178],
  filterConstructors: [function(methods) {
    var result, t1, method;
    result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
    for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(methods, methods.length, 0, null), [H.getTypeArgumentByIndex(methods, 0)]); t1.moveNext$0();) {
      method = t1._current;
      if (method.get$isConstructor() === true)
        result.$indexSet(0, method.get$simpleName(), method);
    }
    return result;
  }, "call$1", "filterConstructors$closure", 2, 0, null, 178],
  filterMembers: [function(methods, variables) {
    var result, t1, method, $name, t2, t3;
    result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
    result.addAll$1(0, variables);
    for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(methods, methods.length, 0, null), [H.getTypeArgumentByIndex(methods, 0)]); t1.moveNext$0();) {
      method = t1._current;
      if (method.get$isSetter() === true) {
        $name = method.get$simpleName()._name;
        t2 = J.getInterceptor$asx($name);
        t2 = result.$index(0, H.s(t2.substring$2($name, 0, J.$sub$n(t2.get$length($name), 1))));
        t3 = J.getInterceptor(t2);
        if (typeof t2 === "object" && t2 !== null && !!t3.$isVariableMirror)
          continue;
      }
      if (method.get$isConstructor() === true)
        continue;
      result.putIfAbsent$2(method.get$simpleName(), new H.filterMembers_closure(method));
    }
    return result;
  }, "call$2", "filterMembers$closure", 4, 0, null, 178, 116],
  reflectMixinApplication: [function(mixinNames, mangledName) {
    var mixins, t1, it, superclass;
    mixins = [];
    for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(mixinNames, mixinNames.length, 0, null), [H.getTypeArgumentByIndex(mixinNames, 0)]); t1.moveNext$0();)
      mixins.push(H.reflectClassByMangledName(t1._current));
    it = H.setRuntimeTypeInfo(new H.ListIterator(mixins, mixins.length, 0, null), [H.getTypeArgumentByIndex(mixins, 0)]);
    it.moveNext$0();
    superclass = it._current;
    for (; it.moveNext$0();)
      superclass = new H.JsMixinApplication(superclass, it._current, null, null, H.s(mangledName));
    return superclass;
  }, "call$2", "reflectMixinApplication$closure", 4, 0, null, 179, 177],
  findTypeVariableIndex: [function(typeVariables, $name) {
    var t1, i, t2;
    t1 = J.getInterceptor$asx(typeVariables);
    i = 0;
    while (true) {
      t2 = t1.get$length(typeVariables);
      if (typeof t2 !== "number")
        return H.iae(t2);
      if (!(i < t2))
        break;
      if (J.$eq(t1.$index(typeVariables, i).get$simpleName(), H.s($name)))
        return i;
      ++i;
    }
    throw H.wrapException(new P.ArgumentError("Type variable not present in list."));
  }, "call$2", "findTypeVariableIndex$closure", 4, 0, null, 181, 12],
  typeMirrorFromRuntimeTypeRepresentation: [function(owner, type) {
    var t1, context, t2, representation, typeVariable, typeVariables, typeArgument;
    t1 = {};
    t1.ownerClass_0 = null;
    for (context = owner; context != null;) {
      t2 = J.getInterceptor(context);
      if (typeof context === "object" && context !== null && !!t2.$isClassMirror) {
        t1.ownerClass_0 = context;
        break;
      }
      if (typeof context === "object" && context !== null && !!t2.$isTypedefMirror)
        break;
      context = context.get$owner();
    }
    if (type == null)
      return $.get$JsMirrorSystem__dynamicType();
    else {
      t2 = t1.ownerClass_0;
      if (t2 == null)
        representation = H.runtimeTypeToString(type, null);
      else if (t2.get$isOriginalDeclaration())
        if (typeof type === "number") {
          typeVariable = init.metadata[type];
          typeVariables = t2.get$typeVariables();
          return J.$index$asx(typeVariables, H.findTypeVariableIndex(typeVariables, J.get$name$x(typeVariable)));
        } else
          representation = H.runtimeTypeToString(type, null);
      else {
        t1 = new H.typeMirrorFromRuntimeTypeRepresentation_getTypeArgument(t1);
        if (typeof type === "number") {
          typeArgument = t1.call$1(type);
          t2 = J.getInterceptor(typeArgument);
          if (typeof typeArgument === "object" && typeArgument !== null && !!t2.$isJsTypeVariableMirror)
            return typeArgument;
        }
        representation = H.runtimeTypeToString(type, new H.typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable(t1));
      }
    }
    if (representation != null)
      return H.reflectClassByMangledName(representation);
    return P.reflectClass(C.Type_EjN);
  }, "call$2", "typeMirrorFromRuntimeTypeRepresentation$closure", 4, 0, null, 126, 11],
  computeQualifiedName: [function(owner, simpleName) {
    if (owner == null)
      return simpleName;
    return H.s(H.S(J.get$_name$x(owner.get$qualifiedName())) + "." + H.S(simpleName._name));
  }, "call$2", "computeQualifiedName$closure", 4, 0, null, 126, 182],
  extractMetadata: [function(victim) {
    var metadataFunction, t1, source, index;
    metadataFunction = victim["@"];
    if (metadataFunction != null)
      return metadataFunction();
    if (typeof victim != "function")
      return C.List_empty;
    if ("$metadataIndex" in victim) {
      t1 = victim.$reflectionInfo.splice(victim.$metadataIndex);
      t1.fixed$length = init;
      return H.setRuntimeTypeInfo(new H.MappedListIterable(t1, new H.extractMetadata_closure()), [null, null]).toList$0(0);
    }
    source = Function.prototype.toString.call(victim);
    index = C.JSString_methods.lastIndexOf$1(source, new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("\"[0-9,]*\";?[ \n\r]*}", false, true, false), null, null));
    if (index === -1)
      return C.List_empty;
    ++index;
    return H.setRuntimeTypeInfo(new H.MappedListIterable(H.setRuntimeTypeInfo(new H.MappedListIterable(C.JSString_methods.substring$2(source, index, C.JSString_methods.indexOf$2(source, "\"", index)).split(","), P.int_parse$closure()), [null, null]), new H.extractMetadata_closure0()), [null, null]).toList$0(0);
  }, "call$1", "extractMetadata$closure", 2, 0, null, 183],
  parseCompactFieldSpecification: [function(owner, fieldSpecification, isStatic, result) {
    var t1, fields, fieldsMetadata, t2, fieldNumber, field, fieldNumber0, metadata, mirror;
    t1 = J.getInterceptor$asx(fieldSpecification);
    if (typeof fieldSpecification === "object" && fieldSpecification !== null && (fieldSpecification.constructor === Array || !!t1.$isList)) {
      fields = H.splitFields(t1.$index(fieldSpecification, 0), ",");
      fieldsMetadata = t1.sublist$1(fieldSpecification, 1);
    } else {
      fields = typeof fieldSpecification === "string" ? H.splitFields(fieldSpecification, ",") : [];
      fieldsMetadata = null;
    }
    for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(fields, fields.length, 0, null), [H.getTypeArgumentByIndex(fields, 0)]), t2 = fieldsMetadata != null, fieldNumber = 0; t1.moveNext$0();) {
      field = t1._current;
      if (t2) {
        fieldNumber0 = fieldNumber + 1;
        if (fieldNumber >= fieldsMetadata.length)
          return H.ioore(fieldsMetadata, fieldNumber);
        metadata = fieldsMetadata[fieldNumber];
        fieldNumber = fieldNumber0;
      } else
        metadata = null;
      mirror = H.JsVariableMirror_JsVariableMirror$from(field, metadata, owner, isStatic);
      if (mirror != null)
        result.push(mirror);
    }
  }, "call$4", "parseCompactFieldSpecification$closure", 8, 0, null, 126, 184, 61, 51],
  splitFields: [function(string, pattern) {
    var t1 = J.getInterceptor$asx(string);
    if (t1.get$isEmpty(string) === true)
      return H.setRuntimeTypeInfo([], [J.JSString]);
    return t1.split$1(string, pattern);
  }, "call$2", "splitFields$closure", 4, 0, null, 26, 98],
  isOperatorName: [function($name) {
    switch ($name) {
      case "==":
      case "[]":
      case "*":
      case "/":
      case "%":
      case "~/":
      case "+":
      case "<<":
      case ">>":
      case ">=":
      case ">":
      case "<=":
      case "<":
      case "&":
      case "^":
      case "|":
      case "-":
      case "unary-":
      case "[]=":
      case "~":
        return true;
      default:
        return false;
    }
  }, "call$1", "isOperatorName$closure", 2, 0, null, 12],
  isReflectiveDataInPrototype: [function(key) {
    var t1, firstChar;
    t1 = J.getInterceptor(key);
    if (t1.$eq(key, "") === true || t1.$eq(key, "$methodsWithOptionalArguments") === true)
      return true;
    firstChar = t1.$index(key, 0);
    t1 = J.getInterceptor(firstChar);
    return t1.$eq(firstChar, "*") === true || t1.$eq(firstChar, "+") === true;
  }, "call$1", "isReflectiveDataInPrototype$closure", 2, 0, null, 42],
  JsMirrorSystem: {
    "": "Object;_cachedLibraries,isolate",
    get$libraries: function() {
      var t1, result, t2, library;
      t1 = this._cachedLibraries;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      for (t1 = $.get$JsMirrorSystem_librariesByName(), t1 = t1.get$values(t1), t1 = H.setRuntimeTypeInfo(new H.MappedIterator(null, J.get$iterator$ax(t1._iterable), t1._f), [H.getTypeArgumentByIndex(t1, 0), H.getTypeArgumentByIndex(t1, 1)]); t1.moveNext$0();)
        for (t2 = J.get$iterator$ax(t1._current); t2.moveNext$0();) {
          library = t2.get$current();
          result.$indexSet(0, library.get$uri(), library);
        }
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView(result), [P.Uri, P.LibraryMirror]);
      this._cachedLibraries = t1;
      return t1;
    },
    static: {"": "JsMirrorSystem__dynamicType,JsMirrorSystem__voidType,JsMirrorSystem_librariesByName", JsMirrorSystem_computeLibrariesByName: [function() {
        var result, jsLibraries, t1, data, t2, $name, t3, uri, classes, functions, metadataFunction, fields, isRoot, globalObject, metadata;
        result = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, [J.JSArray, P.LibraryMirror]);
        jsLibraries = init.libraries;
        if (jsLibraries == null)
          return result;
        for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(jsLibraries, jsLibraries.length, 0, null), [H.getTypeArgumentByIndex(jsLibraries, 0)]); t1.moveNext$0();) {
          data = t1._current;
          t2 = J.getInterceptor$asx(data);
          $name = t2.$index(data, 0);
          t3 = t2.$index(data, 1);
          uri = P.Uri$_fromMatch($.get$Uri__splitRe().firstMatch$1(t3));
          classes = t2.$index(data, 2);
          functions = t2.$index(data, 3);
          metadataFunction = t2.$index(data, 4);
          fields = t2.$index(data, 5);
          isRoot = t2.$index(data, 6);
          globalObject = t2.$index(data, 7);
          metadata = metadataFunction == null ? C.List_empty : metadataFunction();
          J.add$1$ax(result.putIfAbsent$2($name, new H.JsMirrorSystem_computeLibrariesByName_closure()), new H.JsLibraryMirror(uri, classes, functions, metadata, fields, isRoot, globalObject, null, null, null, null, null, null, null, null, null, null, H.s($name)));
        }
        return result;
      }, "call$0", "JsMirrorSystem_computeLibrariesByName$closure", 0, 0, null]}
  },
  JsMirrorSystem_computeLibrariesByName_closure: {
    "": "Closure:108;",
    call$0: [function() {
      return H.setRuntimeTypeInfo([], [P.LibraryMirror]);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  JsMirror: {
    "": "Object;",
    toString$0: [function(_) {
      return this.get$_prettyName();
    }, "call$0", "get$toString", 0, 0, null],
    _setField$2: [function(receiver, arg) {
      throw H.wrapException(P.UnimplementedError$(null));
    }, "call$2", "get$_setField", 4, 0, null, 41, 209],
    $isMirror: true
  },
  JsIsolateMirror: {
    "": "JsMirror;_isolateContext",
    get$_prettyName: function() {
      return "Isolate";
    },
    get$rootLibrary: function() {
      var t1 = $.get$currentJsMirrorSystem().get$libraries().__js_mirrors$_source;
      return t1.get$values(t1).firstWhere$1(0, new H.JsIsolateMirror_rootLibrary_closure());
    },
    $isMirror: true
  },
  JsIsolateMirror_rootLibrary_closure: {
    "": "Closure:504;",
    call$1: [function(library) {
      return library.get$_isRoot();
    }, "call$1", null, 2, 0, null, 503, "call"],
    $isFunction: true
  },
  JsDeclarationMirror: {
    "": "JsMirror;simpleName<",
    get$qualifiedName: function() {
      return H.computeQualifiedName(this.get$owner(), this.get$simpleName());
    },
    get$isPrivate: function() {
      return J.startsWith$1$s(this.get$simpleName()._name, "_");
    },
    toString$0: [function(_) {
      return this.get$_prettyName() + " on '" + H.S(this.get$simpleName()._name) + "'";
    }, "call$0", "get$toString", 0, 0, null],
    _invoke$2: [function(positionalArguments, namedArguments) {
      throw H.wrapException(H.RuntimeError$("Should not call _invoke"));
    }, "call$2", "get$_invoke", 4, 0, null, 43, 44],
    get$location: function(_) {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    $isDeclarationMirror: true,
    $isMirror: true
  },
  JsTypeVariableMirror: {
    "": "JsTypeMirror;owner<,_typeVariable,_metadataIndex,_cachedUpperBound,simpleName",
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$isJsTypeVariableMirror && J.$eq(this.simpleName, other.simpleName) && this.owner.$eq(0, other.owner);
    }, "call$1", "get$==", 2, 0, null, 104],
    get$hashCode: function(_) {
      var t1, t2;
      t1 = J.get$hashCode$(C.Type_AGr._typeName);
      if (typeof t1 !== "number")
        return H.iae(t1);
      t2 = this.owner;
      return (1073741823 & t1 ^ 17 * J.get$hashCode$(this.simpleName) ^ 19 * t2.get$hashCode(t2)) >>> 0;
    },
    get$_prettyName: function() {
      return "TypeVariableMirror";
    },
    $isJsTypeVariableMirror: true,
    $isTypeVariableMirror: true,
    $isTypeMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true
  },
  JsTypeMirror: {
    "": "JsDeclarationMirror;simpleName",
    get$_prettyName: function() {
      return "TypeMirror";
    },
    get$owner: function() {
      return;
    },
    get$metadata: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    get$reflectedType: function() {
      throw H.wrapException(P.UnsupportedError$("This type does not support reflectedType"));
    },
    get$typeVariables: function() {
      return C.List_empty0;
    },
    get$typeArguments: function() {
      return C.List_empty1;
    },
    get$isOriginalDeclaration: function() {
      return true;
    },
    get$originalDeclaration: function() {
      return this;
    },
    $isTypeMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true
  },
  JsLibraryMirror: {
    "": "JsDeclarationMirror_JsObjectMirror;uri<,_classes,_functions,_metadata,_compactFieldSpecification,_isRoot<,_globalObject<,_cachedFunctionMirrors,_cachedFields,_cachedClasses,_cachedFunctions,_cachedGetters,_cachedSetters,_cachedVariables,_cachedMembers,_cachedDeclarations,_cachedMetadata,simpleName",
    get$_prettyName: function() {
      return "LibraryMirror";
    },
    get$qualifiedName: function() {
      return this.simpleName;
    },
    get$_methods: function() {
      return this.get$_functionMirrors();
    },
    get$__classes: function() {
      var t1, result, cls, t2;
      t1 = this._cachedClasses;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      for (t1 = J.get$iterator$ax(this._classes); t1.moveNext$0();) {
        cls = H.reflectClassByMangledName(t1.get$current());
        t2 = J.getInterceptor(cls);
        if (typeof cls === "object" && cls !== null && !!t2.$isClassMirror) {
          cls = cls.get$originalDeclaration();
          if (!!cls.$isJsClassMirror) {
            result.$indexSet(0, cls.simpleName, cls);
            cls._owner = this;
          }
        }
      }
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView(result), [P.Symbol, P.ClassMirror]);
      this._cachedClasses = t1;
      return t1;
    },
    setField$2: [function(fieldName, arg) {
      var $name, t1, t2, mirror;
      $name = fieldName.get$_name(fieldName);
      $name.endsWith$1(0, "=");
      t1 = this.get$__functions();
      t2 = H.s(H.S($name) + "=");
      mirror = t1.__js_mirrors$_source.$index(0, t2);
      if (mirror == null)
        mirror = this.get$__variables().__js_mirrors$_source.$index(0, fieldName);
      if (mirror == null)
        throw H.wrapException(P.NoSuchMethodError$(this, H.setterSymbol(fieldName), [arg], null, null));
      mirror._setField$2(this, arg);
      return H.reflect(arg);
    }, "call$2", "get$setField", 4, 0, null, 65, 209],
    invoke$3: [function(memberName, positionalArguments, namedArguments) {
      var mirror, t1;
      mirror = this.get$__members().__js_mirrors$_source.$index(0, memberName);
      if (mirror == null)
        throw H.wrapException(P.NoSuchMethodError$(this, memberName, positionalArguments, namedArguments, null));
      t1 = J.getInterceptor(mirror);
      if (typeof mirror === "object" && mirror !== null && !!t1.$isJsMethodMirror)
        if (!("$reflectable" in mirror._jsFunction))
          H.throwInvalidReflectionError(memberName.get$_name(memberName));
      return H.reflect(mirror._invoke$2(positionalArguments, namedArguments));
    }, function(memberName, positionalArguments) {
      return this.invoke$3(memberName, positionalArguments, null);
    }, "invoke$2", "call$3", null, "get$invoke", 4, 2, null, 77, 24, 43, 44],
    get$_functionMirrors: function() {
      var t1, result, t2, t3, i, t4, $name, jsFunction, unmangledName, isConstructor, mirror;
      t1 = this._cachedFunctionMirrors;
      if (t1 != null)
        return t1;
      result = H.setRuntimeTypeInfo([], [H.JsMethodMirror]);
      t1 = this._functions;
      t2 = J.getInterceptor$asx(t1);
      t3 = this._globalObject;
      i = 0;
      while (true) {
        t4 = t2.get$length(t1);
        if (typeof t4 !== "number")
          return H.iae(t4);
        if (!(i < t4))
          break;
        c$0: {
          $name = t2.$index(t1, i);
          jsFunction = t3[$name];
          unmangledName = $.get$mangledGlobalNames().$index(0, $name);
          if (unmangledName == null)
            break c$0;
          t4 = J.getInterceptor$s(unmangledName);
          isConstructor = t4.startsWith$1(unmangledName, "new ");
          if (isConstructor) {
            t4 = t4.substring$1(unmangledName, 4);
            unmangledName = H.stringReplaceAllUnchecked(t4, "$", ".");
          }
          mirror = H.JsMethodMirror_JsMethodMirror$fromUnmangledName(unmangledName, jsFunction, !isConstructor, isConstructor);
          result.push(mirror);
          mirror._owner = this;
        }
        ++i;
      }
      this._cachedFunctionMirrors = result;
      return result;
    },
    get$_fields: function() {
      var t1, result;
      t1 = this._cachedFields;
      if (t1 != null)
        return t1;
      result = H.setRuntimeTypeInfo([], [P.VariableMirror]);
      H.parseCompactFieldSpecification(this, this._compactFieldSpecification, true, result);
      this._cachedFields = result;
      return result;
    },
    get$__functions: function() {
      var t1, result, mirror;
      t1 = this._cachedFunctions;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      for (t1 = this.get$_functionMirrors(), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();) {
        mirror = t1._current;
        if (mirror.get$isConstructor() !== true)
          result.$indexSet(0, mirror.get$simpleName(), mirror);
      }
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView(result), [P.Symbol, P.MethodMirror]);
      this._cachedFunctions = t1;
      return t1;
    },
    get$__getters: function() {
      var t1 = this._cachedGetters;
      if (t1 != null)
        return t1;
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView(P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [P.Symbol, P.MethodMirror]);
      this._cachedGetters = t1;
      return t1;
    },
    get$__setters: function() {
      var t1 = this._cachedSetters;
      if (t1 != null)
        return t1;
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView(P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [P.Symbol, P.MethodMirror]);
      this._cachedSetters = t1;
      return t1;
    },
    get$__variables: function() {
      var t1, result, mirror;
      t1 = this._cachedVariables;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      for (t1 = this.get$_fields(), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();) {
        mirror = t1._current;
        result.$indexSet(0, mirror.get$simpleName(), mirror);
      }
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView(result), [P.Symbol, P.VariableMirror]);
      this._cachedVariables = t1;
      return t1;
    },
    get$__members: function() {
      var t1, result;
      t1 = this._cachedMembers;
      if (t1 != null)
        return t1;
      t1 = this.get$__classes();
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      result.addAll$1(0, t1);
      t1 = new H.JsLibraryMirror___members_addToResult(result);
      this.get$__functions().__js_mirrors$_source.forEach$1(0, t1);
      this.get$__getters().__js_mirrors$_source.forEach$1(0, t1);
      this.get$__setters().__js_mirrors$_source.forEach$1(0, t1);
      this.get$__variables().__js_mirrors$_source.forEach$1(0, t1);
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView(result), [P.Symbol, P.Mirror]);
      this._cachedMembers = t1;
      return t1;
    },
    get$declarations: function() {
      var t1, result;
      t1 = this._cachedDeclarations;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol, P.DeclarationMirror);
      this.get$__members().__js_mirrors$_source.forEach$1(0, new H.JsLibraryMirror_declarations_addToResult(result));
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView(result), [P.Symbol, P.DeclarationMirror]);
      this._cachedDeclarations = t1;
      return t1;
    },
    get$metadata: function() {
      var t1 = this._cachedMetadata;
      if (t1 != null)
        return t1;
      t1 = H.setRuntimeTypeInfo(new P.UnmodifiableListView(J.map$1$ax(this._metadata, H.reflect$closure())), [P.InstanceMirror]);
      this._cachedMetadata = t1;
      return t1;
    },
    get$owner: function() {
      return;
    },
    $index: [function(_, $name) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1", "get$[]", 2, 0, null, 12],
    $isLibraryMirror: true,
    $isMirror: true,
    $isDeclarationMirror: true
  },
  JsDeclarationMirror_JsObjectMirror: {
    "": "JsDeclarationMirror+JsObjectMirror;",
    $isMirror: true
  },
  JsLibraryMirror___members_addToResult: {
    "": "Closure:505;result_0",
    call$2: [function(key, value) {
      this.result_0.$indexSet(0, key, value);
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true
  },
  JsLibraryMirror_declarations_addToResult: {
    "": "Closure:505;result_0",
    call$2: [function(key, value) {
      this.result_0.$indexSet(0, key, value);
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true
  },
  filterMembers_closure: {
    "": "Closure:108;method_0",
    call$0: [function() {
      return this.method_0;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  JsMixinApplication: {
    "": "JsTypeMirror_JsObjectMirror;superclass<,mixin,_cachedSimpleName,_cachedInstanceMembers,simpleName",
    get$_prettyName: function() {
      return "ClassMirror";
    },
    get$simpleName: function() {
      var t1, superName;
      t1 = this._cachedSimpleName;
      if (t1 != null)
        return t1;
      superName = J.get$_name$x(this.superclass.get$qualifiedName());
      t1 = this.mixin;
      t1 = J.contains$1$asx(superName, " with ") === true ? H.s(H.S(superName) + ", " + H.S(J.get$_name$x(t1.get$qualifiedName()))) : H.s(H.S(superName) + " with " + H.S(J.get$_name$x(t1.get$qualifiedName())));
      this._cachedSimpleName = t1;
      return t1;
    },
    get$qualifiedName: function() {
      return this.get$simpleName();
    },
    get$declarations: function() {
      return this.mixin.get$declarations();
    },
    invoke$3: [function(memberName, positionalArguments, namedArguments) {
      throw H.wrapException(P.NoSuchMethodError$(this, memberName, positionalArguments, namedArguments, null));
    }, function(memberName, positionalArguments) {
      return this.invoke$3(memberName, positionalArguments, null);
    }, "invoke$2", "call$3", null, "get$invoke", 4, 2, null, 77, 24, 43, 44],
    setField$2: [function(fieldName, arg) {
      throw H.wrapException(P.NoSuchMethodError$(this, H.setterSymbol(fieldName), [arg], null, null));
    }, "call$2", "get$setField", 4, 0, null, 65, 209],
    get$superinterfaces: function() {
      return [this.mixin];
    },
    get$isOriginalDeclaration: function() {
      return true;
    },
    get$originalDeclaration: function() {
      return this;
    },
    get$typeVariables: function() {
      throw H.wrapException(P.UnimplementedError$(null));
    },
    get$typeArguments: function() {
      return C.List_empty1;
    },
    $index: [function(_, $name) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1", "get$[]", 2, 0, null, 12],
    get$isAbstract: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    $isClassMirror: true,
    $isMirror: true,
    $isTypeMirror: true,
    $isDeclarationMirror: true
  },
  JsTypeMirror_JsObjectMirror: {
    "": "JsTypeMirror+JsObjectMirror;",
    $isMirror: true
  },
  JsObjectMirror: {
    "": "Object;",
    $isMirror: true
  },
  JsInstanceMirror: {
    "": "JsObjectMirror;reflectee<",
    get$type: function(_) {
      return H.reflectClassByMangledName(J.get$runtimeType$(this.reflectee)._typeName);
    },
    invoke$3: [function(memberName, positionalArguments, namedArguments) {
      var $name = J.get$_name$x(memberName);
      return this._invoke$4(memberName, 0, $name + ":" + positionalArguments.length + ":0", positionalArguments);
    }, function(memberName, positionalArguments) {
      return this.invoke$3(memberName, positionalArguments, null);
    }, "invoke$2", "call$3", null, "get$invoke", 4, 2, null, 77, 24, 43, 44],
    _invoke$4: [function($name, type, reflectiveName, $arguments) {
      var cacheName, t1, cache, cacheEntry, mangledName, argumentNames, invocation;
      cacheName = $.Primitives_mirrorInvokeCacheName;
      t1 = this.reflectee;
      cache = t1.constructor[cacheName];
      if (cache == null) {
        cache = H.JsCache_allocate();
        t1.constructor[cacheName] = cache;
      }
      cacheEntry = cache[reflectiveName];
      if (cacheEntry == null) {
        mangledName = $.get$reflectiveNames().$index(0, reflectiveName);
        argumentNames = type === 0 ? H.SubListIterable$(J.split$1$s(reflectiveName, ":"), 3, null, null).toList$0(0) : C.List_empty;
        invocation = new H.JSInvocationMirror($name, mangledName, type, $arguments, argumentNames, null);
        cacheEntry = invocation._getCachedInvocation$1(t1);
        cache[reflectiveName] = cacheEntry;
      } else
        invocation = null;
      if (cacheEntry.get$isNoSuchMethod())
        return H.reflect(cacheEntry.invokeOn$2(t1, invocation == null ? new H.JSInvocationMirror($name, $.get$reflectiveNames().$index(0, reflectiveName), type, $arguments, [], null) : invocation));
      else
        return H.reflect(cacheEntry.invokeOn$2(t1, $arguments));
    }, "call$4", "get$_invoke", 8, 0, null, 12, 11, 506, 82],
    setField$2: [function(fieldName, arg) {
      var reflectiveName = H.S(fieldName.get$_name(fieldName)) + "=";
      this._invoke$4(H.s(reflectiveName), 2, reflectiveName, [arg]);
      return H.reflect(arg);
    }, "call$2", "get$setField", 4, 0, null, 65, 209],
    getField$1: [function(fieldName) {
      return this._invoke$4(fieldName, 1, J.get$_name$x(fieldName), []);
    }, "call$1", "get$getField", 2, 0, null, 65],
    $eq: [function(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other === "object" && other !== null && !!t1.$isJsInstanceMirror) {
        t1 = this.reflectee;
        t2 = other.reflectee;
        t2 = t1 == null ? t2 == null : t1 === t2;
        t1 = t2;
      } else
        t1 = false;
      return t1;
    }, "call$1", "get$==", 2, 0, null, 104],
    get$hashCode: function(_) {
      return J.$xor$n(H.objectHashCode(this.reflectee), 909522486);
    },
    toString$0: [function(_) {
      return "InstanceMirror on " + H.S(P.Error_safeToString(this.reflectee));
    }, "call$0", "get$toString", 0, 0, null],
    $index: [function(_, $name) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1", "get$[]", 2, 0, null, 12],
    $isJsInstanceMirror: true,
    $isInstanceMirror: true,
    $isMirror: true
  },
  JsInstanceMirror_invoke_closure: {
    "": "Closure:507;defaultArguments_0",
    call$2: [function(symbol, value) {
      var parameter, t1;
      parameter = symbol.get$_name(symbol);
      t1 = this.defaultArguments_0;
      if (t1.containsKey$1(parameter))
        t1.$indexSet(0, parameter, value);
      else
        throw H.wrapException(H.UnimplementedNoSuchMethodError$("Invoking noSuchMethod with named arguments not implemented"));
    }, "call$2", null, 4, 0, null, 174, 23, "call"],
    $isFunction: true
  },
  JsTypeBoundClassMirror: {
    "": "JsDeclarationMirror;_class,_typeArguments,_cachedTypeArguments,_cachedDeclarations,_cachedMembers,_cachedConstructors,_cachedVariables,_cachedGetters,_cachedSetters,_cachedMethodsMap,_cachedMethods,_superclass,_cachedSuperinterfaces,_cachedInstanceMembers,_cachedStaticMembers,simpleName",
    get$_prettyName: function() {
      return "ClassMirror";
    },
    get$_mangledName: function() {
      for (var t1 = this.get$typeArguments(), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        if (J.$eq(t1._current, $.get$JsMirrorSystem__dynamicType()) !== true)
          return H.S(this._class.get$_mangledName()) + "<" + this._typeArguments + ">";
      return this._class.get$_mangledName();
    },
    get$typeVariables: function() {
      return this._class.get$typeVariables();
    },
    get$typeArguments: function() {
      var t1, result, t2, t3, level, currentTypeArgument, i, character;
      t1 = this._cachedTypeArguments;
      if (t1 != null)
        return t1;
      result = [];
      t1 = new H.JsTypeBoundClassMirror_typeArguments_addTypeArgument(result);
      t2 = this._typeArguments;
      if (C.JSString_methods.indexOf$1(t2, "<") === -1)
        H.IterableMixinWorkaround_forEach(t2.split(","), new H.JsTypeBoundClassMirror_typeArguments_closure(t1));
      else {
        for (t3 = t2.length, level = 0, currentTypeArgument = "", i = 0; i < t3; ++i) {
          character = t2[i];
          if (character === " ")
            continue;
          else if (character === "<") {
            currentTypeArgument += character;
            ++level;
          } else if (character === ">") {
            currentTypeArgument += character;
            --level;
          } else if (character === ",")
            if (level > 0)
              currentTypeArgument += character;
            else {
              t1.call$1(currentTypeArgument);
              currentTypeArgument = "";
            }
          else
            currentTypeArgument += character;
        }
        t1.call$1(currentTypeArgument);
      }
      t1 = H.setRuntimeTypeInfo(new P.UnmodifiableListView(result), [null]);
      this._cachedTypeArguments = t1;
      return t1;
    },
    get$_methods: function() {
      var t1 = this._cachedMethods;
      if (t1 != null)
        return t1;
      t1 = this._class._getMethodsWithOwner$1(this);
      this._cachedMethods = t1;
      return t1;
    },
    get$__constructors: function() {
      var t1 = this._cachedConstructors;
      if (t1 != null)
        return t1;
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView(H.filterConstructors(this.get$_methods())), [P.Symbol, P.MethodMirror]);
      this._cachedConstructors = t1;
      return t1;
    },
    get$__variables: function() {
      var t1, result, mirror;
      t1 = this._cachedVariables;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      for (t1 = this._class._getFieldsWithOwner$1(this), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();) {
        mirror = t1._current;
        result.$indexSet(0, mirror.get$simpleName(), mirror);
      }
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView(result), [P.Symbol, P.VariableMirror]);
      this._cachedVariables = t1;
      return t1;
    },
    get$__members: function() {
      var t1 = this._cachedMembers;
      if (t1 != null)
        return t1;
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView(H.filterMembers(this.get$_methods(), this.get$__variables())), [P.Symbol, P.DeclarationMirror]);
      this._cachedMembers = t1;
      return t1;
    },
    get$declarations: function() {
      var t1, result;
      t1 = this._cachedDeclarations;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol, P.DeclarationMirror);
      result.addAll$1(0, this.get$__members());
      result.addAll$1(0, this.get$__constructors());
      J.forEach$1$ax(this._class.get$typeVariables(), new H.JsTypeBoundClassMirror_declarations_closure(result));
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView(result), [P.Symbol, P.DeclarationMirror]);
      this._cachedDeclarations = t1;
      return t1;
    },
    setField$2: [function(fieldName, arg) {
      return this._class.setField$2(fieldName, arg);
    }, "call$2", "get$setField", 4, 0, null, 65, 209],
    get$owner: function() {
      return this._class.get$owner();
    },
    get$metadata: function() {
      return this._class.get$metadata();
    },
    get$superclass: function() {
      var t1 = this._superclass;
      if (t1 != null)
        return t1;
      t1 = H.typeMirrorFromRuntimeTypeRepresentation(this, init.metadata[J.$index$asx(init.typeInformation[this._class.get$_mangledName()], 0)]);
      this._superclass = t1;
      return t1;
    },
    invoke$3: [function(memberName, positionalArguments, namedArguments) {
      return this._class.invoke$3(memberName, positionalArguments, namedArguments);
    }, function(memberName, positionalArguments) {
      return this.invoke$3(memberName, positionalArguments, null);
    }, "invoke$2", "call$3", null, "get$invoke", 4, 2, null, 77, 24, 43, 44],
    get$isOriginalDeclaration: function() {
      return false;
    },
    get$originalDeclaration: function() {
      return this._class;
    },
    get$superinterfaces: function() {
      var t1 = this._cachedSuperinterfaces;
      if (t1 != null)
        return t1;
      t1 = this._class._getSuperinterfacesWithOwner$1(this);
      this._cachedSuperinterfaces = t1;
      return t1;
    },
    get$isPrivate: function() {
      return J.startsWith$1$s(this._class.get$simpleName()._name, "_");
    },
    get$isAbstract: function() {
      return this._class.get$isAbstract();
    },
    get$location: function(_) {
      var t1 = this._class;
      return t1.get$location(t1);
    },
    get$qualifiedName: function() {
      return this._class.get$qualifiedName();
    },
    get$reflectedType: function() {
      return new H.TypeImpl(this.get$_mangledName(), null);
    },
    get$simpleName: function() {
      return this._class.get$simpleName();
    },
    $index: [function(_, $name) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1", "get$[]", 2, 0, null, 12],
    $isJsTypeBoundClassMirror: true,
    $isClassMirror: true,
    $isMirror: true,
    $isTypeMirror: true,
    $isDeclarationMirror: true
  },
  JsTypeBoundClassMirror_typeArguments_addTypeArgument: {
    "": "Closure:25;result_0",
    call$1: [function(typeArgument) {
      var parsedIndex, t1, typeVariable;
      parsedIndex = H.Primitives_parseInt(typeArgument, null, new H.JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure());
      t1 = this.result_0;
      if (J.$eq(parsedIndex, -1) === true)
        t1.push(H.reflectClassByMangledName(J.trim$0$s(typeArgument)));
      else {
        typeVariable = init.metadata[parsedIndex];
        t1.push(new H.JsTypeVariableMirror(P.reflectClass(typeVariable.get$owner()), typeVariable, parsedIndex, null, H.s(J.get$name$x(typeVariable))));
      }
    }, "call$1", null, 2, 0, null, 508, "call"],
    $isFunction: true
  },
  JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure: {
    "": "Closure:271;",
    call$1: [function(_) {
      return -1;
    }, "call$1", null, 2, 0, null, 335, "call"],
    $isFunction: true
  },
  JsTypeBoundClassMirror_typeArguments_closure: {
    "": "Closure:271;addTypeArgument_1",
    call$1: [function(t) {
      return this.addTypeArgument_1.call$1(t);
    }, "call$1", null, 2, 0, null, 87, "call"],
    $isFunction: true
  },
  JsTypeBoundClassMirror_declarations_closure: {
    "": "Closure:271;result_0",
    call$1: [function(tv) {
      this.result_0.$indexSet(0, tv.get$simpleName(), tv);
      return tv;
    }, "call$1", null, 2, 0, null, 509, "call"],
    $isFunction: true
  },
  JsClassMirror: {
    "": "JsTypeMirror_JsObjectMirror0;_mangledName<,_jsConstructorOrInterceptor<,_fieldsDescriptor,_fieldsMetadata,_jsConstructorCache,_metadata,_superclass,_cachedMethods,_cachedFields,_cachedConstructors,_cachedMethodsMap,_cachedGetters,_cachedSetters,_cachedVariables,_cachedMembers,_cachedDeclarations,_cachedMetadata,_cachedSuperinterfaces,_cachedTypeVariables,_cachedInstanceMembers,_cachedStaticMembers,_owner,simpleName",
    get$_prettyName: function() {
      return "ClassMirror";
    },
    get$_jsConstructor: function() {
      var t1, t2;
      t1 = this._jsConstructorOrInterceptor;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isInterceptor)
        return t1.constructor;
      else
        return t1;
    },
    get$__constructors: function() {
      var t1 = this._cachedConstructors;
      if (t1 != null)
        return t1;
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView(H.filterConstructors(this.get$_methods())), [P.Symbol, P.MethodMirror]);
      this._cachedConstructors = t1;
      return t1;
    },
    _getMethodsWithOwner$1: [function(methodOwner) {
      var $prototype, keys, result, t1, key, simpleName, mirror, mangledName, jsFunction, reflectionName, isConstructor, t2;
      $prototype = this.get$_jsConstructor().prototype;
      keys = H.extractKeys($prototype);
      result = H.setRuntimeTypeInfo([], [H.JsMethodMirror]);
      for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(keys, keys.length, 0, null), [H.getTypeArgumentByIndex(keys, 0)]); t1.moveNext$0();) {
        key = t1._current;
        if (H.isReflectiveDataInPrototype(key))
          continue;
        simpleName = $.get$mangledNames().$index(0, key);
        if (simpleName == null)
          continue;
        mirror = H.JsMethodMirror_JsMethodMirror$fromUnmangledName(simpleName, $prototype[key], false, false);
        result.push(mirror);
        mirror._owner = methodOwner;
      }
      keys = H.extractKeys(init.statics[this._mangledName]);
      for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(keys, keys.length, 0, null), [H.getTypeArgumentByIndex(keys, 0)]); t1.moveNext$0();) {
        mangledName = t1._current;
        if (H.isReflectiveDataInPrototype(mangledName))
          continue;
        jsFunction = this.get$owner().get$_globalObject()[mangledName];
        if ("$reflectable" in jsFunction) {
          reflectionName = jsFunction.$reflectionName;
          if (reflectionName == null)
            continue;
          isConstructor = J.getInterceptor$s(reflectionName).startsWith$1(reflectionName, "new ");
          if (isConstructor) {
            t2 = C.JSString_methods.substring$1(reflectionName, 4);
            reflectionName = H.stringReplaceAllUnchecked(t2, "$", ".");
          }
        } else
          continue;
        mirror = H.JsMethodMirror_JsMethodMirror$fromUnmangledName(reflectionName, jsFunction, !isConstructor, isConstructor);
        result.push(mirror);
        mirror._owner = methodOwner;
      }
      return result;
    }, "call$1", "get$_getMethodsWithOwner", 2, 0, null, 510],
    get$_methods: function() {
      var t1 = this._cachedMethods;
      if (t1 != null)
        return t1;
      t1 = this._getMethodsWithOwner$1(this);
      this._cachedMethods = t1;
      return t1;
    },
    _getFieldsWithOwner$1: [function(fieldOwner) {
      var result, t1, instanceFieldSpecfication, staticDescriptor;
      result = H.setRuntimeTypeInfo([], [P.VariableMirror]);
      t1 = this._fieldsDescriptor.split(";");
      if (1 >= t1.length)
        return H.ioore(t1, 1);
      instanceFieldSpecfication = t1[1];
      t1 = this._fieldsMetadata;
      if (t1 != null) {
        instanceFieldSpecfication = [instanceFieldSpecfication];
        C.JSArray_methods.addAll$1(instanceFieldSpecfication, t1);
      }
      H.parseCompactFieldSpecification(fieldOwner, instanceFieldSpecfication, false, result);
      staticDescriptor = init.statics[this._mangledName];
      if (staticDescriptor != null)
        H.parseCompactFieldSpecification(fieldOwner, staticDescriptor[""], true, result);
      return result;
    }, "call$1", "get$_getFieldsWithOwner", 2, 0, null, 511],
    get$_fields: function() {
      var t1 = this._cachedFields;
      if (t1 != null)
        return t1;
      t1 = this._getFieldsWithOwner$1(this);
      this._cachedFields = t1;
      return t1;
    },
    get$__methods: function() {
      var t1 = this._cachedMethodsMap;
      if (t1 != null)
        return t1;
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView(H.filterMethods(this.get$_methods())), [P.Symbol, P.MethodMirror]);
      this._cachedMethodsMap = t1;
      return t1;
    },
    get$__variables: function() {
      var t1, result, mirror;
      t1 = this._cachedVariables;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      for (t1 = this.get$_fields(), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();) {
        mirror = t1._current;
        result.$indexSet(0, mirror.get$simpleName(), mirror);
      }
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView(result), [P.Symbol, P.VariableMirror]);
      this._cachedVariables = t1;
      return t1;
    },
    get$__members: function() {
      var t1 = this._cachedMembers;
      if (t1 != null)
        return t1;
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView(H.filterMembers(this.get$_methods(), this.get$__variables())), [P.Symbol, P.Mirror]);
      this._cachedMembers = t1;
      return t1;
    },
    get$declarations: function() {
      var t1, result;
      t1 = this._cachedDeclarations;
      if (t1 != null)
        return t1;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol, P.DeclarationMirror);
      t1 = new H.JsClassMirror_declarations_addToResult(result);
      this.get$__members().__js_mirrors$_source.forEach$1(0, t1);
      this.get$__constructors().__js_mirrors$_source.forEach$1(0, t1);
      J.forEach$1$ax(this.get$typeVariables(), new H.JsClassMirror_declarations_closure(result));
      t1 = H.setRuntimeTypeInfo(new H.UnmodifiableMapView(result), [P.Symbol, P.DeclarationMirror]);
      this._cachedDeclarations = t1;
      return t1;
    },
    setField$2: [function(fieldName, arg) {
      var mirror, jsName;
      mirror = this.get$__variables().__js_mirrors$_source.$index(0, fieldName);
      if (mirror != null && mirror.get$isStatic() === true && J.get$isFinal$x(mirror) !== true) {
        jsName = mirror.get$_jsName();
        if (!(jsName in $))
          throw H.wrapException(H.RuntimeError$("Cannot find \"" + jsName + "\" in current isolate."));
        $[jsName] = arg;
        return H.reflect(arg);
      }
      throw H.wrapException(P.NoSuchMethodError$(this, H.setterSymbol(fieldName), [arg], null, null));
    }, "call$2", "get$setField", 4, 0, null, 65, 209],
    get$owner: function() {
      var t1, t2;
      t1 = this._owner;
      if (t1 == null) {
        t1 = this._jsConstructorOrInterceptor;
        t2 = J.getInterceptor(t1);
        if (typeof t1 === "object" && t1 !== null && !!t2.$isInterceptor)
          this._owner = H.reflectClassByMangledName(C.Type_HqF._typeName).get$owner();
        else {
          t1 = $.get$JsMirrorSystem_librariesByName();
          t1 = t1.get$values(t1);
          t2 = new H.MappedIterator(null, J.get$iterator$ax(t1._iterable), t1._f);
          t2.$builtinTypeInfo = [H.getTypeArgumentByIndex(t1, 0), H.getTypeArgumentByIndex(t1, 1)];
          for (; t2.moveNext$0();)
            for (t1 = J.get$iterator$ax(t2._current); t1.moveNext$0();)
              t1.get$current().get$__classes();
        }
        t1 = this._owner;
        if (t1 == null)
          throw H.wrapException(new P.StateError("Class \"" + H.S(this.simpleName._name) + "\" has no owner"));
      }
      return t1;
    },
    get$metadata: function() {
      var t1 = this._cachedMetadata;
      if (t1 != null)
        return t1;
      t1 = this._metadata;
      if (t1 == null) {
        t1 = H.extractMetadata(this.get$_jsConstructor().prototype);
        this._metadata = t1;
      }
      t1 = H.setRuntimeTypeInfo(new P.UnmodifiableListView(J.map$1$ax(t1, H.reflect$closure())), [P.InstanceMirror]);
      this._cachedMetadata = t1;
      return t1;
    },
    get$superclass: function() {
      var t1, typeInformation, t2, superclassName, mixins, t3;
      t1 = this._superclass;
      if (t1 == null) {
        typeInformation = init.typeInformation[this._mangledName];
        if (typeInformation != null) {
          t1 = H.typeMirrorFromRuntimeTypeRepresentation(this, init.metadata[J.$index$asx(typeInformation, 0)]);
          this._superclass = t1;
        } else {
          t1 = this._fieldsDescriptor;
          t2 = t1.split(";");
          if (0 >= t2.length)
            return H.ioore(t2, 0);
          superclassName = t2[0];
          t2 = J.getInterceptor$s(superclassName);
          mixins = t2.split$1(superclassName, "+");
          t3 = mixins.length;
          if (t3 > 1) {
            if (t3 !== 2)
              throw H.wrapException(H.RuntimeError$("Strange mixin: " + t1));
            t1 = H.reflectClassByMangledName(mixins[0]);
            this._superclass = t1;
          } else {
            t1 = t2.$eq(superclassName, "") === true ? this : H.reflectClassByMangledName(superclassName);
            this._superclass = t1;
          }
        }
      }
      return J.$eq(t1, this) === true ? null : this._superclass;
    },
    invoke$3: [function(memberName, positionalArguments, namedArguments) {
      var mirror = this.get$__methods().__js_mirrors$_source.$index(0, memberName);
      if (mirror == null || mirror.get$isStatic() !== true)
        throw H.wrapException(P.NoSuchMethodError$(this, memberName, positionalArguments, namedArguments, null));
      if (!mirror.canInvokeReflectively$0())
        H.throwInvalidReflectionError(memberName.get$_name(memberName));
      return H.reflect(mirror._invoke$2(positionalArguments, namedArguments));
    }, function(memberName, positionalArguments) {
      return this.invoke$3(memberName, positionalArguments, null);
    }, "invoke$2", "call$3", null, "get$invoke", 4, 2, null, 77, 24, 43, 44],
    get$isOriginalDeclaration: function() {
      return true;
    },
    get$originalDeclaration: function() {
      return this;
    },
    _getSuperinterfacesWithOwner$1: [function(owner) {
      var typeInformation, result;
      typeInformation = init.typeInformation[this._mangledName];
      result = typeInformation != null ? H.setRuntimeTypeInfo(new H.MappedListIterable(J.skip$1$ax(typeInformation, 1), new H.JsClassMirror__getSuperinterfacesWithOwner_lookupType(owner)), [null, null]).toList$0(0) : C.List_empty3;
      return H.setRuntimeTypeInfo(new P.UnmodifiableListView(result), [P.ClassMirror]);
    }, "call$1", "get$_getSuperinterfacesWithOwner", 2, 0, null, 126],
    get$superinterfaces: function() {
      var t1 = this._cachedSuperinterfaces;
      if (t1 != null)
        return t1;
      t1 = this._getSuperinterfacesWithOwner$1(this);
      this._cachedSuperinterfaces = t1;
      return t1;
    },
    get$typeVariables: function() {
      var t1, result, typeVariables, i, typeVariable;
      t1 = this._cachedTypeVariables;
      if (t1 != null)
        return t1;
      result = [];
      typeVariables = this.get$_jsConstructor().prototype["<>"];
      if (typeVariables == null)
        return result;
      for (i = 0; i < typeVariables.length; ++i) {
        t1 = typeVariables[i];
        typeVariable = init.metadata[t1];
        result.push(new H.JsTypeVariableMirror(this, typeVariable, t1, null, H.s(J.get$name$x(typeVariable))));
      }
      t1 = H.setRuntimeTypeInfo(new P.UnmodifiableListView(result), [null]);
      this._cachedTypeVariables = t1;
      return t1;
    },
    get$typeArguments: function() {
      return C.List_empty1;
    },
    get$reflectedType: function() {
      if (J.$eq(J.get$length$asx(this.get$typeVariables()), 0) !== true)
        throw H.wrapException(P.UnsupportedError$("Declarations of generics have no reflected type"));
      return new H.TypeImpl(this._mangledName, null);
    },
    $index: [function(_, $name) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1", "get$[]", 2, 0, null, 12],
    get$isAbstract: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    $isJsClassMirror: true,
    $isClassMirror: true,
    $isMirror: true,
    $isTypeMirror: true,
    $isDeclarationMirror: true
  },
  JsTypeMirror_JsObjectMirror0: {
    "": "JsTypeMirror+JsObjectMirror;",
    $isMirror: true
  },
  JsClassMirror_declarations_addToResult: {
    "": "Closure:505;result_0",
    call$2: [function(key, value) {
      this.result_0.$indexSet(0, key, value);
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true
  },
  JsClassMirror_declarations_closure: {
    "": "Closure:271;result_1",
    call$1: [function(tv) {
      this.result_1.$indexSet(0, tv.get$simpleName(), tv);
      return tv;
    }, "call$1", null, 2, 0, null, 509, "call"],
    $isFunction: true
  },
  JsClassMirror__getSuperinterfacesWithOwner_lookupType: {
    "": "Closure:512;owner_0",
    call$1: [function(i) {
      return H.typeMirrorFromRuntimeTypeRepresentation(this.owner_0, init.metadata[i]);
    }, "call$1", null, 2, 0, null, 418, "call"],
    $isFunction: true
  },
  JsVariableMirror: {
    "": "JsDeclarationMirror;_jsName<,isFinal>,isStatic<,_metadataFunction,_owner,__js_mirrors$_type>,_metadata,simpleName",
    get$_prettyName: function() {
      return "VariableMirror";
    },
    get$type: function(_) {
      return H.typeMirrorFromRuntimeTypeRepresentation(this._owner, init.metadata[this.__js_mirrors$_type]);
    },
    get$owner: function() {
      return this._owner;
    },
    get$metadata: function() {
      var t1 = this._metadata;
      if (t1 == null) {
        t1 = this._metadataFunction;
        t1 = t1 == null ? C.List_empty : t1();
        this._metadata = t1;
      }
      return J.toList$0$ax(J.map$1$ax(t1, H.reflect$closure()));
    },
    _setField$2: [function(receiver, arg) {
      if (this.isFinal)
        throw H.wrapException(P.NoSuchMethodError$(this, H.setterSymbol(this.simpleName), [arg], null, null));
      $[this._jsName] = arg;
    }, "call$2", "get$_setField", 4, 0, null, 41, 209],
    $isVariableMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true,
    static: {JsVariableMirror_JsVariableMirror$from: function(descriptor, metadataFunction, owner, isStatic) {
        var fieldInformation, t1, field, $length, t2, code, isFinal, jsName, divider, accessorName, unmangledName, setterName;
        fieldInformation = J.split$1$s(descriptor, "-");
        t1 = fieldInformation.length;
        if (t1 === 1)
          return;
        if (0 >= t1)
          return H.ioore(fieldInformation, 0);
        field = fieldInformation[0];
        t1 = J.getInterceptor$asx(field);
        $length = t1.get$length(field);
        t2 = J.getInterceptor$n($length);
        code = H.JsVariableMirror_fieldCode(t1.codeUnitAt$1(field, t2.$sub($length, 1)));
        if (code === 0)
          return;
        isFinal = C.JSInt_methods._shrOtherPositive$1(code, 2) === 0;
        jsName = t1.substring$2(field, 0, t2.$sub($length, 1));
        divider = t1.indexOf$1(field, ":");
        if (divider > 0) {
          accessorName = C.JSString_methods.substring$2(jsName, 0, divider);
          jsName = t1.substring$1(field, divider + 1);
        } else
          accessorName = jsName;
        unmangledName = isStatic ? $.get$mangledGlobalNames().$index(0, accessorName) : $.get$mangledNames().$index(0, "get$" + accessorName);
        if (unmangledName == null)
          unmangledName = accessorName;
        if (isFinal) {
          setterName = H.s(H.S(unmangledName) + "=");
          t1 = owner.get$_methods();
          t2 = new H.ListIterator(t1, t1.length, 0, null);
          t2.$builtinTypeInfo = [H.getTypeArgumentByIndex(t1, 0)];
          for (; isFinal = true, t2.moveNext$0();)
            if (J.$eq(t2._current.get$simpleName(), setterName)) {
              isFinal = false;
              break;
            }
        }
        if (1 >= fieldInformation.length)
          return H.ioore(fieldInformation, 1);
        return new H.JsVariableMirror(jsName, isFinal, isStatic, metadataFunction, owner, H.Primitives_parseInt(fieldInformation[1], null, null), null, H.s(unmangledName));
      }, JsVariableMirror_fieldCode: [function(code) {
        if (code >= 60 && code <= 64)
          return code - 59;
        if (code >= 123 && code <= 126)
          return code - 117;
        if (code >= 37 && code <= 43)
          return code - 27;
        return 0;
      }, "call$1", "JsVariableMirror_fieldCode$closure", 2, 0, null, 180]}
  },
  JsClosureMirror: {
    "": "JsInstanceMirror;reflectee",
    toString$0: [function(_) {
      return "ClosureMirror on '" + H.S(P.Error_safeToString(this.reflectee)) + "'";
    }, "call$0", "get$toString", 0, 0, null],
    $index: [function(_, $name) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1", "get$[]", 2, 0, null, 12],
    $isInstanceMirror: true,
    $isMirror: true
  },
  JsMethodMirror: {
    "": "JsDeclarationMirror;_jsFunction,_parameterCount,isGetter<,isSetter<,isStatic<,isConstructor<,isOperator<,_owner,_metadata,_returnType,_parameters,simpleName",
    get$_prettyName: function() {
      return "MethodMirror";
    },
    get$parameters: function(_) {
      var t1 = this._parameters;
      if (t1 != null)
        return t1;
      this.get$metadata();
      return this._parameters;
    },
    canInvokeReflectively$0: [function() {
      return "$reflectable" in this._jsFunction;
    }, "call$0", "get$canInvokeReflectively", 0, 0, null],
    get$owner: function() {
      return this._owner;
    },
    get$returnType: function() {
      this.get$metadata();
      return this._returnType;
    },
    get$metadata: function() {
      var t1, raw, t2, formals, info, functionType, type, isNamed, t3, i, parameter, $name, t4, p, defaultValue, i0;
      t1 = this._metadata;
      if (t1 == null) {
        t1 = this._jsFunction;
        raw = H.extractMetadata(t1);
        t2 = this._parameterCount;
        if (typeof t2 !== "number")
          return H.iae(t2);
        formals = Array(t2);
        info = H.ReflectionInfo_ReflectionInfo(t1);
        if (info != null) {
          functionType = info.functionType;
          if (typeof functionType === "number" && Math.floor(functionType) === functionType)
            type = new H.JsFunctionTypeMirror(info.computeFunctionRti$1(null), null, null, null, this);
          else {
            t1 = this.get$owner();
            if (t1 != null) {
              t2 = J.getInterceptor(t1);
              t2 = typeof t1 === "object" && t1 !== null && !!t2.$isLibraryMirror;
              t1 = t2;
            } else
              t1 = false;
            type = t1 ? new H.JsFunctionTypeMirror(info.computeFunctionRti$1(null), null, null, null, this._owner) : new H.JsFunctionTypeMirror(info.computeFunctionRti$1(this._owner.get$originalDeclaration().get$_jsConstructorOrInterceptor()), null, null, null, this._owner);
          }
          if (this.isConstructor)
            this._returnType = this._owner;
          else
            this._returnType = type.get$returnType();
          isNamed = info.areOptionalParametersNamed;
          for (t1 = type.get$parameters(type), t1 = t1.get$iterator(t1), t2 = formals.length, t3 = info.optionalParameterCount, i = 0; t1.moveNext$0(); i = i0) {
            parameter = t1._current;
            $name = init.metadata[info.data[i + t3 + 3]];
            t4 = J.getInterceptor$x(parameter);
            if (i < info.requiredParameterCount)
              p = new H.JsParameterMirror(this, t4.get$__js_mirrors$_type(parameter), false, false, null, H.s($name));
            else {
              defaultValue = info.defaultValue$1(0, i);
              p = new H.JsParameterMirror(this, t4.get$__js_mirrors$_type(parameter), true, isNamed, defaultValue, H.s($name));
            }
            i0 = i + 1;
            if (i >= t2)
              return H.ioore(formals, i);
            formals[i] = p;
          }
        }
        this._parameters = H.setRuntimeTypeInfo(new P.UnmodifiableListView(formals), [P.ParameterMirror]);
        t1 = H.setRuntimeTypeInfo(new P.UnmodifiableListView(J.map$1$ax(raw, H.reflect$closure())), [null]);
        this._metadata = t1;
      }
      return t1;
    },
    _invoke$2: [function(positionalArguments, namedArguments) {
      if (!this.isStatic && !this.isConstructor)
        throw H.wrapException(H.RuntimeError$("Cannot invoke instance method without receiver."));
      if (!J.$eq(this._parameterCount, positionalArguments.length) || this._jsFunction == null)
        throw H.wrapException(P.NoSuchMethodError$(this.get$owner(), this.simpleName, positionalArguments, namedArguments, null));
      return this._jsFunction.apply($, P.List_List$from(positionalArguments, true, null));
    }, "call$2", "get$_invoke", 4, 0, null, 43, 44],
    _setField$2: [function(receiver, arg) {
      if (this.isSetter)
        return this._invoke$2([arg], null);
      else
        throw H.wrapException(P.NoSuchMethodError$(this, H.setterSymbol(this.simpleName), [], null, null));
    }, "call$2", "get$_setField", 4, 0, null, 41, 209],
    get$isAbstract: function() {
      return false;
    },
    get$isRegularMethod: function() {
      return !this.isGetter && !this.isSetter && !this.isConstructor;
    },
    $isJsMethodMirror: true,
    $isMethodMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true,
    static: {JsMethodMirror_JsMethodMirror$fromUnmangledName: function($name, jsFunction, isStatic, isConstructor) {
        var info, isOperator, isSetter, t1, requiredParameterCount, isGetter, optionalParameterCount;
        info = J.split$1$s($name, ":");
        if (0 >= info.length)
          return H.ioore(info, 0);
        $name = info[0];
        isOperator = H.isOperatorName($name);
        isSetter = !isOperator && J.endsWith$1$s($name, "=") === true;
        t1 = info.length;
        if (t1 === 1) {
          if (isSetter) {
            requiredParameterCount = 1;
            isGetter = false;
          } else {
            requiredParameterCount = 0;
            isGetter = true;
          }
          optionalParameterCount = 0;
        } else {
          if (1 >= t1)
            return H.ioore(info, 1);
          requiredParameterCount = H.Primitives_parseInt(info[1], null, null);
          if (2 >= info.length)
            return H.ioore(info, 2);
          optionalParameterCount = H.Primitives_parseInt(info[2], null, null);
          isGetter = false;
        }
        t1 = H.s($name);
        return new H.JsMethodMirror(jsFunction, J.$add$ns(requiredParameterCount, optionalParameterCount), isGetter, isSetter, isStatic, isConstructor, isOperator, null, null, null, null, t1);
      }}
  },
  JsParameterMirror: {
    "": "JsDeclarationMirror;owner<,__js_mirrors$_type>,isOptional<,isNamed<,_defaultValue,simpleName",
    get$_prettyName: function() {
      return "ParameterMirror";
    },
    get$type: function(_) {
      return H.typeMirrorFromRuntimeTypeRepresentation(this.owner, this.__js_mirrors$_type);
    },
    get$isStatic: function() {
      return false;
    },
    get$isFinal: function(_) {
      return false;
    },
    get$defaultValue: function(_) {
      var t1 = this._defaultValue;
      return t1 != null ? H.reflect(init.metadata[t1]) : null;
    },
    get$metadata: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    $isParameterMirror: true,
    $isVariableMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true
  },
  JsTypedefMirror: {
    "": "JsDeclarationMirror;_mangledName<,referent,simpleName",
    get$value: function(_) {
      return this.referent;
    },
    get$_prettyName: function() {
      return "TypedefMirror";
    },
    get$originalDeclaration: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    get$owner: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    get$metadata: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    $isTypedefMirror: true,
    $isTypeMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true
  },
  BrokenClassMirror: {
    "": "Object;",
    get$reflectedType: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    get$superclass: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    get$superinterfaces: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    get$declarations: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    $index: [function(_, $name) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$1", "get$[]", 2, 0, null, 12],
    invoke$3: [function(memberName, positionalArguments, namedArguments) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, function(memberName, positionalArguments) {
      return this.invoke$3(memberName, positionalArguments, null);
    }, "invoke$2", "call$3", null, "get$invoke", 4, 2, null, 77, 24, 43, 44],
    setField$2: [function(fieldName, value) {
      return H.throwExpression(P.UnimplementedError$(null));
    }, "call$2", "get$setField", 4, 0, null, 65, 23],
    get$typeVariables: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    get$typeArguments: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    get$originalDeclaration: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    get$simpleName: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    get$qualifiedName: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    get$isPrivate: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    get$location: function(_) {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    get$metadata: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    }
  },
  JsFunctionTypeMirror: {
    "": "BrokenClassMirror;_typeData,_cachedToString,_cachedReturnType,_cachedParameters,owner@",
    get$isOriginalDeclaration: function() {
      return true;
    },
    get$isAbstract: function() {
      return false;
    },
    get$returnType: function() {
      var t1 = this._cachedReturnType;
      if (t1 != null)
        return t1;
      t1 = this._typeData;
      if (!!t1.void) {
        t1 = $.get$JsMirrorSystem__voidType();
        this._cachedReturnType = t1;
        return t1;
      }
      if (!("ret" in t1)) {
        t1 = $.get$JsMirrorSystem__dynamicType();
        this._cachedReturnType = t1;
        return t1;
      }
      t1 = H.typeMirrorFromRuntimeTypeRepresentation(this.owner, t1.ret);
      this._cachedReturnType = t1;
      return t1;
    },
    get$parameters: function(_) {
      var t1, result, t2, parameterCount, parameterCount0, $name;
      t1 = this._cachedParameters;
      if (t1 != null)
        return t1;
      result = [];
      t1 = this._typeData;
      if ("args" in t1)
        for (t2 = t1.args, t2 = H.setRuntimeTypeInfo(new H.ListIterator(t2, t2.length, 0, null), [H.getTypeArgumentByIndex(t2, 0)]), parameterCount = 0; t2.moveNext$0(); parameterCount = parameterCount0) {
          parameterCount0 = parameterCount + 1;
          result.push(new H.JsParameterMirror(this, t2._current, false, false, null, H.s("argument" + parameterCount)));
        }
      else
        parameterCount = 0;
      if ("opt" in t1)
        for (t2 = t1.opt, t2 = H.setRuntimeTypeInfo(new H.ListIterator(t2, t2.length, 0, null), [H.getTypeArgumentByIndex(t2, 0)]); t2.moveNext$0(); parameterCount = parameterCount0) {
          parameterCount0 = parameterCount + 1;
          result.push(new H.JsParameterMirror(this, t2._current, false, false, null, H.s("argument" + parameterCount)));
        }
      if ("named" in t1)
        for (t2 = H.extractKeys(t1.named), t2 = H.setRuntimeTypeInfo(new H.ListIterator(t2, t2.length, 0, null), [H.getTypeArgumentByIndex(t2, 0)]); t2.moveNext$0();) {
          $name = t2._current;
          result.push(new H.JsParameterMirror(this, t1.named[$name], false, false, null, H.s($name)));
        }
      t1 = H.setRuntimeTypeInfo(new P.UnmodifiableListView(result), [P.ParameterMirror]);
      this._cachedParameters = t1;
      return t1;
    },
    toString$0: [function(_) {
      var t1, t2, s, sep, argument, $name;
      t1 = this._cachedToString;
      if (t1 != null)
        return t1;
      t1 = this._typeData;
      if ("args" in t1)
        for (t2 = t1.args, t2 = H.setRuntimeTypeInfo(new H.ListIterator(t2, t2.length, 0, null), [H.getTypeArgumentByIndex(t2, 0)]), s = "FunctionTypeMirror on '(", sep = ""; t2.moveNext$0(); sep = ", ") {
          argument = t2._current;
          s = C.JSString_methods.$add(s + sep, H.runtimeTypeToString(argument, null));
        }
      else {
        s = "FunctionTypeMirror on '(";
        sep = "";
      }
      if ("opt" in t1) {
        s += sep + "[";
        for (t2 = t1.opt, t2 = H.setRuntimeTypeInfo(new H.ListIterator(t2, t2.length, 0, null), [H.getTypeArgumentByIndex(t2, 0)]), sep = ""; t2.moveNext$0(); sep = ", ") {
          argument = t2._current;
          s = C.JSString_methods.$add(s + sep, H.runtimeTypeToString(argument, null));
        }
        s += "]";
      }
      if ("named" in t1) {
        s += sep + "{";
        for (t2 = H.extractKeys(t1.named), t2 = H.setRuntimeTypeInfo(new H.ListIterator(t2, t2.length, 0, null), [H.getTypeArgumentByIndex(t2, 0)]), sep = ""; t2.moveNext$0(); sep = ", ") {
          $name = t2._current;
          s = C.JSString_methods.$add(s + sep + (H.S($name) + ": "), H.runtimeTypeToString(t1.named[$name], null));
        }
        s += "}";
      }
      s += ") -> ";
      if (!!t1.void)
        s += "void";
      else
        s = "ret" in t1 ? C.JSString_methods.$add(s, H.runtimeTypeToString(t1.ret, null)) : s + "dynamic";
      t1 = s + "'";
      this._cachedToString = t1;
      return t1;
    }, "call$0", "get$toString", 0, 0, null],
    get$callMethod: function() {
      return H.throwExpression(P.UnimplementedError$(null));
    },
    callMethod$2: function(arg0, arg1) {
      return this.get$callMethod().call$2(arg0, arg1);
    },
    $isClassMirror: true,
    $isMirror: true,
    $isTypeMirror: true,
    $isDeclarationMirror: true
  },
  typeMirrorFromRuntimeTypeRepresentation_getTypeArgument: {
    "": "Closure:513;box_0",
    call$1: [function(index) {
      var typeVariable, t1, variableIndex;
      typeVariable = init.metadata[index];
      t1 = this.box_0;
      variableIndex = H.findTypeVariableIndex(t1.ownerClass_0.get$typeVariables(), J.get$name$x(typeVariable));
      return J.$index$asx(t1.ownerClass_0.get$typeArguments(), variableIndex);
    }, "call$1", null, 2, 0, null, 47, "call"],
    $isFunction: true
  },
  typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable: {
    "": "Closure:355;getTypeArgument_1",
    call$1: [function(index) {
      var typeArgument, t1;
      typeArgument = this.getTypeArgument_1.call$1(index);
      t1 = J.getInterceptor(typeArgument);
      if (typeof typeArgument === "object" && typeArgument !== null && !!t1.$isJsTypeVariableMirror)
        return H.S(typeArgument._metadataIndex);
      if ((typeof typeArgument !== "object" || typeArgument === null || !t1.$isJsClassMirror) && (typeof typeArgument !== "object" || typeArgument === null || !t1.$isJsTypeBoundClassMirror))
        if (t1.$eq(typeArgument, $.get$JsMirrorSystem__dynamicType()) === true)
          return "dynamic";
        else if (t1.$eq(typeArgument, $.get$JsMirrorSystem__voidType()) === true)
          return "void";
        else
          return "dynamic";
      return typeArgument.get$_mangledName();
    }, "call$1", null, 2, 0, null, 47, "call"],
    $isFunction: true
  },
  extractMetadata_closure: {
    "": "Closure:513;",
    call$1: [function(i) {
      return init.metadata[i];
    }, "call$1", null, 2, 0, null, 418, "call"],
    $isFunction: true
  },
  extractMetadata_closure0: {
    "": "Closure:513;",
    call$1: [function(i) {
      return init.metadata[i];
    }, "call$1", null, 2, 0, null, 418, "call"],
    $isFunction: true
  },
  UnmodifiableMapView: {
    "": "Object;__js_mirrors$_source",
    get$length: function(_) {
      return this.__js_mirrors$_source._collection$_length;
    },
    get$isEmpty: function(_) {
      return this.__js_mirrors$_source._collection$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return this.__js_mirrors$_source._collection$_length !== 0;
    },
    $index: [function(_, key) {
      return this.__js_mirrors$_source.$index(0, key);
    }, "call$1", "get$[]", 2, 0, null, 42],
    containsKey$1: [function(key) {
      return this.__js_mirrors$_source.containsKey$1(key);
    }, "call$1", "get$containsKey", 2, 0, null, 42],
    containsValue$1: [function(value) {
      return this.__js_mirrors$_source.containsValue$1(value);
    }, "call$1", "get$containsValue", 2, 0, null, 23],
    forEach$1: [function(_, f) {
      return this.__js_mirrors$_source.forEach$1(0, f);
    }, "call$1", "get$forEach", 2, 0, null, 154],
    get$keys: function() {
      var t1 = this.__js_mirrors$_source;
      return H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterable(t1), [H.getTypeArgumentByIndex(t1, 0)]);
    },
    get$values: function(_) {
      var t1 = this.__js_mirrors$_source;
      return t1.get$values(t1);
    },
    $indexSet: [function(_, key, value) {
      return H.UnmodifiableMapView__throw();
    }, "call$2", "get$[]=", 4, 0, null, 42, 23],
    putIfAbsent$2: [function(key, ifAbsent) {
      H.UnmodifiableMapView__throw();
    }, "call$2", "get$putIfAbsent", 4, 0, null, 42, 427],
    addAll$1: [function(_, other) {
      return H.UnmodifiableMapView__throw();
    }, "call$1", "get$addAll", 2, 0, null, 104],
    remove$1: [function(_, key) {
      H.UnmodifiableMapView__throw();
    }, "call$1", "get$remove", 2, 0, null, 42],
    clear$0: [function(_) {
      return H.UnmodifiableMapView__throw();
    }, "call$0", "get$clear", 0, 0, null],
    $isMap: true,
    static: {UnmodifiableMapView__throw: [function() {
        throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable Map"));
      }, "call$0", "UnmodifiableMapView__throw$closure", 0, 0, null]}
  }
}],
["dart._js_names", "dart:_js_names", , H, {
  "": "",
  computeMangledNames: [function(jsMangledNames, isGlobal) {
    var keys, result, t1, t2, key, value, t3;
    keys = H.extractKeys(jsMangledNames);
    result = H.setRuntimeTypeInfo(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [J.JSString, J.JSString]);
    for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(keys, keys.length, 0, null), [H.getTypeArgumentByIndex(keys, 0)]), t2 = !isGlobal; t1.moveNext$0();) {
      key = t1._current;
      value = jsMangledNames[key];
      result.$indexSet(0, key, value);
      if (t2) {
        t3 = J.getInterceptor$s(key);
        if (t3.startsWith$1(key, "get$"))
          result.$indexSet(0, "set$" + t3.substring$1(key, 4), value + "=");
      }
    }
    return result;
  }, "call$2", "computeMangledNames$closure", 4, 0, null, 185, 186],
  computeReflectiveNames: [function(map) {
    var result = H.setRuntimeTypeInfo(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [J.JSString, J.JSString]);
    map.forEach$1(0, new H.computeReflectiveNames_closure(result));
    return result;
  }, "call$1", "computeReflectiveNames$closure", 2, 0, null, 140],
  extractKeys: [function(victim) {
    var t1 = H.setRuntimeTypeInfo((function(victim, hasOwnProperty) {
  var result = [];
  for (var key in victim) {
    if (hasOwnProperty.call(victim, key)) result.push(key);
  }
  return result;
})(victim, Object.prototype.hasOwnProperty), [null]);
    t1.fixed$length = init;
    return t1;
  }, "call$1", "extractKeys$closure", 2, 0, null, 183],
  computeReflectiveNames_closure: {
    "": "Closure:141;result_0",
    call$2: [function(mangledName, reflectiveName) {
      this.result_0.$indexSet(0, reflectiveName, mangledName);
    }, "call$2", null, 4, 0, null, 177, 506, "call"],
    $isFunction: true
  }
}],
["dart.async", "dart:async", , P, {
  "": "",
  _invokeErrorHandler: [function(errorHandler, error, stackTrace) {
    var t1 = H.getDynamicRuntimeType();
    t1 = H.buildFunctionType(t1, [t1, t1])._isTest$1(errorHandler);
    if (t1)
      return errorHandler.call$2(error, stackTrace);
    else
      return errorHandler.call$1(error);
  }, "call$3", "_invokeErrorHandler$closure", 6, 0, null, 187, 188, 189],
  _registerErrorHandler: [function(errorHandler, zone) {
    var t1 = H.getDynamicRuntimeType();
    t1 = H.buildFunctionType(t1, [t1, t1])._isTest$1(errorHandler);
    if (t1)
      return zone.registerBinaryCallback$1(errorHandler);
    else
      return zone.registerUnaryCallback$1(errorHandler);
  }, "call$2", "_registerErrorHandler$closure", 4, 0, null, 187, 190],
  Future_wait: [function(futures, eagerError) {
    var t1, t2, t3, future, pos, values, completer;
    t1 = {};
    t1.completer_0 = null;
    t1.values_1 = null;
    t1.remaining_2 = 0;
    t1.error_3 = null;
    t1.stackTrace_4 = null;
    t2 = new P.Future_wait_handleError(t1, eagerError);
    for (t3 = H.setRuntimeTypeInfo(new H.ListIterator(futures, futures.length, 0, null), [H.getTypeArgumentByIndex(futures, 0)]); t3.moveNext$0();) {
      future = t3._current;
      pos = t1.remaining_2;
      t1.remaining_2 = pos + 1;
      future.then$2$onError(new P.Future_wait_closure(t1, eagerError, pos), t2);
    }
    t2 = t1.remaining_2;
    if (t2 === 0)
      return P._Future$immediate(C.List_empty, null);
    values = Array(t2);
    values.fixed$length = init;
    t1.values_1 = values;
    t2 = J.JSArray;
    completer = H.setRuntimeTypeInfo(new P._AsyncCompleter(P._Future$(t2)), [t2]);
    t1.completer_0 = completer;
    return completer.future;
  }, "call$2$eagerError", "Future_wait$closure", 2, 3, null, 112, 191, 192],
  _asyncRunCallback: [function() {
    var callback, t1, exception, milliseconds;
    for (; t1 = $.get$_asyncCallbacks(), t1._head !== t1._tail;) {
      callback = t1.removeFirst$0();
      try {
        callback.call$0();
      } catch (exception) {
        H.unwrapException(exception);
        milliseconds = C.JSNumber_methods._tdivFast$1(C.Duration_0._duration, 1000);
        H.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, P._asyncRunCallback$closure());
        throw exception;
      }

    }
    $._callbacksAreEnqueued = false;
  }, "call$0", "_asyncRunCallback$closure", 0, 0, 107],
  _scheduleAsyncCallback: [function(callback) {
    $.get$_asyncCallbacks()._add$1(0, callback);
    if (!$._callbacksAreEnqueued) {
      P._createTimer(C.Duration_0, P._asyncRunCallback$closure());
      $._callbacksAreEnqueued = true;
    }
  }, "call$1", "_scheduleAsyncCallback$closure", 2, 0, null, 194],
  scheduleMicrotask: [function(callback) {
    var t1;
    if (J.$eq($.Zone__current, C.C__RootZone) === true) {
      $.Zone__current.scheduleMicrotask$1(callback);
      return;
    }
    t1 = $.Zone__current;
    t1.scheduleMicrotask$1(t1.bindCallback$2$runGuarded(callback, true));
  }, "call$1", "scheduleMicrotask$closure", 2, 0, null, 194],
  StreamController_StreamController: function(onCancel, onListen, onPause, onResume, sync, $T) {
    return sync ? H.setRuntimeTypeInfo(new P._SyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null), [$T]) : H.setRuntimeTypeInfo(new P._AsyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null), [$T]);
  },
  StreamController_StreamController$broadcast: function(onCancel, onListen, sync, $T) {
    var t1;
    if (sync) {
      t1 = H.setRuntimeTypeInfo(new P._SyncBroadcastStreamController(onListen, onCancel, 0, null, null, null, null), [$T]);
      t1._async$_previous = t1;
      t1._async$_next = t1;
    } else {
      t1 = H.setRuntimeTypeInfo(new P._AsyncBroadcastStreamController(onListen, onCancel, 0, null, null, null, null), [$T]);
      t1._async$_previous = t1;
      t1._async$_next = t1;
    }
    return t1;
  },
  _runGuarded: [function(notificationHandler) {
    var result, e, s, t1, t2, exception;
    if (notificationHandler == null)
      return;
    try {
      result = notificationHandler.call$0();
      t1 = result;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isFuture)
        return result;
      return;
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      $.Zone__current.handleUncaughtError$2(e, s);
    }

  }, "call$1", "_runGuarded$closure", 2, 0, null, 195],
  _nullDataHandler: [function(value) {
  }, "call$1", "_nullDataHandler$closure", 2, 0, 196, 23],
  _nullErrorHandler: [function(error, stackTrace) {
    $.Zone__current.handleUncaughtError$2(error, stackTrace);
  }, function(error) {
    return P._nullErrorHandler(error, null);
  }, null, "call$2", "call$1", "_nullErrorHandler$closure", 2, 2, 197, 77, 188, 189],
  _nullDoneHandler: [function() {
    return;
  }, "call$0", "_nullDoneHandler$closure", 0, 0, 107],
  _runUserCode: [function(userCode, onSuccess, onError) {
    var e, s, exception, t1;
    try {
      onSuccess.call$1(userCode.call$0());
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      s = new H._StackTrace(exception, null);
      onError.call$2(e, s);
    }

  }, "call$3", "_runUserCode$closure", 6, 0, null, 198, 199, 200],
  _cancelAndError: [function(subscription, future, error, stackTrace) {
    var cancelFuture, t1;
    cancelFuture = subscription.cancel$0();
    t1 = J.getInterceptor(cancelFuture);
    if (typeof cancelFuture === "object" && cancelFuture !== null && !!t1.$isFuture)
      cancelFuture.whenComplete$1(new P._cancelAndError_closure(future, error, stackTrace));
    else
      future._completeError$2(error, stackTrace);
  }, "call$4", "_cancelAndError$closure", 8, 0, null, 201, 202, 188, 189],
  _cancelAndErrorClosure: [function(subscription, future) {
    return new P._cancelAndErrorClosure_closure(subscription, future);
  }, "call$2", "_cancelAndErrorClosure$closure", 4, 0, null, 201, 202],
  _cancelAndValue: [function(subscription, future, value) {
    var cancelFuture, t1;
    cancelFuture = subscription.cancel$0();
    t1 = J.getInterceptor(cancelFuture);
    if (typeof cancelFuture === "object" && cancelFuture !== null && !!t1.$isFuture)
      cancelFuture.whenComplete$1(new P._cancelAndValue_closure(future, value));
    else
      future._complete$1(value);
  }, "call$3", "_cancelAndValue$closure", 6, 0, null, 201, 202, 23],
  Timer_Timer: function(duration, callback) {
    var t1;
    if (J.$eq($.Zone__current, C.C__RootZone) === true)
      return $.Zone__current.createTimer$2(duration, callback);
    t1 = $.Zone__current;
    return t1.createTimer$2(duration, t1.bindCallback$2$runGuarded(callback, true));
  },
  _createTimer: [function(duration, callback) {
    var milliseconds = C.JSNumber_methods._tdivFast$1(duration._duration, 1000);
    return H.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
  }, "call$2", "_createTimer$closure", 4, 0, null, 203, 194],
  _rootHandleUncaughtError: [function($self, $parent, zone, error, stackTrace) {
    $self.run$1(new P._rootHandleUncaughtError_closure(error, stackTrace));
  }, "call$5", "_rootHandleUncaughtError$closure", 10, 0, 204, 205, 206, 190, 188, 189],
  _rootRun: [function($self, $parent, zone, f) {
    var old, t1;
    if (J.$eq($.Zone__current, zone) === true)
      return f.call$0();
    old = $.Zone__current;
    try {
      $.Zone__current = zone;
      t1 = f.call$0();
      return t1;
    } finally {
      $.Zone__current = old;
    }
  }, "call$4", "_rootRun$closure", 8, 0, 207, 205, 206, 190, 154],
  _rootRunUnary: [function($self, $parent, zone, f, arg) {
    var old, t1;
    if (J.$eq($.Zone__current, zone) === true)
      return f.call$1(arg);
    old = $.Zone__current;
    try {
      $.Zone__current = zone;
      t1 = f.call$1(arg);
      return t1;
    } finally {
      $.Zone__current = old;
    }
  }, "call$5", "_rootRunUnary$closure", 10, 0, 208, 205, 206, 190, 154, 209],
  _rootRunBinary: [function($self, $parent, zone, f, arg1, arg2) {
    var old, t1;
    if (J.$eq($.Zone__current, zone) === true)
      return f.call$2(arg1, arg2);
    old = $.Zone__current;
    try {
      $.Zone__current = zone;
      t1 = f.call$2(arg1, arg2);
      return t1;
    } finally {
      $.Zone__current = old;
    }
  }, "call$6", "_rootRunBinary$closure", 12, 0, 210, 205, 206, 190, 154, 54, 55],
  _rootRegisterCallback: [function($self, $parent, zone, f) {
    return f;
  }, "call$4", "_rootRegisterCallback$closure", 8, 0, 211, 205, 206, 190, 154],
  _rootRegisterUnaryCallback: [function($self, $parent, zone, f) {
    return f;
  }, "call$4", "_rootRegisterUnaryCallback$closure", 8, 0, 212, 205, 206, 190, 154],
  _rootRegisterBinaryCallback: [function($self, $parent, zone, f) {
    return f;
  }, "call$4", "_rootRegisterBinaryCallback$closure", 8, 0, 213, 205, 206, 190, 154],
  _rootScheduleMicrotask: [function($self, $parent, zone, f) {
    P._scheduleAsyncCallback(C.C__RootZone !== zone ? zone.bindCallback$1(f) : f);
  }, "call$4", "_rootScheduleMicrotask$closure", 8, 0, 214, 205, 206, 190, 154],
  _rootCreateTimer: [function($self, $parent, zone, duration, callback) {
    return P._createTimer(duration, C.C__RootZone !== zone ? zone.bindCallback$1(callback) : callback);
  }, "call$5", "_rootCreateTimer$closure", 10, 0, 215, 205, 206, 190, 203, 194],
  _rootPrint: [function($self, $parent, zone, line) {
    H.printString(line);
  }, "call$4", "_rootPrint$closure", 8, 0, 216, 205, 206, 190, 217],
  _printToZone: [function(line) {
    J.print$1$x($.Zone__current, line);
  }, "call$1", "_printToZone$closure", 2, 0, 218, 217],
  _rootFork: [function($self, $parent, zone, specification, zoneValues) {
    var copiedMap;
    $.printToZone = P._printToZone$closure();
    copiedMap = P.HashMap_HashMap(null, null, null, null, null);
    return new P._CustomizedZone(zone, specification, copiedMap);
  }, "call$5", "_rootFork$closure", 10, 0, 219, 205, 206, 190, 220, 221],
  _AsyncError: {
    "": "Object;error>,stackTrace<",
    $isError: true
  },
  _BroadcastStream: {
    "": "_ControllerStream;_controller"
  },
  _BroadcastSubscription: {
    "": "_ControllerSubscription;_eventState@,_async$_next@,_async$_previous@,_controller,_async$_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
    get$_controller: function() {
      return this._controller;
    },
    _expectsEvent$1: [function(eventId) {
      var t1 = this._eventState;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & 1) === eventId;
    }, "call$1", "get$_expectsEvent", 2, 0, null, 514],
    _toggleEventId$0: [function() {
      var t1 = this._eventState;
      if (typeof t1 !== "number")
        return t1.$xor();
      this._eventState = t1 ^ 1;
    }, "call$0", "get$_toggleEventId", 0, 0, null],
    get$_isFiring: function() {
      var t1 = this._eventState;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & 2) !== 0;
    },
    _setRemoveAfterFiring$0: [function() {
      var t1 = this._eventState;
      if (typeof t1 !== "number")
        return t1.$or();
      this._eventState = t1 | 4;
    }, "call$0", "get$_setRemoveAfterFiring", 0, 0, null],
    get$_removeAfterFiring: function() {
      var t1 = this._eventState;
      if (typeof t1 !== "number")
        return t1.$and();
      return (t1 & 4) !== 0;
    },
    _onPause$0: [function() {
      return;
    }, "call$0", "get$_onPause", 0, 0, 107],
    _onResume$0: [function() {
      return;
    }, "call$0", "get$_onResume", 0, 0, 107],
    static: {"": "_BroadcastSubscription__STATE_EVENT_ID,_BroadcastSubscription__STATE_FIRING,_BroadcastSubscription__STATE_REMOVE_AFTER_FIRING"}
  },
  _BroadcastStreamController: {
    "": "Object;_async$_next@,_async$_previous@",
    get$_isFiring: function() {
      return (this._state & 2) !== 0;
    },
    _ensureDoneFuture$0: [function() {
      var t1 = this._doneFuture;
      if (t1 != null)
        return t1;
      t1 = P._Future$(null);
      this._doneFuture = t1;
      return t1;
    }, "call$0", "get$_ensureDoneFuture", 0, 0, null],
    _removeListener$1: [function(subscription) {
      var previous, next;
      previous = subscription.get$_async$_previous();
      next = subscription.get$_async$_next();
      previous.set$_async$_next(next);
      next.set$_async$_previous(previous);
      subscription.set$_async$_previous(subscription);
      subscription.set$_async$_next(subscription);
    }, "call$1", "get$_removeListener", 2, 0, null, 201],
    _subscribe$1: [function(cancelOnError) {
      var t1, t2, subscription;
      if ((this._state & 4) !== 0)
        throw H.wrapException(new P.StateError("Subscribing to closed stream"));
      t1 = $.Zone__current;
      t2 = cancelOnError ? 1 : 0;
      subscription = new P._BroadcastSubscription(null, null, null, this, null, null, null, t1, t2, null, null);
      subscription.$builtinTypeInfo = this.$builtinTypeInfo;
      subscription._async$_previous = subscription;
      subscription._async$_next = subscription;
      t2 = this._async$_previous;
      subscription._async$_previous = t2;
      subscription._async$_next = this;
      t2.set$_async$_next(subscription);
      this._async$_previous = subscription;
      subscription._eventState = this._state & 1;
      if (this._async$_next === subscription)
        P._runGuarded(this._onListen);
      return subscription;
    }, "call$1", "get$_subscribe", 2, 0, null, 423],
    _recordCancel$1: [function(subscription) {
      if (subscription.get$_async$_next() === subscription)
        return;
      if (subscription.get$_isFiring())
        subscription._setRemoveAfterFiring$0();
      else {
        this._removeListener$1(subscription);
        if ((this._state & 2) === 0 && this._async$_next === this)
          this._callOnCancel$0();
      }
    }, "call$1", "get$_recordCancel", 2, 0, null, 201],
    _recordPause$1: [function(subscription) {
    }, "call$1", "get$_recordPause", 2, 0, null, 201],
    _recordResume$1: [function(subscription) {
    }, "call$1", "get$_recordResume", 2, 0, null, 201],
    _addEventError$0: [function() {
      if ((this._state & 4) !== 0)
        return new P.StateError("Cannot add new events after calling close");
      return new P.StateError("Cannot add new events while doing an addStream");
    }, "call$0", "get$_addEventError", 0, 0, null],
    add$1: [function(_, data) {
      if (this._state >= 4)
        throw H.wrapException(this._addEventError$0());
      this._sendData$1(data);
    }, "call$1", "get$add", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T", void: true, args: [T]};
      }, this.$receiver, "_BroadcastStreamController");
    }, 377],
    addError$2: [function(error, stackTrace) {
      if (this._state >= 4)
        throw H.wrapException(this._addEventError$0());
      this._sendError$2(error, stackTrace);
    }, function(error) {
      return this.addError$2(error, null);
    }, "addError$1", "call$2", "call$1", "get$addError", 2, 2, 515, 77, 188, 189],
    close$0: [function(_) {
      var t1, doneFuture;
      t1 = this._state;
      if ((t1 & 4) !== 0)
        return this._doneFuture;
      if (t1 >= 4)
        throw H.wrapException(this._addEventError$0());
      this._state = t1 | 4;
      doneFuture = this._ensureDoneFuture$0();
      this._sendDone$0();
      return doneFuture;
    }, "call$0", "get$close", 0, 0, null],
    _async$_add$1: [function(_, data) {
      this._sendData$1(data);
    }, "call$1", "get$_async$_add", 2, 0, null, 377],
    _addError$2: [function(error, stackTrace) {
      this._sendError$2(error, stackTrace);
    }, "call$2", "get$_addError", 4, 0, null, 188, 189],
    _close$0: [function() {
      var addState = this._addStreamState;
      this._addStreamState = null;
      this._state = this._state & 4294967287;
      C.JSNull_methods.complete$0(addState);
    }, "call$0", "get$_close", 0, 0, null],
    _forEachListener$1: [function(action) {
      var t1, link, id, link0;
      t1 = this._state;
      if ((t1 & 2) !== 0)
        throw H.wrapException(new P.StateError("Cannot fire new event. Controller is already firing an event"));
      link = this._async$_next;
      if (link === this)
        return;
      id = t1 & 1;
      this._state = t1 ^ 3;
      for (; link !== this;)
        if (link._expectsEvent$1(id)) {
          t1 = link.get$_eventState();
          if (typeof t1 !== "number")
            return t1.$or();
          link.set$_eventState(t1 | 2);
          action.call$1(link);
          link._toggleEventId$0();
          link0 = link.get$_async$_next();
          if (link.get$_removeAfterFiring())
            this._removeListener$1(link);
          t1 = link.get$_eventState();
          if (typeof t1 !== "number")
            return t1.$and();
          link.set$_eventState(t1 & 4294967293);
          link = link0;
        } else
          link = link.get$_async$_next();
      this._state = this._state & 4294967293;
      if (this._async$_next === this)
        this._callOnCancel$0();
    }, "call$1", "get$_forEachListener", 2, 0, null, 502],
    _callOnCancel$0: [function() {
      if ((this._state & 4) !== 0 && this._doneFuture._state === 0)
        this._doneFuture._asyncComplete$1(null);
      P._runGuarded(this._onCancel);
    }, "call$0", "get$_callOnCancel", 0, 0, null]
  },
  _SyncBroadcastStreamController: {
    "": "_BroadcastStreamController;_onListen,_onCancel,_state,_async$_next,_async$_previous,_addStreamState,_doneFuture",
    _sendData$1: [function(data) {
      var t1 = this._async$_next;
      if (t1 === this)
        return;
      if (t1.get$_async$_next() === this) {
        this._state = this._state | 2;
        this._async$_next._async$_add$1(0, data);
        this._state = this._state & 4294967293;
        if (this._async$_next === this)
          this._callOnCancel$0();
        return;
      }
      this._forEachListener$1(new P._SyncBroadcastStreamController__sendData_closure(this, data));
    }, "call$1", "get$_sendData", 2, 0, null, 377],
    _sendError$2: [function(error, stackTrace) {
      if (this._async$_next === this)
        return;
      this._forEachListener$1(new P._SyncBroadcastStreamController__sendError_closure(this, error, stackTrace));
    }, "call$2", "get$_sendError", 4, 0, null, 188, 189],
    _sendDone$0: [function() {
      if (this._async$_next !== this)
        this._forEachListener$1(new P._SyncBroadcastStreamController__sendDone_closure(this));
      else
        this._doneFuture._asyncComplete$1(null);
    }, "call$0", "get$_sendDone", 0, 0, null]
  },
  _SyncBroadcastStreamController__sendData_closure: {
    "": "Closure;this_0,data_1",
    call$1: [function(subscription) {
      subscription._async$_add$1(0, this.data_1);
    }, "call$1", null, 2, 0, null, 201, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic___BufferingStreamSubscription", args: [[P._BufferingStreamSubscription, T]]};
      }, this.this_0, "_SyncBroadcastStreamController");
    }
  },
  _SyncBroadcastStreamController__sendError_closure: {
    "": "Closure;this_0,error_1,stackTrace_2",
    call$1: [function(subscription) {
      subscription._addError$2(this.error_1, this.stackTrace_2);
    }, "call$1", null, 2, 0, null, 201, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic___BufferingStreamSubscription", args: [[P._BufferingStreamSubscription, T]]};
      }, this.this_0, "_SyncBroadcastStreamController");
    }
  },
  _SyncBroadcastStreamController__sendDone_closure: {
    "": "Closure;this_0",
    call$1: [function(subscription) {
      subscription._close$0();
    }, "call$1", null, 2, 0, null, 201, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic___BroadcastSubscription", args: [[P._BroadcastSubscription, T]]};
      }, this.this_0, "_SyncBroadcastStreamController");
    }
  },
  _AsyncBroadcastStreamController: {
    "": "_BroadcastStreamController;_onListen,_onCancel,_state,_async$_next,_async$_previous,_addStreamState,_doneFuture",
    _sendData$1: [function(data) {
      var link, t1;
      for (link = this._async$_next; link !== this; link = link.get$_async$_next()) {
        t1 = new P._DelayedData(data, null);
        t1.$builtinTypeInfo = [null];
        link._addPending$1(t1);
      }
    }, "call$1", "get$_sendData", 2, 0, null, 377],
    _sendError$2: [function(error, stackTrace) {
      var link;
      for (link = this._async$_next; link !== this; link = link.get$_async$_next())
        link._addPending$1(new P._DelayedError(error, stackTrace, null));
    }, "call$2", "get$_sendError", 4, 0, null, 188, 189],
    _sendDone$0: [function() {
      var link = this._async$_next;
      if (link !== this)
        for (; link !== this; link = link.get$_async$_next())
          link._addPending$1(C.C__DelayedDone);
      else
        this._doneFuture._asyncComplete$1(null);
    }, "call$0", "get$_sendDone", 0, 0, null]
  },
  Future: {
    "": "Object;",
    $isFuture: true
  },
  Future_wait_handleError: {
    "": "Closure:426;box_0,eagerError_1",
    call$2: [function(theError, theStackTrace) {
      var t1, t2, remaining;
      t1 = this.box_0;
      t2 = t1.values_1;
      t1.values_1 = null;
      remaining = t1.remaining_2 - 1;
      t1.remaining_2 = remaining;
      if (t2 != null)
        if (remaining === 0 || this.eagerError_1)
          t1.completer_0.completeError$2(theError, theStackTrace);
        else {
          t1.error_3 = theError;
          t1.stackTrace_4 = theStackTrace;
        }
      else if (remaining === 0 && !this.eagerError_1)
        t1.completer_0.completeError$2(t1.error_3, t1.stackTrace_4);
    }, "call$2", null, 4, 0, null, 516, 517, "call"],
    $isFunction: true
  },
  Future_wait_closure: {
    "": "Closure:518;box_0,eagerError_2,pos_3",
    call$1: [function(value) {
      var t1, remaining, t2, t3;
      t1 = this.box_0;
      remaining = t1.remaining_2 - 1;
      t1.remaining_2 = remaining;
      t2 = t1.values_1;
      if (t2 != null) {
        t3 = this.pos_3;
        if (t3 < 0 || t3 >= t2.length)
          return H.ioore(t2, t3);
        t2[t3] = value;
        if (remaining === 0) {
          t1 = t1.completer_0.future;
          if (t1._state !== 0)
            H.throwExpression(new P.StateError("Future already completed"));
          t1._asyncComplete$1(t2);
        }
      } else if (remaining === 0 && !this.eagerError_2)
        t1.completer_0.completeError$2(t1.error_3, t1.stackTrace_4);
    }, "call$1", null, 2, 0, null, 23, "call"],
    $isFunction: true
  },
  _Completer: {
    "": "Object;"
  },
  _AsyncCompleter: {
    "": "_Completer;future",
    complete$1: [function(_, value) {
      var t1 = this.future;
      if (t1._state !== 0)
        throw H.wrapException(new P.StateError("Future already completed"));
      t1._asyncComplete$1(value);
    }, function($receiver) {
      return this.complete$1($receiver, null);
    }, "complete$0", "call$1", null, "get$complete", 0, 2, null, 77, 23],
    completeError$2: [function(error, stackTrace) {
      var t1;
      if (error == null)
        throw H.wrapException(new P.ArgumentError("Error must not be null"));
      t1 = this.future;
      if (t1._state !== 0)
        throw H.wrapException(new P.StateError("Future already completed"));
      t1._asyncCompleteError$2(error, stackTrace);
    }, function(error) {
      return this.completeError$2(error, null);
    }, "completeError$1", "call$2", "call$1", "get$completeError", 2, 2, 515, 77, 188, 189]
  },
  _SyncCompleter: {
    "": "_Completer;future",
    complete$1: [function(_, value) {
      var t1 = this.future;
      if (t1._state !== 0)
        throw H.wrapException(new P.StateError("Future already completed"));
      t1._complete$1(value);
    }, function($receiver) {
      return this.complete$1($receiver, null);
    }, "complete$0", "call$1", null, "get$complete", 0, 2, null, 77, 23]
  },
  _Future: {
    "": "Object;_state,_zone<,_resultOrListeners,_nextListener@,_onValueCallback,_errorTestCallback,_onErrorCallback,_whenCompleteActionCallback",
    get$_isComplete: function() {
      return this._state >= 4;
    },
    get$_hasError: function() {
      return this._state === 8;
    },
    set$_isChained: function(value) {
      if (value)
        this._state = 2;
      else
        this._state = 0;
    },
    get$_onValue: function() {
      return this._state === 2 ? null : this._onValueCallback;
    },
    _onValue$1: function(arg0) {
      return this.get$_onValue().call$1(arg0);
    },
    get$_errorTest: function() {
      return this._state === 2 ? null : this._errorTestCallback;
    },
    get$_onError: function() {
      return this._state === 2 ? null : this._onErrorCallback;
    },
    get$_whenCompleteAction: function() {
      return this._state === 2 ? null : this._whenCompleteActionCallback;
    },
    _whenCompleteAction$0: function() {
      return this.get$_whenCompleteAction().call$0();
    },
    then$2$onError: [function(f, onError) {
      var t1, result;
      t1 = $.Zone__current;
      result = H.setRuntimeTypeInfo(new P._Future(0, t1, null, null, t1.registerUnaryCallback$1(f), null, P._registerErrorHandler(onError, $.Zone__current), null), [null]);
      this._addListener$1(result);
      return result;
    }, function(f) {
      return this.then$2$onError(f, null);
    }, "then$1", "call$2$onError", null, "get$then", 2, 3, null, 77, 154, 200],
    whenComplete$1: [function(action) {
      var t1, result;
      t1 = $.Zone__current;
      result = new P._Future(0, t1, null, null, null, null, null, t1.registerCallback$1(action));
      result.$builtinTypeInfo = this.$builtinTypeInfo;
      this._addListener$1(result);
      return result;
    }, "call$1", "get$whenComplete", 2, 0, null, 502],
    get$_value: function() {
      return this._resultOrListeners;
    },
    get$_error: function() {
      return this._resultOrListeners;
    },
    _setValue$1: [function(value) {
      this._state = 4;
      this._resultOrListeners = value;
    }, "call$1", "get$_setValue", 2, 0, null, 23],
    _setError$2: [function(error, stackTrace) {
      this._state = 8;
      this._resultOrListeners = new P._AsyncError(error, stackTrace);
    }, "call$2", "get$_setError", 4, 0, null, 188, 189],
    _addListener$1: [function(listener) {
      if (this._state >= 4)
        this._zone.scheduleMicrotask$1(new P._Future__addListener_closure(this, listener));
      else {
        listener.set$_nextListener(this._resultOrListeners);
        this._resultOrListeners = listener;
      }
    }, "call$1", "get$_addListener", 2, 0, null, 371],
    _removeListeners$0: [function() {
      var current, prev, next;
      current = this._resultOrListeners;
      this._resultOrListeners = null;
      for (prev = null; current != null; prev = current, current = next) {
        next = current.get$_nextListener();
        current.set$_nextListener(prev);
      }
      return prev;
    }, "call$0", "get$_removeListeners", 0, 0, null],
    _complete$1: [function(value) {
      var t1, listeners;
      t1 = J.getInterceptor(value);
      if (typeof value === "object" && value !== null && !!t1.$isFuture) {
        P._Future__chainFutures(value, this);
        return;
      }
      listeners = this._removeListeners$0();
      this._setValue$1(value);
      P._Future__propagateToListeners(this, listeners);
    }, "call$1", "get$_complete", 2, 0, null, 23],
    _completeError$2: [function(error, stackTrace) {
      var listeners = this._removeListeners$0();
      this._setError$2(error, stackTrace);
      P._Future__propagateToListeners(this, listeners);
    }, function(error) {
      return this._completeError$2(error, null);
    }, "_completeError$1", "call$2", "call$1", "get$_completeError", 2, 2, 197, 77, 188, 189],
    _asyncComplete$1: [function(value) {
      var t1, t2;
      t1 = J.getInterceptor(value);
      t2 = typeof value === "object" && value !== null && !!t1.$isFuture;
      if (t2)
        ;
      if (t2)
        t1 = typeof value !== "object" || value === null || !t1.$is_Future || value._state < 4;
      else
        t1 = false;
      if (t1) {
        this._complete$1(value);
        return;
      }
      if (this._state !== 0)
        H.throwExpression(new P.StateError("Future already completed"));
      this._state = 1;
      this._zone.scheduleMicrotask$1(new P._Future__asyncComplete_closure(this, value));
    }, "call$1", "get$_asyncComplete", 2, 0, null, 23],
    _asyncCompleteError$2: [function(error, stackTrace) {
      if (this._state !== 0)
        H.throwExpression(new P.StateError("Future already completed"));
      this._state = 1;
      this._zone.scheduleMicrotask$1(new P._Future__asyncCompleteError_closure(this, error, stackTrace));
    }, "call$2", "get$_asyncCompleteError", 4, 0, null, 188, 189],
    _async$_Future$immediate$1: function(value, $T) {
      this._asyncComplete$1(value);
    },
    $is_Future: true,
    $isFuture: true,
    static: {"": "_Future__INCOMPLETE,_Future__PENDING_COMPLETE,_Future__CHAINED,_Future__VALUE,_Future__ERROR", _Future$: function($T) {
        return H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null, null, null, null, null, null), [$T]);
      }, _Future$immediate: function(value, $T) {
        var t1 = H.setRuntimeTypeInfo(new P._Future(0, $.Zone__current, null, null, null, null, null, null), [$T]);
        t1._async$_Future$immediate$1(value, $T);
        return t1;
      }, _Future__chainFutures: [function(source, target) {
        var t1;
        target.set$_isChained(true);
        t1 = J.getInterceptor(source);
        if (typeof source === "object" && source !== null && !!t1.$is_Future)
          if (source._state >= 4)
            P._Future__propagateToListeners(source, target);
          else
            source._addListener$1(target);
        else
          source.then$2$onError(new P._Future__chainFutures_closure(target), new P._Future__chainFutures_closure0(target));
      }, "call$2", "_Future__chainFutures$closure", 4, 0, null, 27, 74], _Future__propagateMultipleListeners: [function(source, listeners) {
        var listeners0;
        do {
          listeners0 = listeners.get$_nextListener();
          listeners.set$_nextListener(null);
          P._Future__propagateToListeners(source, listeners);
          if (listeners0 != null) {
            listeners = listeners0;
            continue;
          } else
            break;
        } while (true);
      }, "call$2", "_Future__propagateMultipleListeners$closure", 4, 0, null, 27, 193], _Future__propagateToListeners: [function(source, listeners) {
        var t1, t2, t3, hasError, asyncError, t4, t5, chainSource, listeners0;
        t1 = {};
        t1.source_4 = source;
        for (t2 = source; true;) {
          t3 = {};
          if (!t2.get$_isComplete())
            return;
          hasError = t1.source_4.get$_hasError();
          if (hasError && listeners == null) {
            asyncError = t1.source_4.get$_error();
            t1.source_4.get$_zone().handleUncaughtError$2(J.get$error$x(asyncError), asyncError.get$stackTrace());
            return;
          }
          if (listeners == null)
            return;
          if (listeners.get$_nextListener() != null) {
            P._Future__propagateMultipleListeners(t1.source_4, listeners);
            return;
          }
          if (hasError && !t1.source_4.get$_zone().inSameErrorZone$1(listeners.get$_zone())) {
            asyncError = t1.source_4.get$_error();
            t1.source_4.get$_zone().handleUncaughtError$2(J.get$error$x(asyncError), asyncError.get$stackTrace());
            return;
          }
          t2 = $.Zone__current;
          t4 = listeners.get$_zone();
          if (t2 == null ? t4 != null : t2 !== t4) {
            listeners.get$_zone().run$1(new P._Future__propagateToListeners_closure(t1, listeners));
            return;
          }
          t3.listenerHasValue_1 = null;
          t3.listenerValueOrError_2 = null;
          t3.isPropagationAborted_3 = false;
          listeners.get$_zone().run$1(new P._Future__propagateToListeners_closure0(t1, t3, hasError, listeners));
          if (t3.isPropagationAborted_3)
            return;
          t2 = t3.listenerHasValue_1 === true;
          if (t2) {
            t4 = t3.listenerValueOrError_2;
            t5 = J.getInterceptor(t4);
            t5 = typeof t4 === "object" && t4 !== null && !!t5.$isFuture;
            t4 = t5;
          } else
            t4 = false;
          if (t4) {
            chainSource = t3.listenerValueOrError_2;
            t2 = J.getInterceptor(chainSource);
            if (typeof chainSource === "object" && chainSource !== null && !!t2.$is_Future && chainSource._state >= 4) {
              listeners.set$_isChained(true);
              t1.source_4 = chainSource;
              t2 = chainSource;
              continue;
            }
            P._Future__chainFutures(chainSource, listeners);
            return;
          }
          if (t2) {
            listeners0 = listeners._removeListeners$0();
            listeners._setValue$1(t3.listenerValueOrError_2);
          } else {
            listeners0 = listeners._removeListeners$0();
            asyncError = t3.listenerValueOrError_2;
            listeners._setError$2(J.get$error$x(asyncError), asyncError.get$stackTrace());
          }
          t1.source_4 = listeners;
          t2 = listeners;
          listeners = listeners0;
        }
      }, "call$2", "_Future__propagateToListeners$closure", 4, 0, null, 27, 193]}
  },
  _Future__addListener_closure: {
    "": "Closure:108;this_0,listener_1",
    call$0: [function() {
      P._Future__propagateToListeners(this.this_0, this.listener_1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _Future__chainFutures_closure: {
    "": "Closure:271;target_0",
    call$1: [function(value) {
      this.target_0._complete$1(value);
    }, "call$1", null, 2, 0, null, 23, "call"],
    $isFunction: true
  },
  _Future__chainFutures_closure0: {
    "": "Closure:519;target_1",
    call$2: [function(error, stackTrace) {
      this.target_1._completeError$2(error, stackTrace);
    }, function(error) {
      return this.call$2(error, null);
    }, "call$1", "call$2", null, null, 2, 2, null, 77, 188, 189, "call"],
    $isFunction: true
  },
  _Future__asyncComplete_closure: {
    "": "Closure:108;this_0,value_1",
    call$0: [function() {
      this.this_0._complete$1(this.value_1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _Future__asyncCompleteError_closure: {
    "": "Closure:108;this_0,error_1,stackTrace_2",
    call$0: [function() {
      this.this_0._completeError$2(this.error_1, this.stackTrace_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _Future__propagateToListeners_closure: {
    "": "Closure:108;box_2,listener_3",
    call$0: [function() {
      P._Future__propagateToListeners(this.box_2.source_4, this.listener_3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _Future__propagateToListeners_closure0: {
    "": "Closure:108;box_2,box_1,hasError_4,listener_5",
    call$0: [function() {
      var t1, value, asyncError, test, matchesTest, errorCallback, e, s, t2, t3, t4, t5, completeResult, exception;
      t1 = {};
      try {
        t2 = this.box_2;
        if (!this.hasError_4) {
          value = t2.source_4.get$_value();
          t3 = this.listener_5;
          t4 = this.box_1;
          if (t3.get$_onValue() != null) {
            t4.listenerValueOrError_2 = t3._onValue$1(value);
            t4.listenerHasValue_1 = true;
          } else {
            t4.listenerValueOrError_2 = value;
            t4.listenerHasValue_1 = true;
          }
        } else {
          asyncError = t2.source_4.get$_error();
          t3 = this.listener_5;
          test = t3.get$_errorTest();
          matchesTest = true;
          if (test != null)
            matchesTest = test.call$1(J.get$error$x(asyncError));
          t4 = matchesTest === true && t3.get$_onError() != null;
          t5 = this.box_1;
          if (t4) {
            errorCallback = t3.get$_onError();
            t5.listenerValueOrError_2 = P._invokeErrorHandler(errorCallback, J.get$error$x(asyncError), asyncError.get$stackTrace());
            t5.listenerHasValue_1 = true;
          } else {
            t5.listenerValueOrError_2 = asyncError;
            t5.listenerHasValue_1 = false;
          }
          t4 = t5;
        }
        if (t3.get$_whenCompleteAction() != null) {
          completeResult = t3._whenCompleteAction$0();
          t1.completeResult_0 = completeResult;
          t5 = J.getInterceptor(completeResult);
          if (typeof completeResult === "object" && completeResult !== null && !!t5.$isFuture) {
            t3.set$_isChained(true);
            t1.completeResult_0.then$2$onError(new P._Future__propagateToListeners__closure(t2, t3), new P._Future__propagateToListeners__closure0(t1, t3));
            t4.isPropagationAborted_3 = true;
          }
        }
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        if (this.hasError_4) {
          t1 = J.get$error$x(this.box_2.source_4.get$_error());
          t2 = e;
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
        t2 = this.box_1;
        if (t1)
          t2.listenerValueOrError_2 = this.box_2.source_4.get$_error();
        else
          t2.listenerValueOrError_2 = new P._AsyncError(e, s);
        t2.listenerHasValue_1 = false;
      }

    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _Future__propagateToListeners__closure: {
    "": "Closure:271;box_2,listener_6",
    call$1: [function(ignored) {
      P._Future__propagateToListeners(this.box_2.source_4, this.listener_6);
    }, "call$1", null, 2, 0, null, 520, "call"],
    $isFunction: true
  },
  _Future__propagateToListeners__closure0: {
    "": "Closure:519;box_0,listener_7",
    call$2: [function(error, stackTrace) {
      var t1, t2, t3, completeResult;
      t1 = this.box_0;
      t2 = t1.completeResult_0;
      t3 = J.getInterceptor(t2);
      if (typeof t2 !== "object" || t2 === null || !t3.$is_Future) {
        completeResult = P._Future$(null);
        t1.completeResult_0 = completeResult;
        completeResult._setError$2(error, stackTrace);
      }
      P._Future__propagateToListeners(t1.completeResult_0, this.listener_7);
    }, function(error) {
      return this.call$2(error, null);
    }, "call$1", "call$2", null, null, 2, 2, null, 77, 188, 189, "call"],
    $isFunction: true
  },
  Stream: {
    "": "Object;",
    where$1: [function(_, test) {
      return H.setRuntimeTypeInfo(new P._WhereStream(test, this), [H.getRuntimeTypeArgument(this, "Stream", 0)]);
    }, "call$1", "get$where", 2, 0, null, 157],
    map$1: [function(_, convert) {
      return H.setRuntimeTypeInfo(new P._MapStream(convert, this), [H.getRuntimeTypeArgument(this, "Stream", 0), null]);
    }, "call$1", "get$map", 2, 0, null, 521],
    fold$2: [function(_, initialValue, combine) {
      var t1, result;
      t1 = {};
      result = P._Future$(null);
      t1.value_0 = initialValue;
      t1.subscription_1 = null;
      t1.subscription_1 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_fold_closure(t1, this, combine, result), true, new P.Stream_fold_closure0(t1, result), new P.Stream_fold_closure1(result));
      return result;
    }, "call$2", "get$fold", 4, 0, null, 155, 156],
    join$1: [function(_, separator) {
      var t1, result, buffer;
      t1 = {};
      result = P._Future$(J.JSString);
      buffer = P.StringBuffer$("");
      t1.subscription_0 = null;
      t1.first_1 = true;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_join_closure(t1, this, separator, result, buffer), true, new P.Stream_join_closure0(result, buffer), new P.Stream_join_closure1(result));
      return result;
    }, "call$1", "get$join", 0, 2, null, 122, 412],
    contains$1: [function(_, needle) {
      var t1, future;
      t1 = {};
      future = P._Future$(J.JSBool);
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_contains_closure(t1, this, needle, future), true, new P.Stream_contains_closure0(future), future.get$_completeError());
      return future;
    }, "call$1", "get$contains", 2, 0, null, 102],
    forEach$1: [function(_, action) {
      var t1, future;
      t1 = {};
      future = P._Future$(null);
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_forEach_closure(t1, this, action, future), true, new P.Stream_forEach_closure0(future), future.get$_completeError());
      return future;
    }, "call$1", "get$forEach", 2, 0, null, 502],
    any$1: [function(_, test) {
      var t1, future;
      t1 = {};
      future = P._Future$(J.JSBool);
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_any_closure(t1, this, test, future), true, new P.Stream_any_closure0(future), future.get$_completeError());
      return future;
    }, "call$1", "get$any", 2, 0, null, 157],
    get$length: function(_) {
      var t1, future;
      t1 = {};
      future = P._Future$(J.JSInt);
      t1.count_0 = 0;
      this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    },
    get$isEmpty: function(_) {
      var t1, future;
      t1 = {};
      future = P._Future$(J.JSBool);
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_isEmpty_closure(t1, future), true, new P.Stream_isEmpty_closure0(future), future.get$_completeError());
      return future;
    },
    toList$0: [function(_) {
      var result, future;
      result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgument(this, "Stream", 0)]);
      future = P._Future$([J.JSArray, H.getRuntimeTypeArgument(this, "Stream", 0)]);
      this.listen$4$cancelOnError$onDone$onError(new P.Stream_toList_closure(this, result), true, new P.Stream_toList_closure0(result, future), future.get$_completeError());
      return future;
    }, "call$0", "get$toList", 0, 0, null],
    take$1: [function(_, count) {
      var t1 = H.setRuntimeTypeInfo(new P._TakeStream(count, this), [null]);
      t1._TakeStream$2(this, count, null);
      return t1;
    }, "call$1", "get$take", 2, 0, null, 168],
    skip$1: [function(_, count) {
      var t1 = H.setRuntimeTypeInfo(new P._SkipStream(count, this), [null]);
      t1._SkipStream$2(this, count, null);
      return t1;
    }, "call$1", "get$skip", 2, 0, null, 168],
    get$first: function(_) {
      var t1, future;
      t1 = {};
      future = P._Future$(H.getRuntimeTypeArgument(this, "Stream", 0));
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_first_closure(t1, this, future), true, new P.Stream_first_closure0(future), future.get$_completeError());
      return future;
    },
    get$last: function(_) {
      var t1, future;
      t1 = {};
      future = P._Future$(H.getRuntimeTypeArgument(this, "Stream", 0));
      t1.result_0 = null;
      t1.foundResult_1 = false;
      this.listen$4$cancelOnError$onDone$onError(new P.Stream_last_closure(t1, this), true, new P.Stream_last_closure0(t1, future), future.get$_completeError());
      return future;
    },
    firstWhere$2$defaultValue: [function(_, test, defaultValue) {
      var t1, future;
      t1 = {};
      future = P._Future$(null);
      t1.subscription_0 = null;
      t1.subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_firstWhere_closure(t1, this, test, future), true, new P.Stream_firstWhere_closure0(defaultValue, future), future.get$_completeError());
      return future;
    }, function($receiver, test) {
      return this.firstWhere$2$defaultValue($receiver, test, null);
    }, "firstWhere$1", "call$2$defaultValue", null, "get$firstWhere", 2, 3, null, 77, 157, 522],
    elementAt$1: [function(_, index) {
      var t1, future;
      t1 = {};
      t1.index_0 = index;
      if (typeof index !== "number" || Math.floor(index) !== index || J.$lt$n(index, 0))
        throw H.wrapException(new P.ArgumentError(t1.index_0));
      future = P._Future$(H.getRuntimeTypeArgument(this, "Stream", 0));
      t1.subscription_1 = null;
      t1.subscription_1 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_elementAt_closure(t1, this, future), true, new P.Stream_elementAt_closure0(t1, future), future.get$_completeError());
      return future;
    }, "call$1", "get$elementAt", 2, 0, null, 47],
    $isStream: true
  },
  Stream_fold_closure: {
    "": "Closure;box_0,this_1,combine_2,result_3",
    call$1: [function(element) {
      var t1 = this.box_0;
      P._runUserCode(new P.Stream_fold__closure(t1, this.combine_2, element), new P.Stream_fold__closure0(t1), P._cancelAndErrorClosure(t1.subscription_1, this.result_3));
    }, "call$1", null, 2, 0, null, 169, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  Stream_fold__closure: {
    "": "Closure:108;box_0,combine_4,element_5",
    call$0: [function() {
      return this.combine_4.call$2(this.box_0.value_0, this.element_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_fold__closure0: {
    "": "Closure:271;box_0",
    call$1: [function(newValue) {
      this.box_0.value_0 = newValue;
    }, "call$1", null, 2, 0, null, 274, "call"],
    $isFunction: true
  },
  Stream_fold_closure1: {
    "": "Closure:426;result_6",
    call$2: [function(e, st) {
      this.result_6._completeError$2(e, st);
    }, "call$2", null, 4, 0, null, 18, 523, "call"],
    $isFunction: true
  },
  Stream_fold_closure0: {
    "": "Closure:108;box_0,result_7",
    call$0: [function() {
      this.result_7._complete$1(this.box_0.value_0);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_join_closure: {
    "": "Closure;box_0,this_1,separator_2,result_3,buffer_4",
    call$1: [function(element) {
      var e, s, t1, exception, t2;
      t1 = this.box_0;
      if (!t1.first_1)
        this.buffer_4.write$1(this.separator_2);
      t1.first_1 = false;
      try {
        this.buffer_4.write$1(element);
      } catch (exception) {
        t2 = H.unwrapException(exception);
        e = t2;
        s = new H._StackTrace(exception, null);
        P._cancelAndError(t1.subscription_0, this.result_3, e, s);
      }

    }, "call$1", null, 2, 0, null, 169, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  Stream_join_closure1: {
    "": "Closure:271;result_5",
    call$1: [function(e) {
      this.result_5._completeError$1(e);
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  Stream_join_closure0: {
    "": "Closure:108;result_6,buffer_7",
    call$0: [function() {
      this.result_6._complete$1(this.buffer_7._contents);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_contains_closure: {
    "": "Closure;box_0,this_1,needle_2,future_3",
    call$1: [function(element) {
      var t1, t2;
      t1 = this.box_0;
      t2 = this.future_3;
      P._runUserCode(new P.Stream_contains__closure(this.needle_2, element), new P.Stream_contains__closure0(t1, t2), P._cancelAndErrorClosure(t1.subscription_0, t2));
    }, "call$1", null, 2, 0, null, 169, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  Stream_contains__closure: {
    "": "Closure:108;needle_4,element_5",
    call$0: [function() {
      return J.$eq(this.element_5, this.needle_4);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_contains__closure0: {
    "": "Closure:525;box_0,future_6",
    call$1: [function(isMatch) {
      if (isMatch === true)
        P._cancelAndValue(this.box_0.subscription_0, this.future_6, true);
    }, "call$1", null, 2, 0, null, 524, "call"],
    $isFunction: true
  },
  Stream_contains_closure0: {
    "": "Closure:108;future_7",
    call$0: [function() {
      this.future_7._complete$1(false);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_forEach_closure: {
    "": "Closure;box_0,this_1,action_2,future_3",
    call$1: [function(element) {
      P._runUserCode(new P.Stream_forEach__closure(this.action_2, element), new P.Stream_forEach__closure0(), P._cancelAndErrorClosure(this.box_0.subscription_0, this.future_3));
    }, "call$1", null, 2, 0, null, 169, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  Stream_forEach__closure: {
    "": "Closure:108;action_4,element_5",
    call$0: [function() {
      return this.action_4.call$1(this.element_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_forEach__closure0: {
    "": "Closure:271;",
    call$1: [function(_) {
    }, "call$1", null, 2, 0, null, 335, "call"],
    $isFunction: true
  },
  Stream_forEach_closure0: {
    "": "Closure:108;future_6",
    call$0: [function() {
      this.future_6._complete$1(null);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_any_closure: {
    "": "Closure;box_0,this_1,test_2,future_3",
    call$1: [function(element) {
      var t1, t2;
      t1 = this.box_0;
      t2 = this.future_3;
      P._runUserCode(new P.Stream_any__closure(this.test_2, element), new P.Stream_any__closure0(t1, t2), P._cancelAndErrorClosure(t1.subscription_0, t2));
    }, "call$1", null, 2, 0, null, 169, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  Stream_any__closure: {
    "": "Closure:108;test_4,element_5",
    call$0: [function() {
      return this.test_4.call$1(this.element_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_any__closure0: {
    "": "Closure:525;box_0,future_6",
    call$1: [function(isMatch) {
      if (isMatch === true)
        P._cancelAndValue(this.box_0.subscription_0, this.future_6, true);
    }, "call$1", null, 2, 0, null, 524, "call"],
    $isFunction: true
  },
  Stream_any_closure0: {
    "": "Closure:108;future_7",
    call$0: [function() {
      this.future_7._complete$1(false);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_length_closure: {
    "": "Closure:271;box_0",
    call$1: [function(_) {
      var t1 = this.box_0;
      t1.count_0 = t1.count_0 + 1;
    }, "call$1", null, 2, 0, null, 335, "call"],
    $isFunction: true
  },
  Stream_length_closure0: {
    "": "Closure:108;box_0,future_1",
    call$0: [function() {
      this.future_1._complete$1(this.box_0.count_0);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_isEmpty_closure: {
    "": "Closure:271;box_0,future_1",
    call$1: [function(_) {
      P._cancelAndValue(this.box_0.subscription_0, this.future_1, false);
    }, "call$1", null, 2, 0, null, 335, "call"],
    $isFunction: true
  },
  Stream_isEmpty_closure0: {
    "": "Closure:108;future_2",
    call$0: [function() {
      this.future_2._complete$1(true);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_toList_closure: {
    "": "Closure;this_0,result_1",
    call$1: [function(data) {
      this.result_1.push(data);
    }, "call$1", null, 2, 0, null, 377, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T", args: [T]};
      }, this.this_0, "Stream");
    }
  },
  Stream_toList_closure0: {
    "": "Closure:108;result_2,future_3",
    call$0: [function() {
      this.future_3._complete$1(this.result_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_first_closure: {
    "": "Closure;box_0,this_1,future_2",
    call$1: [function(value) {
      P._cancelAndValue(this.box_0.subscription_0, this.future_2, value);
    }, "call$1", null, 2, 0, null, 23, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  Stream_first_closure0: {
    "": "Closure:108;future_3",
    call$0: [function() {
      this.future_3._completeError$1(new P.StateError("No elements"));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_last_closure: {
    "": "Closure;box_0,this_1",
    call$1: [function(value) {
      var t1 = this.box_0;
      t1.foundResult_1 = true;
      t1.result_0 = value;
    }, "call$1", null, 2, 0, null, 23, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  Stream_last_closure0: {
    "": "Closure:108;box_0,future_2",
    call$0: [function() {
      var t1 = this.box_0;
      if (t1.foundResult_1) {
        this.future_2._complete$1(t1.result_0);
        return;
      }
      this.future_2._completeError$1(new P.StateError("No elements"));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_firstWhere_closure: {
    "": "Closure;box_0,this_1,test_2,future_3",
    call$1: [function(value) {
      var t1, t2;
      t1 = this.box_0;
      t2 = this.future_3;
      P._runUserCode(new P.Stream_firstWhere__closure(this.test_2, value), new P.Stream_firstWhere__closure0(t1, t2, value), P._cancelAndErrorClosure(t1.subscription_0, t2));
    }, "call$1", null, 2, 0, null, 23, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  Stream_firstWhere__closure: {
    "": "Closure:108;test_4,value_5",
    call$0: [function() {
      return this.test_4.call$1(this.value_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_firstWhere__closure0: {
    "": "Closure:525;box_0,future_6,value_7",
    call$1: [function(isMatch) {
      if (isMatch === true)
        P._cancelAndValue(this.box_0.subscription_0, this.future_6, this.value_7);
    }, "call$1", null, 2, 0, null, 524, "call"],
    $isFunction: true
  },
  Stream_firstWhere_closure0: {
    "": "Closure:108;defaultValue_8,future_9",
    call$0: [function() {
      this.future_9._completeError$1(new P.StateError("firstMatch ended without match"));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Stream_elementAt_closure: {
    "": "Closure;box_0,this_1,future_2",
    call$1: [function(value) {
      var t1 = this.box_0;
      if (J.$eq(t1.index_0, 0) === true) {
        P._cancelAndValue(t1.subscription_1, this.future_2, value);
        return;
      }
      t1.index_0 = J.$sub$n(t1.index_0, 1);
    }, "call$1", null, 2, 0, null, 23, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T", args: [T]};
      }, this.this_1, "Stream");
    }
  },
  Stream_elementAt_closure0: {
    "": "Closure:108;box_0,future_3",
    call$0: [function() {
      this.future_3._completeError$1(new P.RangeError("value " + H.S(this.box_0.index_0)));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  StreamSubscription: {
    "": "Object;",
    $isStreamSubscription: true
  },
  _StreamController: {
    "": "Object;",
    get$_pendingEvents: function() {
      if ((this._state & 8) === 0)
        return this._varData;
      return this._varData.get$varData();
    },
    _ensurePendingEvents$0: [function() {
      var t1, state;
      if ((this._state & 8) === 0) {
        t1 = this._varData;
        if (t1 == null) {
          t1 = new P._StreamImplEvents(null, null, 0);
          this._varData = t1;
        }
        return t1;
      }
      state = this._varData;
      state.get$varData();
      return state.get$varData();
    }, "call$0", "get$_ensurePendingEvents", 0, 0, null],
    get$_subscription: function() {
      if ((this._state & 8) !== 0)
        return this._varData.get$varData();
      return this._varData;
    },
    _badEventState$0: [function() {
      if ((this._state & 4) !== 0)
        return new P.StateError("Cannot add event after closing");
      return new P.StateError("Cannot add event while adding a stream");
    }, "call$0", "get$_badEventState", 0, 0, null],
    add$1: [function(_, value) {
      if (this._state >= 4)
        throw H.wrapException(this._badEventState$0());
      this._async$_add$1(0, value);
    }, "call$1", "get$add", 2, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T0", void: true, args: [T]};
      }, this.$receiver, "_StreamController");
    }, 23],
    close$0: [function(_) {
      var t1, t2;
      t1 = this._state;
      if ((t1 & 4) !== 0)
        return this._doneFuture;
      if (t1 >= 4)
        throw H.wrapException(this._badEventState$0());
      t1 |= 4;
      this._state = t1;
      if (this._doneFuture == null) {
        t2 = P._Future$(null);
        this._doneFuture = t2;
        if ((t1 & 2) !== 0)
          t2._complete$1(null);
      }
      t1 = this._state;
      if ((t1 & 1) !== 0)
        this._sendDone$0();
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, C.C__DelayedDone);
      return this._doneFuture;
    }, "call$0", "get$close", 0, 0, null],
    _async$_add$1: [function(_, value) {
      var t1 = this._state;
      if ((t1 & 1) !== 0)
        this._sendData$1(value);
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, H.setRuntimeTypeInfo(new P._DelayedData(value, null), [H.getRuntimeTypeArgument(this, "_StreamController", 0)]));
    }, "call$1", "get$_async$_add", 2, 0, null, 23],
    _addError$2: [function(error, stackTrace) {
      var t1 = this._state;
      if ((t1 & 1) !== 0)
        this._sendError$2(error, stackTrace);
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, new P._DelayedError(error, stackTrace, null));
    }, "call$2", "get$_addError", 4, 0, null, 188, 189],
    _close$0: [function() {
      var addState = this._varData;
      this._varData = addState.get$varData();
      this._state = this._state & 4294967287;
      addState.complete$0(0);
    }, "call$0", "get$_close", 0, 0, null],
    _subscribe$1: [function(cancelOnError) {
      var t1, t2, subscription, pendingEvents, addState;
      if ((this._state & 3) !== 0)
        throw H.wrapException(new P.StateError("Stream has already been listened to."));
      t1 = $.Zone__current;
      t2 = cancelOnError ? 1 : 0;
      subscription = H.setRuntimeTypeInfo(new P._ControllerSubscription(this, null, null, null, t1, t2, null, null), [null]);
      pendingEvents = this.get$_pendingEvents();
      t2 = this._state | 1;
      this._state = t2;
      if ((t2 & 8) !== 0) {
        addState = this._varData;
        addState.set$varData(subscription);
        addState.resume$0();
      } else
        this._varData = subscription;
      subscription._setPendingEvents$1(pendingEvents);
      subscription._guardCallback$1(new P._StreamController__subscribe_closure(this));
      return subscription;
    }, "call$1", "get$_subscribe", 2, 0, null, 423],
    _recordCancel$1: [function(subscription) {
      var t1, future;
      if ((this._state & 8) !== 0)
        this._varData.cancel$0();
      this._varData = null;
      this._state = this._state & 4294967286 | 2;
      t1 = new P._StreamController__recordCancel_complete(this);
      future = P._runGuarded(this.get$_onCancel());
      if (future != null)
        future = future.whenComplete$1(t1);
      else
        t1.call$0();
      return future;
    }, "call$1", "get$_recordCancel", 2, 0, null, 201],
    _recordPause$1: [function(subscription) {
      if ((this._state & 8) !== 0)
        this._varData.pause$0(0);
      P._runGuarded(this.get$_onPause());
    }, "call$1", "get$_recordPause", 2, 0, null, 201],
    _recordResume$1: [function(subscription) {
      if ((this._state & 8) !== 0)
        this._varData.resume$0();
      P._runGuarded(this.get$_onResume());
    }, "call$1", "get$_recordResume", 2, 0, null, 201]
  },
  _StreamController__subscribe_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      P._runGuarded(this.this_0.get$_onListen());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _StreamController__recordCancel_complete: {
    "": "Closure:107;this_0",
    call$0: [function() {
      var t1 = this.this_0._doneFuture;
      if (t1 != null && t1._state === 0)
        t1._asyncComplete$1(null);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _SyncStreamControllerDispatch: {
    "": "Object;",
    _sendData$1: [function(data) {
      this.get$_subscription()._async$_add$1(0, data);
    }, "call$1", "get$_sendData", 2, 0, null, 377],
    _sendError$2: [function(error, stackTrace) {
      this.get$_subscription()._addError$2(error, stackTrace);
    }, "call$2", "get$_sendError", 4, 0, null, 188, 189],
    _sendDone$0: [function() {
      this.get$_subscription()._close$0();
    }, "call$0", "get$_sendDone", 0, 0, null]
  },
  _AsyncStreamControllerDispatch: {
    "": "Object;",
    _sendData$1: [function(data) {
      this.get$_subscription()._addPending$1(H.setRuntimeTypeInfo(new P._DelayedData(data, null), [null]));
    }, "call$1", "get$_sendData", 2, 0, null, 377],
    _sendError$2: [function(error, stackTrace) {
      this.get$_subscription()._addPending$1(new P._DelayedError(error, stackTrace, null));
    }, "call$2", "get$_sendError", 4, 0, null, 188, 189],
    _sendDone$0: [function() {
      this.get$_subscription()._addPending$1(C.C__DelayedDone);
    }, "call$0", "get$_sendDone", 0, 0, null]
  },
  _AsyncStreamController: {
    "": "_StreamController__AsyncStreamControllerDispatch;_onListen<,_onPause<,_onResume<,_onCancel<,_varData,_state,_doneFuture"
  },
  _StreamController__AsyncStreamControllerDispatch: {
    "": "_StreamController+_AsyncStreamControllerDispatch;"
  },
  _SyncStreamController: {
    "": "_StreamController__SyncStreamControllerDispatch;_onListen<,_onPause<,_onResume<,_onCancel<,_varData,_state,_doneFuture"
  },
  _StreamController__SyncStreamControllerDispatch: {
    "": "_StreamController+_SyncStreamControllerDispatch;"
  },
  _ControllerStream: {
    "": "_StreamImpl;_controller",
    _createSubscription$1: [function(cancelOnError) {
      return this._controller._subscribe$1(cancelOnError);
    }, "call$1", "get$_createSubscription", 2, 0, null, 423],
    get$hashCode: function(_) {
      return (H.Primitives_objectHashCode(this._controller) ^ 892482866) >>> 0;
    },
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$is_ControllerStream)
        return false;
      return other._controller === this._controller;
    }, "call$1", "get$==", 2, 0, null, 104],
    $is_ControllerStream: true
  },
  _ControllerSubscription: {
    "": "_BufferingStreamSubscription;_controller<,_async$_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
    _onCancel$0: [function() {
      return this.get$_controller()._recordCancel$1(this);
    }, "call$0", "get$_onCancel", 0, 0, null],
    _onPause$0: [function() {
      this.get$_controller()._recordPause$1(this);
    }, "call$0", "get$_onPause", 0, 0, 107],
    _onResume$0: [function() {
      this.get$_controller()._recordResume$1(this);
    }, "call$0", "get$_onResume", 0, 0, 107]
  },
  _EventSink: {
    "": "Object;"
  },
  _BufferingStreamSubscription: {
    "": "Object;_async$_onData,_onError<,_onDone,_zone<,_state,_cancelFuture,_pending",
    _setPendingEvents$1: [function(pendingEvents) {
      if (pendingEvents == null)
        return;
      this._pending = pendingEvents;
      if (!pendingEvents.get$isEmpty(pendingEvents)) {
        this._state = (this._state | 64) >>> 0;
        this._pending.schedule$1(this);
      }
    }, "call$1", "get$_setPendingEvents", 2, 0, null, 526],
    onData$1: [function(handleData) {
      this._async$_onData = this._zone.registerUnaryCallback$1(handleData);
    }, "call$1", "get$onData", 2, 0, null, 527],
    onError$1: [function(_, handleError) {
      if (handleError == null)
        handleError = P._nullErrorHandler$closure();
      this._onError = P._registerErrorHandler(handleError, this._zone);
    }, "call$1", "get$onError", 2, 0, null, 29],
    onDone$1: [function(handleDone) {
      if (handleDone == null)
        handleDone = P._nullDoneHandler$closure();
      this._onDone = this._zone.registerCallback$1(handleDone);
    }, "call$1", "get$onDone", 2, 0, null, 528],
    pause$1: [function(_, resumeSignal) {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      this._state = (t1 + 128 | 4) >>> 0;
      if (t1 < 128 && this._pending != null)
        this._pending.cancelSchedule$0();
      if ((t1 & 4) === 0 && (this._state & 32) === 0)
        this._guardCallback$1(this.get$_onPause());
    }, function($receiver) {
      return this.pause$1($receiver, null);
    }, "pause$0", "call$1", null, "get$pause", 0, 2, null, 77, 529],
    resume$0: [function() {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 >= 128) {
        t1 -= 128;
        this._state = t1;
        if (t1 < 128) {
          if ((t1 & 64) !== 0) {
            t1 = this._pending;
            t1 = !t1.get$isEmpty(t1);
          } else
            t1 = false;
          if (t1)
            this._pending.schedule$1(this);
          else {
            t1 = (this._state & 4294967291) >>> 0;
            this._state = t1;
            if ((t1 & 32) === 0)
              this._guardCallback$1(this.get$_onResume());
          }
        }
      }
    }, "call$0", "get$resume", 0, 0, null],
    cancel$0: [function() {
      var t1 = (this._state & 4294967279) >>> 0;
      this._state = t1;
      if ((t1 & 8) !== 0)
        return this._cancelFuture;
      this._cancel$0();
      return this._cancelFuture;
    }, "call$0", "get$cancel", 0, 0, null],
    _cancel$0: [function() {
      var t1 = (this._state | 8) >>> 0;
      this._state = t1;
      if ((t1 & 64) !== 0)
        this._pending.cancelSchedule$0();
      if ((this._state & 32) === 0)
        this._pending = null;
      this._cancelFuture = this._onCancel$0();
    }, "call$0", "get$_cancel", 0, 0, null],
    _async$_add$1: [function(_, data) {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 < 32)
        this._sendData$1(data);
      else
        this._addPending$1(H.setRuntimeTypeInfo(new P._DelayedData(data, null), [null]));
    }, "call$1", "get$_async$_add", 2, 0, null, 377],
    _addError$2: [function(error, stackTrace) {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 < 32)
        this._sendError$2(error, stackTrace);
      else
        this._addPending$1(new P._DelayedError(error, stackTrace, null));
    }, "call$2", "get$_addError", 4, 0, null, 188, 189],
    _close$0: [function() {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      t1 = (t1 | 2) >>> 0;
      this._state = t1;
      if (t1 < 32)
        this._sendDone$0();
      else
        this._addPending$1(C.C__DelayedDone);
    }, "call$0", "get$_close", 0, 0, null],
    _onPause$0: [function() {
    }, "call$0", "get$_onPause", 0, 0, 107],
    _onResume$0: [function() {
    }, "call$0", "get$_onResume", 0, 0, 107],
    _onCancel$0: [function() {
    }, "call$0", "get$_onCancel", 0, 0, null],
    _addPending$1: [function($event) {
      var pending, t1;
      pending = this._pending;
      if (pending == null) {
        pending = new P._StreamImplEvents(null, null, 0);
        this._pending = pending;
      }
      pending.add$1(0, $event);
      t1 = this._state;
      if ((t1 & 64) === 0) {
        t1 = (t1 | 64) >>> 0;
        this._state = t1;
        if (t1 < 128)
          this._pending.schedule$1(this);
      }
    }, "call$1", "get$_addPending", 2, 0, null, 349],
    _sendData$1: [function(data) {
      var t1 = this._state;
      this._state = (t1 | 32) >>> 0;
      this._zone.runUnaryGuarded$2(this._async$_onData, data);
      this._state = (this._state & 4294967263) >>> 0;
      this._checkState$1((t1 & 4) !== 0);
    }, "call$1", "get$_sendData", 2, 0, null, 377],
    _sendError$2: [function(error, stackTrace) {
      var t1, t2, t3;
      t1 = this._state;
      t2 = new P._BufferingStreamSubscription__sendError_sendError(this, error, stackTrace);
      if ((t1 & 1) !== 0) {
        this._state = (t1 | 16) >>> 0;
        this._cancel$0();
        t1 = this._cancelFuture;
        t3 = J.getInterceptor(t1);
        if (typeof t1 === "object" && t1 !== null && !!t3.$isFuture)
          t1.whenComplete$1(t2);
        else
          t2.call$0();
      } else {
        t2.call$0();
        this._checkState$1((t1 & 4) !== 0);
      }
    }, "call$2", "get$_sendError", 4, 0, null, 188, 189],
    _sendDone$0: [function() {
      var t1, t2, t3;
      t1 = new P._BufferingStreamSubscription__sendDone_sendDone(this);
      this._cancel$0();
      this._state = (this._state | 16) >>> 0;
      t2 = this._cancelFuture;
      t3 = J.getInterceptor(t2);
      if (typeof t2 === "object" && t2 !== null && !!t3.$isFuture)
        t2.whenComplete$1(t1);
      else
        t1.call$0();
    }, "call$0", "get$_sendDone", 0, 0, null],
    _guardCallback$1: [function(callback) {
      var t1 = this._state;
      this._state = (t1 | 32) >>> 0;
      callback.call$0();
      this._state = (this._state & 4294967263) >>> 0;
      this._checkState$1((t1 & 4) !== 0);
    }, "call$1", "get$_guardCallback", 2, 0, null, 194],
    _checkState$1: [function(wasInputPaused) {
      var t1, isInputPaused;
      if ((this._state & 64) !== 0) {
        t1 = this._pending;
        t1 = t1.get$isEmpty(t1);
      } else
        t1 = false;
      if (t1) {
        t1 = (this._state & 4294967231) >>> 0;
        this._state = t1;
        if ((t1 & 4) !== 0)
          if (t1 < 128) {
            t1 = this._pending;
            t1 = t1 == null || t1.get$isEmpty(t1);
          } else
            t1 = false;
        else
          t1 = false;
        if (t1)
          this._state = (this._state & 4294967291) >>> 0;
      }
      for (; true; wasInputPaused = isInputPaused) {
        t1 = this._state;
        if ((t1 & 8) !== 0) {
          this._pending = null;
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        this._state = (t1 ^ 32) >>> 0;
        if (isInputPaused)
          this._onPause$0();
        else
          this._onResume$0();
        this._state = (this._state & 4294967263) >>> 0;
      }
      t1 = this._state;
      if ((t1 & 64) !== 0 && t1 < 128)
        this._pending.schedule$1(this);
    }, "call$1", "get$_checkState", 2, 0, null, 530],
    $isStreamSubscription: true,
    static: {"": "_BufferingStreamSubscription__STATE_CANCEL_ON_ERROR,_BufferingStreamSubscription__STATE_CLOSED,_BufferingStreamSubscription__STATE_INPUT_PAUSED,_BufferingStreamSubscription__STATE_CANCELED,_BufferingStreamSubscription__STATE_WAIT_FOR_CANCEL,_BufferingStreamSubscription__STATE_IN_CALLBACK,_BufferingStreamSubscription__STATE_HAS_PENDING,_BufferingStreamSubscription__STATE_PAUSE_COUNT,_BufferingStreamSubscription__STATE_PAUSE_COUNT_SHIFT"}
  },
  _BufferingStreamSubscription__sendError_sendError: {
    "": "Closure:107;this_0,error_1,stackTrace_2",
    call$0: [function() {
      var t1, t2, t3, t4, t5;
      t1 = this.this_0;
      t2 = t1._state;
      if ((t2 & 8) !== 0 && (t2 & 16) === 0)
        return;
      t1._state = (t2 | 32) >>> 0;
      t2 = t1._zone;
      if (!t2.inSameErrorZone$1($.Zone__current))
        $.Zone__current.handleUncaughtError$2(this.error_1, this.stackTrace_2);
      else {
        t3 = t1._onError;
        t4 = H.getDynamicRuntimeType();
        t4 = H.buildFunctionType(t4, [t4, t4])._isTest$1(t3);
        t5 = this.error_1;
        if (t4)
          t2.runBinaryGuarded$3(t3, t5, this.stackTrace_2);
        else
          t2.runUnaryGuarded$2(t3, t5);
      }
      t1._state = (t1._state & 4294967263) >>> 0;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _BufferingStreamSubscription__sendDone_sendDone: {
    "": "Closure:107;this_0",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = (t2 | 42) >>> 0;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state = (t1._state & 4294967263) >>> 0;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _StreamImpl: {
    "": "Stream;",
    listen$4$cancelOnError$onDone$onError: [function(onData, cancelOnError, onDone, onError) {
      var subscription = this._createSubscription$1(true === cancelOnError);
      subscription.onData$1(onData);
      subscription.onError$1(0, onError);
      subscription.onDone$1(onDone);
      return subscription;
    }, function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }, "listen$3$onDone$onError", function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    }, "listen$1", "call$4$cancelOnError$onDone$onError", null, null, "get$listen", 2, 7, null, 77, 77, 77, 422, 423, 424, 200],
    _createSubscription$1: [function(cancelOnError) {
      var t1, t2;
      t1 = $.Zone__current;
      t2 = cancelOnError ? 1 : 0;
      t2 = new P._BufferingStreamSubscription(null, null, null, t1, t2, null, null);
      t2.$builtinTypeInfo = this.$builtinTypeInfo;
      return t2;
    }, "call$1", "get$_createSubscription", 2, 0, null, 423]
  },
  _DelayedEvent: {
    "": "Object;next@"
  },
  _DelayedData: {
    "": "_DelayedEvent;value>,next",
    perform$1: [function(dispatch) {
      dispatch._sendData$1(this.value);
    }, "call$1", "get$perform", 2, 0, null, 531]
  },
  _DelayedError: {
    "": "_DelayedEvent;error>,stackTrace<,next",
    perform$1: [function(dispatch) {
      dispatch._sendError$2(this.error, this.stackTrace);
    }, "call$1", "get$perform", 2, 0, null, 531]
  },
  _DelayedDone: {
    "": "Object;",
    perform$1: [function(dispatch) {
      dispatch._sendDone$0();
    }, "call$1", "get$perform", 2, 0, null, 531],
    get$next: function() {
      return;
    },
    set$next: function(_) {
      throw H.wrapException(new P.StateError("No events after a done."));
    }
  },
  _PendingEvents: {
    "": "Object;",
    schedule$1: [function(dispatch) {
      var t1 = this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        this._state = 1;
        return;
      }
      P.scheduleMicrotask(new P._PendingEvents_schedule_closure(this, dispatch));
      this._state = 1;
    }, "call$1", "get$schedule", 2, 0, null, 531],
    cancelSchedule$0: [function() {
      if (this._state === 1)
        this._state = 3;
    }, "call$0", "get$cancelSchedule", 0, 0, null]
  },
  _PendingEvents_schedule_closure: {
    "": "Closure:108;this_0,dispatch_1",
    call$0: [function() {
      var t1, oldState;
      t1 = this.this_0;
      oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      t1.handleNext$1(this.dispatch_1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _StreamImplEvents: {
    "": "_PendingEvents;firstPendingEvent,lastPendingEvent,_state",
    get$isEmpty: function(_) {
      return this.lastPendingEvent == null;
    },
    add$1: [function(_, $event) {
      var t1 = this.lastPendingEvent;
      if (t1 == null) {
        this.lastPendingEvent = $event;
        this.firstPendingEvent = $event;
      } else {
        t1.set$next($event);
        this.lastPendingEvent = $event;
      }
    }, "call$1", "get$add", 2, 0, null, 349],
    handleNext$1: [function(dispatch) {
      var $event, t1;
      $event = this.firstPendingEvent;
      t1 = $event.get$next();
      this.firstPendingEvent = t1;
      if (t1 == null)
        this.lastPendingEvent = null;
      $event.perform$1(dispatch);
    }, "call$1", "get$handleNext", 2, 0, null, 531],
    clear$0: [function(_) {
      if (this._state === 1)
        this._state = 3;
      this.lastPendingEvent = null;
      this.firstPendingEvent = null;
    }, "call$0", "get$clear", 0, 0, null]
  },
  _cancelAndError_closure: {
    "": "Closure:108;future_0,error_1,stackTrace_2",
    call$0: [function() {
      return this.future_0._completeError$2(this.error_1, this.stackTrace_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _cancelAndErrorClosure_closure: {
    "": "Closure:532;subscription_0,future_1",
    call$2: [function(error, stackTrace) {
      return P._cancelAndError(this.subscription_0, this.future_1, error, stackTrace);
    }, "call$2", null, 4, 0, null, 188, 189, "call"],
    $isFunction: true
  },
  _cancelAndValue_closure: {
    "": "Closure:108;future_0,value_1",
    call$0: [function() {
      return this.future_0._complete$1(this.value_1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _ForwardingStream: {
    "": "Stream;",
    listen$4$cancelOnError$onDone$onError: [function(onData, cancelOnError, onDone, onError) {
      var t1, t2, t3, t4, result;
      cancelOnError = true === cancelOnError;
      t1 = H.getRuntimeTypeArgument(this, "_ForwardingStream", 0);
      t2 = H.getRuntimeTypeArgument(this, "_ForwardingStream", 1);
      t3 = $.Zone__current;
      t4 = cancelOnError ? 1 : 0;
      result = H.setRuntimeTypeInfo(new P._ForwardingStreamSubscription(this, null, null, null, null, t3, t4, null, null), [t1, t2]);
      result._ForwardingStreamSubscription$2(this, cancelOnError, t1, t2);
      result.onData$1(onData);
      result.onError$1(0, onError);
      result.onDone$1(onDone);
      return result;
    }, function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }, "listen$3$onDone$onError", function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    }, "listen$1", "call$4$cancelOnError$onDone$onError", null, null, "get$listen", 2, 7, null, 77, 77, 77, 422, 423, 424, 200],
    _handleData$2: [function(data, sink) {
      sink._async$_add$1(0, data);
    }, "call$2", "get$_handleData", 4, 0, null, 377, 533],
    $asStream: function($S, $T) {
      return [$T];
    }
  },
  _ForwardingStreamSubscription: {
    "": "_BufferingStreamSubscription;_stream,_subscription,_async$_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
    _async$_add$1: [function(_, data) {
      if ((this._state & 2) !== 0)
        return;
      P._BufferingStreamSubscription.prototype._async$_add$1.call(this, this, data);
    }, "call$1", "get$_async$_add", 2, 0, null, 377],
    _addError$2: [function(error, stackTrace) {
      if ((this._state & 2) !== 0)
        return;
      P._BufferingStreamSubscription.prototype._addError$2.call(this, error, stackTrace);
    }, "call$2", "get$_addError", 4, 0, null, 188, 189],
    _onPause$0: [function() {
      var t1 = this._subscription;
      if (t1 == null)
        return;
      t1.pause$0(0);
    }, "call$0", "get$_onPause", 0, 0, 107],
    _onResume$0: [function() {
      var t1 = this._subscription;
      if (t1 == null)
        return;
      t1.resume$0();
    }, "call$0", "get$_onResume", 0, 0, 107],
    _onCancel$0: [function() {
      var t1 = this._subscription;
      if (t1 != null) {
        this._subscription = null;
        t1.cancel$0();
      }
      return;
    }, "call$0", "get$_onCancel", 0, 0, null],
    _handleData$1: [function(data) {
      this._stream._handleData$2(data, this);
    }, "call$1", "get$_handleData", 2, 0, function() {
      return H.computeSignature(function(S, T) {
        return {func: "void__S", void: true, args: [S]};
      }, this.$receiver, "_ForwardingStreamSubscription");
    }, 377],
    _handleError$2: [function(error, stackTrace) {
      this._addError$2(error, stackTrace);
    }, "call$2", "get$_handleError", 4, 0, 534, 188, 189],
    _handleDone$0: [function() {
      this._close$0();
    }, "call$0", "get$_handleDone", 0, 0, 107],
    _ForwardingStreamSubscription$2: function(_stream, cancelOnError, $S, $T) {
      var t1, t2;
      t1 = this.get$_handleData();
      t2 = this.get$_handleError();
      this._subscription = this._stream._async$_source.listen$3$onDone$onError(t1, this.get$_handleDone(), t2);
    },
    $as_BufferingStreamSubscription: function($S, $T) {
      return [$T];
    },
    $asStreamSubscription: function($S, $T) {
      return [$T];
    }
  },
  _WhereStream: {
    "": "_ForwardingStream;_test,_async$_source",
    _test$1: function(arg0) {
      return this._test.call$1(arg0);
    },
    _handleData$2: [function(inputEvent, sink) {
      var satisfies, e, s, exception, t1;
      satisfies = null;
      try {
        satisfies = this._test$1(inputEvent);
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        sink._addError$2(e, s);
        return;
      }

      if (satisfies === true)
        J._async$_add$1$x(sink, inputEvent);
    }, "call$2", "get$_handleData", 4, 0, null, 535, 533],
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    },
    $asStream: null
  },
  _MapStream: {
    "": "_ForwardingStream;_transform,_async$_source",
    _transform$1: function(arg0) {
      return this._transform.call$1(arg0);
    },
    _handleData$2: [function(inputEvent, sink) {
      var outputEvent, e, s, exception, t1;
      outputEvent = null;
      try {
        outputEvent = this._transform$1(inputEvent);
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        sink._addError$2(e, s);
        return;
      }

      J._async$_add$1$x(sink, outputEvent);
    }, "call$2", "get$_handleData", 4, 0, null, 535, 533]
  },
  _TakeStream: {
    "": "_ForwardingStream;_remaining,_async$_source",
    _handleData$2: [function(inputEvent, sink) {
      var t1;
      if (this._remaining > 0) {
        sink._async$_add$1(0, inputEvent);
        t1 = this._remaining - 1;
        this._remaining = t1;
        if (t1 === 0)
          sink._close$0();
      }
    }, "call$2", "get$_handleData", 4, 0, null, 535, 533],
    _TakeStream$2: function(source, count, $T) {
    },
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    },
    $asStream: null
  },
  _SkipStream: {
    "": "_ForwardingStream;_remaining,_async$_source",
    _handleData$2: [function(inputEvent, sink) {
      var t1 = this._remaining;
      if (t1 > 0) {
        this._remaining = t1 - 1;
        return;
      }
      sink._async$_add$1(0, inputEvent);
    }, "call$2", "get$_handleData", 4, 0, null, 535, 533],
    _SkipStream$2: function(source, count, $T) {
    },
    $as_ForwardingStream: function($T) {
      return [$T, $T];
    },
    $asStream: null
  },
  Timer: {
    "": "Object;"
  },
  ZoneSpecification: {
    "": "Object;"
  },
  _ZoneSpecification: {
    "": "Object;handleUncaughtError<,run<,runUnary<,runBinary<,registerCallback<,registerUnaryCallback<,registerBinaryCallback<,scheduleMicrotask<,createTimer<,createPeriodicTimer,print>,fork<",
    handleUncaughtError$2: function(arg0, arg1) {
      return this.handleUncaughtError.call$2(arg0, arg1);
    },
    run$1: function(arg0) {
      return this.run.call$1(arg0);
    },
    registerCallback$1: function(arg0) {
      return this.registerCallback.call$1(arg0);
    },
    registerUnaryCallback$1: function(arg0) {
      return this.registerUnaryCallback.call$1(arg0);
    },
    registerBinaryCallback$1: function(arg0) {
      return this.registerBinaryCallback.call$1(arg0);
    },
    scheduleMicrotask$1: function(arg0) {
      return this.scheduleMicrotask.call$1(arg0);
    },
    scheduleMicrotask$2: function(arg0, arg1) {
      return this.scheduleMicrotask.call$2(arg0, arg1);
    },
    createTimer$2: function(arg0, arg1) {
      return this.createTimer.call$2(arg0, arg1);
    },
    print$1: function($receiver, arg0) {
      return this.print.call$1(arg0);
    },
    fork$1$specification: function(arg0) {
      return this.fork.call$1$specification(arg0);
    }
  },
  ZoneDelegate: {
    "": "Object;"
  },
  Zone: {
    "": "Object;"
  },
  _ZoneDelegate: {
    "": "Object;_degelationTarget",
    get$_zone: function() {
      return this._degelationTarget;
    },
    handleUncaughtError$3: [function(zone, error, stackTrace) {
      var $parent, t1;
      $parent = this._degelationTarget;
      for (; t1 = $parent.get$_specification(), t1.get$handleUncaughtError() == null;)
        $parent = $parent.get$parent($parent);
      return t1.get$handleUncaughtError().call$5($parent, new P._ZoneDelegate($parent.get$parent($parent)), zone, error, stackTrace);
    }, "call$3", "get$handleUncaughtError", 6, 0, null, 190, 188, 189],
    run$2: [function(zone, f) {
      var $parent, t1;
      $parent = this._degelationTarget;
      for (; t1 = $parent.get$_specification(), t1.get$run() == null;)
        $parent = $parent.get$parent($parent);
      return t1.get$run().call$4($parent, new P._ZoneDelegate($parent.get$parent($parent)), zone, f);
    }, "call$2", "get$run", 4, 0, null, 190, 154],
    runUnary$3: [function(zone, f, arg) {
      var $parent, t1;
      $parent = this._degelationTarget;
      for (; t1 = $parent.get$_specification(), t1.get$runUnary() == null;)
        $parent = $parent.get$parent($parent);
      return t1.get$runUnary().call$5($parent, new P._ZoneDelegate($parent.get$parent($parent)), zone, f, arg);
    }, "call$3", "get$runUnary", 6, 0, null, 190, 154, 209],
    runBinary$4: [function(zone, f, arg1, arg2) {
      var $parent, t1;
      $parent = this._degelationTarget;
      for (; t1 = $parent.get$_specification(), t1.get$runBinary() == null;)
        $parent = $parent.get$parent($parent);
      return t1.get$runBinary().call$6($parent, new P._ZoneDelegate($parent.get$parent($parent)), zone, f, arg1, arg2);
    }, "call$4", "get$runBinary", 8, 0, null, 190, 154, 54, 55],
    registerCallback$2: [function(zone, f) {
      var $parent, t1;
      $parent = this._degelationTarget;
      for (; t1 = $parent.get$_specification().get$registerCallback(), t1 == null;)
        $parent = $parent.get$parent($parent);
      return t1.call$4($parent, new P._ZoneDelegate($parent.get$parent($parent)), zone, f);
    }, "call$2", "get$registerCallback", 4, 0, null, 190, 154],
    registerUnaryCallback$2: [function(zone, f) {
      var $parent, t1;
      $parent = this._degelationTarget;
      for (; t1 = $parent.get$_specification().get$registerUnaryCallback(), t1 == null;)
        $parent = $parent.get$parent($parent);
      return t1.call$4($parent, new P._ZoneDelegate($parent.get$parent($parent)), zone, f);
    }, "call$2", "get$registerUnaryCallback", 4, 0, null, 190, 154],
    registerBinaryCallback$2: [function(zone, f) {
      var $parent, t1;
      $parent = this._degelationTarget;
      for (; t1 = $parent.get$_specification().get$registerBinaryCallback(), t1 == null;)
        $parent = $parent.get$parent($parent);
      return t1.call$4($parent, new P._ZoneDelegate($parent.get$parent($parent)), zone, f);
    }, "call$2", "get$registerBinaryCallback", 4, 0, null, 190, 154],
    scheduleMicrotask$2: [function(zone, f) {
      var $parent, t1, t2;
      $parent = this._degelationTarget;
      for (; t1 = $parent.get$_specification(), t1.get$scheduleMicrotask() == null;)
        $parent = $parent.get$parent($parent);
      t2 = $parent.get$parent($parent);
      t1.get$scheduleMicrotask().call$4($parent, new P._ZoneDelegate(t2), zone, f);
    }, "call$2", "get$scheduleMicrotask", 4, 0, null, 190, 154],
    createTimer$3: [function(zone, duration, f) {
      var $parent, t1;
      $parent = this._degelationTarget;
      for (; t1 = $parent.get$_specification(), t1.get$createTimer() == null;)
        $parent = $parent.get$parent($parent);
      return t1.get$createTimer().call$5($parent, new P._ZoneDelegate($parent.get$parent($parent)), zone, duration, f);
    }, "call$3", "get$createTimer", 6, 0, null, 190, 203, 154],
    print$2: [function(_, zone, line) {
      var $parent, t1;
      $parent = this._degelationTarget;
      for (; t1 = $parent.get$_specification(), t1.get$print(t1) == null;)
        $parent = $parent.get$parent($parent);
      t1.get$print(t1).call$4($parent, new P._ZoneDelegate($parent.get$parent($parent)), zone, line);
    }, "call$2", "get$print", 4, 0, null, 190, 217],
    fork$3: [function(zone, specification, zoneValues) {
      var $parent, t1, t2;
      $parent = this._degelationTarget;
      for (; t1 = $parent.get$_specification(), t1.get$fork() == null;)
        $parent = $parent.get$parent($parent);
      t2 = $parent.get$parent($parent);
      return t1.get$fork().call$5($parent, new P._ZoneDelegate(t2), zone, specification, zoneValues);
    }, "call$3", "get$fork", 6, 0, null, 190, 220, 221]
  },
  _BaseZone: {
    "": "Object;",
    inSameErrorZone$1: [function(otherZone) {
      return this.get$_errorZone() === otherZone.get$_errorZone();
    }, "call$1", "get$inSameErrorZone", 2, 0, null, 536],
    runGuarded$1: [function(f) {
      var e, s, t1, exception;
      try {
        t1 = this.run$1(f);
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        return this.handleUncaughtError$2(e, s);
      }

    }, "call$1", "get$runGuarded", 2, 0, null, 154],
    runUnaryGuarded$2: [function(f, arg) {
      var e, s, t1, exception;
      try {
        t1 = this.runUnary$2(f, arg);
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        return this.handleUncaughtError$2(e, s);
      }

    }, "call$2", "get$runUnaryGuarded", 4, 0, null, 154, 209],
    runBinaryGuarded$3: [function(f, arg1, arg2) {
      var e, s, t1, exception;
      try {
        t1 = this.runBinary$3(f, arg1, arg2);
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = new H._StackTrace(exception, null);
        return this.handleUncaughtError$2(e, s);
      }

    }, "call$3", "get$runBinaryGuarded", 6, 0, null, 154, 54, 55],
    bindCallback$2$runGuarded: [function(f, runGuarded) {
      var registered = this.registerCallback$1(f);
      if (runGuarded)
        return new P._BaseZone_bindCallback_closure(this, registered);
      else
        return new P._BaseZone_bindCallback_closure0(this, registered);
    }, function(f) {
      return this.bindCallback$2$runGuarded(f, true);
    }, "bindCallback$1", "call$2$runGuarded", null, "get$bindCallback", 2, 3, null, 414, 154, 537],
    bindUnaryCallback$2$runGuarded: [function(f, runGuarded) {
      var registered = this.registerUnaryCallback$1(f);
      if (runGuarded)
        return new P._BaseZone_bindUnaryCallback_closure(this, registered);
      else
        return new P._BaseZone_bindUnaryCallback_closure0(this, registered);
    }, "call$2$runGuarded", "get$bindUnaryCallback", 2, 3, null, 414, 154, 537],
    bindBinaryCallback$2$runGuarded: [function(f, runGuarded) {
      var registered = this.registerBinaryCallback$1(f);
      if (runGuarded)
        return new P._BaseZone_bindBinaryCallback_closure(this, registered);
      else
        return new P._BaseZone_bindBinaryCallback_closure0(this, registered);
    }, "call$2$runGuarded", "get$bindBinaryCallback", 2, 3, null, 414, 154, 537]
  },
  _BaseZone_bindCallback_closure: {
    "": "Closure:108;this_0,registered_1",
    call$0: [function() {
      return this.this_0.runGuarded$1(this.registered_1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _BaseZone_bindCallback_closure0: {
    "": "Closure:108;this_2,registered_3",
    call$0: [function() {
      return this.this_2.run$1(this.registered_3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _BaseZone_bindUnaryCallback_closure: {
    "": "Closure:271;this_0,registered_1",
    call$1: [function(arg) {
      return this.this_0.runUnaryGuarded$2(this.registered_1, arg);
    }, "call$1", null, 2, 0, null, 209, "call"],
    $isFunction: true
  },
  _BaseZone_bindUnaryCallback_closure0: {
    "": "Closure:271;this_2,registered_3",
    call$1: [function(arg) {
      return this.this_2.runUnary$2(this.registered_3, arg);
    }, "call$1", null, 2, 0, null, 209, "call"],
    $isFunction: true
  },
  _BaseZone_bindBinaryCallback_closure: {
    "": "Closure:426;this_0,registered_1",
    call$2: [function(arg1, arg2) {
      return this.this_0.runBinaryGuarded$3(this.registered_1, arg1, arg2);
    }, "call$2", null, 4, 0, null, 54, 55, "call"],
    $isFunction: true
  },
  _BaseZone_bindBinaryCallback_closure0: {
    "": "Closure:426;this_2,registered_3",
    call$2: [function(arg1, arg2) {
      return this.this_2.runBinary$3(this.registered_3, arg1, arg2);
    }, "call$2", null, 4, 0, null, 54, 55, "call"],
    $isFunction: true
  },
  _CustomizedZone: {
    "": "_BaseZone;parent>,_specification<,_map",
    get$_errorZone: function() {
      return this.parent.get$_errorZone();
    },
    $index: [function(_, key) {
      var t1, result;
      t1 = this._map;
      result = t1.$index(0, key);
      if (result != null || t1.containsKey$1(key))
        return result;
      return this.parent.$index(0, key);
    }, "call$1", "get$[]", 2, 0, null, 42],
    handleUncaughtError$2: [function(error, stackTrace) {
      return new P._ZoneDelegate(this).handleUncaughtError$3(this, error, stackTrace);
    }, "call$2", "get$handleUncaughtError", 4, 0, null, 188, 189],
    fork$2$specification$zoneValues: [function(specification, zoneValues) {
      return new P._ZoneDelegate(this).fork$3(this, specification, zoneValues);
    }, function(specification) {
      return this.fork$2$specification$zoneValues(specification, null);
    }, "fork$1$specification", "call$2$specification$zoneValues", null, "get$fork", 0, 5, null, 77, 77, 220, 221],
    run$1: [function(f) {
      return new P._ZoneDelegate(this).run$2(this, f);
    }, "call$1", "get$run", 2, 0, null, 154],
    runUnary$2: [function(f, arg) {
      return new P._ZoneDelegate(this).runUnary$3(this, f, arg);
    }, "call$2", "get$runUnary", 4, 0, null, 154, 209],
    runBinary$3: [function(f, arg1, arg2) {
      return new P._ZoneDelegate(this).runBinary$4(this, f, arg1, arg2);
    }, "call$3", "get$runBinary", 6, 0, null, 154, 54, 55],
    registerCallback$1: [function(f) {
      return new P._ZoneDelegate(this).registerCallback$2(this, f);
    }, "call$1", "get$registerCallback", 2, 0, null, 154],
    registerUnaryCallback$1: [function(f) {
      return new P._ZoneDelegate(this).registerUnaryCallback$2(this, f);
    }, "call$1", "get$registerUnaryCallback", 2, 0, null, 154],
    registerBinaryCallback$1: [function(f) {
      return new P._ZoneDelegate(this).registerBinaryCallback$2(this, f);
    }, "call$1", "get$registerBinaryCallback", 2, 0, null, 154],
    scheduleMicrotask$1: [function(f) {
      new P._ZoneDelegate(this).scheduleMicrotask$2(this, f);
    }, "call$1", "get$scheduleMicrotask", 2, 0, null, 154],
    createTimer$2: [function(duration, f) {
      return new P._ZoneDelegate(this).createTimer$3(this, duration, f);
    }, "call$2", "get$createTimer", 4, 0, null, 203, 154],
    print$1: [function(_, line) {
      new P._ZoneDelegate(this).print$2(0, this, line);
    }, "call$1", "get$print", 2, 0, null, 217]
  },
  _rootHandleUncaughtError_closure: {
    "": "Closure:108;error_0,stackTrace_1",
    call$0: [function() {
      P._scheduleAsyncCallback(new P._rootHandleUncaughtError__closure(this.error_0, this.stackTrace_1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _rootHandleUncaughtError__closure: {
    "": "Closure:108;error_2,stackTrace_3",
    call$0: [function() {
      var t1, trace, t2;
      t1 = this.error_2;
      P.print("Uncaught Error: " + H.S(t1));
      trace = this.stackTrace_3;
      if (trace == null) {
        t2 = J.getInterceptor(t1);
        t2 = typeof t1 === "object" && t1 !== null && !!t2.$isError;
      } else
        t2 = false;
      if (t2)
        trace = t1.get$stackTrace();
      if (trace != null)
        P.print("Stack Trace: \n" + H.S(trace) + "\n");
      throw H.wrapException(t1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _rootFork_closure: {
    "": "Closure:507;copiedMap_0",
    call$2: [function(key, value) {
      if (key == null)
        throw H.wrapException(P.ArgumentError$("ZoneValue key must not be null"));
      this.copiedMap_0.$indexSet(0, key, value);
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true
  },
  _RootZoneSpecification: {
    "": "Object;",
    get$handleUncaughtError: function() {
      return P._rootHandleUncaughtError$closure();
    },
    handleUncaughtError$2: function(arg0, arg1) {
      return this.get$handleUncaughtError().call$2(arg0, arg1);
    },
    get$run: function() {
      return P._rootRun$closure();
    },
    run$1: function(arg0) {
      return this.get$run().call$1(arg0);
    },
    get$runUnary: function() {
      return P._rootRunUnary$closure();
    },
    get$runBinary: function() {
      return P._rootRunBinary$closure();
    },
    get$registerCallback: function() {
      return P._rootRegisterCallback$closure();
    },
    registerCallback$1: function(arg0) {
      return this.get$registerCallback().call$1(arg0);
    },
    get$registerUnaryCallback: function() {
      return P._rootRegisterUnaryCallback$closure();
    },
    registerUnaryCallback$1: function(arg0) {
      return this.get$registerUnaryCallback().call$1(arg0);
    },
    get$registerBinaryCallback: function() {
      return P._rootRegisterBinaryCallback$closure();
    },
    registerBinaryCallback$1: function(arg0) {
      return this.get$registerBinaryCallback().call$1(arg0);
    },
    get$scheduleMicrotask: function() {
      return P._rootScheduleMicrotask$closure();
    },
    scheduleMicrotask$1: function(arg0) {
      return this.get$scheduleMicrotask().call$1(arg0);
    },
    scheduleMicrotask$2: function(arg0, arg1) {
      return this.get$scheduleMicrotask().call$2(arg0, arg1);
    },
    get$createTimer: function() {
      return P._rootCreateTimer$closure();
    },
    createTimer$2: function(arg0, arg1) {
      return this.get$createTimer().call$2(arg0, arg1);
    },
    get$print: function(_) {
      return P._rootPrint$closure();
    },
    print$1: function($receiver, arg0) {
      return this.get$print($receiver).call$1(arg0);
    },
    get$fork: function() {
      return P._rootFork$closure();
    },
    fork$1$specification: function(arg0) {
      return this.get$fork().call$1$specification(arg0);
    }
  },
  _RootZone: {
    "": "_BaseZone;",
    get$parent: function(_) {
      return;
    },
    get$_specification: function() {
      return C.C__RootZoneSpecification;
    },
    get$_errorZone: function() {
      return this;
    },
    inSameErrorZone$1: [function(otherZone) {
      return otherZone.get$_errorZone() === this;
    }, "call$1", "get$inSameErrorZone", 2, 0, null, 536],
    $index: [function(_, key) {
      return;
    }, "call$1", "get$[]", 2, 0, null, 42],
    handleUncaughtError$2: [function(error, stackTrace) {
      return P._rootHandleUncaughtError(this, null, this, error, stackTrace);
    }, "call$2", "get$handleUncaughtError", 4, 0, null, 188, 189],
    fork$2$specification$zoneValues: [function(specification, zoneValues) {
      return P._rootFork(this, null, this, specification, zoneValues);
    }, function(specification) {
      return this.fork$2$specification$zoneValues(specification, null);
    }, "fork$1$specification", "call$2$specification$zoneValues", null, "get$fork", 0, 5, null, 77, 77, 220, 221],
    run$1: [function(f) {
      return P._rootRun(this, null, this, f);
    }, "call$1", "get$run", 2, 0, null, 154],
    runUnary$2: [function(f, arg) {
      return P._rootRunUnary(this, null, this, f, arg);
    }, "call$2", "get$runUnary", 4, 0, null, 154, 209],
    runBinary$3: [function(f, arg1, arg2) {
      return P._rootRunBinary(this, null, this, f, arg1, arg2);
    }, "call$3", "get$runBinary", 6, 0, null, 154, 54, 55],
    registerCallback$1: [function(f) {
      return f;
    }, "call$1", "get$registerCallback", 2, 0, null, 154],
    registerUnaryCallback$1: [function(f) {
      return f;
    }, "call$1", "get$registerUnaryCallback", 2, 0, null, 154],
    registerBinaryCallback$1: [function(f) {
      return f;
    }, "call$1", "get$registerBinaryCallback", 2, 0, null, 154],
    scheduleMicrotask$1: [function(f) {
      P._rootScheduleMicrotask(this, null, this, f);
    }, "call$1", "get$scheduleMicrotask", 2, 0, null, 154],
    createTimer$2: [function(duration, f) {
      return P._rootCreateTimer(this, null, this, duration, f);
    }, "call$2", "get$createTimer", 4, 0, null, 203, 154],
    print$1: [function(_, line) {
      H.printString(line);
      return;
    }, "call$1", "get$print", 2, 0, null, 217]
  }
}],
["dart.collection", "dart:collection", , P, {
  "": "",
  _defaultEquals: [function(a, b) {
    return J.$eq(a, b);
  }, "call$2", "_defaultEquals$closure", 4, 0, 223, 133, 134],
  _defaultHashCode: [function(a) {
    return J.get$hashCode$(a);
  }, "call$1", "_defaultHashCode$closure", 2, 0, 224, 133],
  HashMap_HashMap: function(equals, hashCode, isValidKey, $K, $V) {
    var t1;
    if (equals == null) {
      t1 = new P._HashMap(0, null, null, null, null);
      t1.$builtinTypeInfo = [$K, $V];
      return t1;
    }
    hashCode = P._defaultHashCode$closure();
    return P._CustomHashMap$(equals, hashCode, isValidKey, $K, $V);
  },
  HashSet_HashSet$identity: function($E) {
    return H.setRuntimeTypeInfo(new P._IdentityHashSet(0, null, null, null, null), [$E]);
  },
  _iterableToString: [function(iterable) {
    var parts, t1;
    if ($.get$_toStringVisiting().contains$1(0, iterable))
      return "(...)";
    $.get$_toStringVisiting().add$1(0, iterable);
    parts = [];
    try {
      P._iterablePartsToStrings(iterable, parts);
    } finally {
      $.get$_toStringVisiting().remove$1(0, iterable);
    }
    t1 = P.StringBuffer$("(");
    t1.writeAll$2(parts, ", ");
    t1.write$1(")");
    return t1._contents;
  }, "call$1", "_iterableToString$closure", 2, 0, null, 153],
  _iterablePartsToStrings: [function(iterable, parts) {
    var it, $length, count, next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision;
    it = iterable.get$iterator(iterable);
    $length = 0;
    count = 0;
    while (true) {
      if (!($length < 80 || count < 3))
        break;
      if (!it.moveNext$0())
        return;
      next = H.S(it.get$current());
      parts.push(next);
      $length += next.length + 2;
      ++count;
    }
    if (!it.moveNext$0()) {
      if (count <= 5)
        return;
      if (0 >= parts.length)
        return H.ioore(parts, 0);
      ultimateString = parts.pop();
      if (0 >= parts.length)
        return H.ioore(parts, 0);
      penultimateString = parts.pop();
    } else {
      penultimate = it.get$current();
      ++count;
      if (!it.moveNext$0()) {
        if (count <= 4) {
          parts.push(H.S(penultimate));
          return;
        }
        ultimateString = H.S(penultimate);
        if (0 >= parts.length)
          return H.ioore(parts, 0);
        penultimateString = parts.pop();
        $length += ultimateString.length + 2;
      } else {
        ultimate = it.get$current();
        ++count;
        for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
          ultimate0 = it.get$current();
          ++count;
          if (count > 100) {
            while (true) {
              if (!($length > 75 && count > 3))
                break;
              if (0 >= parts.length)
                return H.ioore(parts, 0);
              $length -= parts.pop().length + 2;
              --count;
            }
            parts.push("...");
            return;
          }
        }
        penultimateString = H.S(penultimate);
        ultimateString = H.S(ultimate);
        $length += ultimateString.length + penultimateString.length + 4;
      }
    }
    if (count > parts.length + 2) {
      $length += 5;
      elision = "...";
    } else
      elision = null;
    while (true) {
      if (!($length > 80 && parts.length > 3))
        break;
      if (0 >= parts.length)
        return H.ioore(parts, 0);
      $length -= parts.pop().length + 2;
      if (elision == null) {
        $length += 5;
        elision = "...";
      }
    }
    if (elision != null)
      parts.push(elision);
    parts.push(penultimateString);
    parts.push(ultimateString);
  }, "call$2", "_iterablePartsToStrings$closure", 4, 0, null, 153, 225],
  LinkedHashMap_LinkedHashMap: function(equals, hashCode, isValidKey, $K, $V) {
    if (hashCode == null) {
      if (equals == null)
        return H.setRuntimeTypeInfo(new P._LinkedHashMap(0, null, null, null, null, null, 0), [$K, $V]);
      hashCode = P._defaultHashCode$closure();
    } else {
      if (P.identityHashCode$closure() === hashCode && P.identical$closure() === equals)
        return H.setRuntimeTypeInfo(new P._LinkedIdentityHashMap(0, null, null, null, null, null, 0), [$K, $V]);
      if (equals == null)
        equals = P._defaultEquals$closure();
    }
    return P._LinkedCustomHashMap$(equals, hashCode, isValidKey, $K, $V);
  },
  LinkedHashSet_LinkedHashSet: function(equals, hashCode, isValidKey, $E) {
    return H.setRuntimeTypeInfo(new P._LinkedHashSet(0, null, null, null, null, null, 0), [$E]);
  },
  Maps_mapToString: [function(m) {
    var t1, result, i, t2;
    t1 = {};
    for (i = 0; t2 = $.get$Maps__toStringList(), i < t2.length; ++i)
      if (t2[i] === m)
        return "{...}";
    result = P.StringBuffer$("");
    try {
      $.get$Maps__toStringList().push(m);
      result.write$1("{");
      t1.first_0 = true;
      J.forEach$1$ax(m, new P.Maps_mapToString_closure(t1, result));
      result.write$1("}");
    } finally {
      t1 = $.get$Maps__toStringList();
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1.pop();
    }
    return result.get$_contents();
  }, "call$1", "Maps_mapToString$closure", 2, 0, null, 226],
  _HashMap: {
    "": "Object;_collection$_length,_strings,_nums,_rest,_keys",
    get$length: function(_) {
      return this._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._collection$_length !== 0;
    },
    get$keys: function() {
      return H.setRuntimeTypeInfo(new P.HashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]);
    },
    get$values: function(_) {
      return H.MappedIterable_MappedIterable(H.setRuntimeTypeInfo(new P.HashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]), new P._HashMap_values_closure(this), H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1));
    },
    containsKey$1: [function(key) {
      var strings, nums, rest;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        return strings == null ? false : strings[key] != null;
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        return nums == null ? false : nums[key] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(key)], key) >= 0;
      }
    }, "call$1", "get$containsKey", 2, 0, null, 42],
    containsValue$1: [function(value) {
      var t1 = this._computeKeys$0();
      t1.toString;
      return H.IterableMixinWorkaround_any(t1, new P._HashMap_containsValue_closure(this, value));
    }, "call$1", "get$containsValue", 2, 0, null, 23],
    addAll$1: [function(_, other) {
      J.forEach$1$ax(other, new P._HashMap_addAll_closure(this));
    }, "call$1", "get$addAll", 2, 0, null, 104],
    $index: [function(_, key) {
      var strings, t1, entry, nums, rest, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          t1 = null;
        else {
          entry = strings[key];
          t1 = entry === strings ? null : entry;
        }
        return t1;
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null)
          t1 = null;
        else {
          entry = nums[key];
          t1 = entry === nums ? null : entry;
        }
        return t1;
      } else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        return index < 0 ? null : bucket[index + 1];
      }
    }, "call$1", "get$[]", 2, 0, null, 42],
    $indexSet: [function(_, key, value) {
      var strings, nums, rest, hash, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null) {
          strings = P._HashMap__newHashTable();
          this._strings = strings;
        }
        this._addHashTableEntry$3(strings, key, value);
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null) {
          nums = P._HashMap__newHashTable();
          this._nums = nums;
        }
        this._addHashTableEntry$3(nums, key, value);
      } else {
        rest = this._rest;
        if (rest == null) {
          rest = P._HashMap__newHashTable();
          this._rest = rest;
        }
        hash = this._computeHashCode$1(key);
        bucket = rest[hash];
        if (bucket == null) {
          P._HashMap__setTableEntry(rest, hash, [key, value]);
          this._collection$_length = this._collection$_length + 1;
          this._keys = null;
        } else {
          index = this._findBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index + 1] = value;
          else {
            bucket.push(key, value);
            this._collection$_length = this._collection$_length + 1;
            this._keys = null;
          }
        }
      }
    }, "call$2", "get$[]=", 4, 0, null, 42, 23],
    putIfAbsent$2: [function(key, ifAbsent) {
      var value;
      if (this.containsKey$1(key))
        return this.$index(0, key);
      value = ifAbsent.call$0();
      this.$indexSet(0, key, value);
      return value;
    }, "call$2", "get$putIfAbsent", 4, 0, null, 42, 427],
    remove$1: [function(_, key) {
      var rest, bucket, index;
      if (typeof key === "string" && key !== "__proto__")
        return this._removeHashTableEntry$2(this._strings, key);
      else if (typeof key === "number" && (key & 0x3ffffff) === key)
        return this._removeHashTableEntry$2(this._nums, key);
      else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        this._collection$_length = this._collection$_length - 1;
        this._keys = null;
        return bucket.splice(index, 2)[1];
      }
    }, "call$1", "get$remove", 2, 0, null, 42],
    clear$0: [function(_) {
      if (this._collection$_length > 0) {
        this._keys = null;
        this._rest = null;
        this._nums = null;
        this._strings = null;
        this._collection$_length = 0;
      }
    }, "call$0", "get$clear", 0, 0, null],
    forEach$1: [function(_, action) {
      var keys, $length, i, key;
      keys = this._computeKeys$0();
      for ($length = keys.length, i = 0; i < $length; ++i) {
        key = keys[i];
        action.call$2(key, this.$index(0, key));
        if (keys !== this._keys)
          throw H.wrapException(P.ConcurrentModificationError$(this));
      }
    }, "call$1", "get$forEach", 2, 0, null, 502],
    _computeKeys$0: [function() {
      var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
      t1 = this._keys;
      if (t1 != null)
        return t1;
      result = Array(this._collection$_length);
      result.fixed$length = init;
      strings = this._strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = this._nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = this._rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      this._keys = result;
      return result;
    }, "call$0", "get$_computeKeys", 0, 0, null],
    _addHashTableEntry$3: [function(table, key, value) {
      if (table[key] == null) {
        this._collection$_length = this._collection$_length + 1;
        this._keys = null;
      }
      P._HashMap__setTableEntry(table, key, value);
    }, "call$3", "get$_addHashTableEntry", 6, 0, null, 222, 42, 23],
    _removeHashTableEntry$2: [function(table, key) {
      var value;
      if (table != null && table[key] != null) {
        value = P._HashMap__getTableEntry(table, key);
        delete table[key];
        this._collection$_length = this._collection$_length - 1;
        this._keys = null;
        return value;
      } else
        return;
    }, "call$2", "get$_removeHashTableEntry", 4, 0, null, 222, 42],
    _computeHashCode$1: [function(key) {
      return J.get$hashCode$(key) & 0x3ffffff;
    }, "call$1", "get$_computeHashCode", 2, 0, null, 42],
    _findBucketIndex$2: [function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (J.$eq(bucket[i], key) === true)
          return i;
      return -1;
    }, "call$2", "get$_findBucketIndex", 4, 0, null, 538, 42],
    $isMap: true,
    static: {_HashMap__getTableEntry: [function(table, key) {
        var entry = table[key];
        return entry === table ? null : entry;
      }, "call$2", "_HashMap__getTableEntry$closure", 4, 0, null, 222, 42], _HashMap__setTableEntry: [function(table, key, value) {
        if (value == null)
          table[key] = table;
        else
          table[key] = value;
      }, "call$3", "_HashMap__setTableEntry$closure", 6, 0, null, 222, 42, 23], _HashMap__newHashTable: [function() {
        var table = Object.create(null);
        P._HashMap__setTableEntry(table, "<non-identifier-key>", table);
        delete table["<non-identifier-key>"];
        return table;
      }, "call$0", "_HashMap__newHashTable$closure", 0, 0, null]}
  },
  _HashMap_values_closure: {
    "": "Closure:271;this_0",
    call$1: [function(each) {
      return this.this_0.$index(0, each);
    }, "call$1", null, 2, 0, null, 467, "call"],
    $isFunction: true
  },
  _HashMap_containsValue_closure: {
    "": "Closure:271;this_0,value_1",
    call$1: [function(each) {
      return J.$eq(this.this_0.$index(0, each), this.value_1);
    }, "call$1", null, 2, 0, null, 467, "call"],
    $isFunction: true
  },
  _HashMap_addAll_closure: {
    "": "Closure;this_0",
    call$2: [function(key, value) {
      this.this_0.$indexSet(0, key, value);
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(K, V) {
        return {func: "dynamic__K_V", args: [K, V]};
      }, this.this_0, "_HashMap");
    }
  },
  _CustomHashMap: {
    "": "_HashMap;_equals,_hashCode,_validKey,_collection$_length,_strings,_nums,_rest,_keys",
    _equals$2: function(arg0, arg1) {
      return this._equals.call$2(arg0, arg1);
    },
    _hashCode$1: function(arg0) {
      return this._hashCode.call$1(arg0);
    },
    _validKey$1: function(arg0) {
      return this._validKey.call$1(arg0);
    },
    $index: [function(_, key) {
      if (this._validKey$1(key) !== true)
        return;
      return P._HashMap.prototype.$index.call(this, this, key);
    }, "call$1", "get$[]", 2, 0, null, 42],
    containsKey$1: [function(key) {
      if (this._validKey$1(key) !== true)
        return false;
      return P._HashMap.prototype.containsKey$1.call(this, key);
    }, "call$1", "get$containsKey", 2, 0, null, 42],
    remove$1: [function(_, key) {
      if (this._validKey$1(key) !== true)
        return;
      return P._HashMap.prototype.remove$1.call(this, this, key);
    }, "call$1", "get$remove", 2, 0, null, 42],
    _computeHashCode$1: [function(key) {
      return this._hashCode$1(key) & 0x3ffffff;
    }, "call$1", "get$_computeHashCode", 2, 0, null, 42],
    _findBucketIndex$2: [function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (this._equals$2(bucket[i], key) === true)
          return i;
      return -1;
    }, "call$2", "get$_findBucketIndex", 4, 0, null, 538, 42],
    toString$0: [function(_) {
      return P.Maps_mapToString(this);
    }, "call$0", "get$toString", 0, 0, null],
    static: {_CustomHashMap$: function(_equals, _hashCode, validKey, $K, $V) {
        var t1 = new P._CustomHashMap_closure($K);
        return H.setRuntimeTypeInfo(new P._CustomHashMap(_equals, _hashCode, t1, 0, null, null, null, null), [$K, $V]);
      }}
  },
  _CustomHashMap_closure: {
    "": "Closure:271;K_0",
    call$1: [function(v) {
      var t1 = H.checkSubtypeOfRuntimeType(v, this.K_0);
      return t1;
    }, "call$1", null, 2, 0, null, 326, "call"],
    $isFunction: true
  },
  HashMapKeyIterable: {
    "": "IterableBase;_collection$_map",
    get$length: function(_) {
      return this._collection$_map._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._collection$_map._collection$_length === 0;
    },
    get$iterator: function(_) {
      var t1 = this._collection$_map;
      t1 = new P.HashMapKeyIterator(t1, t1._computeKeys$0(), 0, null);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    },
    contains$1: [function(_, element) {
      return this._collection$_map.containsKey$1(element);
    }, "call$1", "get$contains", 2, 0, null, 169],
    forEach$1: [function(_, f) {
      var t1, keys, $length, i;
      t1 = this._collection$_map;
      keys = t1._computeKeys$0();
      for ($length = keys.length, i = 0; i < $length; ++i) {
        f.call$1(keys[i]);
        if (keys !== t1._keys)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
      }
    }, "call$1", "get$forEach", 2, 0, null, 154],
    $isEfficientLength: true
  },
  HashMapKeyIterator: {
    "": "Object;_collection$_map,_keys,_offset,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: [function() {
      var keys, offset, t1;
      keys = this._keys;
      offset = this._offset;
      t1 = this._collection$_map;
      if (keys !== t1._keys)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        this._collection$_current = null;
        return false;
      } else {
        this._collection$_current = keys[offset];
        this._offset = offset + 1;
        return true;
      }
    }, "call$0", "get$moveNext", 0, 0, null]
  },
  _LinkedHashMap: {
    "": "Object;_collection$_length,_strings,_nums,_rest,_first,_last,_modifications",
    get$length: function(_) {
      return this._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._collection$_length !== 0;
    },
    get$keys: function() {
      return H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]);
    },
    get$values: function(_) {
      return H.MappedIterable_MappedIterable(H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]), new P._LinkedHashMap_values_closure(this), H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1));
    },
    containsKey$1: [function(key) {
      var strings, nums, rest;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          return false;
        return strings[key] != null;
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return false;
        return nums[key] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(key)], key) >= 0;
      }
    }, "call$1", "get$containsKey", 2, 0, null, 42],
    containsValue$1: [function(value) {
      return H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]).any$1(0, new P._LinkedHashMap_containsValue_closure(this, value));
    }, "call$1", "get$containsValue", 2, 0, null, 23],
    addAll$1: [function(_, other) {
      J.forEach$1$ax(other, new P._LinkedHashMap_addAll_closure(this));
    }, "call$1", "get$addAll", 2, 0, null, 104],
    $index: [function(_, key) {
      var strings, cell, nums, rest, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          return;
        cell = strings[key];
        return cell == null ? null : cell.get$_collection$_value();
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return;
        cell = nums[key];
        return cell == null ? null : cell.get$_collection$_value();
      } else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        return bucket[index].get$_collection$_value();
      }
    }, "call$1", "get$[]", 2, 0, null, 42],
    $indexSet: [function(_, key, value) {
      var strings, nums, rest, hash, bucket, index;
      if (typeof key === "string" && key !== "__proto__") {
        strings = this._strings;
        if (strings == null) {
          strings = P._LinkedHashMap__newHashTable();
          this._strings = strings;
        }
        this._addHashTableEntry$3(strings, key, value);
      } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
        nums = this._nums;
        if (nums == null) {
          nums = P._LinkedHashMap__newHashTable();
          this._nums = nums;
        }
        this._addHashTableEntry$3(nums, key, value);
      } else {
        rest = this._rest;
        if (rest == null) {
          rest = P._LinkedHashMap__newHashTable();
          this._rest = rest;
        }
        hash = this._computeHashCode$1(key);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [this._newLinkedCell$2(key, value)];
        else {
          index = this._findBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index].set$_collection$_value(value);
          else
            bucket.push(this._newLinkedCell$2(key, value));
        }
      }
    }, "call$2", "get$[]=", 4, 0, null, 42, 23],
    putIfAbsent$2: [function(key, ifAbsent) {
      var value;
      if (this.containsKey$1(key))
        return this.$index(0, key);
      value = ifAbsent.call$0();
      this.$indexSet(0, key, value);
      return value;
    }, "call$2", "get$putIfAbsent", 4, 0, null, 42, 427],
    remove$1: [function(_, key) {
      var rest, bucket, index, cell;
      if (typeof key === "string" && key !== "__proto__")
        return this._removeHashTableEntry$2(this._strings, key);
      else if (typeof key === "number" && (key & 0x3ffffff) === key)
        return this._removeHashTableEntry$2(this._nums, key);
      else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        cell = bucket.splice(index, 1)[0];
        this._unlinkCell$1(cell);
        return cell.get$_collection$_value();
      }
    }, "call$1", "get$remove", 2, 0, null, 42],
    clear$0: [function(_) {
      if (this._collection$_length > 0) {
        this._last = null;
        this._first = null;
        this._rest = null;
        this._nums = null;
        this._strings = null;
        this._collection$_length = 0;
        this._modifications = this._modifications + 1 & 67108863;
      }
    }, "call$0", "get$clear", 0, 0, null],
    forEach$1: [function(_, action) {
      var cell, modifications;
      cell = this._first;
      modifications = this._modifications;
      for (; cell != null;) {
        action.call$2(cell.get$_key(), cell.get$_collection$_value());
        if (modifications !== this._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(this));
        cell = cell.get$_next();
      }
    }, "call$1", "get$forEach", 2, 0, null, 502],
    _addHashTableEntry$3: [function(table, key, value) {
      var cell = table[key];
      if (cell == null)
        table[key] = this._newLinkedCell$2(key, value);
      else
        cell.set$_collection$_value(value);
    }, "call$3", "get$_addHashTableEntry", 6, 0, null, 222, 42, 23],
    _removeHashTableEntry$2: [function(table, key) {
      var cell;
      if (table == null)
        return;
      cell = table[key];
      if (cell == null)
        return;
      this._unlinkCell$1(cell);
      delete table[key];
      return cell.get$_collection$_value();
    }, "call$2", "get$_removeHashTableEntry", 4, 0, null, 222, 42],
    _newLinkedCell$2: [function(key, value) {
      var cell, last;
      cell = new P.LinkedHashMapCell(key, value, null, null);
      if (this._first == null) {
        this._last = cell;
        this._first = cell;
      } else {
        last = this._last;
        cell._previous = last;
        last.set$_next(cell);
        this._last = cell;
      }
      this._collection$_length = this._collection$_length + 1;
      this._modifications = this._modifications + 1 & 67108863;
      return cell;
    }, "call$2", "get$_newLinkedCell", 4, 0, null, 42, 23],
    _unlinkCell$1: [function(cell) {
      var previous, next;
      previous = cell.get$_previous();
      next = cell.get$_next();
      if (previous == null)
        this._first = next;
      else
        previous.set$_next(next);
      if (next == null)
        this._last = previous;
      else
        next.set$_previous(previous);
      this._collection$_length = this._collection$_length - 1;
      this._modifications = this._modifications + 1 & 67108863;
    }, "call$1", "get$_unlinkCell", 2, 0, null, 539],
    _computeHashCode$1: [function(key) {
      return J.get$hashCode$(key) & 0x3ffffff;
    }, "call$1", "get$_computeHashCode", 2, 0, null, 42],
    _findBucketIndex$2: [function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq(bucket[i].get$_key(), key) === true)
          return i;
      return -1;
    }, "call$2", "get$_findBucketIndex", 4, 0, null, 538, 42],
    toString$0: [function(_) {
      return P.Maps_mapToString(this);
    }, "call$0", "get$toString", 0, 0, null],
    $isLinkedHashMap: true,
    $isMap: true,
    static: {_LinkedHashMap__newHashTable: [function() {
        var table = Object.create(null);
        table["<non-identifier-key>"] = table;
        delete table["<non-identifier-key>"];
        return table;
      }, "call$0", "_LinkedHashMap__newHashTable$closure", 0, 0, null]}
  },
  _LinkedHashMap_values_closure: {
    "": "Closure:271;this_0",
    call$1: [function(each) {
      return this.this_0.$index(0, each);
    }, "call$1", null, 2, 0, null, 467, "call"],
    $isFunction: true
  },
  _LinkedHashMap_containsValue_closure: {
    "": "Closure:271;this_0,value_1",
    call$1: [function(each) {
      return J.$eq(this.this_0.$index(0, each), this.value_1);
    }, "call$1", null, 2, 0, null, 467, "call"],
    $isFunction: true
  },
  _LinkedHashMap_addAll_closure: {
    "": "Closure;this_0",
    call$2: [function(key, value) {
      this.this_0.$indexSet(0, key, value);
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(K, V) {
        return {func: "dynamic__K_V0", args: [K, V]};
      }, this.this_0, "_LinkedHashMap");
    }
  },
  _LinkedIdentityHashMap: {
    "": "_LinkedHashMap;_collection$_length,_strings,_nums,_rest,_first,_last,_modifications",
    _computeHashCode$1: [function(key) {
      return H.objectHashCode(key) & 0x3ffffff;
    }, "call$1", "get$_computeHashCode", 2, 0, null, 42],
    _findBucketIndex$2: [function(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i) {
        t1 = bucket[i].get$_key();
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }, "call$2", "get$_findBucketIndex", 4, 0, null, 538, 42]
  },
  _LinkedCustomHashMap: {
    "": "_LinkedHashMap;_equals,_hashCode,_validKey,_collection$_length,_strings,_nums,_rest,_first,_last,_modifications",
    _equals$2: function(arg0, arg1) {
      return this._equals.call$2(arg0, arg1);
    },
    _hashCode$1: function(arg0) {
      return this._hashCode.call$1(arg0);
    },
    _validKey$1: function(arg0) {
      return this._validKey.call$1(arg0);
    },
    $index: [function(_, key) {
      if (this._validKey$1(key) !== true)
        return;
      return P._LinkedHashMap.prototype.$index.call(this, this, key);
    }, "call$1", "get$[]", 2, 0, null, 42],
    containsKey$1: [function(key) {
      if (this._validKey$1(key) !== true)
        return false;
      return P._LinkedHashMap.prototype.containsKey$1.call(this, key);
    }, "call$1", "get$containsKey", 2, 0, null, 42],
    remove$1: [function(_, key) {
      if (this._validKey$1(key) !== true)
        return;
      return P._LinkedHashMap.prototype.remove$1.call(this, this, key);
    }, "call$1", "get$remove", 2, 0, null, 42],
    _computeHashCode$1: [function(key) {
      return this._hashCode$1(key) & 0x3ffffff;
    }, "call$1", "get$_computeHashCode", 2, 0, null, 42],
    _findBucketIndex$2: [function(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (this._equals$2(bucket[i].get$_key(), key) === true)
          return i;
      return -1;
    }, "call$2", "get$_findBucketIndex", 4, 0, null, 538, 42],
    static: {_LinkedCustomHashMap$: function(_equals, _hashCode, validKey, $K, $V) {
        var t1 = new P._LinkedCustomHashMap_closure($K);
        return H.setRuntimeTypeInfo(new P._LinkedCustomHashMap(_equals, _hashCode, t1, 0, null, null, null, null, null, 0), [$K, $V]);
      }}
  },
  _LinkedCustomHashMap_closure: {
    "": "Closure:271;K_0",
    call$1: [function(v) {
      var t1 = H.checkSubtypeOfRuntimeType(v, this.K_0);
      return t1;
    }, "call$1", null, 2, 0, null, 326, "call"],
    $isFunction: true
  },
  LinkedHashMapCell: {
    "": "Object;_key<,_collection$_value@,_next@,_previous@"
  },
  LinkedHashMapKeyIterable: {
    "": "IterableBase;_collection$_map",
    get$length: function(_) {
      return this._collection$_map._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._collection$_map._collection$_length === 0;
    },
    get$iterator: function(_) {
      var t1, t2;
      t1 = this._collection$_map;
      t2 = new P.LinkedHashMapKeyIterator(t1, t1._modifications, null, null);
      t2.$builtinTypeInfo = this.$builtinTypeInfo;
      t2._cell = t1._first;
      return t2;
    },
    contains$1: [function(_, element) {
      return this._collection$_map.containsKey$1(element);
    }, "call$1", "get$contains", 2, 0, null, 169],
    forEach$1: [function(_, f) {
      var t1, cell, modifications;
      t1 = this._collection$_map;
      cell = t1._first;
      modifications = t1._modifications;
      for (; cell != null;) {
        f.call$1(cell.get$_key());
        if (modifications !== t1._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
        cell = cell.get$_next();
      }
    }, "call$1", "get$forEach", 2, 0, null, 154],
    $isEfficientLength: true
  },
  LinkedHashMapKeyIterator: {
    "": "Object;_collection$_map,_modifications,_cell,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: [function() {
      var t1 = this._collection$_map;
      if (this._modifications !== t1._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = this._cell;
        if (t1 == null) {
          this._collection$_current = null;
          return false;
        } else {
          this._collection$_current = t1.get$_key();
          this._cell = this._cell.get$_next();
          return true;
        }
      }
    }, "call$0", "get$moveNext", 0, 0, null]
  },
  _HashSet: {
    "": "_HashSetBase;",
    get$iterator: function(_) {
      var t1 = new P.HashSetIterator(this, this._computeElements$0(), 0, null);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    },
    get$length: function(_) {
      return this._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._collection$_length !== 0;
    },
    contains$1: [function(_, object) {
      var strings, nums, rest;
      if (typeof object === "string" && object !== "__proto__") {
        strings = this._strings;
        return strings == null ? false : strings[object] != null;
      } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
        nums = this._nums;
        return nums == null ? false : nums[object] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
      }
    }, "call$1", "get$contains", 2, 0, null, 6],
    lookup$1: [function(object) {
      var t1, rest, bucket, index;
      if (!(typeof object === "string" && object !== "__proto__"))
        t1 = typeof object === "number" && (object & 0x3ffffff) === object;
      else
        t1 = true;
      if (t1)
        return this.contains$1(0, object) ? object : null;
      rest = this._rest;
      if (rest == null)
        return;
      bucket = rest[this._computeHashCode$1(object)];
      index = this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return;
      return J.$index$asx(bucket, index);
    }, "call$1", "get$lookup", 2, 0, null, 6],
    add$1: [function(_, element) {
      var strings, table, nums, rest, hash, bucket;
      if (typeof element === "string" && element !== "__proto__") {
        strings = this._strings;
        if (strings == null) {
          table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._strings = table;
          strings = table;
        }
        return this._addHashTableEntry$2(strings, element);
      } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
        nums = this._nums;
        if (nums == null) {
          table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._nums = table;
          nums = table;
        }
        return this._addHashTableEntry$2(nums, element);
      } else {
        rest = this._rest;
        if (rest == null) {
          table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._rest = table;
          rest = table;
        }
        hash = this._computeHashCode$1(element);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [element];
        else {
          if (this._findBucketIndex$2(bucket, element) >= 0)
            return false;
          bucket.push(element);
        }
        this._collection$_length = this._collection$_length + 1;
        this._elements = null;
        return true;
      }
    }, "call$1", "get$add", 2, 0, null, 169],
    addAll$1: [function(_, objects) {
      var t1;
      for (t1 = J.get$iterator$ax(objects); t1.moveNext$0();)
        this.add$1(0, t1.get$current());
    }, "call$1", "get$addAll", 2, 0, null, 540],
    remove$1: [function(_, object) {
      var rest, bucket, index;
      if (typeof object === "string" && object !== "__proto__")
        return this._removeHashTableEntry$2(this._strings, object);
      else if (typeof object === "number" && (object & 0x3ffffff) === object)
        return this._removeHashTableEntry$2(this._nums, object);
      else {
        rest = this._rest;
        if (rest == null)
          return false;
        bucket = rest[this._computeHashCode$1(object)];
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return false;
        this._collection$_length = this._collection$_length - 1;
        this._elements = null;
        bucket.splice(index, 1);
        return true;
      }
    }, "call$1", "get$remove", 2, 0, null, 6],
    clear$0: [function(_) {
      if (this._collection$_length > 0) {
        this._elements = null;
        this._rest = null;
        this._nums = null;
        this._strings = null;
        this._collection$_length = 0;
      }
    }, "call$0", "get$clear", 0, 0, null],
    _computeElements$0: [function() {
      var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
      t1 = this._elements;
      if (t1 != null)
        return t1;
      result = Array(this._collection$_length);
      result.fixed$length = init;
      strings = this._strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = this._nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = this._rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; ++i0) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      this._elements = result;
      return result;
    }, "call$0", "get$_computeElements", 0, 0, null],
    _addHashTableEntry$2: [function(table, element) {
      if (table[element] != null)
        return false;
      table[element] = 0;
      this._collection$_length = this._collection$_length + 1;
      this._elements = null;
      return true;
    }, "call$2", "get$_addHashTableEntry", 4, 0, null, 222, 169],
    _removeHashTableEntry$2: [function(table, element) {
      if (table != null && table[element] != null) {
        delete table[element];
        this._collection$_length = this._collection$_length - 1;
        this._elements = null;
        return true;
      } else
        return false;
    }, "call$2", "get$_removeHashTableEntry", 4, 0, null, 222, 169],
    _computeHashCode$1: [function(element) {
      return J.get$hashCode$(element) & 0x3ffffff;
    }, "call$1", "get$_computeHashCode", 2, 0, null, 169],
    _findBucketIndex$2: [function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq(bucket[i], element) === true)
          return i;
      return -1;
    }, "call$2", "get$_findBucketIndex", 4, 0, null, 538, 169],
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: null
  },
  _IdentityHashSet: {
    "": "_HashSet;_collection$_length,_strings,_nums,_rest,_elements",
    _computeHashCode$1: [function(key) {
      return H.objectHashCode(key) & 0x3ffffff;
    }, "call$1", "get$_computeHashCode", 2, 0, null, 42],
    _findBucketIndex$2: [function(bucket, element) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i) {
        t1 = bucket[i];
        if (t1 == null ? element == null : t1 === element)
          return i;
      }
      return -1;
    }, "call$2", "get$_findBucketIndex", 4, 0, null, 538, 169]
  },
  HashSetIterator: {
    "": "Object;_set,_elements,_offset,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: [function() {
      var elements, offset, t1;
      elements = this._elements;
      offset = this._offset;
      t1 = this._set;
      if (elements !== t1._elements)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else if (offset >= elements.length) {
        this._collection$_current = null;
        return false;
      } else {
        this._collection$_current = elements[offset];
        this._offset = offset + 1;
        return true;
      }
    }, "call$0", "get$moveNext", 0, 0, null]
  },
  _LinkedHashSet: {
    "": "_HashSetBase;_collection$_length,_strings,_nums,_rest,_first,_last,_modifications",
    get$iterator: function(_) {
      var t1 = H.setRuntimeTypeInfo(new P.LinkedHashSetIterator(this, this._modifications, null, null), [null]);
      t1._cell = t1._set._first;
      return t1;
    },
    get$length: function(_) {
      return this._collection$_length;
    },
    get$isEmpty: function(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._collection$_length !== 0;
    },
    contains$1: [function(_, object) {
      var strings, nums, rest;
      if (typeof object === "string" && object !== "__proto__") {
        strings = this._strings;
        if (strings == null)
          return false;
        return strings[object] != null;
      } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
        nums = this._nums;
        if (nums == null)
          return false;
        return nums[object] != null;
      } else {
        rest = this._rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
      }
    }, "call$1", "get$contains", 2, 0, null, 6],
    lookup$1: [function(object) {
      var t1, rest, bucket, index;
      if (!(typeof object === "string" && object !== "__proto__"))
        t1 = typeof object === "number" && (object & 0x3ffffff) === object;
      else
        t1 = true;
      if (t1)
        return this.contains$1(0, object) ? object : null;
      else {
        rest = this._rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(object)];
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return;
        return J.$index$asx(bucket, index).get$_collection$_element();
      }
    }, "call$1", "get$lookup", 2, 0, null, 6],
    forEach$1: [function(_, action) {
      var cell, modifications;
      cell = this._first;
      modifications = this._modifications;
      for (; cell != null;) {
        action.call$1(cell.get$_collection$_element());
        if (modifications !== this._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(this));
        cell = cell.get$_next();
      }
    }, "call$1", "get$forEach", 2, 0, null, 502],
    get$first: function(_) {
      var t1 = this._first;
      if (t1 == null)
        throw H.wrapException(new P.StateError("No elements"));
      return t1.get$_collection$_element();
    },
    get$last: function(_) {
      var t1 = this._last;
      if (t1 == null)
        throw H.wrapException(new P.StateError("No elements"));
      return t1.get$_collection$_element();
    },
    add$1: [function(_, element) {
      var strings, table, nums, rest, hash, bucket;
      if (typeof element === "string" && element !== "__proto__") {
        strings = this._strings;
        if (strings == null) {
          table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._strings = table;
          strings = table;
        }
        return this._addHashTableEntry$2(strings, element);
      } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
        nums = this._nums;
        if (nums == null) {
          table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._nums = table;
          nums = table;
        }
        return this._addHashTableEntry$2(nums, element);
      } else {
        rest = this._rest;
        if (rest == null) {
          table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          this._rest = table;
          rest = table;
        }
        hash = this._computeHashCode$1(element);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [this._newLinkedCell$1(element)];
        else {
          if (this._findBucketIndex$2(bucket, element) >= 0)
            return false;
          bucket.push(this._newLinkedCell$1(element));
        }
        return true;
      }
    }, "call$1", "get$add", 2, 0, null, 169],
    addAll$1: [function(_, objects) {
      var t1;
      for (t1 = J.get$iterator$ax(objects); t1.moveNext$0();)
        this.add$1(0, t1.get$current());
    }, "call$1", "get$addAll", 2, 0, null, 540],
    remove$1: [function(_, object) {
      var rest, bucket, index;
      if (typeof object === "string" && object !== "__proto__")
        return this._removeHashTableEntry$2(this._strings, object);
      else if (typeof object === "number" && (object & 0x3ffffff) === object)
        return this._removeHashTableEntry$2(this._nums, object);
      else {
        rest = this._rest;
        if (rest == null)
          return false;
        bucket = rest[this._computeHashCode$1(object)];
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return false;
        this._unlinkCell$1(bucket.splice(index, 1)[0]);
        return true;
      }
    }, "call$1", "get$remove", 2, 0, null, 6],
    clear$0: [function(_) {
      if (this._collection$_length > 0) {
        this._last = null;
        this._first = null;
        this._rest = null;
        this._nums = null;
        this._strings = null;
        this._collection$_length = 0;
        this._modifications = this._modifications + 1 & 67108863;
      }
    }, "call$0", "get$clear", 0, 0, null],
    _addHashTableEntry$2: [function(table, element) {
      if (table[element] != null)
        return false;
      table[element] = this._newLinkedCell$1(element);
      return true;
    }, "call$2", "get$_addHashTableEntry", 4, 0, null, 222, 169],
    _removeHashTableEntry$2: [function(table, element) {
      var cell;
      if (table == null)
        return false;
      cell = table[element];
      if (cell == null)
        return false;
      this._unlinkCell$1(cell);
      delete table[element];
      return true;
    }, "call$2", "get$_removeHashTableEntry", 4, 0, null, 222, 169],
    _newLinkedCell$1: [function(element) {
      var cell, last;
      cell = new P.LinkedHashSetCell(element, null, null);
      if (this._first == null) {
        this._last = cell;
        this._first = cell;
      } else {
        last = this._last;
        cell._previous = last;
        last.set$_next(cell);
        this._last = cell;
      }
      this._collection$_length = this._collection$_length + 1;
      this._modifications = this._modifications + 1 & 67108863;
      return cell;
    }, "call$1", "get$_newLinkedCell", 2, 0, null, 169],
    _unlinkCell$1: [function(cell) {
      var previous, next;
      previous = cell.get$_previous();
      next = cell.get$_next();
      if (previous == null)
        this._first = next;
      else
        previous.set$_next(next);
      if (next == null)
        this._last = previous;
      else
        next.set$_previous(previous);
      this._collection$_length = this._collection$_length - 1;
      this._modifications = this._modifications + 1 & 67108863;
    }, "call$1", "get$_unlinkCell", 2, 0, null, 539],
    _computeHashCode$1: [function(element) {
      return J.get$hashCode$(element) & 0x3ffffff;
    }, "call$1", "get$_computeHashCode", 2, 0, null, 169],
    _findBucketIndex$2: [function(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq(bucket[i].get$_collection$_element(), element) === true)
          return i;
      return -1;
    }, "call$2", "get$_findBucketIndex", 4, 0, null, 538, 169],
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: null
  },
  LinkedHashSetCell: {
    "": "Object;_collection$_element<,_next@,_previous@"
  },
  LinkedHashSetIterator: {
    "": "Object;_set,_modifications,_cell,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: [function() {
      var t1 = this._set;
      if (this._modifications !== t1._modifications)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      else {
        t1 = this._cell;
        if (t1 == null) {
          this._collection$_current = null;
          return false;
        } else {
          this._collection$_current = t1.get$_collection$_element();
          this._cell = this._cell.get$_next();
          return true;
        }
      }
    }, "call$0", "get$moveNext", 0, 0, null]
  },
  UnmodifiableListView: {
    "": "UnmodifiableListBase;_collection$_source",
    get$length: function(_) {
      return J.get$length$asx(this._collection$_source);
    },
    $index: [function(_, index) {
      return J.elementAt$1$ax(this._collection$_source, index);
    }, "call$1", "get$[]", 2, 0, null, 47]
  },
  _HashSetBase: {
    "": "IterableBase;",
    toList$1$growable: [function(_, growable) {
      var result, t1, i, element, i0;
      if (growable) {
        result = H.setRuntimeTypeInfo([], [H.getTypeArgumentByIndex(this, 0)]);
        C.JSArray_methods.set$length(result, this.get$length(this));
      } else {
        t1 = Array(this.get$length(this));
        t1.fixed$length = init;
        result = H.setRuntimeTypeInfo(t1, [H.getTypeArgumentByIndex(this, 0)]);
      }
      for (t1 = this.get$iterator(this), i = 0; t1.moveNext$0(); i = i0) {
        element = t1.get$current();
        i0 = i + 1;
        if (i >= result.length)
          return H.ioore(result, i);
        result[i] = element;
      }
      return result;
    }, function($receiver) {
      return this.toList$1$growable($receiver, true);
    }, "toList$0", "call$1$growable", null, "get$toList", 0, 3, null, 414, 415],
    toString$0: [function(_) {
      return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
    }, "call$0", "get$toString", 0, 0, null],
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: null
  },
  IterableBase: {
    "": "Object;",
    map$1: [function(_, f) {
      return H.MappedIterable_MappedIterable(this, f, H.getRuntimeTypeArgument(this, "IterableBase", 0), null);
    }, "call$1", "get$map", 2, 0, null, 154],
    where$1: [function(_, f) {
      return H.setRuntimeTypeInfo(new H.WhereIterable(this, f), [H.getRuntimeTypeArgument(this, "IterableBase", 0)]);
    }, "call$1", "get$where", 2, 0, null, 154],
    contains$1: [function(_, element) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (J.$eq(t1.get$current(), element) === true)
          return true;
      return false;
    }, "call$1", "get$contains", 2, 0, null, 169],
    forEach$1: [function(_, f) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        f.call$1(t1.get$current());
    }, "call$1", "get$forEach", 2, 0, null, 154],
    fold$2: [function(_, initialValue, combine) {
      var t1, value;
      for (t1 = this.get$iterator(this), value = initialValue; t1.moveNext$0();)
        value = combine.call$2(value, t1.get$current());
      return value;
    }, "call$2", "get$fold", 4, 0, null, 155, 156],
    join$1: [function(_, separator) {
      var iterator, buffer, t1;
      iterator = this.get$iterator(this);
      if (!iterator.moveNext$0())
        return "";
      buffer = P.StringBuffer$("");
      if (separator === "")
        do {
          t1 = H.S(iterator.get$current());
          buffer._contents = buffer._contents + t1;
        } while (iterator.moveNext$0());
      else {
        buffer.write$1(H.S(iterator.get$current()));
        for (; iterator.moveNext$0();) {
          buffer._contents = buffer._contents + separator;
          t1 = H.S(iterator.get$current());
          buffer._contents = buffer._contents + t1;
        }
      }
      return buffer._contents;
    }, "call$1", "get$join", 0, 2, null, 122, 412],
    any$1: [function(_, f) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (f.call$1(t1.get$current()) === true)
          return true;
      return false;
    }, "call$1", "get$any", 2, 0, null, 154],
    toList$1$growable: [function(_, growable) {
      return P.List_List$from(this, growable, H.getRuntimeTypeArgument(this, "IterableBase", 0));
    }, function($receiver) {
      return this.toList$1$growable($receiver, true);
    }, "toList$0", "call$1$growable", null, "get$toList", 0, 3, null, 414, 415],
    get$length: function(_) {
      var it, count;
      it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    get$isEmpty: function(_) {
      return !this.get$iterator(this).moveNext$0();
    },
    get$isNotEmpty: function(_) {
      return this.get$isEmpty(this) !== true;
    },
    take$1: [function(_, n) {
      return H.TakeIterable_TakeIterable(this, n, H.getRuntimeTypeArgument(this, "IterableBase", 0));
    }, "call$1", "get$take", 2, 0, null, 347],
    skip$1: [function(_, n) {
      return H.SkipIterable_SkipIterable(this, n, H.getRuntimeTypeArgument(this, "IterableBase", 0));
    }, "call$1", "get$skip", 2, 0, null, 347],
    get$first: function(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw H.wrapException(new P.StateError("No elements"));
      return it.get$current();
    },
    get$last: function(_) {
      var it, result;
      it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw H.wrapException(new P.StateError("No elements"));
      do
        result = it.get$current();
      while (it.moveNext$0());
      return result;
    },
    get$single: function(_) {
      var it, result;
      it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw H.wrapException(new P.StateError("No elements"));
      result = it.get$current();
      if (it.moveNext$0())
        throw H.wrapException(new P.StateError("More than one element"));
      return result;
    },
    firstWhere$2$orElse: [function(_, test, orElse) {
      var t1, element;
      for (t1 = this.get$iterator(this); t1.moveNext$0();) {
        element = t1.get$current();
        if (test.call$1(element) === true)
          return element;
      }
      if (orElse != null)
        return orElse.call$0();
      throw H.wrapException(new P.StateError("No matching element"));
    }, function($receiver, test) {
      return this.firstWhere$2$orElse($receiver, test, null);
    }, "firstWhere$1", "call$2$orElse", null, "get$firstWhere", 2, 3, null, 77, 157, 158],
    elementAt$1: [function(_, index) {
      var t1, remaining, element, t2;
      if (typeof index !== "number" || Math.floor(index) !== index || index < 0)
        throw H.wrapException(P.RangeError$value(index));
      for (t1 = this.get$iterator(this), remaining = index; t1.moveNext$0();) {
        element = t1.get$current();
        t2 = J.getInterceptor(remaining);
        if (t2.$eq(remaining, 0) === true)
          return element;
        remaining = t2.$sub(remaining, 1);
      }
      throw H.wrapException(P.RangeError$value(index));
    }, "call$1", "get$elementAt", 2, 0, null, 47],
    toString$0: [function(_) {
      return P._iterableToString(this);
    }, "call$0", "get$toString", 0, 0, null],
    $isIterable: true,
    $asIterable: null
  },
  ListBase: {
    "": "Object+ListMixin;",
    $isList: true,
    $asList: null,
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: null
  },
  ListMixin: {
    "": "Object;",
    get$iterator: function(receiver) {
      return H.setRuntimeTypeInfo(new H.ListIterator(receiver, this.get$length(receiver), 0, null), [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
    },
    elementAt$1: [function(receiver, index) {
      return this.$index(receiver, index);
    }, "call$1", "get$elementAt", 2, 0, null, 47],
    forEach$1: [function(receiver, action) {
      var $length, i;
      $length = this.get$length(receiver);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        action.call$1(this.$index(receiver, i));
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
    }, "call$1", "get$forEach", 2, 0, null, 502],
    get$isEmpty: function(receiver) {
      return J.$eq(this.get$length(receiver), 0);
    },
    get$isNotEmpty: function(receiver) {
      return this.get$isEmpty(receiver) !== true;
    },
    get$first: function(receiver) {
      if (J.$eq(this.get$length(receiver), 0) === true)
        throw H.wrapException(new P.StateError("No elements"));
      return this.$index(receiver, 0);
    },
    get$last: function(receiver) {
      if (J.$eq(this.get$length(receiver), 0) === true)
        throw H.wrapException(new P.StateError("No elements"));
      return this.$index(receiver, J.$sub$n(this.get$length(receiver), 1));
    },
    contains$1: [function(receiver, element) {
      var $length, i;
      $length = this.get$length(receiver);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        if (J.$eq(this.$index(receiver, i), element) === true)
          return true;
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return false;
    }, "call$1", "get$contains", 2, 0, null, 169],
    any$1: [function(receiver, test) {
      var $length, i;
      $length = this.get$length(receiver);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        if (test.call$1(this.$index(receiver, i)) === true)
          return true;
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return false;
    }, "call$1", "get$any", 2, 0, null, 157],
    firstWhere$2$orElse: [function(receiver, test, orElse) {
      var $length, i, element;
      $length = this.get$length(receiver);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        element = this.$index(receiver, i);
        if (test.call$1(element) === true)
          return element;
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      if (orElse != null)
        return orElse.call$0();
      throw H.wrapException(new P.StateError("No matching element"));
    }, function($receiver, test) {
      return this.firstWhere$2$orElse($receiver, test, null);
    }, "firstWhere$1", "call$2$orElse", null, "get$firstWhere", 2, 3, null, 77, 157, 158],
    join$1: [function(receiver, separator) {
      var $length, t1, first, buffer, i, str;
      $length = this.get$length(receiver);
      if (separator.length !== 0) {
        t1 = J.getInterceptor($length);
        if (t1.$eq($length, 0) === true)
          return "";
        first = H.S(this.$index(receiver, 0));
        if (t1.$eq($length, this.get$length(receiver)) !== true)
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
        buffer = P.StringBuffer$(first);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 1;
        for (; i < $length; ++i) {
          buffer._contents = buffer._contents + separator;
          str = this.$index(receiver, i);
          str = typeof str === "string" ? str : H.S(str);
          buffer._contents = buffer._contents + str;
          if ($length !== this.get$length(receiver))
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        return buffer._contents;
      } else {
        buffer = P.StringBuffer$("");
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          str = this.$index(receiver, i);
          str = typeof str === "string" ? str : H.S(str);
          buffer._contents = buffer._contents + str;
          if ($length !== this.get$length(receiver))
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        return buffer._contents;
      }
    }, "call$1", "get$join", 0, 2, null, 122, 412],
    where$1: [function(receiver, test) {
      return H.setRuntimeTypeInfo(new H.WhereIterable(receiver, test), [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
    }, "call$1", "get$where", 2, 0, null, 157],
    map$1: [function(receiver, f) {
      return H.setRuntimeTypeInfo(new H.MappedListIterable(receiver, f), [null, null]);
    }, "call$1", "get$map", 2, 0, null, 154],
    fold$2: [function(receiver, initialValue, combine) {
      var $length, value, i;
      $length = this.get$length(receiver);
      if (typeof $length !== "number")
        return H.iae($length);
      value = initialValue;
      i = 0;
      for (; i < $length; ++i) {
        value = combine.call$2(value, this.$index(receiver, i));
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
      return value;
    }, "call$2", "get$fold", 4, 0, null, 155, 156],
    skip$1: [function(receiver, count) {
      return H.SubListIterable$(receiver, count, null, null);
    }, "call$1", "get$skip", 2, 0, null, 168],
    take$1: [function(receiver, count) {
      return H.SubListIterable$(receiver, 0, count, null);
    }, "call$1", "get$take", 2, 0, null, 168],
    toList$1$growable: [function(receiver, growable) {
      var result, t1, i;
      if (growable) {
        result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
        C.JSArray_methods.set$length(result, this.get$length(receiver));
      } else {
        t1 = this.get$length(receiver);
        if (typeof t1 !== "number")
          return H.iae(t1);
        t1 = Array(t1);
        t1.fixed$length = init;
        result = H.setRuntimeTypeInfo(t1, [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
      }
      i = 0;
      while (true) {
        t1 = this.get$length(receiver);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        t1 = this.$index(receiver, i);
        if (i >= result.length)
          return H.ioore(result, i);
        result[i] = t1;
        ++i;
      }
      return result;
    }, function($receiver) {
      return this.toList$1$growable($receiver, true);
    }, "toList$0", "call$1$growable", null, "get$toList", 0, 3, null, 414, 415],
    add$1: [function(receiver, element) {
      var t1 = this.get$length(receiver);
      this.set$length(receiver, J.$add$ns(t1, 1));
      this.$indexSet(receiver, t1, element);
    }, "call$1", "get$add", 2, 0, null, 169],
    addAll$1: [function(receiver, iterable) {
      var t1, element, t2;
      for (t1 = J.get$iterator$ax(iterable); t1.moveNext$0();) {
        element = t1.get$current();
        t2 = this.get$length(receiver);
        this.set$length(receiver, J.$add$ns(t2, 1));
        this.$indexSet(receiver, t2, element);
      }
    }, "call$1", "get$addAll", 2, 0, null, 153],
    remove$1: [function(receiver, element) {
      var i, t1;
      i = 0;
      while (true) {
        t1 = this.get$length(receiver);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        if (J.$eq(this.$index(receiver, i), element) === true) {
          this.setRange$4(receiver, i, J.$sub$n(this.get$length(receiver), 1), receiver, i + 1);
          this.set$length(receiver, J.$sub$n(this.get$length(receiver), 1));
          return true;
        }
        ++i;
      }
      return false;
    }, "call$1", "get$remove", 2, 0, null, 169],
    clear$0: [function(receiver) {
      this.set$length(receiver, 0);
    }, "call$0", "get$clear", 0, 0, null],
    removeLast$0: [function(receiver) {
      var result;
      if (J.$eq(this.get$length(receiver), 0) === true)
        throw H.wrapException(new P.StateError("No elements"));
      result = this.$index(receiver, J.$sub$n(this.get$length(receiver), 1));
      this.set$length(receiver, J.$sub$n(this.get$length(receiver), 1));
      return result;
    }, "call$0", "get$removeLast", 0, 0, null],
    sort$1: [function(receiver, compare) {
      H.Sort__doSort(receiver, 0, J.$sub$n(this.get$length(receiver), 1), compare);
    }, "call$1", "get$sort", 0, 2, null, 77, 173],
    _rangeCheck$2: [function(receiver, start, end) {
      var t1 = J.getInterceptor$n(start);
      if (t1.$lt(start, 0) || t1.$gt(start, this.get$length(receiver)))
        throw H.wrapException(P.RangeError$range(start, 0, this.get$length(receiver)));
      t1 = J.getInterceptor$n(end);
      if (t1.$lt(end, start) || t1.$gt(end, this.get$length(receiver)))
        throw H.wrapException(P.RangeError$range(end, start, this.get$length(receiver)));
    }, "call$2", "get$_rangeCheck", 4, 0, null, 161, 162],
    sublist$2: [function(receiver, start, end) {
      var $length, result, i, t1;
      end = this.get$length(receiver);
      this._rangeCheck$2(receiver, start, end);
      $length = J.$sub$n(end, start);
      result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)]);
      C.JSArray_methods.set$length(result, $length);
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i) {
        t1 = this.$index(receiver, start + i);
        if (i >= result.length)
          return H.ioore(result, i);
        result[i] = t1;
      }
      return result;
    }, function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }, "sublist$1", "call$2", null, "get$sublist", 2, 2, null, 77, 161, 162],
    getRange$2: [function(receiver, start, end) {
      this._rangeCheck$2(receiver, start, end);
      return H.SubListIterable$(receiver, start, end, null);
    }, "call$2", "get$getRange", 4, 0, null, 161, 162],
    setRange$4: [function(receiver, start, end, iterable, skipCount) {
      var t1, $length, t2, i;
      t1 = this.get$length(receiver);
      if (typeof t1 !== "number")
        return H.iae(t1);
      t1 = start > t1;
      if (t1)
        H.throwExpression(P.RangeError$range(start, 0, this.get$length(receiver)));
      t1 = J.getInterceptor$n(end);
      if (t1.$lt(end, start) || t1.$gt(end, this.get$length(receiver)))
        H.throwExpression(P.RangeError$range(end, start, this.get$length(receiver)));
      $length = t1.$sub(end, start);
      if (J.$eq($length, 0))
        return;
      if (typeof $length !== "number")
        return H.iae($length);
      t1 = J.getInterceptor$asx(iterable);
      t2 = t1.get$length(iterable);
      if (typeof t2 !== "number")
        return H.iae(t2);
      if (skipCount + $length > t2)
        throw H.wrapException(new P.StateError("Not enough elements"));
      if (skipCount < start)
        for (i = $length - 1; i >= 0; --i)
          this.$indexSet(receiver, start + i, t1.$index(iterable, skipCount + i));
      else
        for (i = 0; i < $length; ++i)
          this.$indexSet(receiver, start + i, t1.$index(iterable, skipCount + i));
    }, "call$4", "get$setRange", 6, 2, null, 413, 161, 162, 153, 163],
    indexOf$2: [function(receiver, element, startIndex) {
      var t1, i;
      t1 = this.get$length(receiver);
      if (typeof t1 !== "number")
        return H.iae(t1);
      if (startIndex >= t1)
        return -1;
      i = startIndex;
      while (true) {
        t1 = this.get$length(receiver);
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (!(i < t1))
          break;
        if (J.$eq(this.$index(receiver, i), element) === true)
          return i;
        ++i;
      }
      return -1;
    }, function($receiver, element) {
      return this.indexOf$2($receiver, element, 0);
    }, "indexOf$1", "call$2", null, "get$indexOf", 2, 2, null, 413, 169, 80],
    lastIndexOf$2: [function(receiver, element, startIndex) {
      var i, t1;
      startIndex = J.$sub$n(this.get$length(receiver), 1);
      for (i = startIndex; t1 = J.getInterceptor$n(i), t1.$ge(i, 0); i = t1.$sub(i, 1))
        if (J.$eq(this.$index(receiver, i), element) === true)
          return i;
      return -1;
    }, function($receiver, element) {
      return this.lastIndexOf$2($receiver, element, null);
    }, "lastIndexOf$1", "call$2", null, "get$lastIndexOf", 2, 2, null, 77, 169, 80],
    insert$2: [function(receiver, index, element) {
      var t1 = this.get$length(receiver);
      if (typeof t1 !== "number")
        return H.iae(t1);
      t1 = index > t1;
      if (t1)
        throw H.wrapException(P.RangeError$range(index, 0, this.get$length(receiver)));
      if (index === this.get$length(receiver)) {
        this.add$1(receiver, element);
        return;
      }
      this.set$length(receiver, J.$add$ns(this.get$length(receiver), 1));
      this.setRange$4(receiver, index + 1, this.get$length(receiver), receiver, index);
      this.$indexSet(receiver, index, element);
    }, "call$2", "get$insert", 4, 0, null, 47, 169],
    get$reversed: function(receiver) {
      return H.setRuntimeTypeInfo(new H.ReversedListIterable(receiver), [null]);
    },
    toString$0: [function(receiver) {
      var result;
      if ($.get$_toStringVisiting().contains$1(0, receiver))
        return "[...]";
      result = P.StringBuffer$("");
      try {
        $.get$_toStringVisiting().add$1(0, receiver);
        result.write$1("[");
        result.writeAll$2(receiver, ", ");
        result.write$1("]");
      } finally {
        $.get$_toStringVisiting().remove$1(0, receiver);
      }
      return result.get$_contents();
    }, "call$0", "get$toString", 0, 0, null],
    $isList: true,
    $asList: null,
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: null
  },
  Maps_mapToString_closure: {
    "": "Closure:426;box_0,result_1",
    call$2: [function(k, v) {
      var t1 = this.box_0;
      if (!t1.first_0)
        this.result_1.write$1(", ");
      t1.first_0 = false;
      t1 = this.result_1;
      t1.write$1(k);
      t1.write$1(": ");
      t1.write$1(v);
    }, "call$2", null, 4, 0, null, 501, 326, "call"],
    $isFunction: true
  },
  ListQueue: {
    "": "IterableBase;_table,_head,_tail,_modificationCount",
    get$iterator: function(_) {
      var t1 = new P._ListQueueIterator(this, this._tail, this._modificationCount, this._head, null);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    },
    forEach$1: [function(_, action) {
      var modificationCount, i, t1;
      modificationCount = this._modificationCount;
      for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
        t1 = this._table;
        if (i < 0 || i >= t1.length)
          return H.ioore(t1, i);
        action.call$1(t1[i]);
        if (modificationCount !== this._modificationCount)
          H.throwExpression(P.ConcurrentModificationError$(this));
      }
    }, "call$1", "get$forEach", 2, 0, null, 502],
    get$isEmpty: function(_) {
      return this._head === this._tail;
    },
    get$length: function(_) {
      return J.$and$n(J.$sub$n(this._tail, this._head), this._table.length - 1);
    },
    get$first: function(_) {
      var t1, t2;
      t1 = this._head;
      if (t1 === this._tail)
        throw H.wrapException(new P.StateError("No elements"));
      t2 = this._table;
      if (t1 >= t2.length)
        return H.ioore(t2, t1);
      return t2[t1];
    },
    get$last: function(_) {
      var t1, t2;
      t1 = this._head;
      t2 = this._tail;
      if (t1 === t2)
        throw H.wrapException(new P.StateError("No elements"));
      t1 = this._table;
      t2 = J.$and$n(J.$sub$n(t2, 1), this._table.length - 1);
      if (t2 >= t1.length)
        return H.ioore(t1, t2);
      return t1[t2];
    },
    elementAt$1: [function(_, index) {
      var t1, t2, t3;
      t1 = J.getInterceptor$n(index);
      if (t1.$lt(index, 0) || t1.$gt(index, this.get$length(this)))
        throw H.wrapException(P.RangeError$range(index, 0, this.get$length(this)));
      t1 = this._table;
      t2 = this._head;
      if (typeof index !== "number")
        return H.iae(index);
      t3 = t1.length;
      t2 = (t2 + index & t3 - 1) >>> 0;
      if (t2 < 0 || t2 >= t3)
        return H.ioore(t1, t2);
      return t1[t2];
    }, "call$1", "get$elementAt", 2, 0, null, 47],
    toList$1$growable: [function(_, growable) {
      var list, t1;
      if (growable) {
        list = H.setRuntimeTypeInfo([], [H.getTypeArgumentByIndex(this, 0)]);
        C.JSArray_methods.set$length(list, this.get$length(this));
      } else {
        t1 = Array(this.get$length(this));
        t1.fixed$length = init;
        list = H.setRuntimeTypeInfo(t1, [H.getTypeArgumentByIndex(this, 0)]);
      }
      this._writeToList$1(list);
      return list;
    }, function($receiver) {
      return this.toList$1$growable($receiver, true);
    }, "toList$0", "call$1$growable", null, "get$toList", 0, 3, null, 414, 415],
    add$1: [function(_, element) {
      this._add$1(0, element);
    }, "call$1", "get$add", 2, 0, null, 169],
    addAll$1: [function(_, elements) {
      var t1, addCount, $length, t2, t3, newCapacity, newTable, endSpace, preSpace;
      t1 = J.getInterceptor(elements);
      if (typeof elements === "object" && elements !== null && (elements.constructor === Array || !!t1.$isList)) {
        addCount = t1.get$length(elements);
        $length = this.get$length(this);
        if (typeof addCount !== "number")
          return H.iae(addCount);
        t1 = $length + addCount;
        t2 = this._table;
        t3 = t2.length;
        if (t1 >= t3) {
          newCapacity = P.ListQueue__nextPowerOf2(t1);
          if (typeof newCapacity !== "number")
            return H.iae(newCapacity);
          t2 = Array(newCapacity);
          t2.fixed$length = init;
          newTable = H.setRuntimeTypeInfo(t2, [H.getTypeArgumentByIndex(this, 0)]);
          this._tail = this._writeToList$1(newTable);
          this._table = newTable;
          this._head = 0;
          H.IterableMixinWorkaround_setRangeList(newTable, $length, t1, elements, 0);
          this._tail = J.$add$ns(this._tail, addCount);
        } else {
          t1 = this._tail;
          if (typeof t1 !== "number")
            return H.iae(t1);
          endSpace = t3 - t1;
          if (addCount < endSpace) {
            H.IterableMixinWorkaround_setRangeList(t2, t1, t1 + addCount, elements, 0);
            this._tail = J.$add$ns(this._tail, addCount);
          } else {
            preSpace = addCount - endSpace;
            H.IterableMixinWorkaround_setRangeList(t2, t1, t1 + endSpace, elements, 0);
            t1 = this._table;
            H.IterableMixinWorkaround_setRangeList(t1, 0, preSpace, elements, endSpace);
            this._tail = preSpace;
          }
        }
        this._modificationCount = this._modificationCount + 1;
      } else
        for (t1 = t1.get$iterator(elements); t1.moveNext$0();)
          this._add$1(0, t1.get$current());
    }, "call$1", "get$addAll", 2, 0, null, 541],
    remove$1: [function(_, object) {
      var i, t1;
      for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
        t1 = this._table;
        if (i < 0 || i >= t1.length)
          return H.ioore(t1, i);
        if (J.$eq(t1[i], object) === true) {
          this._remove$1(i);
          this._modificationCount = this._modificationCount + 1;
          return true;
        }
      }
      return false;
    }, "call$1", "get$remove", 2, 0, null, 6],
    clear$0: [function(_) {
      var i, t1, t2, t3, t4;
      i = this._head;
      t1 = this._tail;
      if (i !== t1) {
        for (t2 = this._table, t3 = t2.length, t4 = t3 - 1; i !== t1; i = (i + 1 & t4) >>> 0) {
          if (i < 0 || i >= t3)
            return H.ioore(t2, i);
          t2[i] = null;
        }
        this._tail = 0;
        this._head = 0;
        this._modificationCount = this._modificationCount + 1;
      }
    }, "call$0", "get$clear", 0, 0, null],
    toString$0: [function(_) {
      return H.IterableMixinWorkaround_toStringIterable(this, "{", "}");
    }, "call$0", "get$toString", 0, 0, null],
    addFirst$1: [function(element) {
      var t1, t2, t3;
      t1 = this._head;
      t2 = this._table;
      t3 = t2.length;
      t1 = (t1 - 1 & t3 - 1) >>> 0;
      this._head = t1;
      if (t1 < 0 || t1 >= t3)
        return H.ioore(t2, t1);
      t2[t1] = element;
      if (t1 === this._tail)
        this._grow$0();
      this._modificationCount = this._modificationCount + 1;
    }, "call$1", "get$addFirst", 2, 0, null, 169],
    removeFirst$0: [function() {
      var t1, t2, t3, result;
      t1 = this._head;
      if (t1 === this._tail)
        throw H.wrapException(P.StateError$("No elements"));
      this._modificationCount = this._modificationCount + 1;
      t2 = this._table;
      t3 = t2.length;
      if (t1 >= t3)
        return H.ioore(t2, t1);
      result = t2[t1];
      this._head = (t1 + 1 & t3 - 1) >>> 0;
      return result;
    }, "call$0", "get$removeFirst", 0, 0, null],
    removeLast$0: [function(_) {
      var t1, t2;
      t1 = this._head;
      t2 = this._tail;
      if (t1 === t2)
        throw H.wrapException(new P.StateError("No elements"));
      this._modificationCount = this._modificationCount + 1;
      t1 = J.$and$n(J.$sub$n(t2, 1), this._table.length - 1);
      this._tail = t1;
      t2 = this._table;
      if (t1 >= t2.length)
        return H.ioore(t2, t1);
      return t2[t1];
    }, "call$0", "get$removeLast", 0, 0, null],
    _add$1: [function(_, element) {
      var t1, t2;
      t1 = this._table;
      t2 = this._tail;
      if (t2 >>> 0 !== t2 || t2 >= t1.length)
        return H.ioore(t1, t2);
      t1[t2] = element;
      t2 = (t2 + 1 & this._table.length - 1) >>> 0;
      this._tail = t2;
      if (this._head === t2)
        this._grow$0();
      this._modificationCount = this._modificationCount + 1;
    }, "call$1", "get$_add", 2, 0, null, 169],
    _remove$1: [function(offset) {
      var mask, t1, t2, t3, i, prevOffset, t4, nextOffset;
      mask = this._table.length - 1;
      if ((offset - this._head & mask) >>> 0 < J.$and$n(J.$sub$n(this._tail, offset), mask)) {
        for (t1 = this._head, t2 = this._table, t3 = t2.length, i = offset; i !== t1; i = prevOffset) {
          prevOffset = (i - 1 & mask) >>> 0;
          if (prevOffset < 0 || prevOffset >= t3)
            return H.ioore(t2, prevOffset);
          t4 = t2[prevOffset];
          if (i < 0 || i >= t3)
            return H.ioore(t2, i);
          t2[i] = t4;
        }
        if (t1 >= t3)
          return H.ioore(t2, t1);
        t2[t1] = null;
        this._head = (t1 + 1 & mask) >>> 0;
        return (offset + 1 & mask) >>> 0;
      } else {
        t1 = J.$and$n(J.$sub$n(this._tail, 1), mask);
        this._tail = t1;
        for (t2 = this._table, t3 = t2.length, i = offset; i !== t1; i = nextOffset) {
          nextOffset = (i + 1 & mask) >>> 0;
          if (nextOffset < 0 || nextOffset >= t3)
            return H.ioore(t2, nextOffset);
          t4 = t2[nextOffset];
          if (i < 0 || i >= t3)
            return H.ioore(t2, i);
          t2[i] = t4;
        }
        if (t1 >= t3)
          return H.ioore(t2, t1);
        t2[t1] = null;
        return offset;
      }
    }, "call$1", "get$_remove", 2, 0, null, 542],
    _grow$0: [function() {
      var t1, newTable, t2, split;
      t1 = Array(this._table.length * 2);
      t1.fixed$length = init;
      newTable = H.setRuntimeTypeInfo(t1, [H.getTypeArgumentByIndex(this, 0)]);
      t1 = this._table;
      t2 = this._head;
      split = t1.length - t2;
      H.IterableMixinWorkaround_setRangeList(newTable, 0, split, t1, t2);
      t1 = this._head;
      t2 = this._table;
      H.IterableMixinWorkaround_setRangeList(newTable, split, split + t1, t2, 0);
      this._head = 0;
      this._tail = this._table.length;
      this._table = newTable;
    }, "call$0", "get$_grow", 0, 0, null],
    _writeToList$1: [function(target) {
      var t1, t2, $length, firstPartSize;
      t1 = this._head;
      t2 = this._tail;
      if (typeof t2 !== "number")
        return H.iae(t2);
      if (t1 <= t2) {
        $length = t2 - t1;
        t1 = this._table;
        t2 = this._head;
        H.IterableMixinWorkaround_setRangeList(target, 0, $length, t1, t2);
        return $length;
      } else {
        t2 = this._table;
        firstPartSize = t2.length - t1;
        H.IterableMixinWorkaround_setRangeList(target, 0, firstPartSize, t2, t1);
        t1 = this._tail;
        if (typeof t1 !== "number")
          return H.iae(t1);
        t2 = this._table;
        H.IterableMixinWorkaround_setRangeList(target, firstPartSize, firstPartSize + t1, t2, 0);
        return J.$add$ns(this._tail, firstPartSize);
      }
    }, "call$1", "get$_writeToList", 2, 0, null, 74],
    ListQueue$1: function(initialCapacity, $E) {
      var t1 = Array(8);
      t1.fixed$length = init;
      this._table = H.setRuntimeTypeInfo(t1, [$E]);
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: null,
    static: {"": "ListQueue__INITIAL_CAPACITY", ListQueue__nextPowerOf2: [function(number) {
        var nextNumber;
        if (typeof number !== "number")
          return number.$shl();
        number = (number << 2 >>> 0) - 1;
        for (; true; number = nextNumber) {
          nextNumber = (number & number - 1) >>> 0;
          if (nextNumber === 0)
            return number;
        }
      }, "call$1", "ListQueue__nextPowerOf2$closure", 2, 0, null, 227]}
  },
  _ListQueueIterator: {
    "": "Object;_queue,_end,_modificationCount,_collection$_position,_collection$_current",
    get$current: function() {
      return this._collection$_current;
    },
    moveNext$0: [function() {
      var t1, t2, t3;
      t1 = this._queue;
      if (this._modificationCount !== t1._modificationCount)
        H.throwExpression(P.ConcurrentModificationError$(t1));
      t2 = this._collection$_position;
      if (t2 === this._end) {
        this._collection$_current = null;
        return false;
      }
      t1 = t1._table;
      t3 = t1.length;
      if (t2 >= t3)
        return H.ioore(t1, t2);
      this._collection$_current = t1[t2];
      this._collection$_position = (t2 + 1 & t3 - 1) >>> 0;
      return true;
    }, "call$0", "get$moveNext", 0, 0, null]
  },
  _SplayTreeNode: {
    "": "Object;key>,left>,right>",
    $is_SplayTreeNode: true
  },
  _SplayTreeMapNode: {
    "": "_SplayTreeNode;value*,key,left,right",
    $as_SplayTreeNode: function($K, $V) {
      return [$K];
    }
  },
  _SplayTree: {
    "": "Object;",
    _splay$1: [function(key) {
      var current, left, right, left0, comp, t1, tmp, current0;
      current = this._root;
      if (current == null)
        return -1;
      left = this._dummy;
      for (right = left, left0 = right, comp = null; true;) {
        comp = this._compare$2(current.key, key);
        t1 = J.getInterceptor$n(comp);
        if (t1.$gt(comp, 0)) {
          t1 = current.left;
          if (t1 == null)
            break;
          comp = this._compare$2(t1.key, key);
          if (J.$gt$n(comp, 0)) {
            tmp = current.left;
            current.left = tmp.right;
            tmp.right = current;
            if (tmp.left == null) {
              current = tmp;
              break;
            }
            current = tmp;
          }
          right.left = current;
          current0 = current.left;
          right = current;
          current = current0;
        } else {
          if (t1.$lt(comp, 0)) {
            t1 = current.right;
            if (t1 == null)
              break;
            comp = this._compare$2(t1.key, key);
            if (J.$lt$n(comp, 0)) {
              tmp = current.right;
              current.right = tmp.left;
              tmp.left = current;
              if (tmp.right == null) {
                current = tmp;
                break;
              }
              current = tmp;
            }
            left0.right = current;
            current0 = current.right;
          } else
            break;
          left0 = current;
          current = current0;
        }
      }
      left0.right = current.left;
      right.left = current.right;
      current.left = left.right;
      current.right = left.left;
      this._root = current;
      left.right = null;
      left.left = null;
      this._splayCount = this._splayCount + 1;
      return comp;
    }, "call$1", "get$_splay", 2, 0, null, 42],
    _splayMax$1: [function(node) {
      var current, current0;
      for (current = node; current0 = current.right, current0 != null; current = current0) {
        current.right = current0.left;
        current0.left = current;
      }
      return current;
    }, "call$1", "get$_splayMax", 2, 0, null, 312],
    _remove$1: [function(key) {
      var result, t1, t2;
      if (this._root == null)
        return;
      if (J.$eq(this._splay$1(key), 0) !== true)
        return;
      result = this._root;
      this._count = this._count - 1;
      t1 = result.left;
      t2 = result.right;
      if (t1 == null)
        this._root = t2;
      else {
        t1 = this._splayMax$1(t1);
        this._root = t1;
        t1.right = t2;
      }
      this._modificationCount = this._modificationCount + 1;
      return result;
    }, "call$1", "get$_remove", 2, 0, null, 42],
    _addNewRoot$2: [function(node, comp) {
      var t1, t2;
      this._count = this._count + 1;
      this._modificationCount = this._modificationCount + 1;
      if (this._root == null) {
        this._root = node;
        return;
      }
      t1 = J.$lt$n(comp, 0);
      t2 = this._root;
      if (t1) {
        node.left = t2;
        node.right = t2.right;
        t2.right = null;
      } else {
        node.right = t2;
        node.left = t2.left;
        t2.left = null;
      }
      this._root = node;
    }, "call$2", "get$_addNewRoot", 4, 0, null, 312, 543]
  },
  SplayTreeMap: {
    "": "_SplayTree;_comparator,_validKey,_root,_dummy,_count,_modificationCount,_splayCount",
    _comparator$2: function(arg0, arg1) {
      return this._comparator.call$2(arg0, arg1);
    },
    _validKey$1: function(arg0) {
      return this._validKey.call$1(arg0);
    },
    _compare$2: [function(key1, key2) {
      return this._comparator$2(key1, key2);
    }, "call$2", "get$_compare", 4, 0, null, 544, 545],
    $index: [function(_, key) {
      if (key == null)
        throw H.wrapException(new P.ArgumentError(key));
      if (this._validKey$1(key) !== true)
        return;
      if (this._root != null)
        if (J.$eq(this._splay$1(key), 0) === true)
          return this._root.value;
      return;
    }, "call$1", "get$[]", 2, 0, null, 42],
    remove$1: [function(_, key) {
      var mapRoot;
      if (this._validKey$1(key) !== true)
        return;
      mapRoot = this._remove$1(key);
      if (mapRoot != null)
        return mapRoot.value;
      return;
    }, "call$1", "get$remove", 2, 0, null, 42],
    $indexSet: [function(_, key, value) {
      var comp;
      if (key == null)
        throw H.wrapException(new P.ArgumentError(key));
      comp = this._splay$1(key);
      if (J.$eq(comp, 0) === true) {
        this._root.value = value;
        return;
      }
      this._addNewRoot$2(H.setRuntimeTypeInfo(new P._SplayTreeMapNode(value, key, null, null), [null, null]), comp);
    }, "call$2", "get$[]=", 4, 0, null, 42, 23],
    putIfAbsent$2: [function(key, ifAbsent) {
      var comp, modificationCount, splayCount, value;
      if (key == null)
        throw H.wrapException(new P.ArgumentError(key));
      comp = this._splay$1(key);
      if (J.$eq(comp, 0) === true)
        return this._root.value;
      modificationCount = this._modificationCount;
      splayCount = this._splayCount;
      value = ifAbsent.call$0();
      if (modificationCount !== this._modificationCount)
        throw H.wrapException(P.ConcurrentModificationError$(this));
      if (splayCount !== this._splayCount)
        comp = this._splay$1(key);
      this._addNewRoot$2(H.setRuntimeTypeInfo(new P._SplayTreeMapNode(value, key, null, null), [null, null]), comp);
      return value;
    }, "call$2", "get$putIfAbsent", 4, 0, null, 42, 427],
    addAll$1: [function(_, other) {
      J.forEach$1$ax(other, new P.SplayTreeMap_addAll_closure(this));
    }, "call$1", "get$addAll", 2, 0, null, 104],
    get$isEmpty: function(_) {
      return this._root == null;
    },
    get$isNotEmpty: function(_) {
      return this._root != null;
    },
    forEach$1: [function(_, f) {
      var t1, nodes, node;
      t1 = H.getTypeArgumentByIndex(this, 0);
      nodes = H.setRuntimeTypeInfo(new P._SplayTreeNodeIterator(this, H.setRuntimeTypeInfo([], [P._SplayTreeNode]), this._modificationCount, this._splayCount, null), [t1]);
      nodes._SplayTreeIterator$1(this, [P._SplayTreeNode, t1]);
      for (; nodes.moveNext$0();) {
        node = nodes.get$current();
        t1 = J.getInterceptor$x(node);
        f.call$2(t1.get$key(node), t1.get$value(node));
      }
    }, "call$1", "get$forEach", 2, 0, null, 154],
    get$length: function(_) {
      return this._count;
    },
    clear$0: [function(_) {
      this._root = null;
      this._count = 0;
      this._modificationCount = this._modificationCount + 1;
    }, "call$0", "get$clear", 0, 0, null],
    containsKey$1: [function(key) {
      return this._validKey$1(key) === true && J.$eq(this._splay$1(key), 0) === true;
    }, "call$1", "get$containsKey", 2, 0, null, 42],
    containsValue$1: [function(value) {
      return new P.SplayTreeMap_containsValue_visit(this, value, this._splayCount).call$1(this._root);
    }, "call$1", "get$containsValue", 2, 0, null, 23],
    get$keys: function() {
      return H.setRuntimeTypeInfo(new P._SplayTreeKeyIterable(this), [H.getTypeArgumentByIndex(this, 0)]);
    },
    get$values: function(_) {
      var t1 = new P._SplayTreeValueIterable(this);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    },
    toString$0: [function(_) {
      return P.Maps_mapToString(this);
    }, "call$0", "get$toString", 0, 0, null],
    $isSplayTreeMap: true,
    $as_SplayTree: function($K, $V) {
      return [$K];
    },
    $asMap: null,
    $isMap: true,
    static: {SplayTreeMap$: function(compare, isValidKey, $K, $V) {
        var t1, t2;
        t1 = P.Comparable_compare$closure();
        t2 = new P.SplayTreeMap_closure($K);
        return H.setRuntimeTypeInfo(new P.SplayTreeMap(t1, t2, null, H.setRuntimeTypeInfo(new P._SplayTreeNode(null, null, null), [$K]), 0, 0, 0), [$K, $V]);
      }}
  },
  SplayTreeMap_closure: {
    "": "Closure:271;K_0",
    call$1: [function(v) {
      var t1 = H.checkSubtypeOfRuntimeType(v, this.K_0);
      return t1;
    }, "call$1", null, 2, 0, null, 326, "call"],
    $isFunction: true
  },
  SplayTreeMap_addAll_closure: {
    "": "Closure;this_0",
    call$2: [function(key, value) {
      this.this_0.$indexSet(0, key, value);
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(K, V) {
        return {func: "dynamic__K_V1", args: [K, V]};
      }, this.this_0, "SplayTreeMap");
    }
  },
  SplayTreeMap_containsValue_visit: {
    "": "Closure:546;this_0,value_1,initialSplayCount_2",
    call$1: [function(node) {
      var t1, t2, t3, t4;
      for (t1 = this.initialSplayCount_2, t2 = this.this_0, t3 = this.value_1; node != null;) {
        if (J.$eq(node.value, t3) === true)
          return true;
        if (t1 !== t2._splayCount)
          throw H.wrapException(P.ConcurrentModificationError$(t2));
        t4 = node.right;
        if (t4 != null && this.call$1(t4) === true)
          return true;
        node = node.left;
      }
      return false;
    }, "call$1", null, 2, 0, null, 312, "call"],
    $isFunction: true
  },
  _SplayTreeIterator: {
    "": "Object;",
    get$current: function() {
      var t1 = this._currentNode;
      if (t1 == null)
        return;
      return this._getValue$1(t1);
    },
    _findLeftMostDescendent$1: [function(node) {
      var t1;
      for (t1 = this._workList; node != null;) {
        t1.push(node);
        node = node.left;
      }
    }, "call$1", "get$_findLeftMostDescendent", 2, 0, null, 312],
    moveNext$0: [function() {
      var t1, t2, t3;
      t1 = this._tree;
      if (this._modificationCount !== t1._modificationCount)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      t2 = this._workList;
      if (t2.length === 0) {
        this._currentNode = null;
        return false;
      }
      if (t1._splayCount !== this._splayCount && this._currentNode != null) {
        t3 = this._currentNode;
        C.JSArray_methods.set$length(t2, 0);
        if (t3 == null)
          this._findLeftMostDescendent$1(t1._root);
        else {
          t1._splay$1(t3.key);
          this._findLeftMostDescendent$1(t1._root.right);
        }
      }
      if (0 >= t2.length)
        return H.ioore(t2, 0);
      t1 = t2.pop();
      this._currentNode = t1;
      this._findLeftMostDescendent$1(t1.right);
      return true;
    }, "call$0", "get$moveNext", 0, 0, null],
    _SplayTreeIterator$1: function(tree, $T) {
      this._findLeftMostDescendent$1(tree._root);
    }
  },
  _SplayTreeKeyIterable: {
    "": "IterableBase;_tree",
    get$length: function(_) {
      return this._tree._count;
    },
    get$isEmpty: function(_) {
      return this._tree._count === 0;
    },
    get$iterator: function(_) {
      var t1, t2;
      t1 = this._tree;
      t2 = new P._SplayTreeKeyIterator(t1, H.setRuntimeTypeInfo([], [P._SplayTreeNode]), t1._modificationCount, t1._splayCount, null);
      t2.$builtinTypeInfo = this.$builtinTypeInfo;
      t2._SplayTreeIterator$1(t1, H.getTypeArgumentByIndex(this, 0));
      return t2;
    },
    $isEfficientLength: true
  },
  _SplayTreeValueIterable: {
    "": "IterableBase;_collection$_map",
    get$length: function(_) {
      return this._collection$_map._count;
    },
    get$isEmpty: function(_) {
      return this._collection$_map._count === 0;
    },
    get$iterator: function(_) {
      var t1, t2;
      t1 = this._collection$_map;
      t2 = new P._SplayTreeValueIterator(t1, H.setRuntimeTypeInfo([], [P._SplayTreeNode]), t1._modificationCount, t1._splayCount, null);
      t2.$builtinTypeInfo = this.$builtinTypeInfo;
      t2._SplayTreeIterator$1(t1, H.getTypeArgumentByIndex(this, 1));
      return t2;
    },
    $asIterableBase: function($K, $V) {
      return [$V];
    },
    $asIterable: function($K, $V) {
      return [$V];
    },
    $isEfficientLength: true
  },
  _SplayTreeKeyIterator: {
    "": "_SplayTreeIterator;_tree,_workList,_modificationCount,_splayCount,_currentNode",
    _getValue$1: [function(node) {
      return node.key;
    }, "call$1", "get$_getValue", 2, 0, null, 312]
  },
  _SplayTreeValueIterator: {
    "": "_SplayTreeIterator;_tree,_workList,_modificationCount,_splayCount,_currentNode",
    _getValue$1: [function(node) {
      return node.value;
    }, "call$1", "get$_getValue", 2, 0, null, 312],
    $as_SplayTreeIterator: function($K, $V) {
      return [$V];
    }
  },
  _SplayTreeNodeIterator: {
    "": "_SplayTreeIterator;_tree,_workList,_modificationCount,_splayCount,_currentNode",
    _getValue$1: [function(node) {
      return node;
    }, "call$1", "get$_getValue", 2, 0, null, 312],
    $as_SplayTreeIterator: function($K) {
      return [[P._SplayTreeNode, $K]];
    }
  }
}],
["dart.convert", "dart:convert", , P, {
  "": "",
  _convertJsonToDart: [function(json, reviver) {
    var revive = new P._convertJsonToDart_closure();
    return revive.call$2(null, new P._convertJsonToDart_walk(revive).call$1(json));
  }, "call$2", "_convertJsonToDart$closure", 4, 0, null, 228, 229],
  _parseJson: [function(source, reviver) {
    var parsed, e, t1, exception;
    t1 = source;
    if (typeof t1 !== "string")
      throw H.wrapException(new P.ArgumentError(source));
    parsed = null;
    try {
      parsed = JSON.parse(source);
    } catch (exception) {
      t1 = H.unwrapException(exception);
      e = t1;
      throw H.wrapException(P.FormatException$(String(e)));
    }

    return P._convertJsonToDart(parsed, reviver);
  }, "call$2", "_parseJson$closure", 4, 0, null, 27, 229],
  _convertJsonToDart_closure: {
    "": "Closure:426;",
    call$2: [function(key, value) {
      return value;
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true
  },
  _convertJsonToDart_walk: {
    "": "Closure:271;revive_0",
    call$1: [function(e) {
      var list, t1, i, keys, map, key, proto;
      if (e == null || typeof e != "object")
        return e;
      if (Object.getPrototypeOf(e) === Array.prototype) {
        list = e;
        for (t1 = this.revive_0, i = 0; i < list.length; ++i)
          list[i] = t1.call$2(i, this.call$1(list[i]));
        return list;
      }
      keys = Object.keys(e);
      map = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
      for (t1 = this.revive_0, i = 0; i < keys.length; ++i) {
        key = keys[i];
        map.$indexSet(0, key, t1.call$2(key, this.call$1(e[key])));
      }
      proto = e.__proto__;
      if (typeof proto !== "undefined" && proto !== Object.prototype)
        map.$indexSet(0, "__proto__", t1.call$2("__proto__", this.call$1(proto)));
      return map;
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  Codec: {
    "": "Object;"
  },
  Converter: {
    "": "Object;"
  },
  Encoding: {
    "": "Codec;",
    $asCodec: function() {
      return [J.JSString, [J.JSArray, J.JSInt]];
    }
  },
  JsonCodec: {
    "": "Codec;",
    decode$2$reviver: [function(source, reviver) {
      return P._parseJson(source, C.JsonDecoder_null._reviver);
    }, function(source) {
      return this.decode$2$reviver(source, null);
    }, "decode$1", "call$2$reviver", null, "get$decode", 2, 3, null, 77, 27, 229],
    $asCodec: function() {
      return [P.Object, J.JSString];
    }
  },
  JsonDecoder: {
    "": "Converter;_reviver",
    $asConverter: function() {
      return [J.JSString, P.Object];
    }
  },
  Utf8Codec: {
    "": "Encoding;_allowMalformed",
    get$name: function(_) {
      return "utf-8";
    },
    get$encoder: function() {
      return new P.Utf8Encoder();
    }
  },
  Utf8Encoder: {
    "": "Converter;",
    convert$1: [function(string) {
      var t1, t2, encoder;
      t1 = string.length;
      t2 = H.setRuntimeTypeInfo(Array(t1 * 3), [J.JSInt]);
      encoder = new P._Utf8Encoder(0, 0, t2);
      if (encoder._fillBuffer$3(string, 0, t1) !== t1)
        encoder._writeSurrogate$2(C.JSString_methods.codeUnitAt$1(string, t1 - 1), 0);
      return C.JSArray_methods.sublist$2(t2, 0, encoder._bufferIndex);
    }, "call$1", "get$convert", 2, 0, null, 26],
    $asConverter: function() {
      return [J.JSString, [J.JSArray, J.JSInt]];
    }
  },
  _Utf8Encoder: {
    "": "Object;_carry,_bufferIndex,_buffer",
    _writeSurrogate$2: [function(leadingSurrogate, nextCodeUnit) {
      var t1, t2, rune, t3, t4;
      t1 = this._buffer;
      t2 = this._bufferIndex;
      if ((nextCodeUnit & 64512) === 56320) {
        rune = 65536 + ((leadingSurrogate & 1023) << 10 >>> 0) | nextCodeUnit & 1023;
        t3 = t2 + 1;
        this._bufferIndex = t3;
        t4 = t1.length;
        if (t2 >= t4)
          return H.ioore(t1, t2);
        t1[t2] = (240 | rune >>> 18) >>> 0;
        t2 = t3 + 1;
        this._bufferIndex = t2;
        if (t3 >= t4)
          return H.ioore(t1, t3);
        t1[t3] = 128 | rune >>> 12 & 63;
        t3 = t2 + 1;
        this._bufferIndex = t3;
        if (t2 >= t4)
          return H.ioore(t1, t2);
        t1[t2] = 128 | rune >>> 6 & 63;
        this._bufferIndex = t3 + 1;
        if (t3 >= t4)
          return H.ioore(t1, t3);
        t1[t3] = 128 | rune & 63;
        return true;
      } else {
        t3 = t2 + 1;
        this._bufferIndex = t3;
        t4 = t1.length;
        if (t2 >= t4)
          return H.ioore(t1, t2);
        t1[t2] = 224 | leadingSurrogate >>> 12;
        t2 = t3 + 1;
        this._bufferIndex = t2;
        if (t3 >= t4)
          return H.ioore(t1, t3);
        t1[t3] = 128 | leadingSurrogate >>> 6 & 63;
        this._bufferIndex = t2 + 1;
        if (t2 >= t4)
          return H.ioore(t1, t2);
        t1[t2] = 128 | leadingSurrogate & 63;
        return false;
      }
    }, "call$2", "get$_writeSurrogate", 4, 0, null, 547, 548],
    _fillBuffer$3: [function(str, start, end) {
      var t1, t2, t3, stringIndex, codeUnit, t4, stringIndex0, t5;
      if (start !== end && (C.JSString_methods.codeUnitAt$1(str, end - 1) & 64512) === 55296)
        --end;
      for (t1 = this._buffer, t2 = t1.length, t3 = str.length, stringIndex = start; stringIndex < end; ++stringIndex) {
        if (stringIndex >= t3)
          H.throwExpression(new P.RangeError("value " + stringIndex));
        codeUnit = str.charCodeAt(stringIndex);
        if (codeUnit <= 127) {
          t4 = this._bufferIndex;
          if (t4 >= t2)
            break;
          this._bufferIndex = t4 + 1;
          t1[t4] = codeUnit;
        } else if ((codeUnit & 64512) === 55296) {
          if (this._bufferIndex + 3 >= t2)
            break;
          stringIndex0 = stringIndex + 1;
          if (stringIndex0 >= t3)
            H.throwExpression(new P.RangeError("value " + stringIndex0));
          if (this._writeSurrogate$2(codeUnit, str.charCodeAt(stringIndex0)))
            stringIndex = stringIndex0;
        } else if (codeUnit <= 2047) {
          t4 = this._bufferIndex;
          t5 = t4 + 1;
          if (t5 >= t2)
            break;
          this._bufferIndex = t5;
          if (t4 >= t2)
            return H.ioore(t1, t4);
          t1[t4] = 192 | codeUnit >>> 6;
          this._bufferIndex = t5 + 1;
          t1[t5] = 128 | codeUnit & 63;
        } else {
          t4 = this._bufferIndex;
          if (t4 + 2 >= t2)
            break;
          t5 = t4 + 1;
          this._bufferIndex = t5;
          if (t4 >= t2)
            return H.ioore(t1, t4);
          t1[t4] = 224 | codeUnit >>> 12;
          t4 = t5 + 1;
          this._bufferIndex = t4;
          if (t5 >= t2)
            return H.ioore(t1, t5);
          t1[t5] = 128 | codeUnit >>> 6 & 63;
          this._bufferIndex = t4 + 1;
          if (t4 >= t2)
            return H.ioore(t1, t4);
          t1[t4] = 128 | codeUnit & 63;
        }
      }
      return stringIndex;
    }, "call$3", "get$_fillBuffer", 6, 0, null, 417, 161, 162],
    static: {"": "_Utf8Encoder__DEFAULT_BYTE_BUFFER_SIZE"}
  },
  Utf8Decoder: {
    "": "Converter;_allowMalformed",
    convert$1: [function(codeUnits) {
      var buffer, decoder;
      buffer = P.StringBuffer$("");
      decoder = new P._Utf8Decoder(this._allowMalformed, buffer, true, 0, 0, 0);
      decoder.convert$3(codeUnits, 0, J.get$length$asx(codeUnits));
      decoder.flush$0();
      return buffer._contents;
    }, "call$1", "get$convert", 2, 0, null, 549],
    $asConverter: function() {
      return [[J.JSArray, J.JSInt], J.JSString];
    }
  },
  _Utf8Decoder: {
    "": "Object;_allowMalformed,_stringSink,_isFirstCharacter,_convert$_value,_expectedUnits,_extraUnits",
    close$0: [function(_) {
      this.flush$0();
    }, "call$0", "get$close", 0, 0, null],
    flush$0: [function() {
      if (this._expectedUnits > 0) {
        if (this._allowMalformed !== true)
          throw H.wrapException(P.FormatException$("Unfinished UTF-8 octet sequence"));
        this._stringSink.write$1(P.String_String$fromCharCode(65533));
        this._convert$_value = 0;
        this._expectedUnits = 0;
        this._extraUnits = 0;
      }
    }, "call$0", "get$flush", 0, 0, null],
    convert$3: [function(codeUnits, startIndex, endIndex) {
      var value, expectedUnits, extraUnits, t1, t2, t3, i, unit, t4, charCodes, i0;
      value = this._convert$_value;
      expectedUnits = this._expectedUnits;
      extraUnits = this._extraUnits;
      this._convert$_value = 0;
      this._expectedUnits = 0;
      this._extraUnits = 0;
      $loop$0:
        for (t1 = this._stringSink, t2 = this._allowMalformed !== true, t3 = J.getInterceptor$asx(codeUnits), i = startIndex; true; i = i0) {
          $multibyte$2: {
            if (expectedUnits > 0) {
              do {
                if (i === endIndex)
                  break $loop$0;
                unit = t3.$index(codeUnits, i);
                t4 = J.getInterceptor$n(unit);
                if (t4.$and(unit, 192) !== 128) {
                  if (t2)
                    throw H.wrapException(P.FormatException$("Bad UTF-8 encoding 0x" + t4.toRadixString$1(unit, 16)));
                  this._isFirstCharacter = false;
                  charCodes = P.List_List$filled(1, 65533, J.JSInt);
                  t4 = H.Primitives_stringFromCharCodes(charCodes);
                  t1._contents = t1._contents + t4;
                  expectedUnits = 0;
                  break $multibyte$2;
                } else {
                  value = (value << 6 | t4.$and(unit, 63)) >>> 0;
                  --expectedUnits;
                  ++i;
                }
              } while (expectedUnits > 0);
              t4 = extraUnits - 1;
              if (t4 < 0 || t4 >= 4)
                return H.ioore(C.List_127_2047_65535_1114111, t4);
              if (value <= C.List_127_2047_65535_1114111[t4]) {
                if (t2)
                  throw H.wrapException(P.FormatException$("Overlong encoding of 0x" + C.JSInt_methods.toRadixString$1(value, 16)));
                value = 65533;
                expectedUnits = 0;
                extraUnits = 0;
              }
              if (value > 1114111) {
                if (t2)
                  throw H.wrapException(P.FormatException$("Character outside valid Unicode range: 0x" + C.JSInt_methods.toRadixString$1(value, 16)));
                value = 65533;
              }
              if (!this._isFirstCharacter || value !== 65279) {
                charCodes = P.List_List$filled(1, value, J.JSInt);
                t4 = H.Primitives_stringFromCharCodes(charCodes);
                t1._contents = t1._contents + t4;
              }
              this._isFirstCharacter = false;
            }
          }
          for (; i < endIndex; i = i0) {
            i0 = i + 1;
            unit = t3.$index(codeUnits, i);
            t4 = J.getInterceptor$n(unit);
            if (t4.$lt(unit, 0)) {
              if (t2)
                throw H.wrapException(P.FormatException$("Negative UTF-8 code unit: -0x" + C.JSNumber_methods.toRadixString$1(t4.$negate(unit), 16)));
              charCodes = P.List_List$filled(1, 65533, J.JSInt);
              t4 = H.Primitives_stringFromCharCodes(charCodes);
              t1._contents = t1._contents + t4;
            } else if (t4.$le(unit, 127)) {
              this._isFirstCharacter = false;
              charCodes = P.List_List$filled(1, unit, J.JSInt);
              t4 = H.Primitives_stringFromCharCodes(charCodes);
              t1._contents = t1._contents + t4;
            } else {
              if (t4.$and(unit, 224) === 192) {
                value = t4.$and(unit, 31);
                expectedUnits = 1;
                extraUnits = 1;
                continue $loop$0;
              }
              if (t4.$and(unit, 240) === 224) {
                value = t4.$and(unit, 15);
                expectedUnits = 2;
                extraUnits = 2;
                continue $loop$0;
              }
              if (t4.$and(unit, 248) === 240 && t4.$lt(unit, 245)) {
                value = t4.$and(unit, 7);
                expectedUnits = 3;
                extraUnits = 3;
                continue $loop$0;
              }
              if (t2)
                throw H.wrapException(P.FormatException$("Bad UTF-8 encoding 0x" + t4.toRadixString$1(unit, 16)));
              this._isFirstCharacter = false;
              charCodes = P.List_List$filled(1, 65533, J.JSInt);
              t4 = H.Primitives_stringFromCharCodes(charCodes);
              t1._contents = t1._contents + t4;
              value = 65533;
              expectedUnits = 0;
              extraUnits = 0;
            }
          }
          break $loop$0;
        }
      if (expectedUnits > 0) {
        this._convert$_value = value;
        this._expectedUnits = expectedUnits;
        this._extraUnits = extraUnits;
      }
    }, "call$3", "get$convert", 6, 0, null, 549, 80, 170],
    static: {"": "_Utf8Decoder__LIMITS"}
  }
}],
["dart.core", "dart:core", , P, {
  "": "",
  Function__toMangledNames: [function(namedArguments) {
    return;
  }, "call$1", "Function__toMangledNames$closure", 2, 0, null, 44],
  Comparable_compare: [function(a, b) {
    return J.compareTo$1$ns(a, b);
  }, "call$2", "Comparable_compare$closure", 4, 0, 230, 133, 134],
  Error_safeToString: [function(object) {
    var buffer, t1, i, t2, codeUnit, charCodes;
    if (typeof object === "number" || typeof object === "boolean" || null == object)
      return J.toString$0(object);
    if (typeof object === "string") {
      buffer = new P.StringBuffer("");
      buffer._contents = "\"";
      for (t1 = object.length, i = 0, t2 = "\""; i < t1; ++i) {
        codeUnit = C.JSString_methods.codeUnitAt$1(object, i);
        if (codeUnit <= 31)
          if (codeUnit === 10) {
            t2 = buffer._contents + "\\n";
            buffer._contents = t2;
          } else if (codeUnit === 13) {
            t2 = buffer._contents + "\\r";
            buffer._contents = t2;
          } else if (codeUnit === 9) {
            t2 = buffer._contents + "\\t";
            buffer._contents = t2;
          } else {
            t2 = buffer._contents + "\\x";
            buffer._contents = t2;
            if (codeUnit < 16)
              buffer._contents = t2 + "0";
            else {
              buffer._contents = t2 + "1";
              codeUnit -= 16;
            }
            t2 = codeUnit < 10 ? 48 + codeUnit : 87 + codeUnit;
            charCodes = P.List_List$filled(1, t2, J.JSInt);
            t2 = H.Primitives_stringFromCharCodes(charCodes);
            t2 = buffer._contents + t2;
            buffer._contents = t2;
          }
        else if (codeUnit === 92) {
          t2 = buffer._contents + "\\\\";
          buffer._contents = t2;
        } else if (codeUnit === 34) {
          t2 = buffer._contents + "\\\"";
          buffer._contents = t2;
        } else {
          charCodes = P.List_List$filled(1, codeUnit, J.JSInt);
          t2 = H.Primitives_stringFromCharCodes(charCodes);
          t2 = buffer._contents + t2;
          buffer._contents = t2;
        }
      }
      t1 = t2 + "\"";
      buffer._contents = t1;
      return t1;
    }
    return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
  }, "call$1", "Error_safeToString$closure", 2, 0, null, 6],
  Exception_Exception: function(message) {
    return new P._ExceptionImplementation(message);
  },
  identical: [function(a, b) {
    return a == null ? b == null : a === b;
  }, "call$2", "identical$closure", 4, 0, 232, 133, 134],
  identityHashCode: [function(object) {
    return H.objectHashCode(object);
  }, "call$1", "identityHashCode$closure", 2, 0, 233, 6],
  int_parse: [function(source, onError, radix) {
    return H.Primitives_parseInt(source, radix, onError);
  }, function(source) {
    return P.int_parse(source, null, null);
  }, null, function(source, onError) {
    return P.int_parse(source, onError, null);
  }, null, "call$3$onError$radix", "call$1", "call$2$onError", "int_parse$closure", 2, 5, 234, 77, 77, 27, 200, 28],
  List_List$filled: function($length, fill, $E) {
    var result, t1, i;
    result = J.JSArray_JSArray$fixed($length, $E);
    if ($length !== 0 && fill != null)
      for (t1 = result.length, i = 0; i < t1; ++i)
        result[i] = fill;
    return result;
  },
  List_List$from: function(other, growable, $E) {
    var list, t1, $length, fixedList, t2, i, t3;
    list = H.setRuntimeTypeInfo([], [$E]);
    for (t1 = J.get$iterator$ax(other); t1.moveNext$0();)
      list.push(t1.get$current());
    if (growable)
      return list;
    $length = list.length;
    t1 = Array($length);
    t1.fixed$length = init;
    fixedList = H.setRuntimeTypeInfo(t1, [$E]);
    for (t1 = list.length, t2 = fixedList.length, i = 0; i < $length; ++i) {
      if (i >= t1)
        return H.ioore(list, i);
      t3 = list[i];
      if (i >= t2)
        return H.ioore(fixedList, i);
      fixedList[i] = t3;
    }
    return fixedList;
  },
  print: [function(object) {
    var line, t1;
    line = H.S(object);
    t1 = $.printToZone;
    if (t1 == null)
      H.printString(line);
    else
      t1.call$1(line);
  }, "call$1", "print$closure", 2, 0, null, 6],
  String_String$fromCharCodes: function(charCodes) {
    return H.Primitives_stringFromCharCodes(charCodes);
  },
  String_String$fromCharCode: function(charCode) {
    return P.String_String$fromCharCodes(P.List_List$filled(1, charCode, J.JSInt));
  },
  Function__toMangledNames_closure: {
    "": "Closure:426;result_0",
    call$2: [function(symbol, value) {
      this.result_0.$indexSet(0, symbol.get$_name(symbol), value);
    }, "call$2", null, 4, 0, null, 174, 23, "call"],
    $isFunction: true
  },
  NoSuchMethodError_toString_closure: {
    "": "Closure:507;box_0",
    call$2: [function(key, value) {
      var t1 = this.box_0;
      if (t1.i_1 > 0)
        t1.sb_0.write$1(", ");
      t1.sb_0.write$1(J.get$_name$x(key));
      t1.sb_0.write$1(": ");
      t1.sb_0.write$1(P.Error_safeToString(value));
      t1.i_1 = t1.i_1 + 1;
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true
  },
  Deprecated: {
    "": "Object;expires",
    toString$0: [function(_) {
      return "Deprecated feature. Will be removed " + this.expires;
    }, "call$0", "get$toString", 0, 0, null]
  },
  bool: {
    "": "Object;",
    toString$0: [function(_) {
      return this ? "true" : "false";
    }, "call$0", "get$toString", 0, 0, null],
    $isbool: true
  },
  Comparable: {
    "": "Object;"
  },
  DateTime: {
    "": "Object;millisecondsSinceEpoch<,isUtc",
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isDateTime)
        return false;
      return this.millisecondsSinceEpoch === other.millisecondsSinceEpoch && this.isUtc === other.isUtc;
    }, "call$1", "get$==", 2, 0, null, 104],
    compareTo$1: [function(_, other) {
      return C.JSNumber_methods.compareTo$1(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
    }, "call$1", "get$compareTo", 2, 0, null, 104],
    get$hashCode: function(_) {
      return this.millisecondsSinceEpoch;
    },
    toString$0: [function(_) {
      var t1, t2, t3, y, m, d, h, min, sec, ms;
      t1 = new P.DateTime_toString_twoDigits();
      t2 = this.isUtc;
      t3 = t2 ? H.Primitives_lazyAsJsDate(this).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(this).getFullYear() + 0;
      y = new P.DateTime_toString_fourDigits().call$1(t3);
      m = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(this).getMonth() + 1);
      d = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(this).getDate() + 0);
      h = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(this).getHours() + 0);
      min = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(this).getMinutes() + 0);
      sec = t1.call$1(t2 ? H.Primitives_lazyAsJsDate(this).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(this).getSeconds() + 0);
      t1 = t2 ? H.Primitives_lazyAsJsDate(this).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(this).getMilliseconds() + 0;
      ms = new P.DateTime_toString_threeDigits().call$1(t1);
      if (t2)
        return H.S(y) + "-" + H.S(m) + "-" + H.S(d) + " " + H.S(h) + ":" + H.S(min) + ":" + H.S(sec) + "." + H.S(ms) + "Z";
      else
        return H.S(y) + "-" + H.S(m) + "-" + H.S(d) + " " + H.S(h) + ":" + H.S(min) + ":" + H.S(sec) + "." + H.S(ms);
    }, "call$0", "get$toString", 0, 0, null],
    add$1: [function(_, duration) {
      return P.DateTime$fromMillisecondsSinceEpoch(this.millisecondsSinceEpoch + duration.get$inMilliseconds(), this.isUtc);
    }, "call$1", "get$add", 2, 0, null, 203],
    DateTime$_now$0: function() {
      H.Primitives_lazyAsJsDate(this);
    },
    DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
      if (Math.abs(millisecondsSinceEpoch) > 8640000000000000)
        throw H.wrapException(new P.ArgumentError(millisecondsSinceEpoch));
    },
    $isDateTime: true,
    static: {"": "DateTime_MONDAY,DateTime_TUESDAY,DateTime_WEDNESDAY,DateTime_THURSDAY,DateTime_FRIDAY,DateTime_SATURDAY,DateTime_SUNDAY,DateTime_DAYS_PER_WEEK,DateTime_JANUARY,DateTime_FEBRUARY,DateTime_MARCH,DateTime_APRIL,DateTime_MAY,DateTime_JUNE,DateTime_JULY,DateTime_AUGUST,DateTime_SEPTEMBER,DateTime_OCTOBER,DateTime_NOVEMBER,DateTime_DECEMBER,DateTime_MONTHS_PER_YEAR,DateTime__MAX_MILLISECONDS_SINCE_EPOCH", DateTime_parse: [function(formattedString) {
        var match, t1, t2, years, month, day, hour, minute, second, millisecond, addOneMillisecond, isUtc, millisecondsSinceEpoch;
        match = new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^([+-]?\\d?\\d\\d\\d\\d)-?(\\d\\d)-?(\\d\\d)(?:[ T](\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(.\\d{1,6})?)?)?( ?[zZ]| ?\\+00(?::?00)?)?)?$", false, true, false), null, null).firstMatch$1(formattedString);
        if (match != null) {
          t1 = new P.DateTime_parse_parseIntOrZero();
          t2 = match._match;
          if (1 >= t2.length)
            return H.ioore(t2, 1);
          years = H.Primitives_parseInt(t2[1], null, null);
          if (2 >= t2.length)
            return H.ioore(t2, 2);
          month = H.Primitives_parseInt(t2[2], null, null);
          if (3 >= t2.length)
            return H.ioore(t2, 3);
          day = H.Primitives_parseInt(t2[3], null, null);
          if (4 >= t2.length)
            return H.ioore(t2, 4);
          hour = t1.call$1(t2[4]);
          if (5 >= t2.length)
            return H.ioore(t2, 5);
          minute = t1.call$1(t2[5]);
          if (6 >= t2.length)
            return H.ioore(t2, 6);
          second = t1.call$1(t2[6]);
          if (7 >= t2.length)
            return H.ioore(t2, 7);
          millisecond = J.round$0$n(J.$mul$n(new P.DateTime_parse_parseDoubleOrZero().call$1(t2[7]), 1000));
          if (millisecond === 1000) {
            addOneMillisecond = true;
            millisecond = 999;
          } else
            addOneMillisecond = false;
          if (8 >= t2.length)
            return H.ioore(t2, 8);
          isUtc = t2[8] != null;
          millisecondsSinceEpoch = H.Primitives_valueFromDecomposedDate(years, month, day, hour, minute, second, millisecond, isUtc);
          return P.DateTime$fromMillisecondsSinceEpoch(addOneMillisecond ? millisecondsSinceEpoch + 1 : millisecondsSinceEpoch, isUtc);
        } else
          throw H.wrapException(P.FormatException$(formattedString));
      }, "call$1", "DateTime_parse$closure", 2, 0, null, 231], DateTime$fromMillisecondsSinceEpoch: function(millisecondsSinceEpoch, isUtc) {
        var t1 = new P.DateTime(millisecondsSinceEpoch, isUtc);
        t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
        return t1;
      }}
  },
  DateTime_parse_parseIntOrZero: {
    "": "Closure:551;",
    call$1: [function(matched) {
      if (matched == null)
        return 0;
      return H.Primitives_parseInt(matched, null, null);
    }, "call$1", null, 2, 0, null, 550, "call"],
    $isFunction: true
  },
  DateTime_parse_parseDoubleOrZero: {
    "": "Closure:552;",
    call$1: [function(matched) {
      if (matched == null)
        return 0;
      return H.Primitives_parseDouble(matched, null);
    }, "call$1", null, 2, 0, null, 550, "call"],
    $isFunction: true
  },
  DateTime_toString_fourDigits: {
    "": "Closure:355;",
    call$1: [function(n) {
      var absN, sign;
      absN = Math.abs(n);
      sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + H.S(absN);
      if (absN >= 10)
        return sign + "00" + H.S(absN);
      return sign + "000" + H.S(absN);
    }, "call$1", null, 2, 0, null, 347, "call"],
    $isFunction: true
  },
  DateTime_toString_threeDigits: {
    "": "Closure:355;",
    call$1: [function(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    }, "call$1", null, 2, 0, null, 347, "call"],
    $isFunction: true
  },
  DateTime_toString_twoDigits: {
    "": "Closure:355;",
    call$1: [function(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    }, "call$1", null, 2, 0, null, 347, "call"],
    $isFunction: true
  },
  Duration: {
    "": "Object;_duration<",
    $add: [function(_, other) {
      return P.Duration$(0, 0, this._duration + other.get$_duration(), 0, 0, 0);
    }, "call$1", "get$+", 2, 0, null, 104],
    $sub: [function(_, other) {
      return P.Duration$(0, 0, this._duration - other.get$_duration(), 0, 0, 0);
    }, "call$1", "get$-", 2, 0, null, 104],
    $mul: [function(_, factor) {
      if (typeof factor !== "number")
        return H.iae(factor);
      return P.Duration$(0, 0, C.JSNumber_methods.toInt$0(C.JSNumber_methods.roundToDouble$0(this._duration * factor)), 0, 0, 0);
    }, "call$1", "get$*", 2, 0, null, 553],
    $tdiv: [function(_, quotient) {
      if (J.$eq(quotient, 0) === true)
        throw H.wrapException(P.IntegerDivisionByZeroException$());
      if (typeof quotient !== "number")
        return H.iae(quotient);
      return P.Duration$(0, 0, C.JSNumber_methods.$tdiv(this._duration, quotient), 0, 0, 0);
    }, "call$1", "get$~/", 2, 0, null, 554],
    $lt: [function(_, other) {
      return this._duration < other.get$_duration();
    }, "call$1", "get$<", 2, 0, null, 104],
    $gt: [function(_, other) {
      return this._duration > other.get$_duration();
    }, "call$1", "get$>", 2, 0, null, 104],
    $le: [function(_, other) {
      return this._duration <= other.get$_duration();
    }, "call$1", "get$<=", 2, 0, null, 104],
    $ge: [function(_, other) {
      return this._duration >= other.get$_duration();
    }, "call$1", "get$>=", 2, 0, null, 104],
    get$inMilliseconds: function() {
      return C.JSNumber_methods._tdivFast$1(this._duration, 1000);
    },
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isDuration)
        return false;
      return this._duration === other._duration;
    }, "call$1", "get$==", 2, 0, null, 104],
    get$hashCode: function(_) {
      return this._duration & 0x1FFFFFFF;
    },
    compareTo$1: [function(_, other) {
      return C.JSNumber_methods.compareTo$1(this._duration, other.get$_duration());
    }, "call$1", "get$compareTo", 2, 0, null, 104],
    toString$0: [function(_) {
      var t1, t2, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
      t1 = new P.Duration_toString_twoDigits();
      t2 = this._duration;
      if (t2 < 0)
        return "-" + H.S(P.Duration$(0, 0, -t2, 0, 0, 0));
      twoDigitMinutes = t1.call$1(C.JSNumber_methods.remainder$1(C.JSNumber_methods._tdivFast$1(t2, 60000000), 60));
      twoDigitSeconds = t1.call$1(C.JSNumber_methods.remainder$1(C.JSNumber_methods._tdivFast$1(t2, 1000000), 60));
      sixDigitUs = new P.Duration_toString_sixDigits().call$1(C.JSNumber_methods.remainder$1(t2, 1000000));
      return H.S(C.JSNumber_methods._tdivFast$1(t2, 3600000000)) + ":" + H.S(twoDigitMinutes) + ":" + H.S(twoDigitSeconds) + "." + H.S(sixDigitUs);
    }, "call$0", "get$toString", 0, 0, null],
    $isDuration: true,
    static: {"": "Duration_MICROSECONDS_PER_MILLISECOND,Duration_MILLISECONDS_PER_SECOND,Duration_SECONDS_PER_MINUTE,Duration_MINUTES_PER_HOUR,Duration_HOURS_PER_DAY,Duration_MICROSECONDS_PER_SECOND,Duration_MICROSECONDS_PER_MINUTE,Duration_MICROSECONDS_PER_HOUR,Duration_MICROSECONDS_PER_DAY,Duration_MILLISECONDS_PER_MINUTE,Duration_MILLISECONDS_PER_HOUR,Duration_MILLISECONDS_PER_DAY,Duration_SECONDS_PER_HOUR,Duration_SECONDS_PER_DAY,Duration_MINUTES_PER_DAY,Duration_ZERO", Duration$: function(days, hours, microseconds, milliseconds, minutes, seconds) {
        return new P.Duration(days * 86400000000 + hours * 3600000000 + minutes * 60000000 + seconds * 1000000 + milliseconds * 1000 + microseconds);
      }}
  },
  Duration_toString_sixDigits: {
    "": "Closure:355;",
    call$1: [function(n) {
      if (n >= 100000)
        return H.S(n);
      if (n >= 10000)
        return "0" + H.S(n);
      if (n >= 1000)
        return "00" + H.S(n);
      if (n >= 100)
        return "000" + H.S(n);
      if (n >= 10)
        return "0000" + H.S(n);
      return "00000" + H.S(n);
    }, "call$1", null, 2, 0, null, 347, "call"],
    $isFunction: true
  },
  Duration_toString_twoDigits: {
    "": "Closure:355;",
    call$1: [function(n) {
      if (n >= 10)
        return H.S(n);
      return "0" + H.S(n);
    }, "call$1", null, 2, 0, null, 347, "call"],
    $isFunction: true
  },
  Error: {
    "": "Object;",
    get$stackTrace: function() {
      return new H._StackTrace(this.$thrownJsError, null);
    },
    $isError: true
  },
  NullThrownError: {
    "": "Error;",
    toString$0: [function(_) {
      return "Throw of null.";
    }, "call$0", "get$toString", 0, 0, null]
  },
  ArgumentError: {
    "": "Error;message>",
    toString$0: [function(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Illegal argument(s): " + H.S(t1);
      return "Illegal argument(s)";
    }, "call$0", "get$toString", 0, 0, null],
    static: {ArgumentError$: function(message) {
        return new P.ArgumentError(message);
      }}
  },
  RangeError: {
    "": "ArgumentError;message",
    toString$0: [function(_) {
      return "RangeError: " + H.S(this.message);
    }, "call$0", "get$toString", 0, 0, null],
    static: {RangeError$: function(message) {
        return new P.RangeError(message);
      }, RangeError$value: function(value) {
        return new P.RangeError("value " + H.S(value));
      }, RangeError$range: function(value, start, end) {
        return new P.RangeError("value " + H.S(value) + " not in range " + H.S(start) + ".." + H.S(end));
      }}
  },
  NoSuchMethodError: {
    "": "Error;_core$_receiver,_memberName,_core$_arguments,_namedArguments,_existingArgumentNames",
    toString$0: [function(_) {
      var t1, t2, t3, t4, i, t5, str;
      t1 = {};
      t1.sb_0 = P.StringBuffer$("");
      t1.i_1 = 0;
      t2 = this._core$_arguments;
      if (t2 != null)
        for (t3 = 0; t4 = t2.length, t3 < t4; i = t1.i_1 + 1, t1.i_1 = i, t3 = i) {
          if (t3 > 0) {
            t5 = t1.sb_0;
            t5._contents = t5._contents + ", ";
          }
          t5 = t1.sb_0;
          if (t3 < 0)
            return H.ioore(t2, t3);
          str = P.Error_safeToString(t2[t3]);
          str = typeof str === "string" ? str : H.S(str);
          t5._contents = t5._contents + str;
        }
      t2 = this._namedArguments;
      if (t2 != null)
        t2.forEach$1(0, new P.NoSuchMethodError_toString_closure(t1));
      return "NoSuchMethodError : method not found: '" + H.S(this._memberName) + "'\nReceiver: " + H.S(P.Error_safeToString(this._core$_receiver)) + "\nArguments: [" + H.S(t1.sb_0) + "]";
    }, "call$0", "get$toString", 0, 0, null],
    $isNoSuchMethodError: true,
    static: {NoSuchMethodError$: function(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames) {
        return new P.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames);
      }}
  },
  UnsupportedError: {
    "": "Error;message>",
    toString$0: [function(_) {
      return "Unsupported operation: " + this.message;
    }, "call$0", "get$toString", 0, 0, null],
    static: {UnsupportedError$: function(message) {
        return new P.UnsupportedError(message);
      }}
  },
  UnimplementedError: {
    "": "Error;message>",
    toString$0: [function(_) {
      var t1 = this.message;
      return t1 != null ? "UnimplementedError: " + H.S(t1) : "UnimplementedError";
    }, "call$0", "get$toString", 0, 0, null],
    $isError: true,
    static: {UnimplementedError$: function(message) {
        return new P.UnimplementedError(message);
      }}
  },
  StateError: {
    "": "Error;message>",
    toString$0: [function(_) {
      return "Bad state: " + this.message;
    }, "call$0", "get$toString", 0, 0, null],
    static: {StateError$: function(message) {
        return new P.StateError(message);
      }}
  },
  ConcurrentModificationError: {
    "": "Error;modifiedObject",
    toString$0: [function(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + H.S(P.Error_safeToString(t1)) + ".";
    }, "call$0", "get$toString", 0, 0, null],
    static: {ConcurrentModificationError$: function(modifiedObject) {
        return new P.ConcurrentModificationError(modifiedObject);
      }}
  },
  StackOverflowError: {
    "": "Object;",
    toString$0: [function(_) {
      return "Stack Overflow";
    }, "call$0", "get$toString", 0, 0, null],
    get$stackTrace: function() {
      return;
    },
    $isError: true
  },
  CyclicInitializationError: {
    "": "Error;variableName",
    toString$0: [function(_) {
      return "Reading static variable '" + this.variableName + "' during its initialization";
    }, "call$0", "get$toString", 0, 0, null],
    static: {CyclicInitializationError$: function(variableName) {
        return new P.CyclicInitializationError(variableName);
      }}
  },
  _ExceptionImplementation: {
    "": "Object;message>",
    toString$0: [function(_) {
      var t1 = this.message;
      if (t1 == null)
        return "Exception";
      return "Exception: " + H.S(t1);
    }, "call$0", "get$toString", 0, 0, null]
  },
  FormatException: {
    "": "Object;message>",
    toString$0: [function(_) {
      return "FormatException: " + H.S(this.message);
    }, "call$0", "get$toString", 0, 0, null],
    static: {FormatException$: function(message) {
        return new P.FormatException(message);
      }}
  },
  IntegerDivisionByZeroException: {
    "": "Object;",
    toString$0: [function(_) {
      return "IntegerDivisionByZeroException";
    }, "call$0", "get$toString", 0, 0, null],
    static: {IntegerDivisionByZeroException$: function() {
        return new P.IntegerDivisionByZeroException();
      }}
  },
  Expando: {
    "": "Object;name>",
    toString$0: [function(_) {
      return "Expando:" + this.name;
    }, "call$0", "get$toString", 0, 0, null],
    $index: [function(_, object) {
      var values = H.Primitives_getProperty(object, "expando$values");
      return values == null ? null : H.Primitives_getProperty(values, this._getKey$0());
    }, "call$1", "get$[]", 2, 0, null, 6],
    $indexSet: [function(_, object, value) {
      var values = H.Primitives_getProperty(object, "expando$values");
      if (values == null) {
        values = new P.Object();
        H.Primitives_setProperty(object, "expando$values", values);
      }
      H.Primitives_setProperty(values, this._getKey$0(), value);
    }, "call$2", "get$[]=", 4, 0, null, 6, 23],
    _getKey$0: [function() {
      var key, t1;
      key = H.Primitives_getProperty(this, "expando$key");
      if (key == null) {
        t1 = $.Expando__keyCount;
        $.Expando__keyCount = t1 + 1;
        key = "expando$key$" + t1;
        H.Primitives_setProperty(this, "expando$key", key);
      }
      return key;
    }, "call$0", "get$_getKey", 0, 0, null],
    static: {"": "Expando__KEY_PROPERTY_NAME,Expando__EXPANDO_PROPERTY_NAME,Expando__keyCount"}
  },
  Function: {
    "": "Object;",
    $isFunction: true
  },
  Iterable: {
    "": "Object;",
    $isIterable: true,
    $asIterable: null
  },
  Iterator: {
    "": "Object;"
  },
  Map: {
    "": "Object;",
    $isMap: true
  },
  Null: {
    "": "Object;",
    toString$0: [function(_) {
      return "null";
    }, "call$0", "get$toString", 0, 0, null]
  },
  Object: {
    "": ";",
    $eq: [function(_, other) {
      return this === other;
    }, "call$1", "get$==", 2, 0, null, 104],
    get$hashCode: function(_) {
      return H.Primitives_objectHashCode(this);
    },
    toString$0: [function(_) {
      return H.Primitives_objectToString(this);
    }, "call$0", "get$toString", 0, 0, null],
    noSuchMethod$1: [function(_, invocation) {
      throw H.wrapException(P.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
    }, "call$1", "get$noSuchMethod", 2, 0, null, 410],
    get$runtimeType: function(_) {
      return new H.TypeImpl(H.getRuntimeTypeString(this), null);
    },
    $isObject: true
  },
  Match: {
    "": "Object;",
    $isMatch: true
  },
  StackTrace: {
    "": "Object;"
  },
  Stopwatch: {
    "": "Object;_core$_start,_stop",
    start$0: [function(_) {
      var t1, t2, t3;
      t1 = this._core$_start == null;
      if (!t1 && this._stop == null)
        return;
      if (t1)
        this._core$_start = H.Primitives_numMicroseconds();
      else {
        t1 = H.Primitives_numMicroseconds();
        t2 = this._stop;
        t3 = this._core$_start;
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t3 !== "number")
          return H.iae(t3);
        this._core$_start = t1 - (t2 - t3);
        this._stop = null;
      }
    }, "call$0", "get$start", 0, 0, null],
    get$elapsedTicks: function() {
      var t1, t2;
      t1 = this._core$_start;
      if (t1 == null)
        return 0;
      t2 = this._stop;
      if (t2 == null) {
        t1 = H.Primitives_numMicroseconds();
        t2 = this._core$_start;
        if (typeof t2 !== "number")
          return H.iae(t2);
        t2 = t1 - t2;
        t1 = t2;
      } else {
        if (typeof t2 !== "number")
          return t2.$sub();
        if (typeof t1 !== "number")
          return H.iae(t1);
        t1 = t2 - t1;
      }
      return t1;
    }
  },
  RuneIterator: {
    "": "Object;string,_core$_position,_nextPosition,_currentCodePoint",
    get$current: function() {
      return this._currentCodePoint;
    },
    moveNext$0: [function() {
      var t1, t2, t3, codeUnit, nextPosition, nextCodeUnit;
      t1 = this._nextPosition;
      this._core$_position = t1;
      t2 = this.string;
      t3 = J.getInterceptor$asx(t2);
      if (t1 === t3.get$length(t2)) {
        this._currentCodePoint = null;
        return false;
      }
      codeUnit = t3.codeUnitAt$1(t2, this._core$_position);
      nextPosition = this._core$_position + 1;
      if ((codeUnit & 64512) === 55296) {
        t1 = t3.get$length(t2);
        if (typeof t1 !== "number")
          return H.iae(t1);
        t1 = nextPosition < t1;
      } else
        t1 = false;
      if (t1) {
        nextCodeUnit = t3.codeUnitAt$1(t2, nextPosition);
        if ((nextCodeUnit & 64512) === 56320) {
          this._nextPosition = nextPosition + 1;
          this._currentCodePoint = 65536 + ((codeUnit & 1023) << 10 >>> 0) + (nextCodeUnit & 1023);
          return true;
        }
      }
      this._nextPosition = nextPosition;
      this._currentCodePoint = codeUnit;
      return true;
    }, "call$0", "get$moveNext", 0, 0, null]
  },
  StringBuffer: {
    "": "Object;_contents<",
    get$length: function(_) {
      return this._contents.length;
    },
    get$isEmpty: function(_) {
      return this._contents.length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._contents.length !== 0;
    },
    write$1: [function(obj) {
      var str = typeof obj === "string" ? obj : H.S(obj);
      this._contents = this._contents + str;
    }, "call$1", "get$write", 2, 0, null, 93],
    writeAll$2: [function(objects, separator) {
      var iterator, str;
      iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return;
      if (separator.length === 0)
        do {
          str = iterator.get$current();
          str = typeof str === "string" ? str : H.S(str);
          this._contents = this._contents + str;
        } while (iterator.moveNext$0());
      else {
        this.write$1(iterator.get$current());
        for (; iterator.moveNext$0();) {
          this._contents = this._contents + separator;
          str = iterator.get$current();
          str = typeof str === "string" ? str : H.S(str);
          this._contents = this._contents + str;
        }
      }
    }, "call$2", "get$writeAll", 2, 2, null, 122, 540, 412],
    clear$0: [function(_) {
      this._contents = "";
    }, "call$0", "get$clear", 0, 0, null],
    toString$0: [function(_) {
      return this._contents;
    }, "call$0", "get$toString", 0, 0, null],
    StringBuffer$1: function($content) {
      if (typeof $content === "string")
        this._contents = $content;
      else
        this.write$1($content);
    },
    static: {StringBuffer$: function($content) {
        var t1 = new P.StringBuffer("");
        t1.StringBuffer$1($content);
        return t1;
      }}
  },
  Symbol: {
    "": "Object;",
    $isSymbol: true
  },
  Type: {
    "": "Object;",
    $isType: true
  },
  Uri: {
    "": "Object;_host,_port,_path,scheme,userInfo,query,fragment,_pathSegments,_queryParameters",
    get$host: function(_) {
      var t1, t2;
      t1 = this._host;
      if (t1 != null && J.startsWith$1$s(t1, "[")) {
        t2 = J.getInterceptor$asx(t1);
        return t2.substring$2(t1, 1, J.$sub$n(t2.get$length(t1), 1));
      }
      return t1;
    },
    get$port: function(_) {
      var t1, t2;
      if (J.$eq(this._port, 0) === true) {
        t1 = this.scheme;
        t2 = J.getInterceptor(t1);
        if (t2.$eq(t1, "http") === true)
          return 80;
        if (t2.$eq(t1, "https") === true)
          return 443;
      }
      return this._port;
    },
    get$path: function(_) {
      return this._path;
    },
    query$1: function($receiver, arg0) {
      return this.query.call$1(arg0);
    },
    get$pathSegments: function() {
      var t1, pathToSplit;
      t1 = this._pathSegments;
      if (t1 == null) {
        t1 = J.get$isEmpty$asx(this._path) !== true && J.codeUnitAt$1$s(this._path, 0) === 47;
        pathToSplit = this._path;
        if (t1)
          pathToSplit = J.substring$1$s(pathToSplit, 1);
        t1 = J.getInterceptor(pathToSplit);
        t1 = t1.$eq(pathToSplit, "") === true ? C.List_empty2 : H.setRuntimeTypeInfo(new H.MappedListIterable(t1.split$1(pathToSplit, "/"), P.Uri_decodeComponent$closure()), [null, null]).toList$1$growable(0, false);
        t1 = H.setRuntimeTypeInfo(new P.UnmodifiableListView(t1), [null]);
        this._pathSegments = t1;
      }
      return t1;
    },
    _makePath$2: [function(path, pathSegments) {
      var t1, result;
      t1 = path == null;
      if (t1 && true)
        return "";
      t1 = !t1;
      if (t1)
        ;
      result = t1 ? P.Uri__normalize(path) : C.JSNull_methods.map$1(pathSegments, new P.Uri__makePath_closure()).join$1(0, "/");
      if (J.$eq(this.get$host(this), "") !== true || J.$eq(this.scheme, "file") === true) {
        t1 = J.getInterceptor$asx(result);
        t1 = t1.get$isNotEmpty(result) && !t1.startsWith$1(result, "/");
      } else
        t1 = false;
      if (t1)
        return "/" + H.S(result);
      return result;
    }, "call$2", "get$_makePath", 4, 0, null, 313, 555],
    _merge$2: [function(base, reference) {
      var t1 = J.getInterceptor(base);
      if (t1.$eq(base, "") === true)
        return "/" + H.S(reference);
      return t1.substring$2(base, 0, J.$add$ns(t1.lastIndexOf$1(base, "/"), 1)) + H.S(reference);
    }, "call$2", "get$_merge", 4, 0, null, 556, 557],
    _hasDotSegments$1: [function(path) {
      var t1 = J.getInterceptor$asx(path);
      if (J.$gt$n(t1.get$length(path), 0) && t1.codeUnitAt$1(path, 0) === 58)
        return true;
      return t1.indexOf$1(path, "/.") !== -1;
    }, "call$1", "get$_hasDotSegments", 2, 0, null, 313],
    _removeDotSegments$1: [function(path) {
      var output, t1, appendSlash, segment, t2;
      if (!this._hasDotSegments$1(path))
        return path;
      output = [];
      for (t1 = J.split$1$s(path, "/"), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]), appendSlash = false; t1.moveNext$0();) {
        segment = t1._current;
        if (J.$eq(segment, "..") === true) {
          t2 = output.length;
          if (t2 !== 0)
            if (t2 === 1) {
              if (0 >= t2)
                return H.ioore(output, 0);
              t2 = J.$eq(output[0], "") !== true;
            } else
              t2 = true;
          else
            t2 = false;
          if (t2) {
            if (0 >= output.length)
              return H.ioore(output, 0);
            output.pop();
          }
          appendSlash = true;
        } else if ("." === segment)
          appendSlash = true;
        else {
          output.push(segment);
          appendSlash = false;
        }
      }
      if (appendSlash)
        output.push("");
      return C.JSArray_methods.join$1(output, "/");
    }, "call$1", "get$_removeDotSegments", 2, 0, null, 313],
    resolveUri$1: [function(reference) {
      var targetScheme, targetUserInfo, targetHost, targetPort, targetPath, targetQuery, t1, t2;
      targetScheme = reference.scheme;
      if (J.$eq(targetScheme, "") !== true) {
        targetUserInfo = reference.userInfo;
        targetHost = reference.get$host(reference);
        targetPort = reference.get$port(reference);
        targetPath = this._removeDotSegments$1(reference._path);
        targetQuery = reference.query;
      } else {
        if (J.$eq(reference.get$host(reference), "") !== true) {
          targetUserInfo = reference.userInfo;
          targetHost = reference.get$host(reference);
          targetPort = reference.get$port(reference);
          targetPath = this._removeDotSegments$1(reference._path);
          targetQuery = reference.query;
        } else {
          if (J.$eq(reference._path, "") === true) {
            targetPath = this._path;
            targetQuery = reference.query;
            targetQuery = J.$eq(targetQuery, "") !== true ? targetQuery : this.query;
          } else {
            t1 = J.startsWith$1$s(reference._path, "/");
            t2 = reference._path;
            targetPath = t1 ? this._removeDotSegments$1(t2) : this._removeDotSegments$1(this._merge$2(this._path, t2));
            targetQuery = reference.query;
          }
          targetUserInfo = this.userInfo;
          targetHost = this.get$host(this);
          targetPort = this.get$port(this);
        }
        targetScheme = this.scheme;
      }
      return P.Uri$(reference.fragment, targetHost, targetPath, null, targetPort, targetQuery, null, targetScheme, targetUserInfo);
    }, "call$1", "get$resolveUri", 2, 0, null, 557],
    toFilePath$1$windows: [function(windows) {
      var t1, t2, result;
      t1 = this.scheme;
      t2 = J.getInterceptor(t1);
      if (t2.$eq(t1, "") !== true && t2.$eq(t1, "file") !== true)
        throw H.wrapException(P.UnsupportedError$("Cannot extract a file path from a " + H.S(t1) + " URI"));
      if (t2.$eq(t1, "") !== true && t2.$eq(t1, "file") !== true)
        throw H.wrapException(P.UnsupportedError$("Cannot extract a file path from a " + H.S(t1) + " URI"));
      if (J.$eq(this.query, "") !== true)
        throw H.wrapException(P.UnsupportedError$("Cannot extract a file path from a URI with a query component"));
      if (J.$eq(this.fragment, "") !== true)
        throw H.wrapException(P.UnsupportedError$("Cannot extract a file path from a URI with a fragment component"));
      if (J.$eq(this.get$host(this), "") !== true)
        H.throwExpression(P.UnsupportedError$("Cannot extract a non-Windows file path from a file URI with an authority"));
      P.Uri__checkNonWindowsPathReservedCharacters(this.get$pathSegments(), false);
      result = P.StringBuffer$("");
      if (this.get$_isPathAbsolute())
        result.write$1("/");
      result.writeAll$2(this.get$pathSegments(), "/");
      t1 = result._contents;
      return t1;
    }, function() {
      return this.toFilePath$1$windows(null);
    }, "toFilePath$0", "call$1$windows", null, "get$toFilePath", 0, 3, null, 77, 558],
    get$_isPathAbsolute: function() {
      var t1 = this._path;
      if (t1 == null || J.get$isEmpty$asx(t1) === true)
        return false;
      return J.startsWith$1$s(this._path, "/");
    },
    toString$0: [function(_) {
      var sb, t1;
      sb = P.StringBuffer$("");
      t1 = this.scheme;
      if ("" !== t1) {
        sb.write$1(t1);
        sb.write$1(":");
      }
      if (J.$eq(this.get$host(this), "") !== true || J.$eq(t1, "file") === true) {
        sb.write$1("//");
        t1 = this.userInfo;
        if ("" !== t1) {
          sb.write$1(t1);
          sb.write$1("@");
        }
        t1 = this._host;
        sb.write$1(t1 == null ? "null" : t1);
        if (J.$eq(this._port, 0) !== true) {
          sb.write$1(":");
          sb.write$1(J.toString$0(this._port));
        }
      }
      sb.write$1(this._path);
      t1 = this.query;
      if ("" !== t1) {
        sb.write$1("?");
        sb.write$1(t1);
      }
      t1 = this.fragment;
      if ("" !== t1) {
        sb.write$1("#");
        sb.write$1(t1);
      }
      return sb._contents;
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor$x(other);
      if (typeof other !== "object" || other === null || !t1.$isUri)
        return false;
      return J.$eq(this.scheme, other.scheme) === true && J.$eq(this.userInfo, other.userInfo) === true && J.$eq(this.get$host(this), t1.get$host(other)) === true && J.$eq(this.get$port(this), t1.get$port(other)) === true && J.$eq(this._path, other._path) === true && J.$eq(this.query, other.query) === true && J.$eq(this.fragment, other.fragment) === true;
    }, "call$1", "get$==", 2, 0, null, 104],
    get$hashCode: function(_) {
      var t1 = new P.Uri_hashCode_combine();
      return t1.call$2(this.scheme, t1.call$2(this.userInfo, t1.call$2(this.get$host(this), t1.call$2(this.get$port(this), t1.call$2(this._path, t1.call$2(this.query, t1.call$2(this.fragment, 1)))))));
    },
    Uri$9$fragment$host$path$pathSegments$port$query$queryParameters$scheme$userInfo: function(fragment, host, path, pathSegments, port, query, queryParameters, scheme, userInfo) {
      var t1 = J.getInterceptor(scheme);
      if (t1.$eq(scheme, "http") === true && J.$eq(port, 80) === true)
        this._port = 0;
      else if (t1.$eq(scheme, "https") === true && J.$eq(port, 443) === true)
        this._port = 0;
      else
        this._port = port;
      this._path = this._makePath$2(path, pathSegments);
    },
    $isUri: true,
    static: {"": "Uri__splitRe,Uri__COMPONENT_SCHEME,Uri__COMPONENT_USER_INFO,Uri__COMPONENT_HOST,Uri__COMPONENT_HOST_IPV6,Uri__COMPONENT_PORT,Uri__COMPONENT_PATH,Uri__COMPONENT_QUERY_DATA,Uri__COMPONENT_FRAGMENT,Uri__SPACE,Uri__DOUBLE_QUOTE,Uri__PERCENT,Uri__ASTERISK,Uri__PLUS,Uri__SLASH,Uri__ZERO,Uri__NINE,Uri__COLON,Uri__LESS,Uri__GREATER,Uri__QUESTION,Uri__AT_SIGN,Uri__UPPER_CASE_A,Uri__UPPER_CASE_F,Uri__UPPER_CASE_Z,Uri__LEFT_BRACKET,Uri__BACKSLASH,Uri__RIGHT_BRACKET,Uri__LOWER_CASE_A,Uri__LOWER_CASE_F,Uri__LOWER_CASE_Z,Uri__BAR,Uri__unreservedTable,Uri__unreserved2396Table,Uri__encodeFullTable,Uri__schemeTable,Uri__schemeLowerTable,Uri__subDelimitersTable,Uri__pathCharTable,Uri__queryCharTable", Uri$_fromMatch: function(m) {
        var t1, t2, t3, t4, t5, t6, t7, t8;
        t1 = m._match;
        if (1 >= t1.length)
          return H.ioore(t1, 1);
        t2 = t1[1];
        t2 = P.Uri__makeScheme(t2 != null ? t2 : "");
        t3 = t1.length;
        if (2 >= t3)
          return H.ioore(t1, 2);
        t4 = t1[2];
        t4 = t4 != null ? t4 : "";
        if (3 >= t3)
          return H.ioore(t1, 3);
        t5 = t1[3];
        if (4 >= t3)
          return H.ioore(t1, 4);
        t5 = P.Uri__eitherOf(t5, t1[4]);
        if (5 >= t3)
          return H.ioore(t1, 5);
        t3 = P.Uri__parseIntOrZero(t1[5]);
        t6 = t1.length;
        if (6 >= t6)
          return H.ioore(t1, 6);
        t7 = t1[6];
        t7 = t7 != null ? t7 : "";
        if (7 >= t6)
          return H.ioore(t1, 7);
        t8 = t1[7];
        t8 = t8 != null ? t8 : "";
        if (8 >= t6)
          return H.ioore(t1, 8);
        t1 = t1[8];
        t1 = t1 != null ? t1 : "";
        t6 = P.Uri__makeScheme(t2);
        t6 = new P.Uri(P.Uri__makeHost(t5), null, null, t6, t4, P.Uri__makeQuery(t8, null), P.Uri__makeFragment(t1), null, null);
        t6.Uri$9$fragment$host$path$pathSegments$port$query$queryParameters$scheme$userInfo(t1, t5, t7, null, t3, t8, null, t2, t4);
        return t6;
      }, Uri$: function(fragment, host, path, pathSegments, port, query, queryParameters, scheme, userInfo) {
        var t1 = P.Uri__makeScheme(scheme);
        t1 = new P.Uri(P.Uri__makeHost(host), null, null, t1, userInfo, P.Uri__makeQuery(query, queryParameters), P.Uri__makeFragment(fragment), null, null);
        t1.Uri$9$fragment$host$path$pathSegments$port$query$queryParameters$scheme$userInfo(fragment, host, path, pathSegments, port, query, queryParameters, scheme, userInfo);
        return t1;
      }, Uri_base: function() {
        var uri = H.Primitives_currentUri();
        if (uri != null)
          return P.Uri$_fromMatch($.get$Uri__splitRe().firstMatch$1(uri));
        throw H.wrapException(P.UnsupportedError$("'Uri.base' is not supported"));
      }, Uri__checkNonWindowsPathReservedCharacters: [function(segments, argumentError) {
        segments.forEach$1(segments, new P.Uri__checkNonWindowsPathReservedCharacters_closure(argumentError));
      }, "call$2", "Uri__checkNonWindowsPathReservedCharacters$closure", 4, 0, null, 235, 236], Uri__makeHost: [function(host) {
        var t1, i, t2;
        if (host == null || J.get$isEmpty$asx(host) === true)
          return host;
        t1 = J.getInterceptor$s(host);
        if (t1.codeUnitAt$1(host, 0) === 91) {
          if (t1.codeUnitAt$1(host, J.$sub$n(t1.get$length(host), 1)) !== 93)
            throw H.wrapException(P.FormatException$("Missing end `]` to match `[` in host"));
          P.Uri_parseIPv6Address(t1.substring$2(host, 1, J.$sub$n(t1.get$length(host), 1)));
          return host;
        }
        i = 0;
        while (true) {
          t2 = t1.get$length(host);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (!(i < t2))
            break;
          if (t1.codeUnitAt$1(host, i) === 58) {
            P.Uri_parseIPv6Address(host);
            return "[" + H.S(host) + "]";
          }
          ++i;
        }
        return host;
      }, "call$1", "Uri__makeHost$closure", 2, 0, null, 237], Uri__makeScheme: [function(scheme) {
        var t1, t2, t3, $length, allLowercase, i, codeUnit, t4;
        t1 = new P.Uri__makeScheme_isSchemeLowerCharacter();
        t2 = new P.Uri__makeScheme_isSchemeCharacter();
        if (scheme == null)
          return "";
        t3 = J.getInterceptor$asx(scheme);
        $length = t3.get$length(scheme);
        if (typeof $length !== "number")
          return H.iae($length);
        allLowercase = true;
        i = 0;
        for (; i < $length; ++i) {
          codeUnit = t3.codeUnitAt$1(scheme, i);
          if (i === 0) {
            if (!(codeUnit >= 97 && codeUnit <= 122))
              t4 = codeUnit >= 65 && codeUnit <= 90;
            else
              t4 = true;
            t4 = !t4;
          } else
            t4 = false;
          if (t4)
            throw H.wrapException(new P.ArgumentError("Illegal scheme: " + H.S(scheme)));
          if (t1.call$1(codeUnit) !== true) {
            if (t2.call$1(codeUnit) === true)
              ;
            else
              throw H.wrapException(new P.ArgumentError("Illegal scheme: " + H.S(scheme)));
            allLowercase = false;
          }
        }
        return allLowercase ? scheme : t3.toLowerCase$0(scheme);
      }, "call$1", "Uri__makeScheme$closure", 2, 0, null, 238], Uri__makeQuery: [function(query, queryParameters) {
        var t1, t2, result;
        t1 = {};
        t2 = query == null;
        if (t2 && true)
          return "";
        t2 = !t2;
        if (t2)
          ;
        if (t2)
          return P.Uri__normalize(query);
        result = P.StringBuffer$("");
        t1.first_0 = true;
        C.JSNull_methods.forEach$1(queryParameters, new P.Uri__makeQuery_closure(t1, result));
        return result._contents;
      }, "call$2", "Uri__makeQuery$closure", 4, 0, null, 239, 240], Uri__makeFragment: [function(fragment) {
        if (fragment == null)
          return "";
        return P.Uri__normalize(fragment);
      }, "call$1", "Uri__makeFragment$closure", 2, 0, null, 241], Uri__normalize: [function(component) {
        var t1, t2, t3, t4, t5, t6, $length, t7, t8, codeUnit1, codeUnit2, decodedCodeUnit, index, t9, charCodes;
        t1 = {};
        t2 = new P.Uri__normalize_isNormalizedHexDigit();
        t3 = new P.Uri__normalize_isUnreserved();
        t4 = new P.Uri__normalize_normalizeHexDigit(component, t2, new P.Uri__normalize_isLowerCaseHexDigit());
        t5 = new P.Uri__normalize_decodeHexDigitPair(component);
        t1.result_0 = null;
        t6 = J.getInterceptor$asx(component);
        $length = t6.get$length(component);
        t1.index_1 = 0;
        t1.prevIndex_2 = 0;
        t7 = new P.Uri__normalize_fillResult(t1, component);
        if (typeof $length !== "number")
          return H.iae($length);
        t8 = 0;
        for (; t8 < $length;)
          if (t6.codeUnitAt$1(component, t8) === 37) {
            t8 = t1.index_1;
            if ($length < t8 + 2)
              throw H.wrapException(new P.ArgumentError("Invalid percent-encoding in URI component: " + H.S(component)));
            codeUnit1 = t6.codeUnitAt$1(component, t8 + 1);
            codeUnit2 = t6.codeUnitAt$1(component, t1.index_1 + 2);
            decodedCodeUnit = t5.call$1(t1.index_1 + 1);
            if (t2.call$1(codeUnit1) === true && t2.call$1(codeUnit2) === true && t3.call$1(decodedCodeUnit) !== true) {
              index = t1.index_1 + 3;
              t1.index_1 = index;
              t8 = index;
            } else {
              t7.call$0();
              t8 = t3.call$1(decodedCodeUnit);
              t9 = t1.result_0;
              if (t8 === true) {
                t9.toString;
                charCodes = P.List_List$filled(1, decodedCodeUnit, J.JSInt);
                t8 = H.Primitives_stringFromCharCodes(charCodes);
                t9._contents = t9._contents + t8;
              } else {
                t9.toString;
                t9._contents = t9._contents + "%";
                t8 = t4.call$1(t1.index_1 + 1);
                t9.toString;
                charCodes = P.List_List$filled(1, t8, J.JSInt);
                t8 = H.Primitives_stringFromCharCodes(charCodes);
                t9._contents = t9._contents + t8;
                t8 = t1.result_0;
                t9 = t4.call$1(t1.index_1 + 2);
                t8.toString;
                charCodes = P.List_List$filled(1, t9, J.JSInt);
                t9 = H.Primitives_stringFromCharCodes(charCodes);
                t8._contents = t8._contents + t9;
              }
              index = t1.index_1 + 3;
              t1.index_1 = index;
              t1.prevIndex_2 = index;
              t8 = index;
            }
          } else {
            index = t1.index_1 + 1;
            t1.index_1 = index;
            t8 = index;
          }
        if (t1.result_0 != null && t1.prevIndex_2 !== t8)
          t7.call$0();
        t1 = t1.result_0;
        if (t1 == null)
          return component;
        return J.toString$0(t1);
      }, "call$1", "Uri__normalize$closure", 2, 0, null, 242], Uri__parseIntOrZero: [function(val) {
        if (val != null && J.$eq(val, "") !== true)
          return H.Primitives_parseInt(val, null, null);
        else
          return 0;
      }, "call$1", "Uri__parseIntOrZero$closure", 2, 0, null, 243], Uri__eitherOf: [function(val1, val2) {
        if (val1 != null)
          return val1;
        if (val2 != null)
          return val2;
        return "";
      }, "call$2", "Uri__eitherOf$closure", 4, 0, null, 244, 245], Uri_decodeComponent: [function(encodedComponent) {
        return P.Uri__uriDecode(encodedComponent, C.Utf8Codec_false, false);
      }, "call$1", "Uri_decodeComponent$closure", 2, 0, 246, 247], Uri_parseIPv4Address: [function(host) {
        var t1, bytes;
        t1 = new P.Uri_parseIPv4Address_error();
        bytes = host.split(".");
        if (bytes.length !== 4)
          t1.call$1("IPv4 address should contain exactly 4 parts");
        return H.setRuntimeTypeInfo(new H.MappedListIterable(bytes, new P.Uri_parseIPv4Address_closure(t1)), [null, null]).toList$0(0);
      }, "call$1", "Uri_parseIPv4Address$closure", 2, 0, null, 237], Uri_parseIPv6Address: [function(host) {
        var error, parseHex, parts, partStart, last, wildcardSeen, i, t1, atEnd, isLastWildcard, exception, t2;
        error = new P.Uri_parseIPv6Address_error();
        parseHex = new P.Uri_parseIPv6Address_parseHex(host, error);
        if (J.$lt$n(J.get$length$asx(host), 2))
          error.call$1("address is too short");
        parts = [];
        partStart = 0;
        wildcardSeen = false;
        i = 0;
        while (true) {
          t1 = J.get$length$asx(host);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          if (J.codeUnitAt$1$s(host, i) === 58) {
            if (i === 0) {
              ++i;
              if (J.codeUnitAt$1$s(host, i) !== 58)
                error.call$1("invalid start colon.");
              partStart = i;
            }
            if (i === partStart) {
              if (wildcardSeen)
                error.call$1("only one wildcard `::` is allowed");
              J.add$1$ax(parts, -1);
              wildcardSeen = true;
            } else
              J.add$1$ax(parts, parseHex.call$2(partStart, i));
            partStart = i + 1;
          }
          ++i;
        }
        if (J.get$length$asx(parts) === 0)
          error.call$1("too few parts");
        atEnd = J.$eq(partStart, J.get$length$asx(host));
        isLastWildcard = J.$eq(J.get$last$ax(parts), -1);
        if (atEnd && isLastWildcard !== true)
          error.call$1("expected a part after last `:`");
        if (!atEnd)
          try {
            J.add$1$ax(parts, parseHex.call$2(partStart, J.get$length$asx(host)));
          } catch (exception) {
            H.unwrapException(exception);
            try {
              last = P.Uri_parseIPv4Address(J.substring$1$s(host, partStart));
              t1 = J.$shl$n(J.$index$asx(last, 0), 8);
              t2 = J.$index$asx(last, 1);
              if (typeof t2 !== "number")
                return H.iae(t2);
              J.add$1$ax(parts, (t1 | t2) >>> 0);
              t2 = J.$shl$n(J.$index$asx(last, 2), 8);
              t1 = J.$index$asx(last, 3);
              if (typeof t1 !== "number")
                return H.iae(t1);
              J.add$1$ax(parts, (t2 | t1) >>> 0);
            } catch (exception) {
              H.unwrapException(exception);
              error.call$1("invalid end of IPv6 address.");
            }

          }

        if (wildcardSeen) {
          if (J.get$length$asx(parts) > 7)
            error.call$1("an address with a wildcard must have less than 7 parts");
        } else if (J.get$length$asx(parts) !== 8)
          error.call$1("an address without a wildcard must contain exactly 8 parts");
        t1 = new H.ExpandIterable(parts, new P.Uri_parseIPv6Address_closure(parts));
        t1.$builtinTypeInfo = [null, null];
        return P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "IterableBase", 0));
      }, "call$1", "Uri_parseIPv6Address$closure", 2, 0, null, 237], Uri__uriEncode: [function(canonicalTable, text, encoding, spaceToPlus) {
        var t1, result, bytes, i, $byte, t2, t3, charCodes;
        t1 = new P.Uri__uriEncode_byteToHex();
        result = P.StringBuffer$("");
        bytes = encoding.get$encoder().convert$1(text);
        for (i = 0; i < bytes.length; ++i) {
          $byte = bytes[i];
          t2 = J.getInterceptor$n($byte);
          if (t2.$lt($byte, 128)) {
            t3 = t2.$shr($byte, 4);
            if (t3 >= 8)
              return H.ioore(canonicalTable, t3);
            t3 = (canonicalTable[t3] & C.JSInt_methods._shlPositive$1(1, t2.$and($byte, 15))) !== 0;
          } else
            t3 = false;
          if (t3) {
            charCodes = P.List_List$filled(1, $byte, J.JSInt);
            t2 = H.Primitives_stringFromCharCodes(charCodes);
            result._contents = result._contents + t2;
          } else if (spaceToPlus && t2.$eq($byte, 32) === true) {
            charCodes = P.List_List$filled(1, 43, J.JSInt);
            t2 = H.Primitives_stringFromCharCodes(charCodes);
            result._contents = result._contents + t2;
          } else {
            charCodes = P.List_List$filled(1, 37, J.JSInt);
            t2 = H.Primitives_stringFromCharCodes(charCodes);
            result._contents = result._contents + t2;
            t1.call$2($byte, result);
          }
        }
        return result._contents;
      }, "call$4$encoding$spaceToPlus", "Uri__uriEncode$closure", 4, 5, null, 248, 112, 249, 250, 251, 252], Uri__hexCharPairToByte: [function(s, pos) {
        var t1, $byte, i, charCode;
        for (t1 = J.getInterceptor$s(s), $byte = 0, i = 0; i < 2; ++i) {
          charCode = t1.codeUnitAt$1(s, pos + i);
          if (48 <= charCode && charCode <= 57)
            $byte = $byte * 16 + charCode - 48;
          else {
            charCode |= 32;
            if (97 <= charCode && charCode <= 102)
              $byte = $byte * 16 + charCode - 87;
            else
              throw H.wrapException(new P.ArgumentError("Invalid URL encoding"));
          }
        }
        return $byte;
      }, "call$2", "Uri__hexCharPairToByte$closure", 4, 0, null, 86, 253], Uri__uriDecode: [function(text, encoding, plusToSpace) {
        var t1, simple, i, t2, codeUnit, bytes, allowMalformed;
        t1 = J.getInterceptor$asx(text);
        simple = true;
        i = 0;
        while (true) {
          t2 = t1.get$length(text);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (!(i < t2 && simple))
            break;
          codeUnit = t1.codeUnitAt$1(text, i);
          simple = codeUnit !== 37 && codeUnit !== 43;
          ++i;
        }
        if (simple)
          if (encoding === C.Utf8Codec_false || false)
            return text;
          else
            bytes = t1.get$codeUnits(text);
        else {
          bytes = [];
          i = 0;
          while (true) {
            t2 = t1.get$length(text);
            if (typeof t2 !== "number")
              return H.iae(t2);
            if (!(i < t2))
              break;
            codeUnit = t1.codeUnitAt$1(text, i);
            if (codeUnit > 127)
              throw H.wrapException(new P.ArgumentError("Illegal percent encoding in URI"));
            if (codeUnit === 37) {
              t2 = t1.get$length(text);
              if (typeof t2 !== "number")
                return H.iae(t2);
              if (i + 3 > t2)
                throw H.wrapException(new P.ArgumentError("Truncated URI"));
              bytes.push(P.Uri__hexCharPairToByte(text, i + 1));
              i += 2;
            } else if (plusToSpace && codeUnit === 43)
              bytes.push(32);
            else
              bytes.push(codeUnit);
            ++i;
          }
        }
        allowMalformed = encoding._allowMalformed;
        return new P.Utf8Decoder(allowMalformed).convert$1(bytes);
      }, "call$3$encoding$plusToSpace", "Uri__uriDecode$closure", 2, 5, null, 248, 112, 250, 251, 254]}
  },
  Uri__checkNonWindowsPathReservedCharacters_closure: {
    "": "Closure:271;argumentError_0",
    call$1: [function(segment) {
      if (J.contains$1$asx(segment, "/") === true)
        if (this.argumentError_0)
          throw H.wrapException(new P.ArgumentError("Illegal path character " + H.S(segment)));
        else
          throw H.wrapException(P.UnsupportedError$("Illegal path character " + H.S(segment)));
    }, "call$1", null, 2, 0, null, 559, "call"],
    $isFunction: true
  },
  Uri__makeScheme_isSchemeLowerCharacter: {
    "": "Closure:561;",
    call$1: [function(ch) {
      var t1;
      if (ch < 128) {
        t1 = ch >>> 4;
        if (t1 >= 8)
          return H.ioore(C.List_6Pr, t1);
        t1 = (C.List_6Pr[t1] & C.JSInt_methods._shlPositive$1(1, ch & 15)) !== 0;
      } else
        t1 = false;
      return t1;
    }, "call$1", null, 2, 0, null, 560, "call"],
    $isFunction: true
  },
  Uri__makeScheme_isSchemeCharacter: {
    "": "Closure:561;",
    call$1: [function(ch) {
      var t1;
      if (ch < 128) {
        t1 = ch >>> 4;
        if (t1 >= 8)
          return H.ioore(C.List_JYB, t1);
        t1 = (C.List_JYB[t1] & C.JSInt_methods._shlPositive$1(1, ch & 15)) !== 0;
      } else
        t1 = false;
      return t1;
    }, "call$1", null, 2, 0, null, 560, "call"],
    $isFunction: true
  },
  Uri__makePath_closure: {
    "": "Closure:271;",
    call$1: [function(s) {
      return P.Uri__uriEncode(C.List_qg4, s, C.Utf8Codec_false, false);
    }, "call$1", null, 2, 0, null, 86, "call"],
    $isFunction: true
  },
  Uri__makeQuery_closure: {
    "": "Closure:426;box_0,result_1",
    call$2: [function(key, value) {
      var t1 = this.box_0;
      if (!t1.first_0)
        this.result_1.write$1("&");
      t1.first_0 = false;
      t1 = this.result_1;
      t1.write$1(P.Uri__uriEncode(C.List_nxB, key, C.Utf8Codec_false, true));
      value.get$isEmpty(value);
      t1.write$1("=");
      t1.write$1(P.Uri__uriEncode(C.List_nxB, value, C.Utf8Codec_false, true));
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true
  },
  Uri__normalize_isNormalizedHexDigit: {
    "": "Closure:561;",
    call$1: [function(digit) {
      var t1;
      if (!(48 <= digit && digit <= 57))
        t1 = 65 <= digit && digit <= 70;
      else
        t1 = true;
      return t1;
    }, "call$1", null, 2, 0, null, 562, "call"],
    $isFunction: true
  },
  Uri__normalize_isLowerCaseHexDigit: {
    "": "Closure:561;",
    call$1: [function(digit) {
      return 97 <= digit && digit <= 102;
    }, "call$1", null, 2, 0, null, 562, "call"],
    $isFunction: true
  },
  Uri__normalize_isUnreserved: {
    "": "Closure:561;",
    call$1: [function(ch) {
      var t1;
      if (ch < 128) {
        t1 = C.JSInt_methods._shrOtherPositive$1(ch, 4);
        if (t1 >= 8)
          return H.ioore(C.List_nxB, t1);
        t1 = (C.List_nxB[t1] & C.JSInt_methods._shlPositive$1(1, ch & 15)) !== 0;
      } else
        t1 = false;
      return t1;
    }, "call$1", null, 2, 0, null, 560, "call"],
    $isFunction: true
  },
  Uri__normalize_normalizeHexDigit: {
    "": "Closure:428;component_1,isNormalizedHexDigit_2,isLowerCaseHexDigit_3",
    call$1: [function(index) {
      var t1, codeUnit;
      t1 = this.component_1;
      codeUnit = J.codeUnitAt$1$s(t1, index);
      if (this.isLowerCaseHexDigit_3.call$1(codeUnit) === true)
        return codeUnit - 32;
      else if (this.isNormalizedHexDigit_2.call$1(codeUnit) !== true)
        throw H.wrapException(new P.ArgumentError("Invalid URI component: " + H.S(t1)));
      else
        return codeUnit;
    }, "call$1", null, 2, 0, null, 47, "call"],
    $isFunction: true
  },
  Uri__normalize_decodeHexDigitPair: {
    "": "Closure:428;component_4",
    call$1: [function(index) {
      var t1, t2, $byte, i, codeUnit;
      for (t1 = this.component_4, t2 = J.getInterceptor$s(t1), $byte = 0, i = 0; i < 2; ++i) {
        codeUnit = t2.codeUnitAt$1(t1, index + i);
        if (48 <= codeUnit && codeUnit <= 57)
          $byte = $byte * 16 + codeUnit - 48;
        else {
          codeUnit |= 32;
          if (97 <= codeUnit && codeUnit <= 102)
            $byte = $byte * 16 + codeUnit - 97 + 10;
          else
            throw H.wrapException(new P.ArgumentError("Invalid percent-encoding in URI component: " + H.S(t1)));
        }
      }
      return $byte;
    }, "call$1", null, 2, 0, null, 47, "call"],
    $isFunction: true
  },
  Uri__normalize_fillResult: {
    "": "Closure:107;box_0,component_5",
    call$0: [function() {
      var t1, t2, t3, t4, t5;
      t1 = this.box_0;
      t2 = t1.result_0;
      t3 = t1.prevIndex_2;
      t4 = this.component_5;
      t5 = t1.index_1;
      if (t2 == null)
        t1.result_0 = P.StringBuffer$(J.substring$2$s(t4, t3, t5));
      else
        t2.write$1(J.substring$2$s(t4, t3, t5));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Uri_hashCode_combine: {
    "": "Closure:564;",
    call$2: [function(part, current) {
      var t1 = J.get$hashCode$(part);
      if (typeof t1 !== "number")
        return H.iae(t1);
      return current * 31 + t1 & 1073741823;
    }, "call$2", null, 4, 0, null, 563, 292, "call"],
    $isFunction: true
  },
  Uri_parseIPv4Address_error: {
    "": "Closure:218;",
    call$1: [function(msg) {
      throw H.wrapException(P.FormatException$("Illegal IPv4 address, " + msg));
    }, "call$1", null, 2, 0, null, 19, "call"],
    $isFunction: true
  },
  Uri_parseIPv4Address_closure: {
    "": "Closure:271;error_0",
    call$1: [function(byteString) {
      var $byte, t1;
      $byte = H.Primitives_parseInt(byteString, null, null);
      t1 = J.getInterceptor$n($byte);
      if (t1.$lt($byte, 0) || t1.$gt($byte, 255))
        this.error_0.call$1("each part must be in the range of `0..255`");
      return $byte;
    }, "call$1", null, 2, 0, null, 565, "call"],
    $isFunction: true
  },
  Uri_parseIPv6Address_error: {
    "": "Closure:218;",
    call$1: [function(msg) {
      throw H.wrapException(P.FormatException$("Illegal IPv6 address, " + msg));
    }, "call$1", null, 2, 0, null, 19, "call"],
    $isFunction: true
  },
  Uri_parseIPv6Address_parseHex: {
    "": "Closure:566;host_0,error_1",
    call$2: [function(start, end) {
      var value, t1;
      if (J.$gt$n(J.$sub$n(end, start), 4))
        this.error_1.call$1("an IPv6 part can only contain a maximum of 4 hex digits");
      value = H.Primitives_parseInt(J.substring$2$s(this.host_0, start, end), 16, null);
      t1 = J.getInterceptor$n(value);
      if (t1.$lt(value, 0) || t1.$gt(value, 65535))
        this.error_1.call$1("each part must be in the range of `0x0..0xFFFF`");
      return value;
    }, "call$2", null, 4, 0, null, 161, 162, "call"],
    $isFunction: true
  },
  Uri_parseIPv6Address_closure: {
    "": "Closure:271;parts_2",
    call$1: [function(value) {
      var t1 = J.getInterceptor(value);
      if (t1.$eq(value, -1) === true)
        return P.List_List$filled((9 - this.parts_2.length) * 2, 0, null);
      else
        return [t1.$shr(value, 8) & 255, t1.$and(value, 255)];
    }, "call$1", null, 2, 0, null, 23, "call"],
    $isFunction: true
  },
  Uri__uriEncode_byteToHex: {
    "": "Closure:426;",
    call$2: [function($byte, buffer) {
      var t1 = J.getInterceptor$n($byte);
      buffer.write$1(P.String_String$fromCharCode(C.JSString_methods.codeUnitAt$1("0123456789ABCDEF", t1.$shr($byte, 4))));
      buffer.write$1(P.String_String$fromCharCode(C.JSString_methods.codeUnitAt$1("0123456789ABCDEF", t1.$and($byte, 15))));
    }, "call$2", null, 4, 0, null, 567, 568, "call"],
    $isFunction: true
  }
}],
["dart.dom.html", "dart:html", , W, {
  "": "",
  AnchorElement_AnchorElement: function(href) {
    var e = document.createElement("a", null);
    return e;
  },
  CustomEvent_CustomEvent: function(type, canBubble, cancelable, detail) {
    var e, t1, t2, exception;
    e = document.createEvent("CustomEvent");
    J.set$_dartDetail$x(e, detail);
    t1 = detail;
    t2 = J.getInterceptor(t1);
    if (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t2.$isList) {
      t1 = detail;
      t2 = J.getInterceptor(t1);
      if (typeof t1 !== "object" || t1 === null || !t2.$isMap) {
        t1 = detail;
        if (typeof t1 !== "string") {
          t1 = detail;
          t1 = typeof t1 === "number";
        } else
          t1 = true;
      } else
        t1 = true;
    } else
      t1 = true;
    if (t1)
      try {
        detail = P._convertDartToNative_PrepareForStructuredClone(detail);
        J._initCustomEvent$4$x(e, type, canBubble, cancelable, detail);
      } catch (exception) {
        H.unwrapException(exception);
        J._initCustomEvent$4$x(e, type, canBubble, cancelable, null);
      }

    else
      J._initCustomEvent$4$x(e, type, canBubble, cancelable, null);
    return e;
  },
  Element_Element$html: function(html, treeSanitizer, validator) {
    var fragment, t1;
    fragment = J.createFragment$3$treeSanitizer$validator$x(document.body, html, treeSanitizer, validator);
    fragment.toString;
    t1 = new W._ChildNodeListLazy(fragment);
    t1 = t1.where$1(t1, new W.Element_Element$html_closure());
    return t1.get$single(t1);
  },
  Element__determineTransitionEventType: [function(e) {
    if (P.Device_isWebKit() === true)
      return "webkitTransitionEnd";
    else if (P.Device_isOpera() === true)
      return "oTransitionEnd";
    return "transitionend";
  }, "call$1", "Element__determineTransitionEventType$closure", 2, 0, 255, 18],
  _ElementFactoryProvider_createElement_tag: [function(tag, typeExtension) {
    if (typeExtension != null)
      return document.createElement(tag, typeExtension);
    return document.createElement(tag);
  }, "call$2", "_ElementFactoryProvider_createElement_tag$closure", 4, 0, null, 94, 256],
  HttpRequest_getString: [function(url, onProgress, withCredentials) {
    return W.HttpRequest_request(url, null, null, onProgress, null, null, null, withCredentials).then$1(new W.HttpRequest_getString_closure());
  }, "call$3$onProgress$withCredentials", "HttpRequest_getString$closure", 2, 5, null, 77, 77, 257, 258, 259],
  HttpRequest_request: [function(url, method, mimeType, onProgress, requestHeaders, responseType, sendData, withCredentials) {
    var t1, completer, xhr;
    t1 = W.HttpRequest;
    completer = H.setRuntimeTypeInfo(new P._AsyncCompleter(P._Future$(t1)), [t1]);
    xhr = new XMLHttpRequest();
    C.HttpRequest_methods.open$3$async(xhr, "GET", url, true);
    t1 = C.EventStreamProvider_load.forTarget$1(xhr);
    H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(new W.HttpRequest_request_closure(completer, xhr)), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
    t1 = C.EventStreamProvider_error.forTarget$1(xhr);
    H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(completer.get$completeError()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
    xhr.send();
    return completer.future;
  }, "call$8$method$mimeType$onProgress$requestHeaders$responseType$sendData$withCredentials", "HttpRequest_request$closure", 2, 15, null, 77, 77, 77, 77, 77, 77, 77, 257, 260, 261, 258, 262, 263, 264, 259],
  InputElement_InputElement: function(type) {
    var e, exception;
    e = document.createElement("input", null);
    if (type != null)
      try {
        J.set$type$x(e, type);
      } catch (exception) {
        H.unwrapException(exception);
      }

    return e;
  },
  MutationObserver_MutationObserver: function(callback) {
    return new (window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver)(H.convertDartClosureToJS(W._wrapBinaryZone(callback), 2));
  },
  Window__isDartLocation: [function(thing) {
    var t1, t2, exception;
    try {
      t1 = thing;
      t2 = J.getInterceptor(t1);
      return typeof t1 === "object" && t1 !== null && !!t2.$isLocation;
    } catch (exception) {
      H.unwrapException(exception);
      return false;
    }

  }, "call$1", "Window__isDartLocation$closure", 2, 0, null, 265],
  _JenkinsSmiHash_combine: [function(hash, value) {
    hash = 536870911 & hash + value;
    hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
    return hash ^ hash >>> 6;
  }, "call$2", "_JenkinsSmiHash_combine$closure", 4, 0, null, 266, 23],
  _convertNativeToDart_Window: [function(win) {
    if (win == null)
      return;
    return W._DOMWindowCrossFrame__createSafe(win);
  }, "call$1", "_convertNativeToDart_Window$closure", 2, 0, null, 269],
  _convertNativeToDart_EventTarget: [function(e) {
    var $window, t1;
    if (e == null)
      return;
    if ("setInterval" in e) {
      $window = W._DOMWindowCrossFrame__createSafe(e);
      t1 = J.getInterceptor($window);
      if (typeof $window === "object" && $window !== null && !!t1.$isEventTarget)
        return $window;
      return;
    } else
      return e;
  }, "call$1", "_convertNativeToDart_EventTarget$closure", 2, 0, null, 18],
  _convertDartToNative_EventTarget: [function(e) {
    return e;
  }, "call$1", "_convertDartToNative_EventTarget$closure", 2, 0, null, 18],
  _callConstructor: [function($constructor, interceptor) {
    return new W._callConstructor_closure($constructor, interceptor);
  }, "call$2", "_callConstructor$closure", 4, 0, null, 270, 7],
  _callEnteredView: [function(receiver) {
    return J.enteredView$0$x(receiver);
  }, "call$1", "_callEnteredView$closure", 2, 0, 271, 41],
  _callLeftView: [function(receiver) {
    return J.leftView$0$x(receiver);
  }, "call$1", "_callLeftView$closure", 2, 0, 271, 41],
  _callAttributeChanged: [function(receiver, $name, oldValue, newValue) {
    return J.attributeChanged$3$x(receiver, $name, oldValue, newValue);
  }, "call$4", "_callAttributeChanged$closure", 8, 0, 272, 41, 12, 273, 274],
  _registerCustomElement: [function(context, $document, tag, type, extendsTagName) {
    var interceptorClass, interceptor, $constructor, baseClassName, t1, baseConstructor, properties, proto, t2, options;
    interceptorClass = J.findInterceptorConstructorForType(type);
    if (interceptorClass == null)
      throw H.wrapException(new P.ArgumentError(type));
    interceptor = interceptorClass.prototype;
    $constructor = J.findConstructorForNativeSubclassType(type, "created");
    if ($constructor == null)
      throw H.wrapException(new P.ArgumentError(H.S(type) + " has no constructor called 'created'"));
    J.getNativeInterceptor(W._ElementFactoryProvider_createElement_tag("article", null));
    baseClassName = interceptorClass.$nativeSuperclassTag;
    if (baseClassName == null)
      throw H.wrapException(new P.ArgumentError(type));
    t1 = extendsTagName == null;
    if (t1) {
      if (J.$eq(baseClassName, "HTMLElement") !== true)
        throw H.wrapException(P.UnsupportedError$("Class must provide extendsTag if base native class is not HTMLElement"));
    } else if (!($document.createElement(extendsTagName) instanceof window[baseClassName]))
      throw H.wrapException(P.UnsupportedError$("extendsTag does not match base native class"));
    baseConstructor = context[baseClassName];
    properties = {};
    properties.createdCallback = {value: ((function(invokeCallback) {
             return function() {
               return invokeCallback(this);
             };
          })(H.convertDartClosureToJS(W._callConstructor($constructor, interceptor), 1)))};
    properties.enteredViewCallback = {value: ((function(invokeCallback) {
             return function() {
               return invokeCallback(this);
             };
          })(H.convertDartClosureToJS(W._callEnteredView$closure(), 1)))};
    properties.leftViewCallback = {value: ((function(invokeCallback) {
             return function() {
               return invokeCallback(this);
             };
          })(H.convertDartClosureToJS(W._callLeftView$closure(), 1)))};
    properties.attributeChangedCallback = {value: ((function(invokeCallback) {
             return function(arg1, arg2, arg3) {
               return invokeCallback(this, arg1, arg2, arg3);
             };
          })(H.convertDartClosureToJS(W._callAttributeChanged$closure(), 4)))};
    proto = Object.create(baseConstructor.prototype, properties);
    t2 = H.makeLeafDispatchRecord(interceptor);
    Object.defineProperty(proto, init.dispatchPropertyName, {value: t2, enumerable: false, writable: true, configurable: true});
    options = {prototype: proto};
    if (!t1)
      options.extends = extendsTagName;
    $document.register(tag, options);
  }, "call$5", "_registerCustomElement$closure", 10, 0, null, 89, 275, 94, 11, 276],
  _wrapZone: [function(callback) {
    if (J.$eq($.Zone__current, C.C__RootZone) === true)
      return callback;
    return $.Zone__current.bindUnaryCallback$2$runGuarded(callback, true);
  }, "call$1", "_wrapZone$closure", 2, 0, null, 194],
  _wrapBinaryZone: [function(callback) {
    if (J.$eq($.Zone__current, C.C__RootZone) === true)
      return callback;
    return $.Zone__current.bindBinaryCallback$2$runGuarded(callback, true);
  }, "call$1", "_wrapBinaryZone$closure", 2, 0, null, 194],
  HtmlElement: {
    "": "Element;",
    "%": "HTMLAppletElement|HTMLBRElement|HTMLBaseFontElement|HTMLCanvasElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDialogElement|HTMLDirectoryElement|HTMLFontElement|HTMLFrameElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLMarqueeElement|HTMLMenuElement|HTMLModElement|HTMLOptGroupElement|HTMLPreElement|HTMLQuoteElement|HTMLShadowElement|HTMLSpanElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableHeaderCellElement|HTMLTitleElement|HTMLUListElement|HTMLUnknownElement;HTMLElement;PolymerDeclaration|HtmlElement_Polymer|HtmlElement_Polymer_ChangeNotifier|PolymerElement|PolymerElement_ChangeNotifier|AnnotationElement|PolymerElement_ChangeNotifier0|Breadcrumbs|DartdocElement|DartdocElement_ChangeNotifier|CategoryElement|DartdocElement_ChangeNotifier0|MemberElement|ClassElement|HomeElement|ItemElement|LibraryElement|LibraryPanel|PolymerElement_ChangeNotifier1|LinkElement0|DartdocElement_ChangeNotifier1|MainElement|MemberElement_ChangeNotifier|InheritedElement|InheritedElement_ChangeNotifier|MethodElement|MinimapElementClass|PolymerElement_ChangeNotifier2|MinimapElement|MinimapElementLibrary|DartdocElement_ChangeNotifier2|PageElement|DartdocElement_ChangeNotifier3|ParameterElement|PolymerElement_ChangeNotifier3|Search|PolymerElement_ChangeNotifier4|TypeElement|TypedefElement|InheritedElement_ChangeNotifier0|VariableElement|MemberElement_ChangeNotifier0|VariableHeading"
  },
  _EntryArray: {
    "": "Interceptor;",
    $isList: true,
    $asList: function() {
      return [W.Entry];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [W.Entry];
    },
    "%": "EntryArray"
  },
  AnchorElement: {
    "": "HtmlElement;target=,type%,hash%,host=,hostname=,href%,pathname=,port=,protocol=,search=",
    toString$0: [function(receiver) {
      return receiver.toString();
    }, "call$0", "get$toString", 0, 0, null],
    $isAnchorElement: true,
    $isInterceptor: true,
    "%": ";HTMLAnchorElement;AnchorElement_Polymer|AnchorElement_Polymer_ChangeNotifier|Result"
  },
  AreaElement: {
    "": "HtmlElement;target=,hash%,host=,hostname=,href%,pathname=,port=,protocol=,search=",
    toString$0: [function(receiver) {
      return receiver.toString();
    }, "call$0", "get$toString", 0, 0, null],
    $isInterceptor: true,
    "%": "HTMLAreaElement"
  },
  BaseElement: {
    "": "HtmlElement;href%,target=",
    "%": "HTMLBaseElement"
  },
  BeforeLoadEvent: {
    "": "Event;url=",
    "%": "BeforeLoadEvent"
  },
  Blob: {
    "": "Interceptor;type=",
    $isBlob: true,
    "%": ";Blob"
  },
  BodyElement: {
    "": "HtmlElement;",
    $isBodyElement: true,
    $isEventTarget: true,
    $isInterceptor: true,
    "%": "HTMLBodyElement"
  },
  ButtonElement: {
    "": "HtmlElement;form=,name%,type%,value%",
    "%": "HTMLButtonElement"
  },
  CharacterData: {
    "": "Node;length=",
    $isInterceptor: true,
    "%": "Comment;CharacterData"
  },
  ContentElement: {
    "": "HtmlElement;",
    select$0: function($receiver) {
      return this.select.call$0();
    },
    "%": "HTMLContentElement"
  },
  CssStyleDeclaration: {
    "": "Interceptor_CssStyleDeclarationBase;length=",
    getPropertyValue$1: [function(receiver, propertyName) {
      var propValue = receiver.getPropertyValue(propertyName);
      return propValue != null ? propValue : "";
    }, "call$1", "get$getPropertyValue", 2, 0, null, 63],
    setProperty$3: [function(receiver, propertyName, value, priority) {
      var exception;
      try {
        if (priority == null)
          priority = "";
        receiver.setProperty(propertyName, value, priority);
        if (!!receiver.setAttribute)
          receiver.setAttribute(propertyName, value);
      } catch (exception) {
        H.unwrapException(exception);
      }

    }, "call$3", "get$setProperty", 4, 2, null, 77, 63, 23, 354],
    item$1: [function(receiver, index) {
      return receiver.item(index);
    }, "call$1", "get$item", 2, 0, 355, 47],
    "%": "CSS2Properties|CSSStyleDeclaration|MSStyleCSSProperties"
  },
  CustomEvent: {
    "": "Event;_dartDetail}",
    get$detail: function(receiver) {
      var t1 = receiver._dartDetail;
      if (t1 != null)
        return t1;
      return P.convertNativeToDart_AcceptStructuredClone(receiver.detail, true);
    },
    _initCustomEvent$4: [function(receiver, typeArg, canBubbleArg, cancelableArg, detailArg) {
      return receiver.initCustomEvent(typeArg, canBubbleArg, cancelableArg, detailArg);
    }, "call$4", "get$_initCustomEvent", 8, 0, null, 356, 357, 358, 359],
    $isCustomEvent: true,
    "%": "CustomEvent"
  },
  DivElement: {
    "": "HtmlElement;",
    "%": ";HTMLDivElement;DivElement_Polymer|DivElement_Polymer_ChangeNotifier|CommentElement"
  },
  Document: {
    "": "Node;",
    createDocumentFragment$0: [function(receiver) {
      return receiver.createDocumentFragment();
    }, "call$0", "get$createDocumentFragment", 0, 0, null],
    getElementById$1: [function(receiver, elementId) {
      return receiver.getElementById(elementId);
    }, "call$1", "get$getElementById", 2, 0, null, 360],
    importNode$2: [function(receiver, importedNode, deep) {
      return receiver.importNode(importedNode, deep);
    }, "call$2", "get$importNode", 2, 2, null, 77, 361, 362],
    querySelector$1: [function(receiver, selectors) {
      return receiver.querySelector(selectors);
    }, "call$1", "get$querySelector", 2, 0, null, 363],
    get$onChange: function(receiver) {
      return C.EventStreamProvider_change.forTarget$1(receiver);
    },
    get$onClick: function(receiver) {
      return C.EventStreamProvider_click.forTarget$1(receiver);
    },
    get$onInput: function(receiver) {
      return C.EventStreamProvider_input.forTarget$1(receiver);
    },
    querySelectorAll$1: [function(receiver, selectors) {
      return W._FrozenElementList$_wrap(receiver.querySelectorAll(selectors), null);
    }, "call$1", "get$querySelectorAll", 2, 0, null, 363],
    query$1: [function(receiver, relativeSelectors) {
      return receiver.querySelector(relativeSelectors);
    }, "call$1", "get$query", 2, 0, null, 364],
    queryAll$1: [function(receiver, relativeSelectors) {
      return W._FrozenElementList$_wrap(receiver.querySelectorAll(relativeSelectors), null);
    }, "call$1", "get$queryAll", 2, 0, null, 364],
    $isDocument: true,
    "%": "SVGDocument;Document"
  },
  DocumentFragment: {
    "": "Node;",
    get$children: function(receiver) {
      if (receiver._children == null)
        receiver._children = H.setRuntimeTypeInfo(new P.FilteredElementList(receiver, new W._ChildNodeListLazy(receiver)), [null]);
      return receiver._children;
    },
    querySelectorAll$1: [function(receiver, selectors) {
      return W._FrozenElementList$_wrap(receiver.querySelectorAll(selectors), null);
    }, "call$1", "get$querySelectorAll", 2, 0, null, 363],
    get$innerHtml: function(receiver) {
      var e, t1;
      e = W._ElementFactoryProvider_createElement_tag("div", null);
      t1 = J.getInterceptor$x(e);
      t1.append$1(e, this.clone$1(receiver, true));
      return t1.get$innerHtml(e);
    },
    setInnerHtml$3$treeSanitizer$validator: [function(receiver, html, treeSanitizer, validator) {
      receiver.textContent = "";
      receiver.appendChild(J.createFragment$3$treeSanitizer$validator$x(document.body, html, treeSanitizer, validator));
    }, function($receiver, html, treeSanitizer) {
      return this.setInnerHtml$3$treeSanitizer$validator($receiver, html, treeSanitizer, null);
    }, "setInnerHtml$2$treeSanitizer", "call$3$treeSanitizer$validator", null, "get$setInnerHtml", 2, 5, null, 77, 77, 365, 366, 367],
    query$1: [function(receiver, relativeSelectors) {
      return receiver.querySelector(relativeSelectors);
    }, "call$1", "get$query", 2, 0, null, 364],
    queryAll$1: [function(receiver, relativeSelectors) {
      return W._FrozenElementList$_wrap(receiver.querySelectorAll(relativeSelectors), null);
    }, "call$1", "get$queryAll", 2, 0, null, 364],
    querySelector$1: [function(receiver, selectors) {
      return receiver.querySelector(selectors);
    }, "call$1", "get$querySelector", 2, 0, null, 363],
    $isInterceptor: true,
    "%": ";DocumentFragment"
  },
  DocumentType: {
    "": "Node;",
    $isInterceptor: true,
    "%": "DocumentType"
  },
  DomError: {
    "": "Interceptor;message=,name=",
    "%": "DOMError|FileError"
  },
  DomException: {
    "": "Interceptor;message=",
    get$name: function(receiver) {
      var errorName = receiver.name;
      if (P.Device_isWebKit() === true && errorName === "SECURITY_ERR")
        return "SecurityError";
      if (P.Device_isWebKit() === true && errorName === "SYNTAX_ERR")
        return "SyntaxError";
      return errorName;
    },
    toString$0: [function(receiver) {
      return receiver.toString();
    }, "call$0", "get$toString", 0, 0, null],
    $isDomException: true,
    "%": "DOMException"
  },
  Element: {
    "": "Node;title%,className%,id=,offsetHeight=,offsetWidth=,tagName=",
    get$attributes: function(receiver) {
      return new W._ElementAttributeMap(receiver);
    },
    get$children: function(receiver) {
      return new W._ChildrenElementList(receiver, receiver.children);
    },
    querySelectorAll$1: [function(receiver, selectors) {
      return W._FrozenElementList$_wrap(receiver.querySelectorAll(selectors), null);
    }, "call$1", "get$querySelectorAll", 2, 0, null, 363],
    query$1: [function(receiver, relativeSelectors) {
      return receiver.querySelector(relativeSelectors);
    }, "call$1", "get$query", 2, 0, null, 364],
    queryAll$1: [function(receiver, relativeSelectors) {
      return W._FrozenElementList$_wrap(receiver.querySelectorAll(relativeSelectors), null);
    }, "call$1", "get$queryAll", 2, 0, null, 364],
    get$classes: function(receiver) {
      return new W._ElementCssClassSet(receiver);
    },
    set$classes: function(receiver, value) {
      var classSet = this.get$classes(receiver);
      classSet.clear$0(0);
      classSet.addAll$1(classSet, value);
    },
    get$dataset: function(receiver) {
      return new W._DataAttributeMap(new W._ElementAttributeMap(receiver));
    },
    getComputedStyle$1: [function(receiver, pseudoElement) {
      return window.getComputedStyle(receiver, "");
    }, function($receiver) {
      return this.getComputedStyle$1($receiver, null);
    }, "getComputedStyle$0", "call$1", null, "get$getComputedStyle", 0, 2, null, 77, 368],
    enteredView$0: [function(receiver) {
    }, "call$0", "get$enteredView", 0, 0, null],
    leftView$0: [function(receiver) {
    }, "call$0", "get$leftView", 0, 0, null],
    attributeChanged$3: [function(receiver, $name, oldValue, newValue) {
    }, "call$3", "get$attributeChanged", 6, 0, null, 12, 273, 274],
    get$localName: function(receiver) {
      return receiver.localName;
    },
    toString$0: [function(receiver) {
      return receiver.localName;
    }, "call$0", "get$toString", 0, 0, null],
    scrollIntoView$1: [function(receiver, alignment) {
      var hasScrollIntoViewIfNeeded = !!receiver.scrollIntoViewIfNeeded;
      if (hasScrollIntoViewIfNeeded)
        receiver.scrollIntoViewIfNeeded();
      else
        receiver.scrollIntoView();
    }, function($receiver) {
      return this.scrollIntoView$1($receiver, null);
    }, "scrollIntoView$0", "call$1", null, "get$scrollIntoView", 0, 2, null, 77, 369],
    insertAdjacentText$2: [function(receiver, where, text) {
      var t1, t2, first;
      if (!!receiver.insertAdjacentText)
        receiver.insertAdjacentText(where, text);
      else {
        t1 = document.createTextNode(text);
        switch (where.toLowerCase()) {
          case "beforebegin":
            receiver.parentNode.insertBefore(t1, receiver);
            break;
          case "afterbegin":
            if (receiver.childNodes.length > 0) {
              t2 = receiver.childNodes;
              if (0 >= t2.length)
                return H.ioore(t2, 0);
              first = t2[0];
            } else
              first = null;
            receiver.insertBefore(t1, first);
            break;
          case "beforeend":
            receiver.appendChild(t1);
            break;
          case "afterend":
            receiver.parentNode.insertBefore(t1, receiver.nextSibling);
            break;
          default:
            H.throwExpression(new P.ArgumentError("Invalid position " + where));
        }
      }
    }, "call$2", "get$insertAdjacentText", 4, 0, null, 370, 250],
    matches$1: [function(receiver, selectors) {
      if (!!receiver.matches)
        return receiver.matches(selectors);
      else if (!!receiver.webkitMatchesSelector)
        return receiver.webkitMatchesSelector(selectors);
      else if (!!receiver.mozMatchesSelector)
        return receiver.mozMatchesSelector(selectors);
      else if (!!receiver.msMatchesSelector)
        return receiver.msMatchesSelector(selectors);
      else if (!!receiver.oMatchesSelector)
        return receiver.oMatchesSelector(selectors);
      else
        throw H.wrapException(P.UnsupportedError$("Not supported on this platform"));
    }, "call$1", "get$matches", 2, 0, null, 363],
    matchesWithAncestors$1: [function(receiver, selectors) {
      var elem = receiver;
      do {
        if (J.matches$1$x(elem, selectors))
          return true;
        elem = elem.parentElement;
      } while (elem != null);
      return false;
    }, "call$1", "get$matchesWithAncestors", 2, 0, null, 363],
    createShadowRoot$0: [function(receiver) {
      return (receiver.createShadowRoot || receiver.webkitCreateShadowRoot).call(receiver);
    }, "call$0", "get$createShadowRoot", 0, 0, null],
    get$shadowRoot: function(receiver) {
      return receiver.shadowRoot || receiver.webkitShadowRoot;
    },
    get$marginEdge: function(receiver) {
      return new W._MarginCssRect(receiver, 0, 0, 0, 0);
    },
    createFragment$3$treeSanitizer$validator: [function(receiver, html, treeSanitizer, validator) {
      var t1, t2, base, contextElement, fragment;
      if (treeSanitizer == null) {
        t1 = $.Element__defaultValidator;
        if (t1 == null) {
          t1 = H.setRuntimeTypeInfo([], [W.NodeValidator]);
          t2 = new W.NodeValidatorBuilder(t1);
          t1.push(W._Html5NodeValidator$(null));
          t1.push(W._TemplatingNodeValidator$());
          $.Element__defaultValidator = t2;
          validator = t2;
        } else
          validator = t1;
        t1 = $.Element__defaultSanitizer;
        if (t1 == null) {
          t1 = new W._ValidatingTreeSanitizer(validator);
          $.Element__defaultSanitizer = t1;
          treeSanitizer = t1;
        } else {
          t1.validator = validator;
          treeSanitizer = t1;
        }
      }
      if ($.Element__parseDocument == null) {
        t1 = document.implementation.createHTMLDocument("");
        $.Element__parseDocument = t1;
        $.Element__parseRange = t1.createRange();
        base = $.Element__parseDocument.createElement("base", null);
        J.set$href$x(base, document.baseURI);
        $.Element__parseDocument.head.appendChild(base);
      }
      t1 = $.Element__parseDocument;
      if (!!this.$isBodyElement)
        contextElement = t1.body;
      else {
        contextElement = t1.createElement(receiver.tagName, null);
        $.Element__parseDocument.body.appendChild(contextElement);
      }
      if ("createContextualFragment" in window.Range.prototype) {
        $.Element__parseRange.selectNodeContents(contextElement);
        fragment = $.Element__parseRange.createContextualFragment(html);
      } else {
        contextElement.innerHTML = html;
        fragment = $.Element__parseDocument.createDocumentFragment();
        for (; t1 = contextElement.firstChild, t1 != null;)
          fragment.appendChild(t1);
      }
      t1 = $.Element__parseDocument.body;
      if (contextElement == null ? t1 != null : contextElement !== t1)
        J.remove$0$ax(contextElement);
      treeSanitizer.sanitizeTree$1(fragment);
      document.adoptNode(fragment);
      return fragment;
    }, function($receiver, html, treeSanitizer) {
      return this.createFragment$3$treeSanitizer$validator($receiver, html, treeSanitizer, null);
    }, "createFragment$2$treeSanitizer", "call$3$treeSanitizer$validator", null, "get$createFragment", 2, 5, null, 77, 77, 365, 366, 367],
    setInnerHtml$3$treeSanitizer$validator: [function(receiver, html, treeSanitizer, validator) {
      receiver.textContent = null;
      receiver.appendChild(this.createFragment$3$treeSanitizer$validator(receiver, html, treeSanitizer, validator));
    }, function($receiver, html, treeSanitizer) {
      return this.setInnerHtml$3$treeSanitizer$validator($receiver, html, treeSanitizer, null);
    }, "setInnerHtml$2$treeSanitizer", "call$3$treeSanitizer$validator", null, "get$setInnerHtml", 2, 5, null, 77, 77, 365, 366, 367],
    get$innerHtml: function(receiver) {
      return receiver.innerHTML;
    },
    get$on: function(receiver) {
      return new W.ElementEvents(receiver, receiver);
    },
    focus$0: [function(receiver) {
      return receiver.focus();
    }, "call$0", "get$focus", 0, 0, null],
    getBoundingClientRect$0: [function(receiver) {
      return receiver.getBoundingClientRect();
    }, "call$0", "get$getBoundingClientRect", 0, 0, null],
    querySelector$1: [function(receiver, selectors) {
      return receiver.querySelector(selectors);
    }, "call$1", "get$querySelector", 2, 0, null, 363],
    get$onChange: function(receiver) {
      return C.EventStreamProvider_change.forElement$1(receiver);
    },
    get$onClick: function(receiver) {
      return C.EventStreamProvider_click.forElement$1(receiver);
    },
    get$onInput: function(receiver) {
      return C.EventStreamProvider_input.forElement$1(receiver);
    },
    Element$created$0: function(receiver) {
    },
    $isElement: true,
    $isInterceptor: true,
    $isEventTarget: true,
    "%": ";Element"
  },
  EmbedElement: {
    "": "HtmlElement;name%,src=,type%",
    "%": "HTMLEmbedElement"
  },
  ErrorEvent: {
    "": "Event;error=,message=",
    "%": "ErrorEvent"
  },
  Event: {
    "": "Interceptor;_selector},bubbles=,path=,timeStamp=,type=",
    get$target: function(receiver) {
      return W._convertNativeToDart_EventTarget(receiver.target);
    },
    preventDefault$0: [function(receiver) {
      return receiver.preventDefault();
    }, "call$0", "get$preventDefault", 0, 0, null],
    $isEvent: true,
    "%": "AudioProcessingEvent|AutocompleteErrorEvent|BeforeUnloadEvent|CSSFontFaceLoadEvent|CloseEvent|DeviceMotionEvent|DeviceOrientationEvent|HashChangeEvent|IDBVersionChangeEvent|MIDIMessageEvent|MediaKeyNeededEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|RTCDTMFToneChangeEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SecurityPolicyViolationEvent|TrackEvent|WebGLContextEvent|WebKitAnimationEvent;Event"
  },
  EventTarget: {
    "": "Interceptor;",
    get$on: function(receiver) {
      return new W.Events(receiver);
    },
    addEventListener$3: [function(receiver, type, listener, useCapture) {
      return receiver.addEventListener(type, H.convertDartClosureToJS(listener, 1), useCapture);
    }, "call$3", "get$addEventListener", 4, 2, null, 77, 11, 371, 372],
    dispatchEvent$1: [function(receiver, $event) {
      return receiver.dispatchEvent($event);
    }, "call$1", "get$dispatchEvent", 2, 0, null, 349],
    removeEventListener$3: [function(receiver, type, listener, useCapture) {
      return receiver.removeEventListener(type, H.convertDartClosureToJS(listener, 1), useCapture);
    }, "call$3", "get$removeEventListener", 4, 2, null, 77, 11, 371, 372],
    $isEventTarget: true,
    "%": ";EventTarget"
  },
  FieldSetElement: {
    "": "HtmlElement;form=,name%,type=",
    "%": "HTMLFieldSetElement"
  },
  File: {
    "": "Blob;name=",
    $isFile: true,
    "%": "File"
  },
  FormElement: {
    "": "HtmlElement;length=,method=,name%,target=",
    "%": "HTMLFormElement"
  },
  History: {
    "": "Interceptor;length=",
    "%": "History"
  },
  HtmlCollection: {
    "": "Interceptor_ListMixin_ImmutableListMixin;",
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 !== index || index >= t1)
        throw H.wrapException(P.RangeError$range(index, 0, t1));
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(new P.StateError("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(new P.StateError("No elements"));
    },
    elementAt$1: [function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        return H.ioore(receiver, index);
      return receiver[index];
    }, "call$1", "get$elementAt", 2, 0, null, 47],
    item$1: [function(receiver, index) {
      return receiver.item(index);
    }, "call$1", "get$item", 2, 0, 373, 47],
    $isList: true,
    $asList: function() {
      return [W.Node];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [W.Node];
    },
    $isJavaScriptIndexingBehavior: true,
    "%": "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"
  },
  HtmlDocument: {
    "": "Document;",
    get$title: function(receiver) {
      return receiver.title;
    },
    set$title: function(receiver, value) {
      receiver.title = value;
    },
    "%": "HTMLDocument"
  },
  HttpRequest: {
    "": "HttpRequestEventTarget;responseText=",
    open$5$async$password$user: [function(receiver, method, url, async, password, user) {
      return receiver.open(method, url, async, user, password);
    }, function($receiver, method, url, async) {
      return $receiver.open(method, url, async);
    }, "open$3$async", "call$5$async$password$user", null, "get$open", 4, 7, null, 77, 77, 77, 260, 257, 374, 375, 376],
    send$1: [function(receiver, data) {
      return receiver.send(data);
    }, "call$1", "get$send", 0, 2, null, 77, 377],
    $isHttpRequest: true,
    "%": "XMLHttpRequest"
  },
  HttpRequestEventTarget: {
    "": "EventTarget;",
    "%": ";XMLHttpRequestEventTarget"
  },
  IFrameElement: {
    "": "HtmlElement;name%,src=",
    "%": "HTMLIFrameElement"
  },
  ImageData: {
    "": "Interceptor;",
    $isImageData: true,
    "%": "ImageData"
  },
  ImageElement: {
    "": "HtmlElement;src=",
    complete$0: function($receiver) {
      return this.complete.call$0();
    },
    "%": "HTMLImageElement"
  },
  InputElement: {
    "": "HtmlElement;checked%,defaultValue%,form=,name%,src=,type%,value%",
    accept$1: function($receiver, arg0) {
      return this.accept.call$1(arg0);
    },
    select$0: [function(receiver) {
      return receiver.select();
    }, "call$0", "get$select", 0, 0, null],
    $isInputElement: true,
    $isElement: true,
    $isInterceptor: true,
    $isEventTarget: true,
    $isNode: true,
    "%": "HTMLInputElement"
  },
  KeyboardEvent: {
    "": "UIEvent;ctrlKey=,location=",
    get$keyCode: function(receiver) {
      return receiver.keyCode;
    },
    $isKeyboardEvent: true,
    "%": "KeyboardEvent"
  },
  KeygenElement: {
    "": "HtmlElement;form=,name%,type=",
    "%": "HTMLKeygenElement"
  },
  LIElement: {
    "": "HtmlElement;value%",
    "%": "HTMLLIElement"
  },
  LabelElement: {
    "": "HtmlElement;form=",
    "%": "HTMLLabelElement"
  },
  LegendElement: {
    "": "HtmlElement;form=",
    "%": "HTMLLegendElement"
  },
  LinkElement: {
    "": "HtmlElement;href%,type%",
    $isLinkElement: true,
    "%": "HTMLLinkElement"
  },
  "+LinkElement": 0,
  Location: {
    "": "Interceptor;hash%,host=,hostname=,href%,pathname=,port=,protocol=,search=",
    replace$1: [function(receiver, url) {
      return receiver.replace(url);
    }, "call$1", "get$replace", 2, 0, null, 257],
    toString$0: [function(receiver) {
      return receiver.toString();
    }, "call$0", "get$toString", 0, 0, null],
    $isLocation: true,
    "%": "Location"
  },
  MapElement: {
    "": "HtmlElement;name%",
    "%": "HTMLMapElement"
  },
  MediaElement: {
    "": "HtmlElement;error=,src=",
    load$0: [function(receiver) {
      return receiver.load();
    }, "call$0", "get$load", 0, 0, null],
    pause$0: [function(receiver) {
      return receiver.pause();
    }, "call$0", "get$pause", 0, 0, null],
    "%": "HTMLAudioElement|HTMLMediaElement|HTMLVideoElement"
  },
  MediaKeyEvent: {
    "": "Event;message=",
    "%": "MediaKeyEvent"
  },
  MediaKeyMessageEvent: {
    "": "Event;message=",
    "%": "MediaKeyMessageEvent"
  },
  MediaStream: {
    "": "EventTarget;id=",
    "%": "MediaStream"
  },
  MetaElement: {
    "": "HtmlElement;content%,name%",
    "%": "HTMLMetaElement"
  },
  MeterElement: {
    "": "HtmlElement;value%",
    "%": "HTMLMeterElement"
  },
  MidiConnectionEvent: {
    "": "Event;port=",
    "%": "MIDIConnectionEvent"
  },
  MidiOutput: {
    "": "MidiPort;",
    send$2: [function(receiver, data, timestamp) {
      return receiver.send(data, timestamp);
    }, function($receiver, data) {
      return $receiver.send(data);
    }, "send$1", "call$2", null, "get$send", 2, 2, null, 77, 377, 378],
    "%": "MIDIOutput"
  },
  MidiPort: {
    "": "EventTarget;id=,name=,type=",
    "%": "MIDIInput;MIDIPort"
  },
  MouseEvent: {
    "": "UIEvent;ctrlKey=",
    _initMouseEvent$15: [function(receiver, type, canBubble, cancelable, view, detail, screenX, screenY, clientX, clientY, ctrlKey, altKey, shiftKey, metaKey, button, relatedTarget) {
      receiver.initMouseEvent(type, canBubble, cancelable, view, detail, screenX, screenY, clientX, clientY, ctrlKey, altKey, shiftKey, metaKey, button, W._convertDartToNative_EventTarget(relatedTarget));
      return;
    }, "call$15", "get$_initMouseEvent", 30, 0, null, 11, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392],
    $isMouseEvent: true,
    "%": "DragEvent|MSPointerEvent|MouseEvent|MouseScrollEvent|MouseWheelEvent|PointerEvent|WheelEvent"
  },
  MutationObserver: {
    "": "Interceptor;",
    disconnect$0: [function(receiver) {
      return receiver.disconnect();
    }, "call$0", "get$disconnect", 0, 0, null],
    observe$8$attributeFilter$attributeOldValue$attributes$characterData$characterDataOldValue$childList$subtree: [function(receiver, target, attributeFilter, attributeOldValue, attributes, characterData, characterDataOldValue, childList, subtree) {
      var parsedOptions, t1;
      parsedOptions = {};
      t1 = new W.MutationObserver_observe_override(parsedOptions);
      t1.call$2("childList", childList);
      t1.call$2("attributes", attributes);
      t1.call$2("characterData", characterData);
      t1.call$2("subtree", subtree);
      t1.call$2("attributeOldValue", attributeOldValue);
      t1.call$2("characterDataOldValue", characterDataOldValue);
      receiver.observe(target, parsedOptions);
    }, function($receiver, target, childList, subtree) {
      return this.observe$8$attributeFilter$attributeOldValue$attributes$characterData$characterDataOldValue$childList$subtree($receiver, target, null, null, null, null, null, childList, subtree);
    }, "observe$3$childList$subtree", "call$8$attributeFilter$attributeOldValue$attributes$characterData$characterDataOldValue$childList$subtree", null, "get$observe", 2, 15, null, 77, 77, 77, 77, 77, 77, 77, 74, 393, 394, 395, 396, 397, 398, 399],
    "%": "MutationObserver|WebKitMutationObserver"
  },
  MutationRecord: {
    "": "Interceptor;oldValue=,target=,type=",
    "%": "MutationRecord"
  },
  Navigator: {
    "": "Interceptor;",
    $isInterceptor: true,
    "%": "Navigator"
  },
  NavigatorUserMediaError: {
    "": "Interceptor;message=,name=",
    "%": "NavigatorUserMediaError"
  },
  Node: {
    "": "EventTarget;firstChild=,nextNode:nextSibling=,ownerDocument=,parent:parentElement=,parentNode=,text:textContent%",
    get$nodes: function(receiver) {
      return new W._ChildNodeListLazy(receiver);
    },
    remove$0: [function(receiver) {
      var t1 = receiver.parentNode;
      if (t1 != null)
        t1.removeChild(receiver);
    }, "call$0", "get$remove", 0, 0, null],
    replaceWith$1: [function(receiver, otherNode) {
      var $parent, exception;
      try {
        $parent = receiver.parentNode;
        J._replaceChild$2$x($parent, otherNode, receiver);
      } catch (exception) {
        H.unwrapException(exception);
      }

      return receiver;
    }, "call$1", "get$replaceWith", 2, 0, null, 400],
    toString$0: [function(receiver) {
      var t1 = receiver.nodeValue;
      return t1 == null ? J.Interceptor.prototype.toString$0.call(this, receiver) : t1;
    }, "call$0", "get$toString", 0, 0, null],
    append$1: [function(receiver, newChild) {
      return receiver.appendChild(newChild);
    }, "call$1", "get$append", 2, 0, 401, 402],
    clone$1: [function(receiver, deep) {
      return receiver.cloneNode(deep);
    }, "call$1", "get$clone", 2, 0, null, 362],
    contains$1: [function(receiver, other) {
      return receiver.contains(other);
    }, "call$1", "get$contains", 2, 0, null, 104],
    insertBefore$2: [function(receiver, newChild, refChild) {
      return receiver.insertBefore(newChild, refChild);
    }, "call$2", "get$insertBefore", 4, 0, null, 402, 403],
    _replaceChild$2: [function(receiver, newChild, oldChild) {
      return receiver.replaceChild(newChild, oldChild);
    }, "call$2", "get$_replaceChild", 4, 0, null, 402, 404],
    $isNode: true,
    "%": "Entity|Notation;Node"
  },
  NodeList: {
    "": "Interceptor_ListMixin_ImmutableListMixin0;",
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 !== index || index >= t1)
        throw H.wrapException(P.RangeError$range(index, 0, t1));
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(new P.StateError("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(new P.StateError("No elements"));
    },
    elementAt$1: [function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        return H.ioore(receiver, index);
      return receiver[index];
    }, "call$1", "get$elementAt", 2, 0, null, 47],
    $isList: true,
    $asList: function() {
      return [W.Node];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [W.Node];
    },
    $isJavaScriptIndexingBehavior: true,
    "%": "NodeList|RadioNodeList"
  },
  OListElement: {
    "": "HtmlElement;reversed=,type%",
    "%": "HTMLOListElement"
  },
  ObjectElement: {
    "": "HtmlElement;form=,name%,type%",
    "%": "HTMLObjectElement"
  },
  OptionElement: {
    "": "HtmlElement;form=,index=,value%",
    $isOptionElement: true,
    "%": "HTMLOptionElement"
  },
  OutputElement: {
    "": "HtmlElement;defaultValue%,form=,name%,type=,value%",
    "%": "HTMLOutputElement"
  },
  ParagraphElement: {
    "": "HtmlElement;",
    $isParagraphElement: true,
    "%": "HTMLParagraphElement"
  },
  ParamElement: {
    "": "HtmlElement;name%,value%",
    "%": "HTMLParamElement"
  },
  PopStateEvent: {
    "": "Event;",
    $isPopStateEvent: true,
    "%": "PopStateEvent"
  },
  PositionError: {
    "": "Interceptor;message=",
    "%": "PositionError"
  },
  ProcessingInstruction: {
    "": "CharacterData;target=",
    "%": "ProcessingInstruction"
  },
  ProgressElement: {
    "": "HtmlElement;position=,value%",
    "%": "HTMLProgressElement"
  },
  ProgressEvent: {
    "": "Event;",
    $isProgressEvent: true,
    "%": "XMLHttpRequestProgressEvent;ProgressEvent"
  },
  Range: {
    "": "Interceptor;",
    getBoundingClientRect$0: [function(receiver) {
      return receiver.getBoundingClientRect();
    }, "call$0", "get$getBoundingClientRect", 0, 0, null],
    toString$0: [function(receiver) {
      return receiver.toString();
    }, "call$0", "get$toString", 0, 0, null],
    "%": "Range"
  },
  ResourceProgressEvent: {
    "": "ProgressEvent;url=",
    "%": "ResourceProgressEvent"
  },
  ScriptElement0: {
    "": "HtmlElement;src=,type%",
    $isScriptElement0: true,
    "%": "HTMLScriptElement"
  },
  SelectElement: {
    "": "HtmlElement;form=,length%,name%,selectedIndex%,type=,value%",
    item$1: [function(receiver, index) {
      return receiver.item(index);
    }, "call$1", "get$item", 2, 0, 373, 47],
    $isSelectElement: true,
    "%": "HTMLSelectElement"
  },
  ShadowRoot: {
    "": "DocumentFragment;applyAuthorStyles=,host=,innerHtml:innerHTML=",
    clone$1: [function(receiver, deep) {
      return receiver.cloneNode(deep);
    }, "call$1", "get$clone", 2, 0, null, 362],
    getElementById$1: [function(receiver, elementId) {
      return receiver.getElementById(elementId);
    }, "call$1", "get$getElementById", 2, 0, null, 360],
    $isShadowRoot: true,
    "%": "ShadowRoot"
  },
  SourceElement: {
    "": "HtmlElement;src=,type%",
    "%": "HTMLSourceElement"
  },
  SpeechInputEvent: {
    "": "Event;results=",
    "%": "SpeechInputEvent"
  },
  SpeechInputResult: {
    "": "Interceptor;",
    "%": "SpeechInputResult"
  },
  SpeechRecognitionAlternative: {
    "": "Interceptor;",
    "%": "SpeechRecognitionAlternative"
  },
  SpeechRecognitionError: {
    "": "Event;error=,message=",
    "%": "SpeechRecognitionError"
  },
  SpeechRecognitionEvent: {
    "": "Event;results=",
    "%": "SpeechRecognitionEvent"
  },
  SpeechRecognitionResult: {
    "": "Interceptor;isFinal=,length=",
    item$1: [function(receiver, index) {
      return receiver.item(index);
    }, "call$1", "get$item", 2, 0, 405, 47],
    "%": "SpeechRecognitionResult"
  },
  SpeechSynthesisEvent: {
    "": "Event;name=",
    "%": "SpeechSynthesisEvent"
  },
  StorageEvent: {
    "": "Event;key=,newValue=,oldValue=,url=",
    "%": "StorageEvent"
  },
  StyleElement: {
    "": "HtmlElement;type%",
    "%": "HTMLStyleElement"
  },
  TableElement: {
    "": "HtmlElement;",
    createFragment$3$treeSanitizer$validator: [function(receiver, html, treeSanitizer, validator) {
      var table, fragment;
      if ("createContextualFragment" in window.Range.prototype)
        return W.Element.prototype.createFragment$3$treeSanitizer$validator.call(this, receiver, html, treeSanitizer, validator);
      table = W.Element_Element$html("<table>" + H.S(html) + "</table>", treeSanitizer, validator);
      fragment = document.createDocumentFragment();
      fragment.toString;
      new W._ChildNodeListLazy(fragment).addAll$1(0, J.get$nodes$x(table));
      return fragment;
    }, "call$3$treeSanitizer$validator", "get$createFragment", 2, 5, null, 77, 77, 365, 366, 367],
    "%": "HTMLTableElement"
  },
  TableRowElement: {
    "": "HtmlElement;",
    createFragment$3$treeSanitizer$validator: [function(receiver, html, treeSanitizer, validator) {
      var fragment, t1, section, row;
      if ("createContextualFragment" in window.Range.prototype)
        return W.Element.prototype.createFragment$3$treeSanitizer$validator.call(this, receiver, html, treeSanitizer, validator);
      fragment = document.createDocumentFragment();
      t1 = J.createFragment$3$treeSanitizer$validator$x(document.createElement("table", null), html, treeSanitizer, validator);
      t1.toString;
      t1 = new W._ChildNodeListLazy(t1);
      section = t1.get$single(t1);
      section.toString;
      t1 = new W._ChildNodeListLazy(section);
      row = t1.get$single(t1);
      fragment.toString;
      row.toString;
      new W._ChildNodeListLazy(fragment).addAll$1(0, new W._ChildNodeListLazy(row));
      return fragment;
    }, "call$3$treeSanitizer$validator", "get$createFragment", 2, 5, null, 77, 77, 365, 366, 367],
    "%": "HTMLTableRowElement"
  },
  TableSectionElement: {
    "": "HtmlElement;",
    createFragment$3$treeSanitizer$validator: [function(receiver, html, treeSanitizer, validator) {
      var fragment, t1, section;
      if ("createContextualFragment" in window.Range.prototype)
        return W.Element.prototype.createFragment$3$treeSanitizer$validator.call(this, receiver, html, treeSanitizer, validator);
      fragment = document.createDocumentFragment();
      t1 = J.createFragment$3$treeSanitizer$validator$x(document.createElement("table", null), html, treeSanitizer, validator);
      t1.toString;
      t1 = new W._ChildNodeListLazy(t1);
      section = t1.get$single(t1);
      fragment.toString;
      section.toString;
      new W._ChildNodeListLazy(fragment).addAll$1(0, new W._ChildNodeListLazy(section));
      return fragment;
    }, "call$3$treeSanitizer$validator", "get$createFragment", 2, 5, null, 77, 77, 365, 366, 367],
    "%": "HTMLTableSectionElement"
  },
  TemplateElement: {
    "": "HtmlElement;content=",
    setInnerHtml$3$treeSanitizer$validator: [function(receiver, html, treeSanitizer, validator) {
      var fragment;
      receiver.textContent = null;
      fragment = this.createFragment$3$treeSanitizer$validator(receiver, html, treeSanitizer, validator);
      receiver.content.appendChild(fragment);
    }, function($receiver, html, treeSanitizer) {
      return this.setInnerHtml$3$treeSanitizer$validator($receiver, html, treeSanitizer, null);
    }, "setInnerHtml$2$treeSanitizer", "call$3$treeSanitizer$validator", null, "get$setInnerHtml", 2, 5, null, 77, 77, 365, 366, 367],
    $isTemplateElement: true,
    "%": "HTMLTemplateElement"
  },
  Text: {
    "": "CharacterData;",
    $isText: true,
    "%": "CDATASection|Text"
  },
  TextAreaElement: {
    "": "HtmlElement;defaultValue%,form=,name%,type=,value%",
    select$0: [function(receiver) {
      return receiver.select();
    }, "call$0", "get$select", 0, 0, null],
    $isTextAreaElement: true,
    "%": "HTMLTextAreaElement"
  },
  TouchEvent: {
    "": "UIEvent;ctrlKey=",
    "%": "TouchEvent"
  },
  TrackElement: {
    "": "HtmlElement;defaultValue:default%,kind=,src=",
    "%": "HTMLTrackElement"
  },
  TransitionEvent: {
    "": "Event;",
    $isTransitionEvent: true,
    "%": "TransitionEvent|WebKitTransitionEvent"
  },
  UIEvent: {
    "": "Event;",
    "%": "CompositionEvent|FocusEvent|SVGZoomEvent|TextEvent;UIEvent"
  },
  Window: {
    "": "EventTarget;name%",
    get$animationFrame: function(receiver) {
      var t1, completer;
      t1 = J.JSNumber;
      completer = H.setRuntimeTypeInfo(new P._SyncCompleter(P._Future$(t1)), [t1]);
      this._ensureRequestAnimationFrame$0(receiver);
      this._requestAnimationFrame$1(receiver, W._wrapZone(new W.Window_animationFrame_closure(completer)));
      return completer.future;
    },
    get$location: function(receiver) {
      var result = receiver.location;
      if (W.Window__isDartLocation(result) === true)
        return result;
      if (null == receiver._location_wrapper)
        receiver._location_wrapper = new W._LocationWrapper(result);
      return receiver._location_wrapper;
    },
    _requestAnimationFrame$1: [function(receiver, callback) {
      return receiver.requestAnimationFrame(H.convertDartClosureToJS(callback, 1));
    }, "call$1", "get$_requestAnimationFrame", 2, 0, null, 194],
    _ensureRequestAnimationFrame$0: [function(receiver) {
      if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
        return;
        (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(receiver);
    }, "call$0", "get$_ensureRequestAnimationFrame", 0, 0, null],
    get$parent: function(receiver) {
      return W._convertNativeToDart_Window(receiver.parent);
    },
    close$0: [function(receiver) {
      return receiver.close();
    }, "call$0", "get$close", 0, 0, null],
    toString$0: [function(receiver) {
      return receiver.toString();
    }, "call$0", "get$toString", 0, 0, null],
    get$onChange: function(receiver) {
      return C.EventStreamProvider_change.forTarget$1(receiver);
    },
    get$onClick: function(receiver) {
      return C.EventStreamProvider_click.forTarget$1(receiver);
    },
    get$onInput: function(receiver) {
      return C.EventStreamProvider_input.forTarget$1(receiver);
    },
    $isWindow: true,
    $isInterceptor: true,
    $isEventTarget: true,
    "%": "DOMWindow|Window"
  },
  _Attr: {
    "": "Node;name=,value%",
    "%": "Attr"
  },
  _ClientRect: {
    "": "Interceptor;height=,left=,right=,top=,width=",
    toString$0: [function(receiver) {
      return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(receiver.width) + " x " + H.S(receiver.height);
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(receiver, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      t1 = J.getInterceptor$x(other);
      if (typeof other !== "object" || other === null || !t1.$isRectangle)
        return false;
      t2 = receiver.left;
      t3 = t1.get$left(other);
      if (t2 == null ? t3 == null : t2 === t3) {
        t2 = receiver.top;
        t3 = t1.get$top(other);
        if (t2 == null ? t3 == null : t2 === t3) {
          t2 = receiver.width;
          t3 = t1.get$width(other);
          if (t2 == null ? t3 == null : t2 === t3) {
            t2 = receiver.height;
            t1 = t1.get$height(other);
            t1 = t2 == null ? t1 == null : t2 === t1;
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    }, "call$1", "get$==", 2, 0, null, 104],
    get$hashCode: function(receiver) {
      var t1, t2, t3, t4, hash;
      t1 = J.get$hashCode$(receiver.left);
      t2 = J.get$hashCode$(receiver.top);
      t3 = J.get$hashCode$(receiver.width);
      t4 = J.get$hashCode$(receiver.height);
      t4 = W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(0, t1), t2), t3), t4);
      hash = 536870911 & t4 + ((67108863 & t4) << 3 >>> 0);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
    },
    $isRectangle: true,
    $asRectangle: function() {
      return [null];
    },
    "%": "ClientRect|DOMRect"
  },
  _HTMLFrameSetElement: {
    "": "HtmlElement;",
    $isEventTarget: true,
    $isInterceptor: true,
    "%": "HTMLFrameSetElement"
  },
  _NamedNodeMap: {
    "": "Interceptor_ListMixin_ImmutableListMixin1;",
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 !== index || index >= t1)
        throw H.wrapException(P.RangeError$range(index, 0, t1));
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(new P.StateError("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(new P.StateError("No elements"));
    },
    elementAt$1: [function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        return H.ioore(receiver, index);
      return receiver[index];
    }, "call$1", "get$elementAt", 2, 0, null, 47],
    item$1: [function(receiver, index) {
      return receiver.item(index);
    }, "call$1", "get$item", 2, 0, 373, 47],
    $isList: true,
    $asList: function() {
      return [W.Node];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [W.Node];
    },
    $isJavaScriptIndexingBehavior: true,
    "%": "MozNamedAttrMap|NamedNodeMap"
  },
  _SpeechInputResultList: {
    "": "Interceptor_ListMixin_ImmutableListMixin2;",
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 !== index || index >= t1)
        throw H.wrapException(P.RangeError$range(index, 0, t1));
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(new P.StateError("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(new P.StateError("No elements"));
    },
    elementAt$1: [function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        return H.ioore(receiver, index);
      return receiver[index];
    }, "call$1", "get$elementAt", 2, 0, null, 47],
    item$1: [function(receiver, index) {
      return receiver.item(index);
    }, "call$1", "get$item", 2, 0, 406, 47],
    $isList: true,
    $asList: function() {
      return [W.SpeechInputResult];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [W.SpeechInputResult];
    },
    $isJavaScriptIndexingBehavior: true,
    "%": "SpeechInputResultList"
  },
  _SpeechRecognitionResultList: {
    "": "Interceptor_ListMixin_ImmutableListMixin3;",
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 !== index || index >= t1)
        throw H.wrapException(P.RangeError$range(index, 0, t1));
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(receiver, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    set$length: function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first: function(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw H.wrapException(new P.StateError("No elements"));
    },
    get$last: function(receiver) {
      var len = receiver.length;
      if (len > 0)
        return receiver[len - 1];
      throw H.wrapException(new P.StateError("No elements"));
    },
    elementAt$1: [function(receiver, index) {
      if (index >>> 0 !== index || index >= receiver.length)
        return H.ioore(receiver, index);
      return receiver[index];
    }, "call$1", "get$elementAt", 2, 0, null, 47],
    item$1: [function(receiver, index) {
      return receiver.item(index);
    }, "call$1", "get$item", 2, 0, 407, 47],
    $isList: true,
    $asList: function() {
      return [W.SpeechRecognitionResult];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [W.SpeechRecognitionResult];
    },
    $isJavaScriptIndexingBehavior: true,
    "%": "SpeechRecognitionResultList"
  },
  Console: {
    "": "Object;",
    error$1: [function(_, arg) {
      return typeof console != "undefined" ? console.error(arg) : null;
    }, "call$1", "get$error", 2, 0, 569, 209],
    info$1: [function(arg) {
      return typeof console != "undefined" ? console.info(arg) : null;
    }, "call$1", "get$info", 2, 0, null, 209],
    timeStamp$1: [function(_, arg) {
      return typeof console != "undefined" ? console.timeStamp(arg) : null;
    }, "call$1", "get$timeStamp", 2, 0, 569, 209],
    static: {"": "Console__safeConsole"}
  },
  Interceptor_CssStyleDeclarationBase: {
    "": "Interceptor+CssStyleDeclarationBase;"
  },
  CssStyleDeclarationBase: {
    "": "Object;",
    get$clear: function(receiver) {
      return this.getPropertyValue$1(receiver, "clear");
    },
    clear$0: function($receiver) {
      return this.get$clear($receiver).call$0();
    },
    get$content: function(receiver) {
      return this.getPropertyValue$1(receiver, "content");
    },
    set$content: function(receiver, value) {
      this.setProperty$3(receiver, "content", value, "");
    },
    get$display: function(receiver) {
      return this.getPropertyValue$1(receiver, "display");
    },
    set$display: function(receiver, value) {
      this.setProperty$3(receiver, "display", value, "");
    },
    get$left: function(receiver) {
      return this.getPropertyValue$1(receiver, "left");
    },
    get$lineHeight: function(receiver) {
      return this.getPropertyValue$1(receiver, "line-height");
    },
    set$lineHeight: function(receiver, value) {
      this.setProperty$3(receiver, "line-height", value, "");
    },
    set$paddingTop: function(receiver, value) {
      this.setProperty$3(receiver, "padding-top", value, "");
    },
    get$position: function(receiver) {
      return this.getPropertyValue$1(receiver, "position");
    },
    set$position: function(receiver, value) {
      this.setProperty$3(receiver, "position", value, "");
    },
    get$right: function(receiver) {
      return this.getPropertyValue$1(receiver, "right");
    },
    get$src: function(receiver) {
      return this.getPropertyValue$1(receiver, "src");
    }
  },
  _ChildrenElementList: {
    "": "ListBase;_element,_childElements",
    contains$1: [function(_, element) {
      return J.contains$1$asx(this._childElements, element);
    }, "call$1", "get$contains", 2, 0, null, 169],
    get$isEmpty: function(_) {
      return this._element.firstElementChild == null;
    },
    get$length: function(_) {
      return this._childElements.length;
    },
    $index: [function(_, index) {
      var t1 = this._childElements;
      if (index >>> 0 !== index || index >= t1.length)
        return H.ioore(t1, index);
      return t1[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(_, index, value) {
      var t1 = this._childElements;
      if (index >>> 0 !== index || index >= t1.length)
        return H.ioore(t1, index);
      this._element.replaceChild(value, t1[index]);
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    set$length: function(_, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot resize element lists"));
    },
    add$1: [function(_, value) {
      this._element.appendChild(value);
      return value;
    }, "call$1", "get$add", 2, 0, null, 23],
    get$iterator: function(_) {
      var t1 = this.toList$0(this);
      return H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]);
    },
    addAll$1: [function(_, iterable) {
      var t1, t2;
      t1 = J.getInterceptor(iterable);
      for (t1 = J.get$iterator$ax(typeof iterable === "object" && iterable !== null && !!t1.$is_ChildNodeListLazy ? P.List_List$from(iterable, true, null) : iterable), t2 = this._element; t1.moveNext$0();)
        t2.appendChild(t1.get$current());
    }, "call$1", "get$addAll", 2, 0, null, 153],
    sort$1: [function(_, compare) {
      throw H.wrapException(P.UnsupportedError$("Cannot sort element lists"));
    }, "call$1", "get$sort", 0, 2, null, 77, 173],
    setRange$4: [function(_, start, end, iterable, skipCount) {
      throw H.wrapException(P.UnimplementedError$(null));
    }, "call$4", "get$setRange", 6, 2, null, 413, 161, 162, 153, 163],
    remove$1: [function(_, object) {
      var t1 = J.getInterceptor(object);
      if (typeof object === "object" && object !== null && !!t1.$isElement) {
        t1 = this._element;
        if (object.parentNode === t1) {
          t1.removeChild(object);
          return true;
        }
      }
      return false;
    }, "call$1", "get$remove", 2, 0, null, 6],
    insert$2: [function(_, index, element) {
      var t1, t2, t3;
      if (index > this._childElements.length)
        throw H.wrapException(P.RangeError$range(index, 0, this._childElements.length));
      t1 = this._childElements;
      t2 = t1.length;
      t3 = this._element;
      if (index === t2)
        t3.appendChild(element);
      else {
        if (index >= t2)
          return H.ioore(t1, index);
        t3.insertBefore(element, t1[index]);
      }
    }, "call$2", "get$insert", 4, 0, null, 47, 169],
    clear$0: [function(_) {
      this._element.textContent = "";
    }, "call$0", "get$clear", 0, 0, null],
    removeLast$0: [function(_) {
      var result = this.get$last(this);
      if (result != null)
        this._element.removeChild(result);
      return result;
    }, "call$0", "get$removeLast", 0, 0, null],
    get$first: function(_) {
      var result = this._element.firstElementChild;
      if (result == null)
        throw H.wrapException(new P.StateError("No elements"));
      return result;
    },
    get$last: function(_) {
      var result = this._element.lastElementChild;
      if (result == null)
        throw H.wrapException(new P.StateError("No elements"));
      return result;
    },
    $asListBase: function() {
      return [W.Element];
    },
    $asList: function() {
      return [W.Element];
    },
    $asIterable: function() {
      return [W.Element];
    }
  },
  _FrozenElementList: {
    "": "ListBase;_nodeList,_elementList",
    get$length: function(_) {
      return this._nodeList.length;
    },
    $index: [function(_, index) {
      var t1 = this._nodeList;
      if (index >>> 0 !== index || index >= t1.length)
        return H.ioore(t1, index);
      return t1[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(_, index, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    set$length: function(_, newLength) {
      throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
    },
    sort$1: [function(_, compare) {
      throw H.wrapException(P.UnsupportedError$("Cannot sort list"));
    }, "call$1", "get$sort", 0, 2, null, 77, 173],
    get$first: function(_) {
      return C.NodeList_methods.get$first(this._nodeList);
    },
    get$last: function(_) {
      return C.NodeList_methods.get$last(this._nodeList);
    },
    get$classes: function(_) {
      return W._MultiElementCssClassSet$(this._elementList);
    },
    set$classes: function(_, value) {
      H.IterableMixinWorkaround_forEach(this._elementList, new W._FrozenElementList_classes_closure(value));
    },
    get$marginEdge: function(_) {
      return J.get$marginEdge$x(C.JSArray_methods.get$first(this._elementList));
    },
    get$onChange: function(_) {
      return C.EventStreamProvider_change._forElementList$1(this);
    },
    get$onClick: function(_) {
      return C.EventStreamProvider_click._forElementList$1(this);
    },
    get$onInput: function(_) {
      return C.EventStreamProvider_input._forElementList$1(this);
    },
    _html$_FrozenElementList$_wrap$1: function(_nodeList, $T) {
      var t1 = C.NodeList_methods.where$1(this._nodeList, new W._FrozenElementList$_wrap_closure());
      this._elementList = P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "IterableBase", 0));
    },
    $isList: true,
    $asList: null,
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: null,
    static: {_FrozenElementList$_wrap: function(_nodeList, $T) {
        var t1 = H.setRuntimeTypeInfo(new W._FrozenElementList(_nodeList, null), [$T]);
        t1._html$_FrozenElementList$_wrap$1(_nodeList, $T);
        return t1;
      }}
  },
  _FrozenElementList$_wrap_closure: {
    "": "Closure:271;",
    call$1: [function(e) {
      var t1 = J.getInterceptor(e);
      return typeof e === "object" && e !== null && !!t1.$isElement;
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  _FrozenElementList_classes_closure: {
    "": "Closure:271;value_0",
    call$1: [function(e) {
      var t1 = this.value_0;
      J.set$classes$x(e, t1);
      return t1;
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  Element_Element$html_closure: {
    "": "Closure:271;",
    call$1: [function(e) {
      var t1 = J.getInterceptor(e);
      return typeof e === "object" && e !== null && !!t1.$isElement;
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  Entry: {
    "": "Interceptor;"
  },
  Events: {
    "": "Object;_ptr<",
    $index: [function(_, type) {
      return H.setRuntimeTypeInfo(new W._EventStream(this.get$_ptr(), type, false), [null]);
    }, "call$1", "get$[]", 2, 0, null, 11]
  },
  ElementEvents: {
    "": "Events;_ptr:html$ElementEvents$_ptr<,_ptr",
    $index: [function(_, type) {
      var t1, t2;
      t1 = $.get$ElementEvents_webkitEvents();
      t2 = J.getInterceptor$s(type);
      if (t1.get$keys()._collection$_map.containsKey$1(t2.toLowerCase$0(type)))
        if (P.Device_isWebKit() === true)
          return H.setRuntimeTypeInfo(new W._ElementEventStreamImpl(this.html$ElementEvents$_ptr, t1.$index(0, t2.toLowerCase$0(type)), false), [null]);
      return H.setRuntimeTypeInfo(new W._ElementEventStreamImpl(this.html$ElementEvents$_ptr, type, false), [null]);
    }, "call$1", "get$[]", 2, 0, null, 11],
    static: {"": "ElementEvents_webkitEvents"}
  },
  Interceptor_ListMixin: {
    "": "Interceptor+ListMixin;",
    $isList: true,
    $asList: function() {
      return [W.Node];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [W.Node];
    }
  },
  Interceptor_ListMixin_ImmutableListMixin: {
    "": "Interceptor_ListMixin+ImmutableListMixin;",
    $isList: true,
    $asList: function() {
      return [W.Node];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [W.Node];
    }
  },
  HttpRequest_getString_closure: {
    "": "Closure:271;",
    call$1: [function(xhr) {
      return J.get$responseText$x(xhr);
    }, "call$1", null, 2, 0, null, 570, "call"],
    $isFunction: true
  },
  HttpRequest_request_closure0: {
    "": "Closure:426;xhr_0",
    call$2: [function(header, value) {
      this.xhr_0.setRequestHeader(header, value);
    }, "call$2", null, 4, 0, null, 571, 23, "call"],
    $isFunction: true
  },
  HttpRequest_request_closure: {
    "": "Closure:271;completer_1,xhr_2",
    call$1: [function(e) {
      var t1, t2, t3;
      t1 = this.xhr_2;
      t2 = t1.status;
      if (typeof t2 !== "number")
        return t2.$ge();
      t2 = t2 >= 200 && t2 < 300 || t2 === 0 || t2 === 304;
      t3 = this.completer_1;
      if (t2) {
        t2 = t3.future;
        if (t2._state !== 0)
          H.throwExpression(new P.StateError("Future already completed"));
        t2._asyncComplete$1(t1);
      } else
        t3.completeError$1(e);
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  MutationObserver_observe_override: {
    "": "Closure:426;parsedOptions_0",
    call$2: [function(key, value) {
      if (value != null)
        this.parsedOptions_0[key] = value;
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true
  },
  _ChildNodeListLazy: {
    "": "ListBase;_this",
    get$first: function(_) {
      var result = this._this.firstChild;
      if (result == null)
        throw H.wrapException(new P.StateError("No elements"));
      return result;
    },
    get$last: function(_) {
      var result = this._this.lastChild;
      if (result == null)
        throw H.wrapException(new P.StateError("No elements"));
      return result;
    },
    get$single: function(_) {
      var t1, l;
      t1 = this._this;
      l = t1.childNodes.length;
      if (l === 0)
        throw H.wrapException(new P.StateError("No elements"));
      if (l > 1)
        throw H.wrapException(new P.StateError("More than one element"));
      return t1.firstChild;
    },
    add$1: [function(_, value) {
      this._this.appendChild(value);
    }, "call$1", "get$add", 2, 0, null, 23],
    addAll$1: [function(_, iterable) {
      var t1, t2, len, i;
      t1 = J.getInterceptor$ax(iterable);
      if (typeof iterable === "object" && iterable !== null && !!t1.$is_ChildNodeListLazy) {
        t1 = iterable._this;
        t2 = this._this;
        if (t1 !== t2)
          for (len = t1.childNodes.length, i = 0; i < len; ++i)
            t2.appendChild(t1.firstChild);
        return;
      }
      for (t1 = t1.get$iterator(iterable), t2 = this._this; t1.moveNext$0();)
        t2.appendChild(t1.get$current());
    }, "call$1", "get$addAll", 2, 0, null, 153],
    insert$2: [function(_, index, node) {
      var t1, t2, t3;
      if (index > this._this.childNodes.length)
        throw H.wrapException(P.RangeError$range(index, 0, this._this.childNodes.length));
      t1 = this._this;
      t2 = t1.childNodes;
      t3 = t2.length;
      if (index === t3)
        t1.appendChild(node);
      else {
        if (index >= t3)
          return H.ioore(t2, index);
        t1.insertBefore(node, t2[index]);
      }
    }, "call$2", "get$insert", 4, 0, null, 47, 312],
    removeLast$0: [function(_) {
      var result = this.get$last(this);
      if (result != null)
        this._this.removeChild(result);
      return result;
    }, "call$0", "get$removeLast", 0, 0, null],
    remove$1: [function(_, object) {
      var t1 = J.getInterceptor(object);
      if (typeof object !== "object" || object === null || !t1.$isNode)
        return false;
      t1 = this._this;
      if (t1 !== object.parentNode)
        return false;
      t1.removeChild(object);
      return true;
    }, "call$1", "get$remove", 2, 0, null, 6],
    clear$0: [function(_) {
      this._this.textContent = "";
    }, "call$0", "get$clear", 0, 0, null],
    $indexSet: [function(_, index, value) {
      var t1, t2;
      t1 = this._this;
      t2 = t1.childNodes;
      if (index >>> 0 !== index || index >= t2.length)
        return H.ioore(t2, index);
      t1.replaceChild(value, t2[index]);
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    get$iterator: function(_) {
      return C.NodeList_methods.get$iterator(this._this.childNodes);
    },
    sort$1: [function(_, compare) {
      throw H.wrapException(P.UnsupportedError$("Cannot sort Node list"));
    }, "call$1", "get$sort", 0, 2, null, 77, 173],
    setRange$4: [function(_, start, end, iterable, skipCount) {
      throw H.wrapException(P.UnsupportedError$("Cannot setRange on Node list"));
    }, "call$4", "get$setRange", 6, 2, null, 413, 161, 162, 153, 163],
    get$length: function(_) {
      return this._this.childNodes.length;
    },
    set$length: function(_, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot set length on immutable List."));
    },
    $index: [function(_, index) {
      var t1 = this._this.childNodes;
      if (index >>> 0 !== index || index >= t1.length)
        return H.ioore(t1, index);
      return t1[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $is_ChildNodeListLazy: true,
    $asListBase: function() {
      return [W.Node];
    },
    $asList: function() {
      return [W.Node];
    },
    $asIterable: function() {
      return [W.Node];
    }
  },
  Interceptor_ListMixin0: {
    "": "Interceptor+ListMixin;",
    $isList: true,
    $asList: function() {
      return [W.Node];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [W.Node];
    }
  },
  Interceptor_ListMixin_ImmutableListMixin0: {
    "": "Interceptor_ListMixin0+ImmutableListMixin;",
    $isList: true,
    $asList: function() {
      return [W.Node];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [W.Node];
    }
  },
  Window_animationFrame_closure: {
    "": "Closure:271;completer_0",
    call$1: [function(time) {
      var t1 = this.completer_0.future;
      if (t1._state !== 0)
        H.throwExpression(new P.StateError("Future already completed"));
      t1._complete$1(time);
    }, "call$1", null, 2, 0, null, 572, "call"],
    $isFunction: true
  },
  Interceptor_ListMixin1: {
    "": "Interceptor+ListMixin;",
    $isList: true,
    $asList: function() {
      return [W.Node];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [W.Node];
    }
  },
  Interceptor_ListMixin_ImmutableListMixin1: {
    "": "Interceptor_ListMixin1+ImmutableListMixin;",
    $isList: true,
    $asList: function() {
      return [W.Node];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [W.Node];
    }
  },
  Interceptor_ListMixin2: {
    "": "Interceptor+ListMixin;",
    $isList: true,
    $asList: function() {
      return [W.SpeechInputResult];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [W.SpeechInputResult];
    }
  },
  Interceptor_ListMixin_ImmutableListMixin2: {
    "": "Interceptor_ListMixin2+ImmutableListMixin;",
    $isList: true,
    $asList: function() {
      return [W.SpeechInputResult];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [W.SpeechInputResult];
    }
  },
  Interceptor_ListMixin3: {
    "": "Interceptor+ListMixin;",
    $isList: true,
    $asList: function() {
      return [W.SpeechRecognitionResult];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [W.SpeechRecognitionResult];
    }
  },
  Interceptor_ListMixin_ImmutableListMixin3: {
    "": "Interceptor_ListMixin3+ImmutableListMixin;",
    $isList: true,
    $asList: function() {
      return [W.SpeechRecognitionResult];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [W.SpeechRecognitionResult];
    }
  },
  _AttributeMap: {
    "": "Object;",
    addAll$1: [function(_, other) {
      J.forEach$1$ax(other, new W._AttributeMap_addAll_closure(this));
    }, "call$1", "get$addAll", 2, 0, null, 104],
    containsValue$1: [function(value) {
      var t1;
      for (t1 = this.get$values(this), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();)
        ;
      return false;
    }, "call$1", "get$containsValue", 2, 0, null, 23],
    putIfAbsent$2: [function(key, ifAbsent) {
      if (this.containsKey$1(key) !== true)
        this.$indexSet(0, key, ifAbsent.call$0());
      return this.$index(0, key);
    }, "call$2", "get$putIfAbsent", 4, 0, null, 42, 427],
    clear$0: [function(_) {
      var t1;
      for (t1 = this.get$keys(), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();)
        this.remove$1(0, t1._current);
    }, "call$0", "get$clear", 0, 0, null],
    forEach$1: [function(_, f) {
      var t1, key;
      for (t1 = this.get$keys(), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();) {
        key = t1._current;
        f.call$2(key, this.$index(0, key));
      }
    }, "call$1", "get$forEach", 2, 0, null, 154],
    get$keys: function() {
      var attributes, keys, len, i;
      attributes = this._element.attributes;
      keys = H.setRuntimeTypeInfo([], [J.JSString]);
      for (len = attributes.length, i = 0; i < len; ++i) {
        if (i >= attributes.length)
          return H.ioore(attributes, i);
        if (this._matches$1(attributes[i])) {
          if (i >= attributes.length)
            return H.ioore(attributes, i);
          keys.push(J.get$name$x(attributes[i]));
        }
      }
      return keys;
    },
    get$values: function(_) {
      var attributes, values, len, i;
      attributes = this._element.attributes;
      values = H.setRuntimeTypeInfo([], [J.JSString]);
      for (len = attributes.length, i = 0; i < len; ++i) {
        if (i >= attributes.length)
          return H.ioore(attributes, i);
        if (this._matches$1(attributes[i])) {
          if (i >= attributes.length)
            return H.ioore(attributes, i);
          values.push(J.get$value$x(attributes[i]));
        }
      }
      return values;
    },
    get$isEmpty: function(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty: function(_) {
      return this.get$length(this) !== 0;
    },
    $isMap: true,
    $asMap: function() {
      return [J.JSString, J.JSString];
    }
  },
  _AttributeMap_addAll_closure: {
    "": "Closure:426;this_0",
    call$2: [function(k, v) {
      this.this_0.$indexSet(0, k, v);
    }, "call$2", null, 4, 0, null, 501, 326, "call"],
    $isFunction: true
  },
  _ElementAttributeMap: {
    "": "_AttributeMap;_element",
    containsKey$1: [function(key) {
      return this._element.hasAttribute(key);
    }, "call$1", "get$containsKey", 2, 0, null, 42],
    $index: [function(_, key) {
      return this._element.getAttribute(key);
    }, "call$1", "get$[]", 2, 0, null, 42],
    $indexSet: [function(_, key, value) {
      this._element.setAttribute(key, value);
    }, "call$2", "get$[]=", 4, 0, null, 42, 23],
    remove$1: [function(_, key) {
      var t1, value;
      t1 = this._element;
      value = t1.getAttribute(key);
      t1.removeAttribute(key);
      return value;
    }, "call$1", "get$remove", 2, 0, null, 42],
    get$length: function(_) {
      return this.get$keys().length;
    },
    _matches$1: [function(node) {
      return node.namespaceURI == null;
    }, "call$1", "get$_matches", 2, 0, null, 312]
  },
  _DataAttributeMap: {
    "": "Object;_attributes",
    addAll$1: [function(_, other) {
      J.forEach$1$ax(other, new W._DataAttributeMap_addAll_closure(this));
    }, "call$1", "get$addAll", 2, 0, null, 104],
    containsValue$1: [function(value) {
      return H.IterableMixinWorkaround_any(this.get$values(this), new W._DataAttributeMap_containsValue_closure(value));
    }, "call$1", "get$containsValue", 2, 0, null, 23],
    containsKey$1: [function(key) {
      return this._attributes._element.hasAttribute("data-" + this._toHyphenedName$1(key));
    }, "call$1", "get$containsKey", 2, 0, null, 42],
    $index: [function(_, key) {
      return this._attributes._element.getAttribute("data-" + this._toHyphenedName$1(key));
    }, "call$1", "get$[]", 2, 0, null, 42],
    $indexSet: [function(_, key, value) {
      this._attributes._element.setAttribute("data-" + this._toHyphenedName$1(key), value);
    }, "call$2", "get$[]=", 4, 0, null, 42, 23],
    putIfAbsent$2: [function(key, ifAbsent) {
      return this._attributes.putIfAbsent$2("data-" + this._toHyphenedName$1(key), ifAbsent);
    }, "call$2", "get$putIfAbsent", 4, 0, null, 42, 427],
    remove$1: [function(_, key) {
      var t1, t2, value;
      t1 = "data-" + this._toHyphenedName$1(key);
      t2 = this._attributes._element;
      value = t2.getAttribute(t1);
      t2.removeAttribute(t1);
      return value;
    }, "call$1", "get$remove", 2, 0, null, 42],
    clear$0: [function(_) {
      var t1, t2, t3;
      for (t1 = this.get$keys(), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]), t2 = this._attributes._element; t1.moveNext$0();) {
        t3 = "data-" + this._toHyphenedName$1(t1._current);
        t2.getAttribute(t3);
        t2.removeAttribute(t3);
      }
    }, "call$0", "get$clear", 0, 0, null],
    forEach$1: [function(_, f) {
      this._attributes.forEach$1(0, new W._DataAttributeMap_forEach_closure(this, f));
    }, "call$1", "get$forEach", 2, 0, null, 154],
    get$keys: function() {
      var keys = H.setRuntimeTypeInfo([], [J.JSString]);
      this._attributes.forEach$1(0, new W._DataAttributeMap_keys_closure(this, keys));
      return keys;
    },
    get$values: function(_) {
      var values = H.setRuntimeTypeInfo([], [J.JSString]);
      this._attributes.forEach$1(0, new W._DataAttributeMap_values_closure(this, values));
      return values;
    },
    get$length: function(_) {
      return this.get$keys().length;
    },
    get$isEmpty: function(_) {
      return this.get$keys().length === 0;
    },
    get$isNotEmpty: function(_) {
      return this.get$keys().length !== 0;
    },
    _toCamelCase$2$startUppercase: [function(hyphenedName, startUppercase) {
      var segments, start, i, segment, t1;
      segments = hyphenedName.split("-");
      start = startUppercase ? 0 : 1;
      for (i = start; i < segments.length; ++i) {
        segment = segments[i];
        t1 = J.getInterceptor$asx(segment);
        if (J.$gt$n(t1.get$length(segment), 0)) {
          t1 = J.toUpperCase$0$s(t1.$index(segment, 0)) + t1.substring$1(segment, 1);
          if (i >= segments.length)
            return H.ioore(segments, i);
          segments[i] = t1;
        }
      }
      return C.JSArray_methods.join$1(segments, "");
    }, function(hyphenedName) {
      return this._toCamelCase$2$startUppercase(hyphenedName, false);
    }, "_toCamelCase$1", "call$2$startUppercase", null, "get$_toCamelCase", 2, 3, null, 112, 324, 325],
    _toHyphenedName$1: [function(word) {
      var sb, t1, i, t2, lower;
      sb = P.StringBuffer$("");
      t1 = J.getInterceptor$asx(word);
      i = 0;
      while (true) {
        t2 = t1.get$length(word);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (!(i < t2))
          break;
        lower = J.toLowerCase$0$s(t1.$index(word, i));
        if (J.$eq(t1.$index(word, i), lower) !== true && i > 0)
          sb._contents = sb._contents + "-";
        sb._contents = sb._contents + lower;
        ++i;
      }
      return sb._contents;
    }, "call$1", "get$_toHyphenedName", 2, 0, null, 573],
    $isMap: true,
    $asMap: function() {
      return [J.JSString, J.JSString];
    }
  },
  _DataAttributeMap_addAll_closure: {
    "": "Closure:426;this_0",
    call$2: [function(k, v) {
      var t1 = this.this_0;
      t1._attributes._element.setAttribute("data-" + t1._toHyphenedName$1(k), v);
    }, "call$2", null, 4, 0, null, 501, 326, "call"],
    $isFunction: true
  },
  _DataAttributeMap_containsValue_closure: {
    "": "Closure:271;value_0",
    call$1: [function(v) {
      return J.$eq(v, this.value_0);
    }, "call$1", null, 2, 0, null, 326, "call"],
    $isFunction: true
  },
  _DataAttributeMap_forEach_closure: {
    "": "Closure:141;this_0,f_1",
    call$2: [function(key, value) {
      var t1 = J.getInterceptor$s(key);
      if (t1.startsWith$1(key, "data-"))
        this.f_1.call$2(this.this_0._toCamelCase$1(t1.substring$1(key, 5)), value);
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true
  },
  _DataAttributeMap_keys_closure: {
    "": "Closure:141;this_0,keys_1",
    call$2: [function(key, value) {
      var t1 = J.getInterceptor$s(key);
      if (t1.startsWith$1(key, "data-"))
        this.keys_1.push(this.this_0._toCamelCase$1(t1.substring$1(key, 5)));
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true
  },
  _DataAttributeMap_values_closure: {
    "": "Closure:141;this_0,values_1",
    call$2: [function(key, value) {
      if (J.startsWith$1$s(key, "data-"))
        this.values_1.push(value);
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true
  },
  _MultiElementCssClassSet: {
    "": "CssClassSetImpl;_elementIterable,_elementCssClassSetIterable",
    readClasses$0: [function() {
      var s = P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSString);
      this._elementCssClassSetIterable.forEach$1(0, new W._MultiElementCssClassSet_readClasses_closure(s));
      return s;
    }, "call$0", "get$readClasses", 0, 0, null],
    writeClasses$1: [function(s) {
      var classes, t1;
      classes = C.JSArray_methods.join$1(P.List_List$from(s, true, null), " ");
      for (t1 = this._elementIterable, t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();)
        J.set$className$x(t1._current, classes);
    }, "call$1", "get$writeClasses", 2, 0, null, 86],
    modify$1: [function(f) {
      this._elementCssClassSetIterable.forEach$1(0, new W._MultiElementCssClassSet_modify_closure(f));
    }, "call$1", "get$modify", 2, 0, null, 154],
    toggle$2: [function(value, shouldAdd) {
      return this._modifyWithReturnValue$1(new W._MultiElementCssClassSet_toggle_closure(value, shouldAdd));
    }, "call$2", "get$toggle", 2, 2, null, 77, 23, 574],
    remove$1: [function(_, value) {
      return this._modifyWithReturnValue$1(new W._MultiElementCssClassSet_remove_closure(value));
    }, "call$1", "get$remove", 2, 0, null, 23],
    _modifyWithReturnValue$1: [function(f) {
      return this._elementCssClassSetIterable.fold$2(0, false, new W._MultiElementCssClassSet__modifyWithReturnValue_closure(f));
    }, "call$1", "get$_modifyWithReturnValue", 2, 0, null, 154],
    _MultiElementCssClassSet$1: function(_elementIterable) {
      this._elementCssClassSetIterable = H.setRuntimeTypeInfo(new H.MappedListIterable(P.List_List$from(this._elementIterable, true, null), new W._MultiElementCssClassSet_closure()), [null, null]);
    },
    static: {_MultiElementCssClassSet$: function(_elementIterable) {
        var t1 = new W._MultiElementCssClassSet(_elementIterable, null);
        t1._MultiElementCssClassSet$1(_elementIterable);
        return t1;
      }}
  },
  _MultiElementCssClassSet_closure: {
    "": "Closure:271;",
    call$1: [function(e) {
      return new W._ElementCssClassSet(e);
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  _MultiElementCssClassSet_readClasses_closure: {
    "": "Closure:271;s_0",
    call$1: [function(e) {
      return this.s_0.addAll$1(0, e.readClasses$0());
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  _MultiElementCssClassSet_modify_closure: {
    "": "Closure:271;f_0",
    call$1: [function(e) {
      return e.modify$1(this.f_0);
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  _MultiElementCssClassSet_toggle_closure: {
    "": "Closure:271;value_0,shouldAdd_1",
    call$1: [function(e) {
      return e.toggle$2(this.value_0, this.shouldAdd_1);
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  _MultiElementCssClassSet_remove_closure: {
    "": "Closure:271;value_0",
    call$1: [function(e) {
      return J.remove$1$ax(e, this.value_0);
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  _MultiElementCssClassSet__modifyWithReturnValue_closure: {
    "": "Closure:426;f_0",
    call$2: [function(prevValue, element) {
      return this.f_0.call$1(element) === true || prevValue === true;
    }, "call$2", null, 4, 0, null, 575, 169, "call"],
    $isFunction: true
  },
  _ElementCssClassSet: {
    "": "CssClassSetImpl;_element",
    readClasses$0: [function() {
      var s, t1, trimmed;
      s = P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSString);
      for (t1 = J.split$1$s(J.get$className$x(this._element), " "), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();) {
        trimmed = J.trim$0$s(t1._current);
        if (trimmed.length !== 0)
          s.add$1(0, trimmed);
      }
      return s;
    }, "call$0", "get$readClasses", 0, 0, null],
    writeClasses$1: [function(s) {
      P.List_List$from(s, true, null);
      J.set$className$x(this._element, s.join$1(0, " "));
    }, "call$1", "get$writeClasses", 2, 0, null, 86]
  },
  _ContentCssRect: {
    "": "CssRect;_element,left,top,width,height",
    get$height: function(_) {
      var t1, t2;
      t1 = J.get$offsetHeight$x(this._element);
      t2 = this._addOrSubtractToBoxModel$2($.get$_HEIGHT(), "content");
      if (typeof t1 !== "number")
        return t1.$add();
      return t1 + t2;
    },
    get$width: function(_) {
      var t1, t2;
      t1 = J.get$offsetWidth$x(this._element);
      t2 = this._addOrSubtractToBoxModel$2($.get$_WIDTH(), "content");
      if (typeof t1 !== "number")
        return t1.$add();
      return t1 + t2;
    },
    get$left: function(_) {
      var t1, t2;
      t1 = J.get$left$x(J.getBoundingClientRect$0$x(this._element));
      t2 = this._addOrSubtractToBoxModel$2(["left"], "content");
      if (typeof t1 !== "number")
        return t1.$sub();
      return t1 - t2;
    },
    get$top: function(_) {
      var t1, t2;
      t1 = J.get$top$x(J.getBoundingClientRect$0$x(this._element));
      t2 = this._addOrSubtractToBoxModel$2(["top"], "content");
      if (typeof t1 !== "number")
        return t1.$sub();
      return t1 - t2;
    }
  },
  _MarginCssRect: {
    "": "CssRect;_element,left,top,width,height",
    get$height: function(_) {
      var t1, t2;
      t1 = J.get$offsetHeight$x(this._element);
      t2 = this._addOrSubtractToBoxModel$2($.get$_HEIGHT(), "margin");
      if (typeof t1 !== "number")
        return t1.$add();
      return t1 + t2;
    },
    get$width: function(_) {
      var t1, t2;
      t1 = J.get$offsetWidth$x(this._element);
      t2 = this._addOrSubtractToBoxModel$2($.get$_WIDTH(), "margin");
      if (typeof t1 !== "number")
        return t1.$add();
      return t1 + t2;
    },
    get$left: function(_) {
      var t1, t2;
      t1 = J.get$left$x(J.getBoundingClientRect$0$x(this._element));
      t2 = this._addOrSubtractToBoxModel$2(["left"], "margin");
      if (typeof t1 !== "number")
        return t1.$sub();
      return t1 - t2;
    },
    get$top: function(_) {
      var t1, t2;
      t1 = J.get$top$x(J.getBoundingClientRect$0$x(this._element));
      t2 = this._addOrSubtractToBoxModel$2(["top"], "margin");
      if (typeof t1 !== "number")
        return t1.$sub();
      return t1 - t2;
    }
  },
  CssRect: {
    "": "MutableRectangle;",
    _addOrSubtractToBoxModel$2: [function(dimensions, augmentingMeasurement) {
      var styles, t1, t2, t3, t4, val, measurement, propValue, t5;
      styles = J.getComputedStyle$0$x(this._element);
      for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(dimensions, dimensions.length, 0, null), [H.getTypeArgumentByIndex(dimensions, 0)]), t2 = augmentingMeasurement === "margin", t3 = !t2, t4 = augmentingMeasurement === "content", val = 0; t1.moveNext$0();) {
        measurement = t1._current;
        if (t2) {
          propValue = styles.getPropertyValue(augmentingMeasurement + "-" + H.S(measurement));
          t5 = W.Dimension$css(propValue != null ? propValue : "")._html$_value;
          if (typeof t5 !== "number")
            return H.iae(t5);
          val += t5;
        }
        if (t4) {
          propValue = styles.getPropertyValue("padding-" + H.S(measurement));
          t5 = W.Dimension$css(propValue != null ? propValue : "")._html$_value;
          if (typeof t5 !== "number")
            return H.iae(t5);
          val -= t5;
        }
        if (t3) {
          propValue = styles.getPropertyValue("border-" + H.S(measurement) + "-width");
          t5 = W.Dimension$css(propValue != null ? propValue : "")._html$_value;
          if (typeof t5 !== "number")
            return H.iae(t5);
          val -= t5;
        }
      }
      return val;
    }, "call$2", "get$_addOrSubtractToBoxModel", 4, 0, null, 576, 577],
    $asMutableRectangle: function() {
      return [J.JSNumber];
    },
    $as_RectangleBase: function() {
      return [J.JSNumber];
    },
    $asRectangle: function() {
      return [J.JSNumber];
    },
    $isRectangle: true
  },
  Dimension: {
    "": "Object;_html$_value,_unit",
    toString$0: [function(_) {
      return H.S(this._html$_value) + this._unit;
    }, "call$0", "get$toString", 0, 0, null],
    get$value: function(_) {
      return this._html$_value;
    },
    Dimension$css$1: function(cssValue) {
      var t1, t2, t3;
      if (cssValue === "")
        cssValue = "0px";
      if (J.getInterceptor$s(cssValue).endsWith$1(cssValue, "%") === true)
        this._unit = "%";
      else
        this._unit = C.JSString_methods.substring$1(cssValue, cssValue.length - 2);
      t1 = C.JSString_methods.contains$1(cssValue, ".");
      t2 = cssValue.length;
      t3 = this._unit;
      if (t1)
        this._html$_value = H.Primitives_parseDouble(C.JSString_methods.substring$2(cssValue, 0, t2 - t3.length), null);
      else
        this._html$_value = H.Primitives_parseInt(C.JSString_methods.substring$2(cssValue, 0, t2 - t3.length), null, null);
    },
    static: {Dimension$css: function(cssValue) {
        var t1 = new W.Dimension(null, null);
        t1.Dimension$css$1(cssValue);
        return t1;
      }}
  },
  EventStreamProvider: {
    "": "Object;_eventType",
    forTarget$2$useCapture: [function(e, useCapture) {
      return H.setRuntimeTypeInfo(new W._EventStream(e, this._eventType, useCapture), [null]);
    }, function(e) {
      return this.forTarget$2$useCapture(e, false);
    }, "forTarget$1", "call$2$useCapture", null, "get$forTarget", 2, 3, null, 112, 18, 372],
    forElement$2$useCapture: [function(e, useCapture) {
      return H.setRuntimeTypeInfo(new W._ElementEventStreamImpl(e, this._eventType, useCapture), [null]);
    }, function(e) {
      return this.forElement$2$useCapture(e, false);
    }, "forElement$1", "call$2$useCapture", null, "get$forElement", 2, 3, null, 112, 18, 372],
    _forElementList$2$useCapture: [function(e, useCapture) {
      return H.setRuntimeTypeInfo(new W._ElementListEventStreamImpl(e, useCapture, this._eventType), [null]);
    }, function(e) {
      return this._forElementList$2$useCapture(e, false);
    }, "_forElementList$1", "call$2$useCapture", null, "get$_forElementList", 2, 3, null, 112, 18, 372]
  },
  _EventStream: {
    "": "Stream;_target,_eventType,_useCapture",
    listen$4$cancelOnError$onDone$onError: [function(onData, cancelOnError, onDone, onError) {
      var t1 = new W._EventStreamSubscription(0, this._target, this._eventType, W._wrapZone(onData), this._useCapture);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      t1._tryResume$0();
      return t1;
    }, function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }, "listen$3$onDone$onError", function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    }, "listen$1", "call$4$cancelOnError$onDone$onError", null, null, "get$listen", 2, 7, null, 77, 77, 77, 422, 423, 424, 200]
  },
  _ElementEventStreamImpl: {
    "": "_EventStream;_target,_eventType,_useCapture",
    matches$1: [function(_, selector) {
      var t1 = H.setRuntimeTypeInfo(new P._WhereStream(new W._ElementEventStreamImpl_matches_closure(selector), this), [H.getRuntimeTypeArgument(this, "Stream", 0)]);
      return H.setRuntimeTypeInfo(new P._MapStream(new W._ElementEventStreamImpl_matches_closure0(selector), t1), [H.getRuntimeTypeArgument(t1, "Stream", 0), null]);
    }, "call$1", "get$matches", 2, 0, null, 578],
    $isStream: true
  },
  _ElementEventStreamImpl_matches_closure: {
    "": "Closure:271;selector_0",
    call$1: [function($event) {
      return J.matchesWithAncestors$1$x(J.get$target$x($event), this.selector_0);
    }, "call$1", null, 2, 0, null, 349, "call"],
    $isFunction: true
  },
  _ElementEventStreamImpl_matches_closure0: {
    "": "Closure:271;selector_1",
    call$1: [function(e) {
      J.set$_selector$x(e, this.selector_1);
      return e;
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  _ElementListEventStreamImpl: {
    "": "Stream;_targetList,_useCapture,_eventType",
    matches$1: [function(_, selector) {
      var t1 = H.setRuntimeTypeInfo(new P._WhereStream(new W._ElementListEventStreamImpl_matches_closure(selector), this), [H.getRuntimeTypeArgument(this, "Stream", 0)]);
      return H.setRuntimeTypeInfo(new P._MapStream(new W._ElementListEventStreamImpl_matches_closure0(selector), t1), [H.getRuntimeTypeArgument(t1, "Stream", 0), null]);
    }, "call$1", "get$matches", 2, 0, null, 578],
    listen$4$cancelOnError$onDone$onError: [function(onData, cancelOnError, onDone, onError) {
      var pool, t1, t2, t3, t4;
      pool = H.setRuntimeTypeInfo(new W._StreamPool(null, P.LinkedHashMap_LinkedHashMap(null, null, null, [P.Stream, null], [P.StreamSubscription, null])), [null]);
      pool._html$_StreamPool$broadcast$0(null);
      for (t1 = this._targetList, t1 = t1.get$iterator(t1), t2 = this._eventType, t3 = this._useCapture; t1.moveNext$0();) {
        t4 = new W._EventStream(t1._current, t2, t3);
        t4.$builtinTypeInfo = [null];
        pool.add$1(0, t4);
      }
      t1 = pool._html$_controller;
      t1.toString;
      return H.setRuntimeTypeInfo(new P._BroadcastStream(t1), [H.getTypeArgumentByIndex(t1, 0)]).listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
    }, function(onData, onDone, onError) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
    }, "listen$3$onDone$onError", function(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    }, "listen$1", "call$4$cancelOnError$onDone$onError", null, null, "get$listen", 2, 7, null, 77, 77, 77, 422, 423, 424, 200],
    $isStream: true
  },
  _ElementListEventStreamImpl_matches_closure: {
    "": "Closure:271;selector_0",
    call$1: [function($event) {
      return J.matchesWithAncestors$1$x(J.get$target$x($event), this.selector_0);
    }, "call$1", null, 2, 0, null, 349, "call"],
    $isFunction: true
  },
  _ElementListEventStreamImpl_matches_closure0: {
    "": "Closure:271;selector_1",
    call$1: [function(e) {
      J.set$_selector$x(e, this.selector_1);
      return e;
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  _EventStreamSubscription: {
    "": "StreamSubscription;_pauseCount,_target,_eventType,_onData,_useCapture",
    cancel$0: [function() {
      if (this._target == null)
        return;
      this._unlisten$0();
      this._target = null;
      this._onData = null;
    }, "call$0", "get$cancel", 0, 0, null],
    pause$1: [function(_, resumeSignal) {
      if (this._target == null)
        return;
      this._pauseCount = this._pauseCount + 1;
      this._unlisten$0();
    }, function($receiver) {
      return this.pause$1($receiver, null);
    }, "pause$0", "call$1", null, "get$pause", 0, 2, null, 77, 529],
    resume$0: [function() {
      if (this._target == null || this._pauseCount <= 0)
        return;
      this._pauseCount = this._pauseCount - 1;
      this._tryResume$0();
    }, "call$0", "get$resume", 0, 0, null],
    _tryResume$0: [function() {
      var t1 = this._onData;
      if (t1 != null && this._pauseCount <= 0)
        J.addEventListener$3$x(this._target, this._eventType, t1, this._useCapture);
    }, "call$0", "get$_tryResume", 0, 0, null],
    _unlisten$0: [function() {
      var t1 = this._onData;
      if (t1 != null)
        J.removeEventListener$3$x(this._target, this._eventType, t1, this._useCapture);
    }, "call$0", "get$_unlisten", 0, 0, null]
  },
  _StreamPool: {
    "": "Object;_html$_controller,_subscriptions",
    add$1: [function(_, stream) {
      var t1, t2;
      t1 = this._subscriptions;
      if (t1.containsKey$1(stream))
        return;
      t2 = this._html$_controller;
      t1.$indexSet(0, stream, stream.listen$3$onDone$onError(t2.get$add(t2), new W._StreamPool_add_closure(this, stream), this._html$_controller.get$addError()));
    }, "call$1", "get$add", 2, 0, null, 579],
    remove$1: [function(_, stream) {
      var subscription = this._subscriptions.remove$1(0, stream);
      if (subscription != null)
        subscription.cancel$0();
    }, "call$1", "get$remove", 2, 0, null, 579],
    close$0: [function(_) {
      var t1, t2;
      for (t1 = this._subscriptions, t2 = t1.get$values(t1), t2 = H.setRuntimeTypeInfo(new H.MappedIterator(null, J.get$iterator$ax(t2._iterable), t2._f), [H.getTypeArgumentByIndex(t2, 0), H.getTypeArgumentByIndex(t2, 1)]); t2.moveNext$0();)
        t2._current.cancel$0();
      t1.clear$0(0);
      this._html$_controller.close$0(0);
    }, "call$0", "get$close", 0, 0, 107],
    _html$_StreamPool$broadcast$0: function($T) {
      this._html$_controller = P.StreamController_StreamController$broadcast(this.get$close(this), null, true, $T);
    }
  },
  _StreamPool_add_closure: {
    "": "Closure:108;this_0,stream_1",
    call$0: [function() {
      return this.this_0.remove$1(0, this.stream_1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _CustomEventStreamProvider: {
    "": "Object;_eventTypeGetter",
    _eventTypeGetter$1: function(arg0) {
      return this._eventTypeGetter.call$1(arg0);
    },
    forTarget$2$useCapture: [function(e, useCapture) {
      return H.setRuntimeTypeInfo(new W._EventStream(e, this._eventTypeGetter$1(e), useCapture), [null]);
    }, function(e) {
      return this.forTarget$2$useCapture(e, false);
    }, "forTarget$1", "call$2$useCapture", null, "get$forTarget", 2, 3, null, 112, 18, 372]
  },
  _Html5NodeValidator: {
    "": "Object;uriPolicy<",
    allowsElement$1: [function(element) {
      return $.get$_Html5NodeValidator__allowedElements().contains$1(0, J.get$tagName$x(element));
    }, "call$1", "get$allowsElement", 2, 0, null, 169],
    allowsAttribute$3: [function(element, attributeName, value) {
      var tagName, t1, validator;
      tagName = J.get$tagName$x(element);
      t1 = $.get$_Html5NodeValidator__attributeValidators();
      validator = t1.$index(0, tagName + "::" + attributeName);
      if (validator == null)
        validator = t1.$index(0, "*::" + attributeName);
      if (validator == null)
        return false;
      return validator.call$4(element, attributeName, value, this);
    }, "call$3", "get$allowsAttribute", 6, 0, null, 169, 268, 23],
    _Html5NodeValidator$1$uriPolicy: function(uriPolicy) {
      var t1, t2;
      t1 = $.get$_Html5NodeValidator__attributeValidators();
      if (t1.get$isEmpty(t1)) {
        for (t2 = H.setRuntimeTypeInfo(new H.ListIterator(C.List_1GN, 261, 0, null), [H.getTypeArgumentByIndex(C.List_1GN, 0)]); t2.moveNext$0();)
          t1.$indexSet(0, t2._current, W._Html5NodeValidator__standardAttributeValidator$closure());
        for (t2 = H.setRuntimeTypeInfo(new H.ListIterator(C.List_yrN, 12, 0, null), [H.getTypeArgumentByIndex(C.List_yrN, 0)]); t2.moveNext$0();)
          t1.$indexSet(0, t2._current, W._Html5NodeValidator__uriAttributeValidator$closure());
      }
    },
    $isNodeValidator: true,
    static: {"": "_Html5NodeValidator__allowedElements,_Html5NodeValidator__standardAttributes,_Html5NodeValidator__uriAttributes,_Html5NodeValidator__attributeValidators", _Html5NodeValidator$: function(uriPolicy) {
        var t1 = new W._SameOriginUriPolicy(W.AnchorElement_AnchorElement(null), C.Window_methods.get$location(window));
        t1 = new W._Html5NodeValidator(t1);
        t1._Html5NodeValidator$1$uriPolicy(uriPolicy);
        return t1;
      }, _Html5NodeValidator__standardAttributeValidator: [function(element, attributeName, value, context) {
        return true;
      }, "call$4", "_Html5NodeValidator__standardAttributeValidator$closure", 8, 0, 267, 169, 268, 23, 89], _Html5NodeValidator__uriAttributeValidator: [function(element, attributeName, value, context) {
        var t1, t2, t3, t4, t5, t6;
        t1 = context.get$uriPolicy();
        t2 = t1._hiddenAnchor;
        t3 = J.getInterceptor$x(t2);
        t3.set$href(t2, value);
        t4 = t3.get$hostname(t2);
        t1 = t1._loc;
        t5 = J.getInterceptor$x(t1);
        t6 = t5.get$hostname(t1);
        if (t4 == null ? t6 == null : t4 === t6) {
          t4 = t3.get$port(t2);
          t6 = t5.get$port(t1);
          if (t4 == null ? t6 == null : t4 === t6) {
            t4 = t3.get$protocol(t2);
            t1 = t5.get$protocol(t1);
            t1 = t4 == null ? t1 == null : t4 === t1;
          } else
            t1 = false;
        } else
          t1 = false;
        if (!t1)
          t1 = t3.get$hostname(t2) === "" && t3.get$port(t2) === "" && t3.get$protocol(t2) === ":";
        else
          t1 = true;
        return t1;
      }, "call$4", "_Html5NodeValidator__uriAttributeValidator$closure", 8, 0, 267, 169, 268, 23, 89]}
  },
  ImmutableListMixin: {
    "": "Object;",
    get$iterator: function(receiver) {
      return H.setRuntimeTypeInfo(new W.FixedSizeListIterator(receiver, this.get$length(receiver), -1, null), [H.getRuntimeTypeArgument(receiver, "ImmutableListMixin", 0)]);
    },
    add$1: [function(receiver, value) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to immutable List."));
    }, "call$1", "get$add", 2, 0, null, 23],
    addAll$1: [function(receiver, iterable) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to immutable List."));
    }, "call$1", "get$addAll", 2, 0, null, 153],
    sort$1: [function(receiver, compare) {
      throw H.wrapException(P.UnsupportedError$("Cannot sort immutable List."));
    }, "call$1", "get$sort", 0, 2, null, 77, 173],
    insert$2: [function(receiver, index, element) {
      throw H.wrapException(P.UnsupportedError$("Cannot add to immutable List."));
    }, "call$2", "get$insert", 4, 0, null, 47, 169],
    removeLast$0: [function(receiver) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from immutable List."));
    }, "call$0", "get$removeLast", 0, 0, null],
    remove$1: [function(receiver, object) {
      throw H.wrapException(P.UnsupportedError$("Cannot remove from immutable List."));
    }, "call$1", "get$remove", 2, 0, null, 6],
    setRange$4: [function(receiver, start, end, iterable, skipCount) {
      throw H.wrapException(P.UnsupportedError$("Cannot setRange on immutable List."));
    }, "call$4", "get$setRange", 6, 2, null, 413, 161, 162, 153, 163],
    $isList: true,
    $asList: null,
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: null
  },
  NodeValidatorBuilder: {
    "": "Object;_validators",
    add$1: [function(_, validator) {
      this._validators.push(validator);
    }, "call$1", "get$add", 2, 0, null, 367],
    allowsElement$1: [function(element) {
      return H.IterableMixinWorkaround_any(this._validators, new W.NodeValidatorBuilder_allowsElement_closure(element));
    }, "call$1", "get$allowsElement", 2, 0, null, 169],
    allowsAttribute$3: [function(element, attributeName, value) {
      return H.IterableMixinWorkaround_any(this._validators, new W.NodeValidatorBuilder_allowsAttribute_closure(element, attributeName, value));
    }, "call$3", "get$allowsAttribute", 6, 0, null, 169, 268, 23],
    $isNodeValidator: true
  },
  NodeValidatorBuilder_allowsElement_closure: {
    "": "Closure:271;element_0",
    call$1: [function(v) {
      return v.allowsElement$1(this.element_0);
    }, "call$1", null, 2, 0, null, 326, "call"],
    $isFunction: true
  },
  NodeValidatorBuilder_allowsAttribute_closure: {
    "": "Closure:271;element_0,attributeName_1,value_2",
    call$1: [function(v) {
      return v.allowsAttribute$3(this.element_0, this.attributeName_1, this.value_2);
    }, "call$1", null, 2, 0, null, 326, "call"],
    $isFunction: true
  },
  _SimpleNodeValidator: {
    "": "Object;uriPolicy<",
    allowsElement$1: [function(element) {
      return this.allowedElements.contains$1(0, J.get$tagName$x(element));
    }, "call$1", "get$allowsElement", 2, 0, null, 169],
    allowsAttribute$3: [function(element, attributeName, value) {
      var tagName, t1;
      tagName = J.get$tagName$x(element);
      t1 = this.allowedUriAttributes;
      if (t1.contains$1(0, tagName + "::" + attributeName))
        return this.uriPolicy.allowsUri$1(value);
      else if (t1.contains$1(0, "*::" + attributeName))
        return this.uriPolicy.allowsUri$1(value);
      else {
        t1 = this.allowedAttributes;
        if (t1.contains$1(0, tagName + "::" + attributeName))
          return true;
        else if (t1.contains$1(0, "*::" + attributeName))
          return true;
        else if (t1.contains$1(0, tagName + "::*"))
          return true;
        else if (t1.contains$1(0, "*::*"))
          return true;
      }
      return false;
    }, "call$3", "get$allowsAttribute", 6, 0, null, 169, 268, 23],
    $isNodeValidator: true
  },
  _TemplatingNodeValidator: {
    "": "_SimpleNodeValidator;_templateAttrs,allowedElements,allowedAttributes,allowedUriAttributes,uriPolicy",
    allowsAttribute$3: [function(element, attributeName, value) {
      if (W._SimpleNodeValidator.prototype.allowsAttribute$3.call(this, element, attributeName, value))
        return true;
      if (attributeName === "template" && value === "")
        return true;
      if (J.get$attributes$x(element)._element.getAttribute("template") === "")
        return this._templateAttrs.contains$1(0, attributeName);
      return false;
    }, "call$3", "get$allowsAttribute", 6, 0, null, 169, 268, 23],
    static: {"": "_TemplatingNodeValidator__TEMPLATE_ATTRS", _TemplatingNodeValidator$: function() {
        var t1, t2, t3, t4;
        t1 = H.setRuntimeTypeInfo(new H.MappedListIterable(C.List_wSV, new W._TemplatingNodeValidator_closure()), [null, null]);
        t2 = P.LinkedHashSet_LinkedHashSet(null, null, null, null);
        t2.addAll$1(0, ["TEMPLATE"]);
        t3 = P.LinkedHashSet_LinkedHashSet(null, null, null, null);
        t3.addAll$1(0, t1);
        t1 = t3;
        t3 = P.LinkedHashSet_LinkedHashSet(null, null, null, null);
        t4 = P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSString);
        t4.addAll$1(0, C.List_wSV);
        return new W._TemplatingNodeValidator(t4, t2, t1, t3, null);
      }}
  },
  _TemplatingNodeValidator_closure: {
    "": "Closure:271;",
    call$1: [function(attr) {
      return "TEMPLATE::" + H.S(attr);
    }, "call$1", null, 2, 0, null, 580, "call"],
    $isFunction: true
  },
  _SvgNodeValidator: {
    "": "Object;",
    allowsElement$1: [function(element) {
      var t1 = J.getInterceptor(element);
      if (!!t1.$isScriptElement)
        return false;
      if (!!t1.$isSvgElement)
        return true;
      return false;
    }, "call$1", "get$allowsElement", 2, 0, null, 169],
    allowsAttribute$3: [function(element, attributeName, value) {
      if (attributeName === "is" || C.JSString_methods.startsWith$1(attributeName, "on"))
        return false;
      return this.allowsElement$1(element);
    }, "call$3", "get$allowsAttribute", 6, 0, null, 169, 268, 23],
    $isNodeValidator: true
  },
  FixedSizeListIterator: {
    "": "Object;_array,_html$_length,_position,_html$_current",
    moveNext$0: [function() {
      var nextPosition, t1;
      nextPosition = this._position + 1;
      t1 = this._html$_length;
      if (nextPosition < t1) {
        this._html$_current = J.$index$asx(this._array, nextPosition);
        this._position = nextPosition;
        return true;
      }
      this._html$_current = null;
      this._position = t1;
      return false;
    }, "call$0", "get$moveNext", 0, 0, null],
    get$current: function() {
      return this._html$_current;
    }
  },
  _callConstructor_closure: {
    "": "Closure:271;constructor_0,interceptor_1",
    call$1: [function(receiver) {
      var t1 = H.makeLeafDispatchRecord(this.interceptor_1);
      Object.defineProperty(receiver, init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
      return this.constructor_0(receiver);
    }, "call$1", null, 2, 0, null, 41, "call"],
    $isFunction: true
  },
  _DOMWindowCrossFrame: {
    "": "Object;_window",
    get$location: function(_) {
      return W._LocationCrossFrame__createSafe(this._window.location);
    },
    get$parent: function(_) {
      return W._DOMWindowCrossFrame__createSafe(this._window.parent);
    },
    close$0: [function(_) {
      return this._window.close();
    }, "call$0", "get$close", 0, 0, null],
    $isEventTarget: true,
    $isInterceptor: true,
    static: {_DOMWindowCrossFrame__createSafe: [function(w) {
        if (w === window)
          return w;
        else
          return new W._DOMWindowCrossFrame(w);
      }, "call$1", "_DOMWindowCrossFrame__createSafe$closure", 2, 0, null, 277]}
  },
  _LocationCrossFrame: {
    "": "Object;_location",
    set$href: function(_, val) {
      this._location.href = val;
      return;
    },
    static: {_LocationCrossFrame__createSafe: [function($location) {
        if ($location === C.Window_methods.get$location(window))
          return $location;
        else
          return new W._LocationCrossFrame($location);
      }, "call$1", "_LocationCrossFrame__createSafe$closure", 2, 0, null, 142]}
  },
  _LocationWrapper: {
    "": "Object;_ptr",
    get$hash: function(_) {
      return this._ptr.hash;
    },
    set$hash: function(_, value) {
      this._ptr.hash = value;
    },
    get$host: function(_) {
      return this._ptr.host;
    },
    get$hostname: function(_) {
      return this._ptr.hostname;
    },
    get$href: function(_) {
      return this._ptr.href;
    },
    set$href: function(_, value) {
      this._ptr.href = value;
    },
    get$pathname: function(_) {
      return this._ptr.pathname;
    },
    get$port: function(_) {
      return this._ptr.port;
    },
    get$protocol: function(_) {
      return this._ptr.protocol;
    },
    get$search: function(_) {
      return this._ptr.search;
    },
    replace$1: [function(_, url) {
      return this._ptr.replace(url);
    }, "call$1", "get$replace", 2, 0, null, 257],
    toString$0: [function(_) {
      return this._ptr.toString();
    }, "call$0", "get$toString", 0, 0, null],
    $isLocation: true,
    $isInterceptor: true
  },
  NodeValidator: {
    "": "Object;",
    $isNodeValidator: true
  },
  _SameOriginUriPolicy: {
    "": "Object;_hiddenAnchor,_loc"
  },
  _ValidatingTreeSanitizer: {
    "": "Object;validator",
    sanitizeTree$1: [function(node) {
      new W._ValidatingTreeSanitizer_sanitizeTree_walk(this).call$1(node);
    }, "call$1", "get$sanitizeTree", 2, 0, null, 312],
    sanitizeNode$1: [function(node) {
      var t1, attrs, t2, t3, isAttr, keys, i, $name, t4;
      switch (node.nodeType) {
        case 1:
          t1 = J.getInterceptor$x(node);
          attrs = t1.get$attributes(node);
          if (!this.validator.allowsElement$1(node)) {
            window;
            t2 = $.get$Console__safeConsole();
            t3 = "Removing disallowed element <" + t1.get$tagName(node) + ">";
            t2.toString;
            if (typeof console != "undefined")
              console.warn(t3);
            t1.remove$0(node);
            break;
          }
          t2 = attrs._element;
          isAttr = t2.getAttribute("is");
          if (isAttr != null)
            if (!this.validator.allowsAttribute$3(node, "is", isAttr)) {
              window;
              t2 = $.get$Console__safeConsole();
              t3 = "Removing disallowed type extension <" + t1.get$tagName(node) + " is=\"" + isAttr + "\">";
              t2.toString;
              if (typeof console != "undefined")
                console.warn(t3);
              t1.remove$0(node);
              break;
            }
          keys = C.JSArray_methods.toList$0(attrs.get$keys());
          for (i = attrs.get$keys().length - 1; i >= 0; --i) {
            if (i >= keys.length)
              return H.ioore(keys, i);
            $name = keys[i];
            if (!this.validator.allowsAttribute$3(node, J.toLowerCase$0$s($name), t2.getAttribute($name))) {
              window;
              t3 = $.get$Console__safeConsole();
              t4 = "Removing disallowed attribute <" + t1.get$tagName(node) + " " + H.S($name) + "=\"" + t2.getAttribute($name) + "\">";
              t3.toString;
              if (typeof console != "undefined")
                console.warn(t4);
              t2.getAttribute($name);
              t2.removeAttribute($name);
            }
          }
          if (typeof node === "object" && node !== null && !!t1.$isTemplateElement)
            this.sanitizeTree$1(node.content);
          break;
        case 8:
        case 11:
        case 3:
        case 4:
          break;
        default:
          J.remove$0$ax(node);
      }
    }, "call$1", "get$sanitizeNode", 2, 0, null, 312]
  },
  _ValidatingTreeSanitizer_sanitizeTree_walk: {
    "": "Closure:581;this_0",
    call$1: [function(node) {
      var child, nextChild;
      this.this_0.sanitizeNode$1(node);
      child = node.lastChild;
      for (; child != null; child = nextChild) {
        nextChild = child.previousSibling;
        this.call$1(child);
      }
    }, "call$1", null, 2, 0, null, 312, "call"],
    $isFunction: true
  }
}],
["dart.dom.indexed_db", "dart:indexed_db", , P, {
  "": "",
  KeyRange: {
    "": "Interceptor;lower=",
    $isKeyRange: true,
    "%": "IDBKeyRange"
  }
}],
["dart.dom.svg", "dart:svg", , P, {
  "": "",
  AElement: {
    "": "GraphicsElement;target=,href=",
    $isInterceptor: true,
    "%": "SVGAElement"
  },
  AltGlyphElement: {
    "": "TextPositioningElement;href=",
    $isInterceptor: true,
    "%": "SVGAltGlyphElement"
  },
  AnimationElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGAnimationElement|SVGSetElement"
  },
  CircleElement: {
    "": "GraphicsElement;",
    $isInterceptor: true,
    "%": "SVGCircleElement"
  },
  ClipPathElement: {
    "": "GraphicsElement;",
    $isInterceptor: true,
    "%": "SVGClipPathElement"
  },
  DefsElement: {
    "": "GraphicsElement;",
    $isInterceptor: true,
    "%": "SVGDefsElement"
  },
  EllipseElement: {
    "": "GraphicsElement;",
    $isInterceptor: true,
    "%": "SVGEllipseElement"
  },
  FEBlendElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGFEBlendElement"
  },
  FEColorMatrixElement: {
    "": "SvgElement;type=,values=",
    $isInterceptor: true,
    "%": "SVGFEColorMatrixElement"
  },
  FEComponentTransferElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGFEComponentTransferElement"
  },
  FECompositeElement: {
    "": "SvgElement;operator=",
    $isInterceptor: true,
    "%": "SVGFECompositeElement"
  },
  FEConvolveMatrixElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGFEConvolveMatrixElement"
  },
  FEDiffuseLightingElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGFEDiffuseLightingElement"
  },
  FEDisplacementMapElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGFEDisplacementMapElement"
  },
  FEFloodElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGFEFloodElement"
  },
  FEGaussianBlurElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGFEGaussianBlurElement"
  },
  FEImageElement: {
    "": "SvgElement;href=",
    $isInterceptor: true,
    "%": "SVGFEImageElement"
  },
  FEMergeElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGFEMergeElement"
  },
  FEMorphologyElement: {
    "": "SvgElement;operator=",
    $isInterceptor: true,
    "%": "SVGFEMorphologyElement"
  },
  FEOffsetElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGFEOffsetElement"
  },
  FESpecularLightingElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGFESpecularLightingElement"
  },
  FETileElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGFETileElement"
  },
  FETurbulenceElement: {
    "": "SvgElement;type=",
    $isInterceptor: true,
    "%": "SVGFETurbulenceElement"
  },
  FilterElement: {
    "": "SvgElement;href=",
    $isInterceptor: true,
    "%": "SVGFilterElement"
  },
  ForeignObjectElement: {
    "": "GraphicsElement;",
    $isInterceptor: true,
    "%": "SVGForeignObjectElement"
  },
  GElement: {
    "": "GraphicsElement;",
    $isInterceptor: true,
    "%": "SVGGElement"
  },
  GraphicsElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": ";SVGGraphicsElement"
  },
  ImageElement0: {
    "": "GraphicsElement;href=",
    $isInterceptor: true,
    "%": "SVGImageElement"
  },
  LineElement: {
    "": "GraphicsElement;",
    $isInterceptor: true,
    "%": "SVGLineElement"
  },
  MarkerElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGMarkerElement"
  },
  MaskElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGMaskElement"
  },
  PathElement: {
    "": "GraphicsElement;",
    $isInterceptor: true,
    "%": "SVGPathElement"
  },
  PatternElement: {
    "": "SvgElement;href=",
    $isInterceptor: true,
    "%": "SVGPatternElement"
  },
  PolygonElement: {
    "": "GraphicsElement;",
    $isInterceptor: true,
    "%": "SVGPolygonElement"
  },
  PolylineElement: {
    "": "GraphicsElement;",
    $isInterceptor: true,
    "%": "SVGPolylineElement"
  },
  RectElement: {
    "": "GraphicsElement;",
    $isInterceptor: true,
    "%": "SVGRectElement"
  },
  ScriptElement: {
    "": "SvgElement;type%,href=",
    $isScriptElement: true,
    $isInterceptor: true,
    "%": "SVGScriptElement"
  },
  StyleElement0: {
    "": "SvgElement;type%",
    get$title: function(receiver) {
      return receiver.title;
    },
    set$title: function(receiver, value) {
      receiver.title = value;
    },
    "%": "SVGStyleElement"
  },
  SvgElement: {
    "": "Element;",
    get$classes: function(receiver) {
      if (receiver._cssClassSet == null)
        receiver._cssClassSet = new P._AttributeClassSet(receiver);
      return receiver._cssClassSet;
    },
    get$children: function(receiver) {
      return H.setRuntimeTypeInfo(new P.FilteredElementList(receiver, new W._ChildNodeListLazy(receiver)), [W.Element]);
    },
    get$innerHtml: function(receiver) {
      var container, cloned, t1;
      container = W._ElementFactoryProvider_createElement_tag("div", null);
      cloned = receiver.cloneNode(true);
      t1 = J.getInterceptor$x(container);
      J.addAll$1$ax(t1.get$children(container), J.get$children$x(cloned));
      return t1.get$innerHtml(container);
    },
    createFragment$3$treeSanitizer$validator: [function(receiver, svg, treeSanitizer, validator) {
      var t1, html, fragment, svgFragment, root;
      if (treeSanitizer == null) {
        t1 = H.setRuntimeTypeInfo([], [W.NodeValidator]);
        validator = new W.NodeValidatorBuilder(t1);
        t1.push(W._Html5NodeValidator$(null));
        t1.push(W._TemplatingNodeValidator$());
        t1.push(new W._SvgNodeValidator());
        treeSanitizer = new W._ValidatingTreeSanitizer(validator);
      }
      html = "<svg version=\"1.1\">" + H.S(svg) + "</svg>";
      fragment = J.createFragment$2$treeSanitizer$x(document.body, html, treeSanitizer);
      svgFragment = document.createDocumentFragment();
      fragment.toString;
      t1 = new W._ChildNodeListLazy(fragment);
      root = t1.get$single(t1);
      for (; t1 = root.firstChild, t1 != null;)
        svgFragment.appendChild(t1);
      return svgFragment;
    }, "call$3$treeSanitizer$validator", "get$createFragment", 2, 5, null, 77, 77, 408, 366, 367],
    insertAdjacentText$2: [function(receiver, where, text) {
      throw H.wrapException(P.UnsupportedError$("Cannot invoke insertAdjacentText on SVG."));
    }, "call$2", "get$insertAdjacentText", 4, 0, null, 370, 250],
    get$onChange: function(receiver) {
      return C.EventStreamProvider_change.forElement$1(receiver);
    },
    get$onClick: function(receiver) {
      return C.EventStreamProvider_click.forElement$1(receiver);
    },
    get$onInput: function(receiver) {
      return C.EventStreamProvider_input.forElement$1(receiver);
    },
    $isSvgElement: true,
    $isEventTarget: true,
    $isInterceptor: true,
    "%": "SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGComponentTransferFunctionElement|SVGDescElement|SVGFEDistantLightElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEMergeNodeElement|SVGFEPointLightElement|SVGFESpotLightElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGGlyphElement|SVGHKernElement|SVGMetadataElement|SVGMissingGlyphElement|SVGStopElement|SVGTitleElement|SVGVKernElement;SVGElement"
  },
  SvgSvgElement: {
    "": "GraphicsElement;",
    getElementById$1: [function(receiver, elementId) {
      return receiver.getElementById(elementId);
    }, "call$1", "get$getElementById", 2, 0, null, 360],
    $isSvgSvgElement: true,
    $isInterceptor: true,
    "%": "SVGSVGElement"
  },
  SwitchElement: {
    "": "GraphicsElement;",
    $isInterceptor: true,
    "%": "SVGSwitchElement"
  },
  SymbolElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGSymbolElement"
  },
  TextContentElement: {
    "": "GraphicsElement;",
    $isInterceptor: true,
    "%": ";SVGTextContentElement"
  },
  TextPathElement: {
    "": "TextContentElement;method=,href=",
    $isInterceptor: true,
    "%": "SVGTextPathElement"
  },
  TextPositioningElement: {
    "": "TextContentElement;",
    "%": "SVGTSpanElement|SVGTextElement;SVGTextPositioningElement"
  },
  UseElement: {
    "": "GraphicsElement;href=",
    $isInterceptor: true,
    "%": "SVGUseElement"
  },
  ViewElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGViewElement"
  },
  _GradientElement: {
    "": "SvgElement;href=",
    $isInterceptor: true,
    "%": "SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement"
  },
  _SVGCursorElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGCursorElement"
  },
  _SVGFEDropShadowElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGFEDropShadowElement"
  },
  _SVGGlyphRefElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGGlyphRefElement"
  },
  _SVGMPathElement: {
    "": "SvgElement;",
    $isInterceptor: true,
    "%": "SVGMPathElement"
  },
  _AttributeClassSet: {
    "": "CssClassSetImpl;_svg$_element",
    readClasses$0: [function() {
      var classname, s, t1, trimmed;
      classname = this._svg$_element.getAttribute("class");
      s = P.LinkedHashSet_LinkedHashSet(null, null, null, J.JSString);
      if (classname == null)
        return s;
      for (t1 = classname.split(" "), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();) {
        trimmed = J.trim$0$s(t1._current);
        if (trimmed.length !== 0)
          s.add$1(0, trimmed);
      }
      return s;
    }, "call$0", "get$readClasses", 0, 0, null],
    writeClasses$1: [function(s) {
      this._svg$_element.setAttribute("class", s.join$1(0, " "));
    }, "call$1", "get$writeClasses", 2, 0, null, 86]
  }
}],
["dart.dom.web_sql", "dart:web_sql", , P, {
  "": "",
  SqlError: {
    "": "Interceptor;message=",
    "%": "SQLError"
  }
}],
["dart.js", "dart:js", , P, {
  "": "",
  _callDartFunction: [function(callback, captureThis, $self, $arguments) {
    var arguments0;
    if (captureThis === true) {
      arguments0 = [$self];
      C.JSArray_methods.addAll$1(arguments0, $arguments);
      $arguments = arguments0;
    }
    return P._convertToJS(H.Primitives_applyFunction(callback, P.List_List$from(J.map$1$ax($arguments, P._convertToDart$closure()), true, null), P.Function__toMangledNames(null)));
  }, "call$4", "_callDartFunction$closure", 8, 0, null, 194, 278, 205, 82],
  _defineProperty: [function(o, $name, value) {
    var exception;
    if (Object.isExtensible(o))
      try {
        Object.defineProperty(o, $name, { value: value});
        return true;
      } catch (exception) {
        H.unwrapException(exception);
      }

    return false;
  }, "call$3", "_defineProperty$closure", 6, 0, null, 91, 12, 23],
  _convertToJS: [function(o) {
    var t1;
    if (o == null)
      return;
    else {
      if (typeof o !== "string")
        if (typeof o !== "number")
          if (typeof o !== "boolean") {
            t1 = J.getInterceptor(o);
            t1 = typeof o === "object" && o !== null && !!t1.$isBlob || typeof o === "object" && o !== null && !!t1.$isEvent || typeof o === "object" && o !== null && !!t1.$isKeyRange || typeof o === "object" && o !== null && !!t1.$isImageData || typeof o === "object" && o !== null && !!t1.$isNode || typeof o === "object" && o !== null && !!t1.$isTypedData || typeof o === "object" && o !== null && !!t1.$isWindow;
          } else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return o;
      else {
        t1 = J.getInterceptor(o);
        if (typeof o === "object" && o !== null && !!t1.$isDateTime)
          return H.Primitives_lazyAsJsDate(o);
        else if (typeof o === "object" && o !== null && !!t1.$isJsObject)
          return o._jsObject;
        else if (typeof o === "object" && o !== null && !!t1.$isFunction)
          return P._getJsProxy(o, "$dart_jsFunction", new P._convertToJS_closure());
        else
          return P._getJsProxy(o, "_$dart_jsObject", new P._convertToJS_closure0());
      }
    }
  }, "call$1", "_convertToJS$closure", 2, 0, 271, 91],
  _getJsProxy: [function(o, propertyName, createProxy) {
    var jsProxy = o[propertyName];
    if (jsProxy == null) {
      jsProxy = createProxy.call$1(o);
      P._defineProperty(o, propertyName, jsProxy);
    }
    return jsProxy;
  }, "call$3", "_getJsProxy$closure", 6, 0, null, 91, 63, 279],
  _convertToDart: [function(o) {
    var t1;
    if (o == null || typeof o == "string" || typeof o == "number" || typeof o == "boolean")
      return o;
    else {
      if (o instanceof Object) {
        t1 = J.getInterceptor(o);
        t1 = typeof o === "object" && o !== null && !!t1.$isBlob || typeof o === "object" && o !== null && !!t1.$isEvent || typeof o === "object" && o !== null && !!t1.$isKeyRange || typeof o === "object" && o !== null && !!t1.$isImageData || typeof o === "object" && o !== null && !!t1.$isNode || typeof o === "object" && o !== null && !!t1.$isTypedData || typeof o === "object" && o !== null && !!t1.$isWindow;
      } else
        t1 = false;
      if (t1)
        return o;
      else if (o instanceof Date)
        return P.DateTime$fromMillisecondsSinceEpoch(o.getMilliseconds(), false);
      else if (o.constructor === DartObject)
        return o.o;
      else
        return P._wrapToDart(o);
    }
  }, "call$1", "_convertToDart$closure", 2, 0, 280, 91],
  _wrapToDart: [function(o) {
    if (typeof o == "function")
      return P._getDartProxy(o, "_$dart_dartClosure", new P._wrapToDart_closure());
    else if (o instanceof Array)
      return P._getDartProxy(o, "_$dart_dartObject", new P._wrapToDart_closure0());
    else
      return P._getDartProxy(o, "_$dart_dartObject", new P._wrapToDart_closure1());
  }, "call$1", "_wrapToDart$closure", 2, 0, null, 91],
  _getDartProxy: [function(o, propertyName, createProxy) {
    var dartProxy = o[propertyName];
    if (dartProxy == null || !(o instanceof Object)) {
      dartProxy = createProxy.call$1(o);
      P._defineProperty(o, propertyName, dartProxy);
    }
    return dartProxy;
  }, "call$3", "_getDartProxy$closure", 6, 0, null, 91, 63, 279],
  JsObject: {
    "": "Object;_jsObject",
    $index: [function(_, property) {
      if (typeof property !== "string" && typeof property !== "number")
        throw H.wrapException(new P.ArgumentError("property is not a String or num"));
      return P._convertToDart(this._jsObject[property]);
    }, "call$1", "get$[]", 2, 0, null, 66],
    $indexSet: [function(_, property, value) {
      if (typeof property !== "string" && typeof property !== "number")
        throw H.wrapException(new P.ArgumentError("property is not a String or num"));
      this._jsObject[property] = P._convertToJS(value);
    }, "call$2", "get$[]=", 4, 0, null, 66, 23],
    get$hashCode: function(_) {
      return 0;
    },
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$isJsObject && this._jsObject === other._jsObject;
    }, "call$1", "get$==", 2, 0, null, 104],
    hasProperty$1: [function(property) {
      return property in this._jsObject;
    }, "call$1", "get$hasProperty", 2, 0, null, 66],
    toString$0: [function(_) {
      var t1, exception;
      try {
        t1 = String(this._jsObject);
        return t1;
      } catch (exception) {
        H.unwrapException(exception);
        return P.Object.prototype.toString$0.call(this, this);
      }

    }, "call$0", "get$toString", 0, 0, null],
    callMethod$2: [function(method, args) {
      var t1, t2;
      t1 = this._jsObject;
      t2 = args == null ? null : P.List_List$from(J.map$1$ax(args, P._convertToJS$closure()), true, null);
      return P._convertToDart(t1[method].apply(t1, t2));
    }, function(method) {
      return this.callMethod$2(method, null);
    }, "callMethod$1", "call$2", null, "get$callMethod", 2, 2, null, 77, 260, 305],
    $isJsObject: true
  },
  JsFunction: {
    "": "JsObject;_jsObject"
  },
  JsArray: {
    "": "JsObject_ListMixin;_jsObject",
    $index: [function(_, index) {
      var t1;
      if (typeof index === "number" && index === C.JSNumber_methods.toInt$0(index)) {
        if (typeof index === "number" && Math.floor(index) === index)
          if (!(index < 0)) {
            t1 = P.JsObject.prototype.$index.call(this, this, "length");
            if (typeof t1 !== "number")
              return H.iae(t1);
            t1 = index >= t1;
          } else
            t1 = true;
        else
          t1 = false;
        if (t1)
          H.throwExpression(P.RangeError$range(index, 0, P.JsObject.prototype.$index.call(this, this, "length")));
      }
      return P.JsObject.prototype.$index.call(this, this, index);
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(_, index, value) {
      var t1;
      if (typeof index === "number" && index === C.JSNumber_methods.toInt$0(index)) {
        if (typeof index === "number" && Math.floor(index) === index)
          if (!(index < 0)) {
            t1 = P.JsObject.prototype.$index.call(this, this, "length");
            if (typeof t1 !== "number")
              return H.iae(t1);
            t1 = index >= t1;
          } else
            t1 = true;
        else
          t1 = false;
        if (t1)
          H.throwExpression(P.RangeError$range(index, 0, P.JsObject.prototype.$index.call(this, this, "length")));
      }
      P.JsObject.prototype.$indexSet.call(this, this, index, value);
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    get$length: function(_) {
      return P.JsObject.prototype.$index.call(this, this, "length");
    },
    set$length: function(_, $length) {
      P.JsObject.prototype.$indexSet.call(this, this, "length", $length);
    },
    add$1: [function(_, value) {
      this.callMethod$2("push", [value]);
    }, "call$1", "get$add", 2, 0, null, 23],
    addAll$1: [function(_, iterable) {
      this.callMethod$2("push", iterable instanceof Array ? iterable : P.List_List$from(iterable, true, null));
    }, "call$1", "get$addAll", 2, 0, null, 153],
    insert$2: [function(_, index, element) {
      var t1 = J.$add$ns(P.JsObject.prototype.$index.call(this, this, "length"), 1);
      if (typeof t1 !== "number")
        return H.iae(t1);
      t1 = index >= t1;
      if (t1)
        H.throwExpression(P.RangeError$range(index, 0, P.JsObject.prototype.$index.call(this, this, "length")));
      this.callMethod$2("splice", [index, 0, element]);
    }, "call$2", "get$insert", 4, 0, null, 47, 169],
    removeLast$0: [function(_) {
      if (J.$eq(P.JsObject.prototype.$index.call(this, this, "length"), 0) === true)
        throw H.wrapException(P.RangeError$(-1));
      return this.callMethod$1("pop");
    }, "call$0", "get$removeLast", 0, 0, null],
    setRange$4: [function(_, start, end, iterable, skipCount) {
      var t1, $length, args;
      t1 = P.JsObject.prototype.$index.call(this, this, "length");
      if (typeof t1 !== "number")
        return H.iae(t1);
      t1 = start > t1;
      if (t1)
        H.throwExpression(P.RangeError$range(start, 0, P.JsObject.prototype.$index.call(this, this, "length")));
      t1 = J.getInterceptor$n(end);
      if (t1.$lt(end, start) || t1.$gt(end, P.JsObject.prototype.$index.call(this, this, "length")))
        H.throwExpression(P.RangeError$range(end, start, P.JsObject.prototype.$index.call(this, this, "length")));
      $length = t1.$sub(end, start);
      if (J.$eq($length, 0))
        return;
      args = [start, $length];
      t1 = new H.SubListIterable(iterable, skipCount, null);
      t1.$builtinTypeInfo = [null];
      if (skipCount < 0)
        H.throwExpression(P.RangeError$value(skipCount));
      C.JSArray_methods.addAll$1(args, t1.take$1(0, $length));
      this.callMethod$2("splice", args);
    }, "call$4", "get$setRange", 6, 2, null, 413, 161, 162, 153, 163],
    sort$1: [function(_, compare) {
      this.callMethod$2("sort", [compare]);
    }, "call$1", "get$sort", 0, 2, null, 77, 173]
  },
  JsObject_ListMixin: {
    "": "JsObject+ListMixin;",
    $isList: true,
    $asList: null,
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: null
  },
  _convertToJS_closure: {
    "": "Closure:271;",
    call$1: [function(o) {
      var jsFunction = function(_call, f, captureThis) {return function() {return _call(f, captureThis, this, Array.prototype.slice.apply(arguments));}}(P._callDartFunction, o, false);
      P._defineProperty(jsFunction, "_$dart_dartClosure", o);
      return jsFunction;
    }, "call$1", null, 2, 0, null, 91, "call"],
    $isFunction: true
  },
  _convertToJS_closure0: {
    "": "Closure:271;",
    call$1: [function(o) {
      return new DartObject(o);
    }, "call$1", null, 2, 0, null, 91, "call"],
    $isFunction: true
  },
  _wrapToDart_closure: {
    "": "Closure:271;",
    call$1: [function(o) {
      return new P.JsFunction(o);
    }, "call$1", null, 2, 0, null, 91, "call"],
    $isFunction: true
  },
  _wrapToDart_closure0: {
    "": "Closure:271;",
    call$1: [function(o) {
      return H.setRuntimeTypeInfo(new P.JsArray(o), [null]);
    }, "call$1", null, 2, 0, null, 91, "call"],
    $isFunction: true
  },
  _wrapToDart_closure1: {
    "": "Closure:271;",
    call$1: [function(o) {
      return new P.JsObject(o);
    }, "call$1", null, 2, 0, null, 91, "call"],
    $isFunction: true
  }
}],
["dart.math", "dart:math", , P, {
  "": "",
  _JenkinsSmiHash_combine0: [function(hash, value) {
    hash = 536870911 & hash + value;
    hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
    return hash ^ hash >>> 6;
  }, "call$2", "_JenkinsSmiHash_combine0$closure", 4, 0, null, 266, 23],
  _JenkinsSmiHash_finish: [function(hash) {
    hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash ^= hash >>> 11;
    return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
  }, "call$1", "_JenkinsSmiHash_finish$closure", 2, 0, null, 266],
  min: [function(a, b) {
    var t1;
    if (typeof a !== "number")
      throw H.wrapException(new P.ArgumentError(a));
    if (typeof b !== "number")
      throw H.wrapException(new P.ArgumentError(b));
    if (a > b)
      return b;
    if (a < b)
      return a;
    if (typeof b === "number") {
      if (typeof a === "number")
        if (a === 0)
          return (a + b) * a * b;
      if (a === 0)
        t1 = b === 0 ? 1 / b < 0 : b < 0;
      else
        t1 = false;
      if (t1 || isNaN(b))
        return b;
      return a;
    }
    return a;
  }, "call$2", "min$closure", 4, 0, null, 133, 134],
  max: [function(a, b) {
    if (typeof a !== "number")
      throw H.wrapException(new P.ArgumentError(a));
    if (typeof b !== "number")
      throw H.wrapException(new P.ArgumentError(b));
    if (a > b)
      return a;
    if (a < b)
      return b;
    if (typeof b === "number") {
      if (typeof a === "number")
        if (a === 0)
          return a + b;
      if (C.JSDouble_methods.get$isNaN(b))
        return b;
      return a;
    }
    if (b === 0 && C.JSNumber_methods.get$isNegative(a))
      return b;
    return a;
  }, "call$2", "max$closure", 4, 0, null, 133, 134],
  _RectangleBase: {
    "": "Object;",
    get$right: function(_) {
      var t1, t2;
      t1 = this.get$left(this);
      t2 = this.get$width(this);
      if (typeof t1 !== "number")
        return t1.$add();
      if (typeof t2 !== "number")
        return H.iae(t2);
      return t1 + t2;
    },
    toString$0: [function(_) {
      return "Rectangle (" + H.S(this.get$left(this)) + ", " + H.S(this.get$top(this)) + ") " + H.S(this.get$width(this)) + " x " + H.S(this.get$height(this));
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      t1 = J.getInterceptor$x(other);
      if (typeof other !== "object" || other === null || !t1.$isRectangle)
        return false;
      t2 = this.get$left(this);
      t3 = t1.get$left(other);
      if (t2 == null ? t3 == null : t2 === t3) {
        t2 = this.get$top(this);
        t3 = t1.get$top(other);
        if (t2 == null ? t3 == null : t2 === t3) {
          t2 = this.get$width(this);
          t3 = t1.get$width(other);
          if (t2 == null ? t3 == null : t2 === t3) {
            t2 = this.get$height(this);
            t1 = t1.get$height(other);
            t1 = t2 == null ? t1 == null : t2 === t1;
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    }, "call$1", "get$==", 2, 0, null, 104],
    get$hashCode: function(_) {
      var t1, t2, t3, t4;
      t1 = J.get$hashCode$(this.get$left(this));
      t2 = J.get$hashCode$(this.get$top(this));
      t3 = J.get$hashCode$(this.get$width(this));
      t4 = J.get$hashCode$(this.get$height(this));
      return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t1), t2), t3), t4));
    }
  },
  MutableRectangle: {
    "": "_RectangleBase;left>,top>,width>,height>",
    $isRectangle: true,
    $asRectangle: null
  }
}],
["dart.mirrors", "dart:mirrors", , P, {
  "": "",
  reflectClass: [function(key) {
    var t1, tm;
    t1 = J.getInterceptor(key);
    if (typeof key !== "object" || key === null || !t1.$isType || t1.$eq(key, C.Type_e5Z))
      throw H.wrapException(new P.ArgumentError(H.S(key) + " does not denote a class"));
    tm = P.reflectType(key);
    t1 = J.getInterceptor(tm);
    if (typeof tm !== "object" || tm === null || !t1.$isClassMirror)
      throw H.wrapException(new P.ArgumentError(H.S(key) + " does not denote a class"));
    return tm.get$originalDeclaration();
  }, "call$1", "reflectClass$closure", 2, 0, null, 42],
  reflectType: [function(key) {
    if (J.$eq(key, C.Type_e5Z) === true) {
      $.get$currentJsMirrorSystem().toString;
      return $.get$JsMirrorSystem__dynamicType();
    }
    return H.reflectClassByMangledName(key.get$_typeName());
  }, "call$1", "reflectType$closure", 2, 0, null, 42],
  Mirror: {
    "": "Object;",
    $isMirror: true
  },
  DeclarationMirror: {
    "": "Object;",
    $isDeclarationMirror: true,
    $isMirror: true
  },
  InstanceMirror: {
    "": "Object;",
    $isInstanceMirror: true,
    $isMirror: true
  },
  LibraryMirror: {
    "": "Object;",
    $isLibraryMirror: true,
    $isMirror: true,
    $isDeclarationMirror: true
  },
  TypeMirror: {
    "": "Object;",
    $isTypeMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true
  },
  ClassMirror: {
    "": "Object;",
    $isClassMirror: true,
    $isMirror: true,
    $isTypeMirror: true,
    $isDeclarationMirror: true
  },
  TypeVariableMirror: {
    "": "TypeMirror;",
    $isTypeVariableMirror: true
  },
  MethodMirror: {
    "": "Object;",
    $isMethodMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true
  },
  VariableMirror: {
    "": "Object;",
    $isVariableMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true
  },
  ParameterMirror: {
    "": "Object;",
    $isParameterMirror: true,
    $isVariableMirror: true,
    $isDeclarationMirror: true,
    $isMirror: true
  },
  MirrorsUsed: {
    "": "Object;symbols,targets,metaTargets,override"
  }
}],
["dart.pkg.collection.equality", "package:collection/equality.dart", , Z, {
  "": "",
  DefaultEquality: {
    "": "Object;",
    hash$1: [function(_, e) {
      return J.get$hashCode$(e);
    }, "call$1", "get$hash", 2, 0, 233, 18]
  },
  ListEquality: {
    "": "Object;_elementEquality",
    equals$2: [function(e1, e2) {
      var t1, $length, t2, i;
      if (e1 == null ? e2 == null : e1 === e2)
        return true;
      if (e1 == null || e2 == null)
        return false;
      t1 = J.getInterceptor$asx(e1);
      $length = t1.get$length(e1);
      t2 = J.getInterceptor$asx(e2);
      if (J.$eq($length, t2.get$length(e2)) !== true)
        return false;
      if (typeof $length !== "number")
        return H.iae($length);
      i = 0;
      for (; i < $length; ++i)
        if (J.$eq(t1.$index(e1, i), t2.$index(e2, i)) !== true)
          return false;
      return true;
    }, "call$2", "get$equals", 4, 0, null, 582, 583],
    hash$1: [function(_, e) {
      var t1, hash, i, t2, c;
      t1 = J.getInterceptor$asx(e);
      hash = 0;
      i = 0;
      while (true) {
        t2 = t1.get$length(e);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (!(i < t2))
          break;
        c = J.get$hashCode$(t1.$index(e, i));
        if (typeof c !== "number")
          return H.iae(c);
        hash = hash + c & 2147483647;
        hash = hash + (hash << 10 >>> 0) & 2147483647;
        hash ^= hash >>> 6;
        ++i;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    }, "call$1", "get$hash", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "int__List", ret: J.JSInt, args: [[J.JSArray, E]]};
      }, this.$receiver, "ListEquality");
    }, 18]
  }
}],
["dart.pkg.collection.wrappers", "package:collection/wrappers.dart", , Q, {
  "": "",
  UnmodifiableMapMixin__throw: [function() {
    throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable Map"));
  }, "call$0", "UnmodifiableMapMixin__throw$closure", 0, 0, null],
  UnmodifiableMapView0: {
    "": "DelegatingMap_UnmodifiableMapMixin;_base"
  },
  DelegatingMap_UnmodifiableMapMixin: {
    "": "DelegatingMap+UnmodifiableMapMixin;",
    $isMap: true
  },
  UnmodifiableMapMixin: {
    "": "Object;",
    $indexSet: [function(_, key, value) {
      return Q.UnmodifiableMapMixin__throw();
    }, "call$2", "get$[]=", 4, 0, null, 42, 23],
    putIfAbsent$2: [function(key, ifAbsent) {
      Q.UnmodifiableMapMixin__throw();
    }, "call$2", "get$putIfAbsent", 4, 0, null, 42, 427],
    addAll$1: [function(_, other) {
      return Q.UnmodifiableMapMixin__throw();
    }, "call$1", "get$addAll", 2, 0, null, 104],
    remove$1: [function(_, key) {
      Q.UnmodifiableMapMixin__throw();
    }, "call$1", "get$remove", 2, 0, null, 42],
    clear$0: [function(_) {
      return Q.UnmodifiableMapMixin__throw();
    }, "call$0", "get$clear", 0, 0, null],
    $isMap: true
  },
  DelegatingMap: {
    "": "Object;",
    $index: [function(_, key) {
      return this._base.$index(0, key);
    }, "call$1", "get$[]", 2, 0, null, 42],
    $indexSet: [function(_, key, value) {
      this._base.$indexSet(0, key, value);
    }, "call$2", "get$[]=", 4, 0, null, 42, 23],
    addAll$1: [function(_, other) {
      this._base.addAll$1(0, other);
    }, "call$1", "get$addAll", 2, 0, null, 104],
    clear$0: [function(_) {
      this._base.clear$0(0);
    }, "call$0", "get$clear", 0, 0, null],
    containsKey$1: [function(key) {
      return this._base.containsKey$1(key);
    }, "call$1", "get$containsKey", 2, 0, null, 42],
    containsValue$1: [function(value) {
      return this._base.containsValue$1(value);
    }, "call$1", "get$containsValue", 2, 0, null, 23],
    forEach$1: [function(_, f) {
      this._base.forEach$1(0, f);
    }, "call$1", "get$forEach", 2, 0, null, 154],
    get$isEmpty: function(_) {
      return this._base._collection$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return this._base._collection$_length !== 0;
    },
    get$keys: function() {
      var t1 = this._base;
      return H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterable(t1), [H.getTypeArgumentByIndex(t1, 0)]);
    },
    get$length: function(_) {
      return this._base._collection$_length;
    },
    putIfAbsent$2: [function(key, ifAbsent) {
      return this._base.putIfAbsent$2(key, ifAbsent);
    }, "call$2", "get$putIfAbsent", 4, 0, null, 42, 427],
    remove$1: [function(_, key) {
      return this._base.remove$1(0, key);
    }, "call$1", "get$remove", 2, 0, null, 42],
    get$values: function(_) {
      var t1 = this._base;
      return t1.get$values(t1);
    },
    $isMap: true
  }
}],
["dart.typed_data.implementation", "dart:_native_typed_data", , H, {
  "": "",
  NativeTypedArray$: function(receiver) {
    receiver.toString;
    return receiver;
  },
  NativeTypedArrayOfDouble$: function(receiver) {
    receiver.toString;
    return receiver;
  },
  NativeTypedArrayOfInt$: function(receiver) {
    receiver.toString;
    return receiver;
  },
  NativeByteBuffer: {
    "": "Interceptor;",
    get$runtimeType: function(receiver) {
      return C.Type_wAg;
    },
    $isNativeByteBuffer: true,
    "%": "ArrayBuffer"
  },
  NativeTypedData: {
    "": "Interceptor;",
    _invalidIndex$2: [function(receiver, index, $length) {
      var t1 = J.getInterceptor$n(index);
      if (t1.$lt(index, 0) || t1.$ge(index, $length))
        throw H.wrapException(P.RangeError$range(index, 0, $length));
      else
        throw H.wrapException(P.ArgumentError$("Invalid list index " + H.S(index)));
    }, "call$2", "get$_invalidIndex", 4, 0, null, 47, 409],
    _checkIndex$2: [function(receiver, index, $length) {
      if (index >>> 0 != index || J.$ge$n(index, $length))
        this._invalidIndex$2(receiver, index, $length);
    }, "call$2", "get$_checkIndex", 4, 0, null, 47, 409],
    _checkSublistArguments$3: [function(receiver, start, end, $length) {
      this._checkIndex$2(receiver, start, $length + 1);
      return $length;
    }, "call$3", "get$_checkSublistArguments", 6, 0, null, 161, 162, 409],
    $isNativeTypedData: true,
    $isTypedData: true,
    "%": ";ArrayBufferView;NativeTypedArray|NativeTypedArray_ListMixin|NativeTypedArray_ListMixin_FixedLengthListMixin|NativeTypedArrayOfDouble|NativeTypedArray_ListMixin0|NativeTypedArray_ListMixin_FixedLengthListMixin0|NativeTypedArrayOfInt"
  },
  NativeByteData: {
    "": "NativeTypedData;",
    get$runtimeType: function(receiver) {
      return C.Type_oGP;
    },
    $isTypedData: true,
    "%": "DataView"
  },
  NativeFloat32List: {
    "": "NativeTypedArrayOfDouble;",
    get$runtimeType: function(receiver) {
      return C.Type_Art;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    sublist$2: [function(receiver, start, end) {
      return new Float32Array(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
    }, function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }, "sublist$1", "call$2", null, "get$sublist", 2, 2, null, 77, 161, 162],
    $isList: true,
    $asList: function() {
      return [J.JSDouble];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [J.JSDouble];
    },
    $isTypedData: true,
    "%": "Float32Array"
  },
  NativeFloat64List: {
    "": "NativeTypedArrayOfDouble;",
    get$runtimeType: function(receiver) {
      return C.Type_ckn;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    sublist$2: [function(receiver, start, end) {
      return new Float64Array(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
    }, function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }, "sublist$1", "call$2", null, "get$sublist", 2, 2, null, 77, 161, 162],
    $isList: true,
    $asList: function() {
      return [J.JSDouble];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [J.JSDouble];
    },
    $isTypedData: true,
    "%": "Float64Array"
  },
  NativeInt16List: {
    "": "NativeTypedArrayOfInt;",
    get$runtimeType: function(receiver) {
      return C.Type_UoK;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    sublist$2: [function(receiver, start, end) {
      return new Int16Array(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
    }, function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }, "sublist$1", "call$2", null, "get$sublist", 2, 2, null, 77, 161, 162],
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [J.JSInt];
    },
    $isTypedData: true,
    "%": "Int16Array"
  },
  NativeInt32List: {
    "": "NativeTypedArrayOfInt;",
    get$runtimeType: function(receiver) {
      return C.Type_dTZ;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    sublist$2: [function(receiver, start, end) {
      return new Int32Array(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
    }, function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }, "sublist$1", "call$2", null, "get$sublist", 2, 2, null, 77, 161, 162],
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [J.JSInt];
    },
    $isTypedData: true,
    "%": "Int32Array"
  },
  NativeInt8List: {
    "": "NativeTypedArrayOfInt;",
    get$runtimeType: function(receiver) {
      return C.Type_mp3;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    sublist$2: [function(receiver, start, end) {
      return new Int8Array(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
    }, function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }, "sublist$1", "call$2", null, "get$sublist", 2, 2, null, 77, 161, 162],
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [J.JSInt];
    },
    $isTypedData: true,
    "%": "Int8Array"
  },
  NativeUint16List: {
    "": "NativeTypedArrayOfInt;",
    get$runtimeType: function(receiver) {
      return C.Type_CAk;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    sublist$2: [function(receiver, start, end) {
      return new Uint16Array(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
    }, function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }, "sublist$1", "call$2", null, "get$sublist", 2, 2, null, 77, 161, 162],
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [J.JSInt];
    },
    $isTypedData: true,
    "%": "Uint16Array"
  },
  NativeUint32List: {
    "": "NativeTypedArrayOfInt;",
    get$runtimeType: function(receiver) {
      return C.Type_irB;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    sublist$2: [function(receiver, start, end) {
      return new Uint32Array(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
    }, function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }, "sublist$1", "call$2", null, "get$sublist", 2, 2, null, 77, 161, 162],
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [J.JSInt];
    },
    $isTypedData: true,
    "%": "Uint32Array"
  },
  NativeUint8ClampedList: {
    "": "NativeTypedArrayOfInt;",
    get$runtimeType: function(receiver) {
      return C.Type_QuW;
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    sublist$2: [function(receiver, start, end) {
      return new Uint8ClampedArray(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
    }, function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }, "sublist$1", "call$2", null, "get$sublist", 2, 2, null, 77, 161, 162],
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [J.JSInt];
    },
    $isTypedData: true,
    "%": "CanvasPixelArray|Uint8ClampedArray"
  },
  NativeUint8List: {
    "": "NativeTypedArrayOfInt;",
    get$runtimeType: function(receiver) {
      return C.Type_6L0;
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: [function(receiver, index) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      return receiver[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    $indexSet: [function(receiver, index, value) {
      var t1 = receiver.length;
      if (index >>> 0 != index || J.$ge$n(index, t1))
        this._invalidIndex$2(receiver, index, t1);
      receiver[index] = value;
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    sublist$2: [function(receiver, start, end) {
      return new Uint8Array(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
    }, function($receiver, start) {
      return this.sublist$2($receiver, start, null);
    }, "sublist$1", "call$2", null, "get$sublist", 2, 2, null, 77, 161, 162],
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [J.JSInt];
    },
    $isTypedData: true,
    "%": ";Uint8Array"
  },
  NativeTypedArray: {
    "": "NativeTypedData;",
    get$length: function(receiver) {
      return receiver.length;
    },
    _setRangeFast$4: [function(receiver, start, end, source, skipCount) {
      var t1, count, sourceLength;
      t1 = receiver.length + 1;
      this._checkIndex$2(receiver, start, t1);
      this._checkIndex$2(receiver, end, t1);
      if (typeof end !== "number")
        return H.iae(end);
      if (start > end)
        throw H.wrapException(P.RangeError$range(start, 0, end));
      count = end - start;
      sourceLength = source.length;
      if (sourceLength - skipCount < count)
        throw H.wrapException(new P.StateError("Not enough elements"));
      if (skipCount !== 0 || sourceLength !== count)
        source = source.subarray(skipCount, skipCount + count);
      receiver.set(source, start);
    }, "call$4", "get$_setRangeFast", 8, 0, null, 161, 162, 27, 163],
    $isJavaScriptIndexingBehavior: true
  },
  NativeTypedArrayOfDouble: {
    "": "NativeTypedArray_ListMixin_FixedLengthListMixin;",
    setRange$4: [function(receiver, start, end, iterable, skipCount) {
      var t1 = J.getInterceptor(iterable);
      if (!!t1.$isNativeTypedArrayOfDouble) {
        this._setRangeFast$4(receiver, start, end, iterable, skipCount);
        return;
      }
      P.ListMixin.prototype.setRange$4.call(this, receiver, start, end, iterable, skipCount);
    }, "call$4", "get$setRange", 6, 2, null, 413, 161, 162, 153, 163],
    $isNativeTypedArrayOfDouble: true,
    $isList: true,
    $asList: function() {
      return [J.JSDouble];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [J.JSDouble];
    }
  },
  NativeTypedArray_ListMixin: {
    "": "NativeTypedArray+ListMixin;",
    $isList: true,
    $asList: function() {
      return [J.JSDouble];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [J.JSDouble];
    }
  },
  NativeTypedArray_ListMixin_FixedLengthListMixin: {
    "": "NativeTypedArray_ListMixin+FixedLengthListMixin;"
  },
  NativeTypedArrayOfInt: {
    "": "NativeTypedArray_ListMixin_FixedLengthListMixin0;",
    setRange$4: [function(receiver, start, end, iterable, skipCount) {
      var t1 = J.getInterceptor(iterable);
      if (!!t1.$isNativeTypedArrayOfInt) {
        this._setRangeFast$4(receiver, start, end, iterable, skipCount);
        return;
      }
      P.ListMixin.prototype.setRange$4.call(this, receiver, start, end, iterable, skipCount);
    }, "call$4", "get$setRange", 6, 2, null, 413, 161, 162, 153, 163],
    $isNativeTypedArrayOfInt: true,
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [J.JSInt];
    }
  },
  NativeTypedArray_ListMixin0: {
    "": "NativeTypedArray+ListMixin;",
    $isList: true,
    $asList: function() {
      return [J.JSInt];
    },
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [J.JSInt];
    }
  },
  NativeTypedArray_ListMixin_FixedLengthListMixin0: {
    "": "NativeTypedArray_ListMixin0+FixedLengthListMixin;"
  }
}],
["dart2js._js_primitives", "dart:_js_primitives", , H, {
  "": "",
  printString: [function(string) {
    if (typeof dartPrint == "function") {
      dartPrint(string);
      return;
    }
    if (typeof console == "object" && typeof console.log == "function") {
      console.log(string);
      return;
    }
    if (typeof window == "object")
      return;
    if (typeof print == "function") {
      print(string);
      return;
    }
    throw "Unable to print message: " + String(string);
  }, "call$1", "printString$closure", 2, 0, null, 26]
}],
["deep_equals", "package:yaml/src/deep_equals.dart", , G, {
  "": "",
  deepEquals: [function(obj1, obj2, parents1, parents2) {
    var t1, t2, i, loop1, loop2;
    t1 = obj1;
    t2 = obj2;
    if (t1 == null ? t2 == null : t1 === t2)
      return true;
    if (parents1 == null) {
      parents1 = [];
      parents2 = [];
    }
    i = 0;
    while (true) {
      t1 = J.get$length$asx(parents1);
      if (typeof t1 !== "number")
        return H.iae(t1);
      if (!(i < t1))
        break;
      t1 = obj1;
      t2 = J.$index$asx(parents1, i);
      loop1 = t1 == null ? t2 == null : t1 === t2;
      t2 = obj2;
      t1 = J.$index$asx(parents2, i);
      loop2 = t2 == null ? t1 == null : t2 === t1;
      if (loop1 && loop2)
        return true;
      if (loop1 || loop2)
        return false;
      ++i;
    }
    J.add$1$ax(parents1, obj1);
    J.add$1$ax(parents2, obj2);
    try {
      t1 = obj1;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && (t1.constructor === Array || !!t2.$isList)) {
        t1 = obj2;
        t2 = J.getInterceptor(t1);
        t2 = typeof t1 === "object" && t1 !== null && (t1.constructor === Array || !!t2.$isList);
        t1 = t2;
      } else
        t1 = false;
      if (t1) {
        t1 = G._listEquals(obj1, obj2, parents1, parents2);
        return t1;
      } else {
        t1 = obj1;
        t2 = J.getInterceptor(t1);
        if (typeof t1 === "object" && t1 !== null && !!t2.$isMap) {
          t1 = obj2;
          t2 = J.getInterceptor(t1);
          t2 = typeof t1 === "object" && t1 !== null && !!t2.$isMap;
          t1 = t2;
        } else
          t1 = false;
        if (t1) {
          t1 = G._mapEquals(obj1, obj2, parents1, parents2);
          return t1;
        } else {
          t1 = obj1;
          if (typeof t1 === "number") {
            t1 = obj2;
            t1 = typeof t1 === "number";
          } else
            t1 = false;
          if (t1) {
            t1 = G._doubleEquals(obj1, obj2);
            return t1;
          } else {
            t1 = J.$eq(obj1, obj2);
            return t1;
          }
        }
      }
    } finally {
      J.removeLast$0$ax(parents1);
      J.removeLast$0$ax(parents2);
    }
  }, "call$4", "deepEquals$closure", 4, 4, null, 77, 77, 281, 282, 283, 284],
  _listEquals: [function(list1, list2, parents1, parents2) {
    var t1, t2, i, t3;
    t1 = J.getInterceptor$asx(list1);
    t2 = J.getInterceptor$asx(list2);
    if (J.$eq(t1.get$length(list1), t2.get$length(list2)) !== true)
      return false;
    i = 0;
    while (true) {
      t3 = t1.get$length(list1);
      if (typeof t3 !== "number")
        return H.iae(t3);
      if (!(i < t3))
        break;
      if (G.deepEquals(t1.$index(list1, i), t2.$index(list2, i), parents1, parents2) !== true)
        return false;
      ++i;
    }
    return true;
  }, "call$4", "_listEquals$closure", 8, 0, null, 285, 286, 283, 284],
  _mapEquals: [function(map1, map2, parents1, parents2) {
    var t1, key;
    if (J.$eq(map1.get$length(map1), map2.get$length(map2)) !== true)
      return false;
    for (t1 = J.get$iterator$ax(map1.get$keys()); t1.moveNext$0();) {
      key = t1.get$current();
      if (map2.containsKey$1(key) !== true)
        return false;
      if (G.deepEquals(map1.$index(0, key), map2.$index(0, key), parents1, parents2) !== true)
        return false;
    }
    return true;
  }, "call$4", "_mapEquals$closure", 8, 0, null, 287, 288, 283, 284],
  _doubleEquals: [function(d1, d2) {
    if (C.JSDouble_methods.get$isNaN(d1) && C.JSDouble_methods.get$isNaN(d2))
      return true;
    return d1 === d2;
  }, "call$2", "_doubleEquals$closure", 4, 0, null, 289, 290]
}],
["html_common", "dart:html_common", , P, {
  "": "",
  _convertDartToNative_PrepareForStructuredClone: [function(value) {
    var copies, copy;
    copies = [];
    copy = new P._convertDartToNative_PrepareForStructuredClone_walk(new P._convertDartToNative_PrepareForStructuredClone_findSlot([], copies), new P._convertDartToNative_PrepareForStructuredClone_readSlot(copies), new P._convertDartToNative_PrepareForStructuredClone_writeSlot(copies)).call$1(value);
    new P._convertDartToNative_PrepareForStructuredClone_cleanupSlots().call$0();
    return copy;
  }, "call$1", "_convertDartToNative_PrepareForStructuredClone$closure", 2, 0, null, 23],
  convertNativeToDart_AcceptStructuredClone: [function(object, mustCopy) {
    var copies = [];
    return new P.convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new P.convertNativeToDart_AcceptStructuredClone_findSlot([], copies), new P.convertNativeToDart_AcceptStructuredClone_readSlot(copies), new P.convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
  }, "call$2$mustCopy", "convertNativeToDart_AcceptStructuredClone$closure", 2, 3, null, 112, 6, 291],
  Device_isOpera: function() {
    var t1 = $.Device__isOpera;
    if (t1 == null) {
      t1 = J.contains$2$asx(window.navigator.userAgent, "Opera", 0);
      $.Device__isOpera = t1;
    }
    return t1;
  },
  Device_isWebKit: function() {
    var t1 = $.Device__isWebKit;
    if (t1 == null) {
      t1 = P.Device_isOpera() !== true && J.contains$2$asx(window.navigator.userAgent, "WebKit", 0);
      $.Device__isWebKit = t1;
    }
    return t1;
  },
  _convertDartToNative_PrepareForStructuredClone_findSlot: {
    "": "Closure:224;values_1,copies_2",
    call$1: [function(value) {
      var t1, $length, i;
      t1 = this.values_1;
      $length = t1.length;
      for (i = 0; i < $length; ++i)
        if (t1[i] === value)
          return i;
      t1.push(value);
      this.copies_2.push(null);
      return $length;
    }, "call$1", null, 2, 0, null, 23, "call"],
    $isFunction: true
  },
  _convertDartToNative_PrepareForStructuredClone_readSlot: {
    "": "Closure:513;copies_3",
    call$1: [function(i) {
      var t1 = this.copies_3;
      if (i >= t1.length)
        return H.ioore(t1, i);
      return t1[i];
    }, "call$1", null, 2, 0, null, 418, "call"],
    $isFunction: true
  },
  _convertDartToNative_PrepareForStructuredClone_writeSlot: {
    "": "Closure:584;copies_4",
    call$2: [function(i, x) {
      var t1 = this.copies_4;
      if (i >= t1.length)
        return H.ioore(t1, i);
      t1[i] = x;
    }, "call$2", null, 4, 0, null, 418, 21, "call"],
    $isFunction: true
  },
  _convertDartToNative_PrepareForStructuredClone_cleanupSlots: {
    "": "Closure:108;",
    call$0: [function() {
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _convertDartToNative_PrepareForStructuredClone_walk: {
    "": "Closure:271;findSlot_5,readSlot_6,writeSlot_7",
    call$1: [function(e) {
      var t1, t2, slot, copy, $length, i;
      t1 = {};
      if (e == null)
        return e;
      if (typeof e === "boolean")
        return e;
      if (typeof e === "number")
        return e;
      if (typeof e === "string")
        return e;
      t2 = J.getInterceptor(e);
      if (typeof e === "object" && e !== null && !!t2.$isDateTime)
        return new Date(e.millisecondsSinceEpoch);
      if (typeof e === "object" && e !== null && !!t2.$isRegExp)
        throw H.wrapException(P.UnimplementedError$("structured clone of RegExp"));
      if (typeof e === "object" && e !== null && !!t2.$isFile)
        return e;
      if (typeof e === "object" && e !== null && !!t2.$isBlob)
        return e;
      if (typeof e === "object" && e !== null && !!t2.$isImageData)
        return e;
      if (typeof e === "object" && e !== null && !!t2.$isNativeByteBuffer)
        return e;
      if (typeof e === "object" && e !== null && !!t2.$isNativeTypedData)
        return e;
      if (typeof e === "object" && e !== null && !!t2.$isMap) {
        slot = this.findSlot_5.call$1(e);
        copy = this.readSlot_6.call$1(slot);
        t1.copy_0 = copy;
        if (copy != null)
          return copy;
        copy = {};
        t1.copy_0 = copy;
        this.writeSlot_7.call$2(slot, copy);
        t2.forEach$1(e, new P._convertDartToNative_PrepareForStructuredClone_walk_closure(t1, this));
        return t1.copy_0;
      }
      if (typeof e === "object" && e !== null && (e.constructor === Array || !!t2.$isList)) {
        $length = t2.get$length(e);
        slot = this.findSlot_5.call$1(e);
        copy = this.readSlot_6.call$1(slot);
        if (copy != null) {
          if (true === copy) {
            copy = new Array($length);
            this.writeSlot_7.call$2(slot, copy);
          }
          return copy;
        }
        copy = new Array($length);
        this.writeSlot_7.call$2(slot, copy);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          t1 = this.call$1(t2.$index(e, i));
          if (i >= copy.length)
            return H.ioore(copy, i);
          copy[i] = t1;
        }
        return copy;
      }
      throw H.wrapException(P.UnimplementedError$("structured clone of other type"));
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  _convertDartToNative_PrepareForStructuredClone_walk_closure: {
    "": "Closure:426;box_0,walk_8",
    call$2: [function(key, value) {
      this.box_0.copy_0[key] = this.walk_8.call$1(value);
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true
  },
  convertNativeToDart_AcceptStructuredClone_findSlot: {
    "": "Closure:224;values_0,copies_1",
    call$1: [function(value) {
      var t1, $length, i, t2;
      t1 = this.values_0;
      $length = t1.length;
      for (i = 0; i < $length; ++i) {
        t2 = t1[i];
        if (t2 == null ? value == null : t2 === value)
          return i;
      }
      t1.push(value);
      this.copies_1.push(null);
      return $length;
    }, "call$1", null, 2, 0, null, 23, "call"],
    $isFunction: true
  },
  convertNativeToDart_AcceptStructuredClone_readSlot: {
    "": "Closure:513;copies_2",
    call$1: [function(i) {
      var t1 = this.copies_2;
      if (i >= t1.length)
        return H.ioore(t1, i);
      return t1[i];
    }, "call$1", null, 2, 0, null, 418, "call"],
    $isFunction: true
  },
  convertNativeToDart_AcceptStructuredClone_writeSlot: {
    "": "Closure:584;copies_3",
    call$2: [function(i, x) {
      var t1 = this.copies_3;
      if (i >= t1.length)
        return H.ioore(t1, i);
      t1[i] = x;
    }, "call$2", null, 4, 0, null, 418, 21, "call"],
    $isFunction: true
  },
  convertNativeToDart_AcceptStructuredClone_walk: {
    "": "Closure:271;mustCopy_4,findSlot_5,readSlot_6,writeSlot_7",
    call$1: [function(e) {
      var slot, copy, t1, key, $length, t2, i;
      if (e == null)
        return e;
      if (typeof e === "boolean")
        return e;
      if (typeof e === "number")
        return e;
      if (typeof e === "string")
        return e;
      if (e instanceof Date)
        return P.DateTime$fromMillisecondsSinceEpoch(e.getTime(), true);
      if (e instanceof RegExp)
        throw H.wrapException(P.UnimplementedError$("structured clone of RegExp"));
      if (Object.getPrototypeOf(e) === Object.prototype) {
        slot = this.findSlot_5.call$1(e);
        copy = this.readSlot_6.call$1(slot);
        if (copy != null)
          return copy;
        copy = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
        this.writeSlot_7.call$2(slot, copy);
        for (t1 = Object.keys(e), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();) {
          key = t1._current;
          copy.$indexSet(0, key, this.call$1(e[key]));
        }
        return copy;
      }
      if (e instanceof Array) {
        slot = this.findSlot_5.call$1(e);
        copy = this.readSlot_6.call$1(slot);
        if (copy != null)
          return copy;
        t1 = J.getInterceptor$asx(e);
        $length = t1.get$length(e);
        copy = this.mustCopy_4 ? new Array($length) : e;
        this.writeSlot_7.call$2(slot, copy);
        if (typeof $length !== "number")
          return H.iae($length);
        t2 = J.getInterceptor$ax(copy);
        i = 0;
        for (; i < $length; ++i)
          t2.$indexSet(copy, i, this.call$1(t1.$index(e, i)));
        return copy;
      }
      return e;
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  CssClassSetImpl: {
    "": "Object;",
    toString$0: [function(_) {
      return this.readClasses$0().join$1(0, " ");
    }, "call$0", "get$toString", 0, 0, null],
    toggle$2: [function(value, shouldAdd) {
      var s, result;
      s = this.readClasses$0();
      if (shouldAdd) {
        s.add$1(0, value);
        result = true;
      } else {
        s.remove$1(0, value);
        result = false;
      }
      this.writeClasses$1(s);
      return result;
    }, "call$2", "get$toggle", 2, 2, null, 77, 23, 574],
    get$iterator: function(_) {
      var t1 = this.readClasses$0();
      t1 = H.setRuntimeTypeInfo(new P.LinkedHashSetIterator(t1, t1._modifications, null, null), [null]);
      t1._cell = t1._set._first;
      return t1;
    },
    forEach$1: [function(_, f) {
      this.readClasses$0().forEach$1(0, f);
    }, "call$1", "get$forEach", 2, 0, null, 154],
    join$1: [function(_, separator) {
      return this.readClasses$0().join$1(0, separator);
    }, "call$1", "get$join", 0, 2, null, 122, 412],
    map$1: [function(_, f) {
      var t1 = this.readClasses$0();
      return H.MappedIterable_MappedIterable(t1, f, H.getRuntimeTypeArgument(t1, "IterableBase", 0), null);
    }, "call$1", "get$map", 2, 0, null, 154],
    where$1: [function(_, f) {
      var t1 = this.readClasses$0();
      return H.setRuntimeTypeInfo(new H.WhereIterable(t1, f), [H.getRuntimeTypeArgument(t1, "IterableBase", 0)]);
    }, "call$1", "get$where", 2, 0, null, 154],
    any$1: [function(_, f) {
      return this.readClasses$0().any$1(0, f);
    }, "call$1", "get$any", 2, 0, null, 154],
    get$isEmpty: function(_) {
      return this.readClasses$0()._collection$_length === 0;
    },
    get$isNotEmpty: function(_) {
      return this.readClasses$0()._collection$_length !== 0;
    },
    get$length: function(_) {
      return this.readClasses$0()._collection$_length;
    },
    fold$2: [function(_, initialValue, combine) {
      return this.readClasses$0().fold$2(0, initialValue, combine);
    }, "call$2", "get$fold", 4, 0, null, 155, 156],
    contains$1: [function(_, value) {
      return this.readClasses$0().contains$1(0, value);
    }, "call$1", "get$contains", 2, 0, null, 23],
    lookup$1: [function(value) {
      return this.readClasses$0().contains$1(0, value) ? value : null;
    }, "call$1", "get$lookup", 2, 0, null, 23],
    add$1: [function(_, value) {
      return this.modify$1(new P.CssClassSetImpl_add_closure(value));
    }, "call$1", "get$add", 2, 0, null, 23],
    remove$1: [function(_, value) {
      var s, result;
      if (typeof value !== "string")
        return false;
      s = this.readClasses$0();
      result = s.remove$1(0, value);
      this.writeClasses$1(s);
      return result;
    }, "call$1", "get$remove", 2, 0, null, 23],
    addAll$1: [function(_, iterable) {
      this.modify$1(new P.CssClassSetImpl_addAll_closure(iterable));
    }, "call$1", "get$addAll", 2, 0, null, 153],
    get$first: function(_) {
      var t1 = this.readClasses$0()._first;
      if (t1 == null)
        H.throwExpression(new P.StateError("No elements"));
      return t1.get$_collection$_element();
    },
    get$last: function(_) {
      var t1 = this.readClasses$0()._last;
      if (t1 == null)
        H.throwExpression(new P.StateError("No elements"));
      return t1.get$_collection$_element();
    },
    toList$1$growable: [function(_, growable) {
      return this.readClasses$0().toList$1$growable(0, growable);
    }, function($receiver) {
      return this.toList$1$growable($receiver, true);
    }, "toList$0", "call$1$growable", null, "get$toList", 0, 3, null, 414, 415],
    take$1: [function(_, n) {
      var t1 = this.readClasses$0();
      return H.TakeIterable_TakeIterable(t1, n, H.getRuntimeTypeArgument(t1, "IterableBase", 0));
    }, "call$1", "get$take", 2, 0, null, 347],
    skip$1: [function(_, n) {
      var t1 = this.readClasses$0();
      return H.SkipIterable_SkipIterable(t1, n, H.getRuntimeTypeArgument(t1, "IterableBase", 0));
    }, "call$1", "get$skip", 2, 0, null, 347],
    firstWhere$2$orElse: [function(_, test, orElse) {
      return this.readClasses$0().firstWhere$2$orElse(0, test, orElse);
    }, function($receiver, test) {
      return this.firstWhere$2$orElse($receiver, test, null);
    }, "firstWhere$1", "call$2$orElse", null, "get$firstWhere", 2, 3, null, 77, 157, 158],
    elementAt$1: [function(_, index) {
      return this.readClasses$0().elementAt$1(0, index);
    }, "call$1", "get$elementAt", 2, 0, null, 47],
    clear$0: [function(_) {
      this.modify$1(new P.CssClassSetImpl_clear_closure());
    }, "call$0", "get$clear", 0, 0, null],
    modify$1: [function(f) {
      var s, ret;
      s = this.readClasses$0();
      ret = f.call$1(s);
      this.writeClasses$1(s);
      return ret;
    }, "call$1", "get$modify", 2, 0, null, 154],
    $isEfficientLength: true,
    $isIterable: true,
    $asIterable: function() {
      return [J.JSString];
    }
  },
  CssClassSetImpl_add_closure: {
    "": "Closure:271;value_0",
    call$1: [function(s) {
      return s.add$1(0, this.value_0);
    }, "call$1", null, 2, 0, null, 86, "call"],
    $isFunction: true
  },
  CssClassSetImpl_addAll_closure: {
    "": "Closure:271;iterable_0",
    call$1: [function(s) {
      return s.addAll$1(0, this.iterable_0);
    }, "call$1", null, 2, 0, null, 86, "call"],
    $isFunction: true
  },
  CssClassSetImpl_clear_closure: {
    "": "Closure:271;",
    call$1: [function(s) {
      return s.clear$0(0);
    }, "call$1", null, 2, 0, null, 86, "call"],
    $isFunction: true
  },
  FilteredElementList: {
    "": "ListBase;_html_common$_node,_childNodes",
    get$_filtered: function() {
      var t1 = this._childNodes;
      return P.List_List$from(t1.where$1(t1, new P.FilteredElementList__filtered_closure()), true, W.Element);
    },
    forEach$1: [function(_, f) {
      H.IterableMixinWorkaround_forEach(this.get$_filtered(), f);
    }, "call$1", "get$forEach", 2, 0, null, 154],
    $indexSet: [function(_, index, value) {
      var t1 = this.get$_filtered();
      if (index >>> 0 !== index || index >= t1.length)
        return H.ioore(t1, index);
      J.replaceWith$1$x(t1[index], value);
    }, "call$2", "get$[]=", 4, 0, null, 47, 23],
    set$length: function(_, newLength) {
      var len, t1;
      len = this.get$_filtered().length;
      t1 = J.getInterceptor$n(newLength);
      if (t1.$ge(newLength, len))
        return;
      else if (t1.$lt(newLength, 0))
        throw H.wrapException(new P.ArgumentError("Invalid list length"));
      this.removeRange$2(0, newLength, len);
    },
    add$1: [function(_, value) {
      this._childNodes._this.appendChild(value);
    }, "call$1", "get$add", 2, 0, null, 23],
    addAll$1: [function(_, iterable) {
      var t1, t2;
      for (t1 = J.get$iterator$ax(iterable), t2 = this._childNodes._this; t1.moveNext$0();)
        t2.appendChild(t1.get$current());
    }, "call$1", "get$addAll", 2, 0, null, 153],
    contains$1: [function(_, needle) {
      var t1 = J.getInterceptor(needle);
      if (typeof needle !== "object" || needle === null || !t1.$isElement)
        return false;
      return needle.parentNode === this._html_common$_node;
    }, "call$1", "get$contains", 2, 0, null, 102],
    get$reversed: function(_) {
      return H.setRuntimeTypeInfo(new H.ReversedListIterable(this.get$_filtered()), [null]);
    },
    sort$1: [function(_, compare) {
      throw H.wrapException(P.UnsupportedError$("Cannot sort filtered list"));
    }, "call$1", "get$sort", 0, 2, null, 77, 173],
    setRange$4: [function(_, start, end, iterable, skipCount) {
      throw H.wrapException(P.UnsupportedError$("Cannot setRange on filtered list"));
    }, "call$4", "get$setRange", 6, 2, null, 413, 161, 162, 153, 163],
    removeRange$2: [function(_, start, end) {
      H.IterableMixinWorkaround_forEach(C.JSArray_methods.sublist$2(this.get$_filtered(), start, end), new P.FilteredElementList_removeRange_closure());
    }, "call$2", "get$removeRange", 4, 0, null, 161, 162],
    clear$0: [function(_) {
      this._childNodes._this.textContent = "";
    }, "call$0", "get$clear", 0, 0, null],
    removeLast$0: [function(_) {
      var result = this.get$last(this);
      if (result != null)
        J.remove$0$ax(result);
      return result;
    }, "call$0", "get$removeLast", 0, 0, null],
    insert$2: [function(_, index, value) {
      this._childNodes.insert$2(0, index, value);
    }, "call$2", "get$insert", 4, 0, null, 47, 23],
    remove$1: [function(_, element) {
      var t1, i, indexElement;
      t1 = J.getInterceptor(element);
      if (typeof element !== "object" || element === null || !t1.$isElement)
        return false;
      for (i = 0; i < this.get$_filtered().length; ++i) {
        t1 = this.get$_filtered();
        if (i >= t1.length)
          return H.ioore(t1, i);
        indexElement = t1[i];
        if (indexElement == null ? element == null : indexElement === element) {
          J.remove$0$ax(indexElement);
          return true;
        }
      }
      return false;
    }, "call$1", "get$remove", 2, 0, null, 169],
    get$length: function(_) {
      return this.get$_filtered().length;
    },
    $index: [function(_, index) {
      var t1 = this.get$_filtered();
      if (index >>> 0 !== index || index >= t1.length)
        return H.ioore(t1, index);
      return t1[index];
    }, "call$1", "get$[]", 2, 0, null, 47],
    get$iterator: function(_) {
      var t1 = this.get$_filtered();
      return H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]);
    }
  },
  FilteredElementList__filtered_closure: {
    "": "Closure:271;",
    call$1: [function(n) {
      var t1 = J.getInterceptor(n);
      return typeof n === "object" && n !== null && !!t1.$isElement;
    }, "call$1", null, 2, 0, null, 347, "call"],
    $isFunction: true
  },
  FilteredElementList_removeRange_closure: {
    "": "Closure:271;",
    call$1: [function(el) {
      return J.remove$0$ax(el);
    }, "call$1", null, 2, 0, null, 343, "call"],
    $isFunction: true
  }
}],
["location", "package:dartdoc_viewer/location.dart", , Y, {
  "": "",
  DocsLocation: {
    "": "Object;packageName<,libraryName,memberName<,subMemberName?,anchor?",
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isDocsLocation)
        return false;
      return J.$eq(this.packageName, other.packageName) === true && J.$eq(this.libraryName, other.libraryName) === true && J.$eq(this.memberName, other.memberName) === true && J.$eq(this.subMemberName, other.subMemberName) === true && J.$eq(this.anchor, other.anchor) === true;
    }, "call$1", "get$==", 2, 0, null, 104],
    get$hashCode: function(_) {
      var t1, t2, t3, t4;
      t1 = J.$xor$n(J.get$hashCode$(this.packageName), J.get$hashCode$(this.libraryName));
      t2 = J.get$hashCode$(this.memberName);
      if (typeof t2 !== "number")
        return H.iae(t2);
      t3 = J.get$hashCode$(this.subMemberName);
      if (typeof t3 !== "number")
        return H.iae(t3);
      t4 = J.get$hashCode$(this.anchor);
      if (typeof t4 !== "number")
        return H.iae(t4);
      return (t1 ^ t2 ^ t3 ^ t4) >>> 0;
    },
    _extractPieces$1: [function(uri) {
      var t1, t2, t3, t4;
      t1 = {};
      if (uri == null || J.$eq(J.get$length$asx(uri), 0) === true)
        return;
      t2 = J.getInterceptor$s(uri);
      t1.position_0 = t2.startsWith$1(uri, "#!") ? 2 : 0;
      t3 = new Y.DocsLocation__extractPieces__check(t1, uri);
      this.packageName = t3.call$1($.get$packageMatch());
      this.libraryName = t3.call$1($.get$libraryMatch());
      this.memberName = t3.call$1($.get$memberMatch());
      this.subMemberName = t3.call$1($.get$subMemberMatch());
      this.anchor = t3.call$1($.get$anchorMatch());
      t3 = t1.position_0;
      t4 = t2.get$length(uri);
      if (typeof t4 !== "number")
        return H.iae(t4);
      if (t3 < t4 && this.anchor == null)
        this.anchor = t2.substring$2(uri, t1.position_0 + 1, t2.get$length(uri));
    }, "call$1", "get$_extractPieces", 2, 0, null, 585],
    get$withoutAnchor: [function() {
      var t1, t2, t3, t4;
      t1 = this.get$packagePlus();
      t2 = this.libraryName;
      if (t2 == null)
        t2 = "";
      t3 = this.memberName;
      t3 = t3 == null ? "" : "." + H.S(t3);
      t4 = this.subMemberName;
      return C.JSArray_methods.join$1([t1, t2, t3, t4 == null ? "" : "." + H.S(t4)], "");
    }, null, null, 1, 0, 435, "withoutAnchor", 132],
    get$libraryQualifiedName: [function() {
      var t1, t2;
      t1 = H.S(this.get$packagePlus());
      t2 = this.libraryName;
      return t1 + H.S(t2 == null ? "" : t2);
    }, null, null, 1, 0, 435, "libraryQualifiedName", 132],
    get$withAnchor: [function() {
      var t1, t2, t3, t4;
      t1 = this.get$packagePlus();
      t2 = this.libraryName;
      if (t2 == null)
        t2 = "";
      t3 = this.memberName;
      t3 = t3 == null ? "" : "." + H.S(t3);
      t4 = this.subMemberName;
      t1 = C.JSArray_methods.join$1([t1, t2, t3, t4 == null ? "" : "." + H.S(t4)], "");
      t2 = this.anchor;
      return t1 + (t2 == null ? "" : "@" + H.S(t2));
    }, null, null, 1, 0, 435, "withAnchor", 132],
    get$locationWithoutAnchor: [function() {
      var t1 = Y.DocsLocation$clone(this);
      t1.anchor = null;
      return t1;
    }, null, null, 1, 0, 459, "locationWithoutAnchor", 132],
    get$packagePlus: [function() {
      var t1 = this.packageName;
      if (t1 == null)
        t1 = "";
      else
        t1 = this.libraryName == null ? t1 : H.S(t1) + "/";
      return t1;
    }, null, null, 1, 0, 108, "packagePlus", 132],
    get$libraryPlus: [function() {
      var t1 = this.libraryName;
      return t1 == null ? "" : t1;
    }, null, null, 1, 0, 108, "libraryPlus", 132],
    get$memberPlus: [function() {
      var t1 = this.memberName;
      return t1 == null ? "" : "." + H.S(t1);
    }, null, null, 1, 0, 108, "memberPlus", 132],
    get$subMemberPlus: [function() {
      var t1 = this.subMemberName;
      return t1 == null ? "" : "." + H.S(t1);
    }, null, null, 1, 0, 108, "subMemberPlus", 132],
    get$anchorPlus: [function() {
      var t1 = this.anchor;
      return t1 == null ? "" : "@" + H.S(t1);
    }, null, null, 1, 0, 108, "anchorPlus", 132],
    get$componentNames: [function() {
      var t1 = [this.packageName];
      C.JSArray_methods.addAll$1(t1, H.setRuntimeTypeInfo(new H.WhereIterable([this.libraryName, this.memberName, this.subMemberName], new Y.DocsLocation_componentNames_closure()), [null]));
      return t1;
    }, null, null, 1, 0, 586, "componentNames", 132],
    get$allComponentNames: [function() {
      return [this.packageName, this.libraryName, this.memberName, this.subMemberName, this.anchor];
    }, null, null, 1, 0, 586, "allComponentNames", 132],
    get$name: [function(_) {
      var t1 = this.anchor;
      if (t1 != null)
        return t1;
      t1 = this.subMemberName;
      if (t1 != null)
        return t1;
      t1 = this.memberName;
      if (t1 != null)
        return t1;
      t1 = this.libraryName;
      if (t1 != null)
        return t1;
      t1 = this.packageName;
      if (t1 != null)
        return t1;
      return "";
    }, null, null, 1, 0, 435, "name", 132],
    items$2$includeAllItems: [function(_, root, includeAllItems) {
      var items, t1, $package, $home, library, member, lookupName, t2, subMember, container, anchorItem;
      items = [];
      t1 = this.packageName;
      $package = t1 == null ? null : root.memberNamed$1(t1);
      if ($package != null)
        items.push($package);
      if (this.libraryName == null)
        return items;
      $home = items.length === 0 ? root : C.JSArray_methods.get$last(items);
      library = $home.memberNamed$1(this.libraryName);
      t1 = library == null;
      if (t1 && includeAllItems !== true)
        return items;
      items.push(library);
      if (t1)
        return includeAllItems === true ? [null, null, null, null, null] : items;
      t1 = this.memberName;
      member = t1 == null ? null : library.memberNamed$1(t1);
      if (member != null) {
        items.push(member);
        lookupName = this.subMemberName;
        if (lookupName != null) {
          if (J.contains$1$asx(lookupName, "-") === true) {
            t1 = this.subMemberName;
            t2 = J.getInterceptor$asx(t1);
            lookupName = t2.substring$1(t1, t2.indexOf$1(t1, "-") + 1);
          }
          subMember = member.memberNamed$1(lookupName);
        } else
          subMember = null;
        t1 = subMember == null;
        if (!t1)
          items.push(subMember);
        t2 = this.anchor;
        if (t2 != null) {
          container = t1 ? member : subMember;
          anchorItem = container.memberNamed$1(t2);
          if (anchorItem == null)
            anchorItem = container.memberNamed$1(C.JSString_methods.$add("id_", this.anchor));
          if (anchorItem != null)
            items.push(anchorItem);
        } else
          anchorItem = null;
      } else {
        subMember = null;
        anchorItem = null;
      }
      return includeAllItems === true ? [$package, library, member, subMember, anchorItem] : items;
    }, function($receiver, root) {
      return this.items$2$includeAllItems($receiver, root, false);
    }, "items$1", "call$2$includeAllItems", "call$1", "get$items", 2, 3, 587, 112, 588, 589, "items", 132],
    item$1: [function(_, root) {
      var myItems = this.items$1(0, root);
      if (myItems.length === 0)
        return;
      return C.JSArray_methods.get$last(myItems);
    }, "call$1", "get$item", 2, 0, 271, 588],
    exactItem$1: [function(root) {
      var myItems = this.items$2$includeAllItems(0, root, true);
      if (this.anchor != null) {
        if (4 >= myItems.length)
          return H.ioore(myItems, 4);
        return myItems[4];
      }
      if (this.subMemberName != null) {
        if (3 >= myItems.length)
          return H.ioore(myItems, 3);
        return myItems[3];
      }
      if (this.memberName != null) {
        if (2 >= myItems.length)
          return H.ioore(myItems, 2);
        return myItems[2];
      }
      if (this.libraryName != null) {
        if (1 >= myItems.length)
          return H.ioore(myItems, 1);
        return myItems[1];
      }
      if (this.packageName != null) {
        if (0 >= myItems.length)
          return H.ioore(myItems, 0);
        return myItems[0];
      }
      return;
    }, "call$1", "get$exactItem", 2, 0, null, 588],
    get$asMemberOrSubMemberNotAnchor: function() {
      var t1, result, t2, withParameterName, parameterName;
      t1 = this.anchor;
      if (t1 == null)
        return this;
      if (this.subMemberName != null || J.$le$n(J.get$length$asx(t1), 3))
        throw H.wrapException(P.FormatException$("DocsLocation invalid: " + H.S(this)));
      result = Y.DocsLocation$clone(this);
      result.anchor = null;
      t1 = this.anchor;
      t2 = J.getInterceptor$asx(t1);
      withParameterName = t2.substring$2(t1, 3, t2.get$length(t1)).split(",");
      parameterName = withParameterName.length > 1 ? withParameterName[1] : null;
      if (result.memberName == null) {
        result.memberName = C.JSArray_methods.get$first(withParameterName);
        result.subMemberName = parameterName;
      } else {
        result.subMemberName = C.JSArray_methods.get$first(withParameterName);
        result.anchor = parameterName;
      }
      return result;
    },
    itemFromList$1: [function(items) {
      return J.firstWhere$2$orElse$ax(J.get$reversed$ax(items), new Y.DocsLocation_itemFromList_closure(), new Y.DocsLocation_itemFromList_closure0());
    }, "call$1", "get$itemFromList", 2, 0, 143, 131, "itemFromList", 132],
    toHash$1: [function(hash) {
      return C.JSString_methods.$add("id_", hash);
    }, "call$1", "get$toHash", 2, 0, 246, 266, "toHash", 132],
    get$parentQualifiedName: [function() {
      var t1, t2, t3, t4;
      t1 = this.get$componentNames();
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1.pop();
      t1 = Y.DocsLocation$fromList(t1);
      t2 = t1.get$packagePlus();
      t3 = t1.libraryName;
      if (t3 == null)
        t3 = "";
      t4 = t1.memberName;
      t4 = t4 == null ? "" : "." + H.S(t4);
      t1 = t1.subMemberName;
      return C.JSArray_methods.join$1([t2, t3, t4, t1 == null ? "" : "." + H.S(t1)], "");
    }, null, null, 1, 0, 435, "parentQualifiedName", 132],
    get$parentLocation: [function() {
      var t1 = this.get$componentNames();
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1.pop();
      return Y.DocsLocation$fromList(t1);
    }, null, null, 1, 0, 459, "parentLocation", 132],
    get$asHash: [function() {
      var t1, hash;
      t1 = this.get$componentNames();
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1.pop();
      hash = Y.DocsLocation$fromList(t1);
      hash.anchor = C.JSString_methods.$add("id_", this.get$name(this));
      return hash;
    }, null, null, 1, 0, 459, "asHash", 132],
    get$parentName: [function() {
      var names, t1;
      names = this.get$componentNames();
      t1 = names.length;
      if (t1 < 2)
        return "";
      return names[t1 - 2];
    }, null, null, 1, 0, 435, "parentName", 132],
    get$isEmpty: [function(_) {
      return this.packageName == null && this.libraryName == null && this.memberName == null && this.subMemberName == null && this.anchor == null;
    }, null, null, 1, 0, 437, "isEmpty", 132],
    get$lastName: [function() {
      var t1 = this.anchor;
      if (t1 != null)
        return t1;
      t1 = this.subMemberName;
      if (t1 != null)
        return t1;
      t1 = this.memberName;
      if (t1 != null)
        return t1;
      t1 = this.libraryName;
      if (t1 != null)
        return t1;
      t1 = this.packageName;
      if (t1 != null)
        return t1;
      return;
    }, null, null, 1, 0, 435, "lastName", 132],
    toString$0: [function(_) {
      var t1, t2, t3, t4;
      t1 = this.get$packagePlus();
      t2 = this.libraryName;
      if (t2 == null)
        t2 = "";
      t3 = this.memberName;
      t3 = t3 == null ? "" : "." + H.S(t3);
      t4 = this.subMemberName;
      t1 = C.JSArray_methods.join$1([t1, t2, t3, t4 == null ? "" : "." + H.S(t4)], "");
      t2 = this.anchor;
      return "DocsLocation(" + (t1 + (t2 == null ? "" : "@" + H.S(t2))) + ")";
    }, "call$0", "get$toString", 0, 0, 108, "toString", 132],
    DocsLocation$clone$1: function(original) {
      this.packageName = original.packageName;
      this.libraryName = original.libraryName;
      this.memberName = original.memberName;
      this.subMemberName = original.subMemberName;
      this.anchor = original.anchor;
    },
    DocsLocation$fromList$1: function(components) {
      var t1 = components.length;
      if (t1 > 0)
        this.packageName = components[0];
      if (t1 > 1)
        this.libraryName = components[1];
      if (t1 > 2)
        this.memberName = components[2];
      if (t1 > 3)
        this.subMemberName = components[3];
      if (t1 > 4)
        this.anchor = components[4];
    },
    $isDocsLocation: true,
    static: {DocsLocation$fromList: function(components) {
        var t1 = new Y.DocsLocation(null, null, null, null, null);
        t1.DocsLocation$fromList$1(components);
        return t1;
      }, DocsLocation$clone: function(original) {
        var t1 = new Y.DocsLocation(null, null, null, null, null);
        t1.DocsLocation$clone$1(original);
        return t1;
      }}
  },
  DocsLocation__extractPieces__check: {
    "": "Closure:271;box_0,uri_1",
    call$1: [function(regex) {
      var t1, match, t2, matchedString, t3;
      t1 = this.box_0;
      match = regex.matchAsPrefix$2(0, this.uri_1, t1.position_0);
      if (match != null) {
        t2 = match._match;
        if (1 >= t2.length)
          return H.ioore(t2, 1);
        matchedString = t2[1];
        t3 = t1.position_0;
        t2 = J.get$length$asx(t2[0]);
        if (typeof t2 !== "number")
          return H.iae(t2);
        t1.position_0 = t3 + t2;
        return matchedString;
      }
    }, "call$1", null, 2, 0, null, 590, "call"],
    $isFunction: true
  },
  DocsLocation_componentNames_closure: {
    "": "Closure:271;",
    call$1: [function(x) {
      return x != null;
    }, "call$1", null, 2, 0, 271, 21, "call"],
    $isFunction: true
  },
  "+DocsLocation_componentNames_closure": [449],
  DocsLocation_itemFromList_closure: {
    "": "Closure:271;",
    call$1: [function(x) {
      return x != null;
    }, "call$1", null, 2, 0, 271, 21, "call"],
    $isFunction: true
  },
  "+DocsLocation_itemFromList_closure": [449],
  DocsLocation_itemFromList_closure0: {
    "": "Closure:108;",
    call$0: [function() {
      return;
    }, "call$0", null, 0, 0, 108, "call"],
    $isFunction: true
  },
  "+DocsLocation_itemFromList_closure": [449]
}],
["logging", "package:logging/logging.dart", , N, {
  "": "",
  Logger: {
    "": "Object;name>,parent>,_level,_children>,children>,_logging$_controller",
    get$fullName: function() {
      var t1, t2, t3;
      t1 = this.parent;
      t2 = t1 == null || J.$eq(J.get$name$x(t1), "") === true;
      t3 = this.name;
      return t2 ? t3 : t1.get$fullName() + "." + t3;
    },
    get$level: function() {
      if ($.hierarchicalLoggingEnabled) {
        var t1 = this.parent;
        if (t1 != null)
          return t1.get$level();
      }
      return $._rootLevel;
    },
    isLoggable$1: [function(value) {
      return value.value >= this.get$level().value;
    }, "call$1", "get$isLoggable", 2, 0, null, 23],
    log$4: [function(logLevel, message, error, stackTrace) {
      var t1, t2, t3, record, target;
      if (logLevel.value >= this.get$level().value) {
        t1 = this.get$fullName();
        t2 = new P.DateTime(Date.now(), false);
        t2.DateTime$_now$0();
        t3 = $.LogRecord__nextNumber;
        $.LogRecord__nextNumber = t3 + 1;
        record = new N.LogRecord(logLevel, message, t1, t2, t3, error, stackTrace);
        if ($.hierarchicalLoggingEnabled)
          for (target = this; target != null;) {
            t1 = J.getInterceptor$x(target);
            t1._logging$_publish$1(target, record);
            target = t1.get$parent(target);
          }
        else
          J._logging$_publish$1$x(N.Logger_Logger(""), record);
      }
    }, "call$4", "get$log", 4, 4, null, 77, 77, 591, 20, 188, 189],
    finer$3: [function(message, error, stackTrace) {
      return this.log$4(C.Level_FINER_400, message, error, stackTrace);
    }, function(message) {
      return this.finer$3(message, null, null);
    }, "finer$1", "call$3", null, "get$finer", 2, 4, null, 77, 77, 20, 188, 189],
    fine$3: [function(message, error, stackTrace) {
      return this.log$4(C.Level_FINE_500, message, error, stackTrace);
    }, function(message) {
      return this.fine$3(message, null, null);
    }, "fine$1", "call$3", null, "get$fine", 2, 4, null, 77, 77, 20, 188, 189],
    info$3: [function(message, error, stackTrace) {
      return this.log$4(C.Level_INFO_800, message, error, stackTrace);
    }, function(message) {
      return this.info$3(message, null, null);
    }, "info$1", "call$3", null, "get$info", 2, 4, null, 77, 77, 20, 188, 189],
    warning$3: [function(message, error, stackTrace) {
      return this.log$4(C.Level_WARNING_900, message, error, stackTrace);
    }, function(message) {
      return this.warning$3(message, null, null);
    }, "warning$1", "call$3", null, "get$warning", 2, 4, null, 77, 77, 20, 188, 189],
    _logging$_publish$1: [function(_, record) {
    }, "call$1", "get$_logging$_publish", 2, 0, null, 22],
    Logger$_internal$3: function($name, $parent, children) {
      var t1 = this.parent;
      if (t1 != null)
        J.get$_children$x(t1).$indexSet(0, this.name, this);
    },
    $isLogger: true,
    static: {"": "Logger__loggers", Logger_Logger: function($name) {
        return $.get$Logger__loggers().putIfAbsent$2($name, new N.Logger_Logger_closure($name));
      }}
  },
  Logger_Logger_closure: {
    "": "Closure:108;name_0",
    call$0: [function() {
      var thisName, dot, $parent, t1, t2;
      thisName = this.name_0;
      if (C.JSString_methods.startsWith$1(thisName, "."))
        H.throwExpression(new P.ArgumentError("name shouldn't start with a '.'"));
      dot = C.JSString_methods.lastIndexOf$1(thisName, ".");
      if (dot === -1)
        $parent = thisName !== "" ? N.Logger_Logger("") : null;
      else {
        $parent = N.Logger_Logger(C.JSString_methods.substring$2(thisName, 0, dot));
        thisName = C.JSString_methods.substring$1(thisName, dot + 1);
      }
      t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, N.Logger);
      t2 = new N.Logger(thisName, $parent, null, t1, H.setRuntimeTypeInfo(new Q.UnmodifiableMapView0(t1), [null, null]), null);
      t2.Logger$_internal$3(thisName, $parent, t1);
      return t2;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Level: {
    "": "Object;name>,value>",
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      return typeof other === "object" && other !== null && !!t1.$isLevel && this.value === other.value;
    }, "call$1", "get$==", 2, 0, null, 104],
    $lt: [function(_, other) {
      var t1 = J.get$value$x(other);
      if (typeof t1 !== "number")
        return H.iae(t1);
      return this.value < t1;
    }, "call$1", "get$<", 2, 0, null, 104],
    $le: [function(_, other) {
      var t1 = J.get$value$x(other);
      if (typeof t1 !== "number")
        return H.iae(t1);
      return this.value <= t1;
    }, "call$1", "get$<=", 2, 0, null, 104],
    $gt: [function(_, other) {
      var t1 = J.get$value$x(other);
      if (typeof t1 !== "number")
        return H.iae(t1);
      return this.value > t1;
    }, "call$1", "get$>", 2, 0, null, 104],
    $ge: [function(_, other) {
      var t1 = J.get$value$x(other);
      if (typeof t1 !== "number")
        return H.iae(t1);
      return this.value >= t1;
    }, "call$1", "get$>=", 2, 0, null, 104],
    compareTo$1: [function(_, other) {
      var t1 = J.get$value$x(other);
      if (typeof t1 !== "number")
        return H.iae(t1);
      return this.value - t1;
    }, "call$1", "get$compareTo", 2, 0, null, 104],
    get$hashCode: function(_) {
      return this.value;
    },
    toString$0: [function(_) {
      return this.name;
    }, "call$0", "get$toString", 0, 0, null],
    $isLevel: true,
    static: {"": "Level_ALL,Level_OFF,Level_FINEST,Level_FINER,Level_FINE,Level_CONFIG,Level_INFO,Level_WARNING,Level_SEVERE,Level_SHOUT,Level_LEVELS"}
  },
  LogRecord: {
    "": "Object;level<,message>,loggerName,time,sequenceNumber,error>,stackTrace<",
    toString$0: [function(_) {
      return "[" + this.level.name + "] " + this.loggerName + ": " + this.message;
    }, "call$0", "get$toString", 0, 0, null],
    static: {"": "LogRecord__nextNumber"}
  }
}],
["metadata", "../../../../../dart-git/dart/xcodebuild/ReleaseIA32/dart-sdk/lib/html/html_common/metadata.dart", , B, {
  "": "",
  SupportedBrowser: {
    "": "Object;browserName,minimumVersion",
    static: {"": "SupportedBrowser_CHROME,SupportedBrowser_FIREFOX,SupportedBrowser_IE,SupportedBrowser_OPERA,SupportedBrowser_SAFARI"}
  },
  Experimental: {
    "": "Object;"
  },
  DomName: {
    "": "Object;name>"
  },
  DocsEditable: {
    "": "Object;"
  },
  Unstable: {
    "": "Object;"
  }
}],
["model", "package:yaml/src/model.dart", , R, {
  "": "",
  Tag: {
    "": "Object;name>,kind>",
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isTag)
        return false;
      return this.name === other.name;
    }, "call$1", "get$==", 2, 0, null, 104],
    toString$0: [function(_) {
      var t1 = this.name;
      if (C.JSString_methods.startsWith$1(t1, "tag:yaml.org,2002:"))
        return "!!" + C.JSString_methods.substring$1(t1, 18);
      else
        return "!<" + t1 + ">";
    }, "call$0", "get$toString", 0, 0, null],
    get$hashCode: function(_) {
      return C.JSString_methods.get$hashCode(this.name);
    },
    $isTag: true,
    static: {"": "Tag_SCALAR_KIND,Tag_SEQUENCE_KIND,Tag_MAPPING_KIND,Tag_YAML_URI_PREFIX"}
  },
  Node0: {
    "": "Object;tag',anchor?",
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isNode0)
        return false;
      return J.$eq(this.tag, other.tag);
    }, "call$1", "get$==", 2, 0, null, 104],
    get$hashCode: function(_) {
      return N.hashCodeFor([this.tag, this.anchor], null);
    },
    $isNode0: true
  },
  SequenceNode: {
    "": "Node0;content*,tag,anchor",
    $eq: [function(_, other) {
      var t1, i, t2;
      if (other == null)
        return false;
      if (R.Node0.prototype.$eq.call(this, this, other) === true) {
        t1 = J.getInterceptor(other);
        t1 = typeof other !== "object" || other === null || !t1.$isSequenceNode;
      } else
        t1 = true;
      if (t1)
        return false;
      t1 = J.getInterceptor$x(other);
      if (J.$eq(J.get$length$asx(this.content), J.get$length$asx(t1.get$content(other))) !== true)
        return false;
      i = 0;
      while (true) {
        t2 = J.get$length$asx(this.content);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (!(i < t2))
          break;
        if (J.$eq(J.$index$asx(this.content, i), J.$index$asx(t1.get$content(other), i)) !== true)
          return false;
        ++i;
      }
      return true;
    }, "call$1", "get$==", 2, 0, null, 104],
    toString$0: [function(_) {
      return H.S(this.tag) + " [" + J.map$1$ax(this.content, new R.SequenceNode_toString_closure()).join$1(0, ", ") + "]";
    }, "call$0", "get$toString", 0, 0, null],
    get$hashCode: function(_) {
      return J.$xor$n(R.Node0.prototype.get$hashCode.call(this, this), N.hashCodeFor(this.content, null));
    },
    visit$1: [function(v) {
      return v.visitSequence$1(this);
    }, "call$1", "get$visit", 2, 0, null, 326],
    $isSequenceNode: true
  },
  SequenceNode_toString_closure: {
    "": "Closure:271;",
    call$1: [function(e) {
      return H.S(e);
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  AliasNode: {
    "": "Node0;tag,anchor",
    visit$1: [function(v) {
      return v.visitAlias$1(this);
    }, "call$1", "get$visit", 2, 0, null, 326]
  },
  ScalarNode: {
    "": "Node0;_model$_content,value>,tag,anchor",
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      if (R.Node0.prototype.$eq.call(this, this, other) === true) {
        t1 = J.getInterceptor(other);
        t1 = typeof other !== "object" || other === null || !t1.$isScalarNode;
      } else
        t1 = true;
      if (t1)
        return false;
      t1 = this._model$_content;
      t1 = t1 != null ? t1 : this.get$canonicalContent();
      return J.$eq(t1, J.get$content$x(other));
    }, "call$1", "get$==", 2, 0, null, 104],
    get$content: function(_) {
      var t1 = this._model$_content;
      return t1 != null ? t1 : this.get$canonicalContent();
    },
    get$canonicalContent: function() {
      var t1, t2;
      t1 = this.value;
      if (t1 == null || typeof t1 === "boolean" || typeof t1 === "number" && Math.floor(t1) === t1)
        return H.S(t1);
      if (typeof t1 === "number") {
        t1 = J.toStringAsExponential$1$n(t1, 20);
        t2 = H.JSSyntaxRegExp_makeNative("0+e", false, true, false);
        return H.stringReplaceFirstUnchecked(t1, new H.JSSyntaxRegExp(t2, null, null), "e");
      }
      if (typeof t1 === "string") {
        t1 = J.get$codeUnits$s(t1);
        return "\"" + t1.map$1(t1, new R.ScalarNode_canonicalContent_closure(this)).join$0(0) + "\"";
      }
      throw H.wrapException(K.YamlException$("unknown scalar value: " + H.S(t1)));
    },
    toString$0: [function(_) {
      var t1, t2;
      t1 = H.S(this.tag) + " \"";
      t2 = this._model$_content;
      return t1 + H.S(t2 != null ? t2 : this.get$canonicalContent()) + "\"";
    }, "call$0", "get$toString", 0, 0, null],
    zeroPad$2: [function(str, $length) {
      return C.JSArray_methods.join$0(P.List_List$filled($length - str.length, "0", null)) + str;
    }, "call$2", "get$zeroPad", 4, 0, null, 417, 409],
    get$hashCode: function(_) {
      var t1, t2;
      t1 = R.Node0.prototype.get$hashCode.call(this, this);
      t2 = this._model$_content;
      return J.$xor$n(t1, J.get$hashCode$(t2 != null ? t2 : this.get$canonicalContent()));
    },
    visit$1: [function(v) {
      return v.visitScalar$1(this);
    }, "call$1", "get$visit", 2, 0, null, 326],
    $isScalarNode: true
  },
  ScalarNode_canonicalContent_closure: {
    "": "Closure:271;this_0",
    call$1: [function(c) {
      var t1, t2;
      switch (c) {
        case 9:
          return "\\t";
        case 10:
          return "\\n";
        case 13:
          return "\\r";
        case 34:
          return "\\\"";
        case 0:
          return "\\0";
        case 7:
          return "\\a";
        case 8:
          return "\\b";
        case 11:
          return "\\v";
        case 12:
          return "\\f";
        case 27:
          return "\\e";
        case 92:
          return "\\\\";
        case 133:
          return "\\N";
        case 160:
          return "\\_";
        case 8232:
          return "\\L";
        case 8233:
          return "\\P";
        default:
          t1 = J.getInterceptor$n(c);
          if (!t1.$lt(c, 32))
            t2 = t1.$ge(c, 127) && t1.$lt(c, 256);
          else
            t2 = true;
          if (t2)
            return "\\x" + this.this_0.zeroPad$2(t1.toRadixString$1(c, 16).toUpperCase(), 2);
          else if (t1.$ge(c, 256) && t1.$lt(c, 65536))
            return "\\u" + this.this_0.zeroPad$2(t1.toRadixString$1(c, 16).toUpperCase(), 4);
          else if (t1.$ge(c, 65536))
            return "\\u" + this.this_0.zeroPad$2(t1.toRadixString$1(c, 16).toUpperCase(), 8);
          else
            return P.String_String$fromCharCodes([c]);
      }
    }, "call$1", null, 2, 0, null, 331, "call"],
    $isFunction: true
  },
  MappingNode: {
    "": "Node0;content*,tag,anchor",
    $eq: [function(_, other) {
      var t1, t2, key;
      if (other == null)
        return false;
      if (R.Node0.prototype.$eq.call(this, this, other) === true) {
        t1 = J.getInterceptor(other);
        t1 = typeof other !== "object" || other === null || !t1.$isMappingNode;
      } else
        t1 = true;
      if (t1)
        return false;
      t1 = J.getInterceptor$x(other);
      if (J.$eq(J.get$length$asx(this.content), J.get$length$asx(t1.get$content(other))) !== true)
        return false;
      for (t2 = J.get$iterator$ax(this.content.get$keys()); t2.moveNext$0();) {
        key = t2.get$current();
        if (t1.get$content(other).containsKey$1(key) !== true)
          return false;
        if (J.$eq(J.$index$asx(this.content, key), J.$index$asx(t1.get$content(other), key)) !== true)
          return false;
      }
      return true;
    }, "call$1", "get$==", 2, 0, null, 104],
    toString$0: [function(_) {
      var strContent = J.map$1$ax(this.content.get$keys(), new R.MappingNode_toString_closure(this)).join$1(0, ", ");
      return H.S(this.tag) + " {" + strContent + "}";
    }, "call$0", "get$toString", 0, 0, null],
    get$hashCode: function(_) {
      return J.$xor$n(R.Node0.prototype.get$hashCode.call(this, this), N.hashCodeFor(this.content, null));
    },
    visit$1: [function(v) {
      return v.visitMapping$1(this);
    }, "call$1", "get$visit", 2, 0, null, 326],
    $isMappingNode: true
  },
  MappingNode_toString_closure: {
    "": "Closure:271;this_0",
    call$1: [function(k) {
      return H.S(k) + ": " + H.S(J.$index$asx(this.this_0.content, k));
    }, "call$1", null, 2, 0, null, 501, "call"],
    $isFunction: true
  }
}],
["observe.html", "package:observe/html.dart", , T, {
  "": "",
  ObservableLocationHash: {
    "": "ChangeNotifier;_currentHash,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records",
    get$hash: [function(_) {
      return J.get$hash$x(C.Window_methods.get$location(window));
    }, null, null, 1, 0, 435, "hash", 132],
    set$hash: [function(_, value) {
      if (J.$eq(value, J.get$hash$x(C.Window_methods.get$location(window))) === true)
        return;
      window.history.pushState(null, "", value);
      this._notifyHashChange$1(null);
    }, null, null, 3, 0, 218, 23, "hash", 132],
    _notifyHashChange$1: [function(_) {
      var oldValue, t1;
      oldValue = this._currentHash;
      t1 = J.get$hash$x(C.Window_methods.get$location(window));
      this._currentHash = t1;
      F.notifyPropertyChangeHelper(this, C.Symbol_hash, oldValue, t1);
    }, "call$1", "get$_notifyHashChange", 2, 0, 196, 335],
    ObservableLocationHash$_$0: function() {
      var t1 = C.EventStreamProvider_hashchange.forTarget$1(window);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$_notifyHashChange()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      t1 = C.EventStreamProvider_popstate.forTarget$1(window);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$_notifyHashChange()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      this._currentHash = J.get$hash$x(C.Window_methods.get$location(window));
    }
  }
}],
["observe.src.change_notifier", "package:observe/src/change_notifier.dart", , O, {
  "": "",
  ChangeNotifier: {
    "": "Object;",
    get$changes: function(receiver) {
      var t1 = receiver.change_notifier$ChangeNotifier$_changes;
      if (t1 == null) {
        t1 = this.get$observed(receiver);
        t1 = P.StreamController_StreamController$broadcast(this.get$unobserved(receiver), t1, true, null);
        receiver.change_notifier$ChangeNotifier$_changes = t1;
      }
      t1.toString;
      return H.setRuntimeTypeInfo(new P._BroadcastStream(t1), [H.getTypeArgumentByIndex(t1, 0)]);
    },
    observed$0: [function(receiver) {
    }, "call$0", "get$observed", 0, 0, 107],
    unobserved$0: [function(receiver) {
      receiver.change_notifier$ChangeNotifier$_changes = null;
    }, "call$0", "get$unobserved", 0, 0, 107],
    deliverChanges$0: [function(receiver) {
      var records, t1, t2;
      records = receiver.change_notifier$ChangeNotifier$_records;
      receiver.change_notifier$ChangeNotifier$_records = null;
      t1 = receiver.change_notifier$ChangeNotifier$_changes;
      if (t1 != null) {
        t2 = t1._async$_next;
        t2 = t2 == null ? t1 != null : t2 !== t1;
      } else
        t2 = false;
      if (t2 && records != null) {
        t2 = H.setRuntimeTypeInfo(new P.UnmodifiableListView(records), [T.ChangeRecord]);
        if (t1._state >= 4)
          H.throwExpression(t1._addEventError$0());
        t1._sendData$1(t2);
        return true;
      }
      return false;
    }, "call$0", "get$deliverChanges", 0, 0, 437],
    get$hasObservers: function(receiver) {
      var t1, t2;
      t1 = receiver.change_notifier$ChangeNotifier$_changes;
      if (t1 != null) {
        t2 = t1._async$_next;
        t1 = t2 == null ? t1 != null : t2 !== t1;
      } else
        t1 = false;
      return t1;
    },
    notifyPropertyChange$3: [function(receiver, field, oldValue, newValue) {
      return F.notifyPropertyChangeHelper(receiver, field, oldValue, newValue);
    }, "call$3", "get$notifyPropertyChange", 6, 0, null, 304, 273, 274],
    notifyChange$1: [function(receiver, record) {
      var t1, t2;
      t1 = receiver.change_notifier$ChangeNotifier$_changes;
      if (t1 != null) {
        t2 = t1._async$_next;
        t1 = t2 == null ? t1 != null : t2 !== t1;
      } else
        t1 = false;
      if (!t1)
        return;
      if (receiver.change_notifier$ChangeNotifier$_records == null) {
        receiver.change_notifier$ChangeNotifier$_records = [];
        P.scheduleMicrotask(this.get$deliverChanges(receiver));
      }
      receiver.change_notifier$ChangeNotifier$_records.push(record);
    }, "call$1", "get$notifyChange", 2, 0, null, 22],
    $isObservable: true
  }
}],
["observe.src.change_record", "package:observe/src/change_record.dart", , T, {
  "": "",
  ChangeRecord: {
    "": "Object;",
    $isChangeRecord: true
  },
  PropertyChangeRecord: {
    "": "ChangeRecord;object<,name>,oldValue>,newValue>",
    toString$0: [function(_) {
      return "#<PropertyChangeRecord " + H.S(this.name) + " from: " + H.S(this.oldValue) + " to: " + H.S(this.newValue) + ">";
    }, "call$0", "get$toString", 0, 0, null],
    $isPropertyChangeRecord: true
  }
}],
["observe.src.compound_path_observer", "package:observe/src/compound_path_observer.dart", , Y, {
  "": "",
  CompoundPathObserver: {
    "": "ChangeNotifier;_compound_path_observer$_observers,_compound_path_observer$_subs,_compound_path_observer$_value,_compound_path_observer$_computeValue,_started,_scheduled,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records",
    _compound_path_observer$_computeValue$1: function(arg0) {
      return this._compound_path_observer$_computeValue.call$1(arg0);
    },
    get$length: function(_) {
      return this._compound_path_observer$_observers.length;
    },
    get$value: [function(_) {
      return this._compound_path_observer$_value;
    }, null, null, 1, 0, 108, "value", 132],
    start$0: [function(_) {
      var scheduleResolve, t1, t2, subscription, t3;
      if (this._started)
        return;
      this._started = true;
      scheduleResolve = this.get$_scheduleResolve();
      for (t1 = this._compound_path_observer$_observers, t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]), t2 = this._compound_path_observer$_subs; t1.moveNext$0();) {
        subscription = J.get$changes$x(t1._current)._createSubscription$1(false);
        t3 = subscription._zone;
        subscription._async$_onData = t3.registerUnaryCallback$1(scheduleResolve);
        subscription._onError = P._registerErrorHandler(P._nullErrorHandler$closure(), t3);
        subscription._onDone = t3.registerCallback$1(P._nullDoneHandler$closure());
        t2.push(subscription);
      }
      this._resolve$0();
    }, "call$0", "get$start", 0, 0, null],
    _scheduleResolve$1: [function(_) {
      if (this._scheduled)
        return;
      this._scheduled = true;
      P.scheduleMicrotask(this.get$_resolve());
    }, "call$1", "get$_scheduleResolve", 2, 0, 196, 335],
    _resolve$0: [function() {
      var t1, newValue;
      this._scheduled = false;
      t1 = this._compound_path_observer$_observers;
      if (t1.length === 0)
        return;
      newValue = H.setRuntimeTypeInfo(new H.MappedListIterable(t1, new Y.CompoundPathObserver__resolve_closure()), [null, null]).toList$0(0);
      if (this._compound_path_observer$_computeValue != null)
        newValue = this._compound_path_observer$_computeValue$1(newValue);
      this._compound_path_observer$_value = F.notifyPropertyChangeHelper(this, C.Symbol_value, this._compound_path_observer$_value, newValue);
    }, "call$0", "get$_resolve", 0, 0, 107],
    close$0: [function(_) {
      var t1, t2;
      t1 = this._compound_path_observer$_observers;
      if (t1.length === 0)
        return;
      if (this._started)
        for (t2 = this._compound_path_observer$_subs, t2 = H.setRuntimeTypeInfo(new H.ListIterator(t2, t2.length, 0, null), [H.getTypeArgumentByIndex(t2, 0)]); t2.moveNext$0();)
          t2._current.cancel$0();
      C.JSArray_methods.set$length(t1, 0);
      C.JSArray_methods.set$length(this._compound_path_observer$_subs, 0);
      this._compound_path_observer$_value = null;
    }, "call$0", "get$close", 0, 0, null],
    observed$0: [function(_) {
      return this.start$0(0);
    }, "call$0", "get$observed", 0, 0, 108],
    unobserved$0: [function(_) {
      return this.close$0(0);
    }, "call$0", "get$unobserved", 0, 0, 108],
    $isCompoundPathObserver: true
  },
  CompoundPathObserver__resolve_closure: {
    "": "Closure:271;",
    call$1: [function(o) {
      return J.get$value$x(o);
    }, "call$1", null, 2, 0, null, 91, "call"],
    $isFunction: true
  }
}],
["observe.src.dirty_check", "package:observe/src/dirty_check.dart", , O, {
  "": "",
  dirtyCheckObservables: [function() {
    var cycles, debugLoop, toCheck, t1, anyChanged, i, observer, t2, info, t3;
    if ($._delivering)
      return;
    if ($._allObservables == null)
      return;
    $._delivering = true;
    cycles = 0;
    debugLoop = null;
    do {
      ++cycles;
      if (cycles === 1000)
        debugLoop = [];
      toCheck = $._allObservables;
      t1 = [];
      t1.$builtinTypeInfo = [F.Observable];
      $._allObservables = t1;
      for (t1 = debugLoop != null, anyChanged = false, i = 0; i < toCheck.length; ++i) {
        observer = toCheck[i];
        t2 = observer._observable$_changes;
        t2 = t2._async$_next !== t2;
        if (t2) {
          if (observer.deliverChanges$0(0)) {
            if (t1)
              debugLoop.push([i, observer]);
            anyChanged = true;
          }
          $._allObservables.push(observer);
        }
      }
    } while (cycles < 1000 && anyChanged);
    if (t1 && anyChanged) {
      t1 = $.get$_logger0();
      t1.warning$1("Possible loop in Observable.dirtyCheck, stopped checking.");
      for (t2 = H.setRuntimeTypeInfo(new H.ListIterator(debugLoop, debugLoop.length, 0, null), [H.getTypeArgumentByIndex(debugLoop, 0)]); t2.moveNext$0();) {
        info = t2._current;
        t3 = J.getInterceptor$asx(info);
        t1.warning$1("In last iteration Observable changed at index " + H.S(t3.$index(info, 0)) + ", object: " + H.S(t3.$index(info, 1)) + ".");
      }
    }
    $._allObservablesCount = $._allObservables.length;
    $._delivering = false;
  }, "call$0", "dirtyCheckObservables$closure", 0, 0, null],
  dirtyCheckZoneSpec: [function() {
    var t1 = {};
    t1.pending_0 = false;
    t1 = new O.dirtyCheckZoneSpec_enqueueDirtyCheck(t1);
    return new P._ZoneSpecification(null, null, null, null, new O.dirtyCheckZoneSpec_wrapCallback(t1), new O.dirtyCheckZoneSpec_wrapUnaryCallback(t1), null, null, null, null, null, null);
  }, "call$0", "dirtyCheckZoneSpec$closure", 0, 0, null],
  dirtyCheckZoneSpec_enqueueDirtyCheck: {
    "": "Closure:592;box_0",
    call$2: [function($parent, zone) {
      var t1 = this.box_0;
      if (t1.pending_0)
        return;
      t1.pending_0 = true;
      $parent.scheduleMicrotask$2(zone, new O.dirtyCheckZoneSpec_enqueueDirtyCheck_closure(t1));
    }, "call$2", null, 4, 0, null, 206, 190, "call"],
    $isFunction: true
  },
  dirtyCheckZoneSpec_enqueueDirtyCheck_closure: {
    "": "Closure:108;box_0",
    call$0: [function() {
      this.box_0.pending_0 = false;
      O.dirtyCheckObservables();
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  dirtyCheckZoneSpec_wrapCallback: {
    "": "Closure:207;enqueueDirtyCheck_1",
    call$4: [function($self, $parent, zone, f) {
      if (f == null)
        return f;
      return new O.dirtyCheckZoneSpec_wrapCallback_closure(this.enqueueDirtyCheck_1, $parent, zone, f);
    }, "call$4", null, 8, 0, null, 205, 206, 190, 154, "call"],
    $isFunction: true
  },
  dirtyCheckZoneSpec_wrapCallback_closure: {
    "": "Closure:108;enqueueDirtyCheck_2,parent_3,zone_4,f_5",
    call$0: [function() {
      this.enqueueDirtyCheck_2.call$2(this.parent_3, this.zone_4);
      return this.f_5.call$0();
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  dirtyCheckZoneSpec_wrapUnaryCallback: {
    "": "Closure:593;enqueueDirtyCheck_6",
    call$4: [function($self, $parent, zone, f) {
      if (f == null)
        return f;
      return new O.dirtyCheckZoneSpec_wrapUnaryCallback_closure(this.enqueueDirtyCheck_6, $parent, zone, f);
    }, "call$4", null, 8, 0, null, 205, 206, 190, 154, "call"],
    $isFunction: true
  },
  dirtyCheckZoneSpec_wrapUnaryCallback_closure: {
    "": "Closure:271;enqueueDirtyCheck_7,parent_8,zone_9,f_10",
    call$1: [function(x) {
      this.enqueueDirtyCheck_7.call$2(this.parent_8, this.zone_9);
      return this.f_10.call$1(x);
    }, "call$1", null, 2, 0, null, 21, "call"],
    $isFunction: true
  }
}],
["observe.src.list_diff", "package:observe/src/list_diff.dart", , G, {
  "": "",
  _calcEditDistances: [function(current, currentStart, currentEnd, old, oldStart, oldEnd) {
    var rowCount, columnCount, distances, t1, i, t2, j, t3, t4, t5, t6, t7, t8, t9, t10;
    rowCount = J.$add$ns(J.$sub$n(oldEnd, oldStart), 1);
    columnCount = J.$add$ns(J.$sub$n(currentEnd, currentStart), 1);
    if (typeof rowCount !== "number")
      return H.iae(rowCount);
    distances = Array(rowCount);
    for (t1 = distances.length, i = 0; i < rowCount; ++i) {
      if (typeof columnCount !== "number")
        return H.iae(columnCount);
      t2 = Array(columnCount);
      if (i >= t1)
        return H.ioore(distances, i);
      distances[i] = t2;
      if (0 >= t2.length)
        return H.ioore(t2, 0);
      t2[0] = i;
    }
    if (typeof columnCount !== "number")
      return H.iae(columnCount);
    j = 0;
    for (; j < columnCount; ++j) {
      if (0 >= t1)
        return H.ioore(distances, 0);
      t2 = distances[0];
      if (j >= t2.length)
        return H.ioore(t2, j);
      t2[j] = j;
    }
    for (t2 = J.getInterceptor$asx(old), t3 = J.getInterceptor$ns(currentStart), t4 = J.getInterceptor$asx(current), i = 1; i < rowCount; ++i)
      for (t5 = i - 1, t6 = oldStart + i - 1, j = 1; j < columnCount; ++j) {
        t7 = J.$eq(t2.$index(old, t6), t4.$index(current, J.$sub$n(t3.$add(currentStart, j), 1)));
        t8 = j - 1;
        t9 = distances[i];
        t10 = distances[t5];
        if (t7 === true) {
          if (i >= t1)
            return H.ioore(distances, i);
          if (t5 >= t1)
            return H.ioore(distances, t5);
          if (t8 >= t10.length)
            return H.ioore(t10, t8);
          t7 = t10[t8];
          if (j >= t9.length)
            return H.ioore(t9, j);
          t9[j] = t7;
        } else {
          if (t5 >= t1)
            return H.ioore(distances, t5);
          if (j >= t10.length)
            return H.ioore(t10, j);
          t7 = t10[j];
          if (typeof t7 !== "number")
            return t7.$add();
          if (i >= t1)
            return H.ioore(distances, i);
          t10 = t9.length;
          if (t8 >= t10)
            return H.ioore(t9, t8);
          t8 = t9[t8];
          if (typeof t8 !== "number")
            return t8.$add();
          t8 = P.min(t7 + 1, t8 + 1);
          if (j >= t10)
            return H.ioore(t9, j);
          t9[j] = t8;
        }
      }
    return distances;
  }, "call$6", "_calcEditDistances$closure", 12, 0, null, 292, 293, 294, 295, 296, 297],
  _spliceOperationsFromEditDistances: [function(distances) {
    var t1, i, j, t2, current, edits, t3, t4, t5, northWest, west, north, min;
    t1 = distances.length;
    i = t1 - 1;
    if (0 >= t1)
      return H.ioore(distances, 0);
    j = distances[0].length - 1;
    if (i < 0)
      return H.ioore(distances, i);
    t2 = distances[i];
    if (j < 0 || j >= t2.length)
      return H.ioore(t2, j);
    current = t2[j];
    edits = [];
    while (true) {
      if (!(i > 0 || j > 0))
        break;
      c$0: {
        if (i === 0) {
          edits.push(2);
          --j;
          break c$0;
        }
        if (j === 0) {
          edits.push(3);
          --i;
          break c$0;
        }
        t2 = i - 1;
        if (t2 < 0)
          return H.ioore(distances, t2);
        t3 = distances[t2];
        t4 = j - 1;
        t5 = t3.length;
        if (t4 < 0 || t4 >= t5)
          return H.ioore(t3, t4);
        northWest = t3[t4];
        if (j < 0 || j >= t5)
          return H.ioore(t3, j);
        west = t3[j];
        if (i < 0)
          return H.ioore(distances, i);
        t3 = distances[i];
        if (t4 >= t3.length)
          return H.ioore(t3, t4);
        north = t3[t4];
        min = P.min(P.min(west, north), northWest);
        if (min === northWest) {
          if (northWest == null ? current == null : northWest === current)
            edits.push(0);
          else {
            edits.push(1);
            current = northWest;
          }
          j = t4;
          i = t2;
        } else if (min === west) {
          edits.push(3);
          current = west;
          i = t2;
        } else {
          edits.push(2);
          current = north;
          j = t4;
        }
      }
    }
    return H.setRuntimeTypeInfo(new H.ReversedListIterable(edits), [null]).toList$0(0);
  }, "call$1", "_spliceOperationsFromEditDistances$closure", 2, 0, null, 298],
  _sharedPrefix: [function(arr1, arr2, searchLength) {
    var t1, t2, i;
    for (t1 = J.getInterceptor$asx(arr1), t2 = J.getInterceptor$asx(arr2), i = 0; i < searchLength; ++i)
      if (J.$eq(t1.$index(arr1, i), t2.$index(arr2, i)) !== true)
        return i;
    return searchLength;
  }, "call$3", "_sharedPrefix$closure", 6, 0, null, 299, 300, 301],
  _sharedSuffix: [function(arr1, arr2, searchLength) {
    var t1, index1, t2, index2, count, t3;
    t1 = J.getInterceptor$asx(arr1);
    index1 = t1.get$length(arr1);
    t2 = J.getInterceptor$asx(arr2);
    index2 = t2.get$length(arr2);
    count = 0;
    while (true) {
      if (count < searchLength) {
        index1 = J.$sub$n(index1, 1);
        t3 = t1.$index(arr1, index1);
        index2 = J.$sub$n(index2, 1);
        t3 = J.$eq(t3, t2.$index(arr2, index2)) === true;
      } else
        t3 = false;
      if (!t3)
        break;
      ++count;
    }
    return count;
  }, "call$3", "_sharedSuffix$closure", 6, 0, null, 299, 300, 301],
  calcSplices: [function(current, currentStart, currentEnd, old, oldStart, oldEnd) {
    var t1, t2, minLength, t3, prefixCount, suffixCount, removed, splice, oldStart0, ops, splices, oldIndex, index, i;
    t1 = J.getInterceptor$n(currentEnd);
    t2 = J.getInterceptor$n(oldEnd);
    minLength = P.min(t1.$sub(currentEnd, currentStart), t2.$sub(oldEnd, oldStart));
    t3 = J.getInterceptor(currentStart);
    prefixCount = t3.$eq(currentStart, 0) === true && oldStart === 0 ? G._sharedPrefix(current, old, minLength) : 0;
    suffixCount = t1.$eq(currentEnd, J.get$length$asx(current)) === true && t2.$eq(oldEnd, J.get$length$asx(old)) === true ? G._sharedSuffix(current, old, minLength - prefixCount) : 0;
    currentStart = t3.$add(currentStart, prefixCount);
    oldStart += prefixCount;
    currentEnd = t1.$sub(currentEnd, suffixCount);
    oldEnd = t2.$sub(oldEnd, suffixCount);
    t1 = J.getInterceptor$n(currentEnd);
    if (J.$eq(t1.$sub(currentEnd, currentStart), 0) && J.$eq(J.$sub$n(oldEnd, oldStart), 0))
      return C.List_empty;
    if (J.$eq(currentStart, currentEnd)) {
      removed = [];
      t1 = new P.UnmodifiableListView(removed);
      t1.$builtinTypeInfo = [null];
      splice = new G.ListChangeRecord(current, t1, removed, currentStart, 0);
      if (typeof oldEnd !== "number")
        return H.iae(oldEnd);
      t1 = J.getInterceptor$asx(old);
      for (; oldStart < oldEnd; oldStart = oldStart0) {
        oldStart0 = oldStart + 1;
        J.add$1$ax(splice._removed, t1.$index(old, oldStart));
      }
      return [splice];
    } else if (oldStart === oldEnd) {
      t1 = t1.$sub(currentEnd, currentStart);
      removed = [];
      t2 = new P.UnmodifiableListView(removed);
      t2.$builtinTypeInfo = [null];
      return [new G.ListChangeRecord(current, t2, removed, currentStart, t1)];
    }
    ops = G._spliceOperationsFromEditDistances(G._calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));
    splices = [];
    splices.$builtinTypeInfo = [G.ListChangeRecord];
    for (t1 = J.getInterceptor$asx(old), oldIndex = oldStart, index = currentStart, splice = null, i = 0; i < ops.length; ++i)
      switch (ops[i]) {
        case 0:
          if (splice != null) {
            splices.push(splice);
            splice = null;
          }
          index = J.$add$ns(index, 1);
          ++oldIndex;
          break;
        case 1:
          if (splice == null) {
            removed = [];
            t2 = new P.UnmodifiableListView(removed);
            t2.$builtinTypeInfo = [null];
            splice = new G.ListChangeRecord(current, t2, removed, index, 0);
          }
          splice._addedCount = J.$add$ns(splice._addedCount, 1);
          index = J.$add$ns(index, 1);
          J.add$1$ax(splice._removed, t1.$index(old, oldIndex));
          ++oldIndex;
          break;
        case 2:
          if (splice == null) {
            removed = [];
            t2 = new P.UnmodifiableListView(removed);
            t2.$builtinTypeInfo = [null];
            splice = new G.ListChangeRecord(current, t2, removed, index, 0);
          }
          splice._addedCount = J.$add$ns(splice._addedCount, 1);
          index = J.$add$ns(index, 1);
          break;
        case 3:
          if (splice == null) {
            removed = [];
            t2 = new P.UnmodifiableListView(removed);
            t2.$builtinTypeInfo = [null];
            splice = new G.ListChangeRecord(current, t2, removed, index, 0);
          }
          J.add$1$ax(splice._removed, t1.$index(old, oldIndex));
          ++oldIndex;
          break;
        default:
      }
    if (splice != null)
      splices.push(splice);
    return splices;
  }, "call$6", "calcSplices$closure", 12, 0, null, 292, 293, 294, 295, 296, 297],
  _mergeSplice: [function(splices, record) {
    var t1, t2, t3, addedCount, t4, splice, inserted, insertionOffset, i, current, intersectCount, deleteCount, removed, offset;
    t1 = record.get$object();
    t2 = J.get$index$x(record);
    t3 = J.toList$0$ax(record.get$_removed());
    addedCount = record.get$addedCount();
    if (addedCount == null)
      addedCount = 0;
    t4 = new P.UnmodifiableListView(t3);
    t4.$builtinTypeInfo = [null];
    splice = new G.ListChangeRecord(t1, t4, t3, t2, addedCount);
    for (inserted = false, insertionOffset = 0, i = 0; t1 = splices.length, i < t1; ++i) {
      if (i < 0)
        return H.ioore(splices, i);
      current = splices[i];
      current._list_diff$_index = J.$add$ns(current._list_diff$_index, insertionOffset);
      if (inserted)
        continue;
      t1 = splice._list_diff$_index;
      t2 = J.$add$ns(t1, J.get$length$asx(splice._unmodifiableRemoved._collection$_source));
      t3 = current._list_diff$_index;
      intersectCount = P.min(t2, J.$add$ns(t3, current._addedCount)) - P.max(t1, t3);
      if (intersectCount >= 0) {
        if (i >= splices.length)
          H.throwExpression(new P.RangeError("value " + i));
        splices.splice(i, 1)[0];
        --i;
        t1 = J.$sub$n(current._addedCount, J.get$length$asx(current._unmodifiableRemoved._collection$_source));
        if (typeof t1 !== "number")
          return H.iae(t1);
        insertionOffset -= t1;
        splice._addedCount = J.$add$ns(splice._addedCount, J.$sub$n(current._addedCount, intersectCount));
        deleteCount = J.$sub$n(J.$add$ns(J.get$length$asx(splice._unmodifiableRemoved._collection$_source), J.get$length$asx(current._unmodifiableRemoved._collection$_source)), intersectCount);
        if (J.$eq(splice._addedCount, 0) && J.$eq(deleteCount, 0))
          inserted = true;
        else {
          removed = current._removed;
          if (J.$lt$n(splice._list_diff$_index, current._list_diff$_index)) {
            t1 = splice._unmodifiableRemoved;
            t1 = t1.getRange$2(t1, 0, J.$sub$n(current._list_diff$_index, splice._list_diff$_index));
            removed.toString;
            if (typeof removed !== "object" || removed === null || !!removed.fixed$length)
              H.throwExpression(P.UnsupportedError$("insertAll"));
            H.IterableMixinWorkaround_insertAllList(removed, 0, t1);
          }
          if (J.$gt$n(J.$add$ns(splice._list_diff$_index, J.get$length$asx(splice._unmodifiableRemoved._collection$_source)), J.$add$ns(current._list_diff$_index, current._addedCount))) {
            t1 = splice._unmodifiableRemoved;
            J.addAll$1$ax(removed, t1.getRange$2(t1, J.$sub$n(J.$add$ns(current._list_diff$_index, current._addedCount), splice._list_diff$_index), J.get$length$asx(splice._unmodifiableRemoved._collection$_source)));
          }
          splice._removed = removed;
          splice._unmodifiableRemoved = current._unmodifiableRemoved;
          if (J.$lt$n(current._list_diff$_index, splice._list_diff$_index))
            splice._list_diff$_index = current._list_diff$_index;
          inserted = false;
        }
      } else if (J.$lt$n(splice._list_diff$_index, current._list_diff$_index)) {
        C.JSArray_methods.insert$2(splices, i, splice);
        ++i;
        offset = J.$sub$n(splice._addedCount, J.get$length$asx(splice._unmodifiableRemoved._collection$_source));
        current._list_diff$_index = J.$add$ns(current._list_diff$_index, offset);
        if (typeof offset !== "number")
          return H.iae(offset);
        insertionOffset += offset;
        inserted = true;
      } else
        inserted = false;
    }
    if (!inserted)
      splices.push(splice);
  }, "call$2", "_mergeSplice$closure", 4, 0, null, 302, 22],
  _createInitialSplices: [function(list, records) {
    var splices, t1;
    splices = H.setRuntimeTypeInfo([], [G.ListChangeRecord]);
    for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(records, records.length, 0, null), [H.getTypeArgumentByIndex(records, 0)]); t1.moveNext$0();)
      G._mergeSplice(splices, t1._current);
    return splices;
  }, "call$2", "_createInitialSplices$closure", 4, 0, null, 68, 303],
  projectListSplices: [function(list, records) {
    var splices, t1, t2, splice, t3, t4;
    if (records.length === 1)
      return records;
    splices = [];
    for (t1 = G._createInitialSplices(list, records), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]), t2 = list._list; t1.moveNext$0();) {
      splice = t1._current;
      if (J.$eq(splice.get$addedCount(), 1) && J.$eq(J.get$length$asx(splice.get$removed()._collection$_source), 1) === true) {
        t3 = J.elementAt$1$ax(splice.get$removed()._collection$_source, 0);
        t4 = J.get$index$x(splice);
        if (t4 >>> 0 !== t4 || t4 >= t2.length)
          return H.ioore(t2, t4);
        if (J.$eq(t3, t2[t4]) !== true)
          splices.push(splice);
        continue;
      }
      t3 = J.getInterceptor$x(splice);
      C.JSArray_methods.addAll$1(splices, G.calcSplices(list, t3.get$index(splice), J.$add$ns(t3.get$index(splice), splice.get$addedCount()), splice.get$_removed(), 0, J.get$length$asx(splice.get$removed()._collection$_source)));
    }
    return splices;
  }, "call$2", "projectListSplices$closure", 4, 0, null, 68, 303],
  ListChangeRecord: {
    "": "Object;object<,_unmodifiableRemoved,_removed<,_list_diff$_index,_addedCount",
    get$index: function(_) {
      return this._list_diff$_index;
    },
    get$removed: function() {
      return this._unmodifiableRemoved;
    },
    get$addedCount: function() {
      return this._addedCount;
    },
    indexChanged$1: [function(key) {
      var t1 = this._list_diff$_index;
      if (typeof t1 !== "number")
        return H.iae(t1);
      t1 = key < t1;
      if (t1)
        return false;
      if (!J.$eq(this._addedCount, J.get$length$asx(this._unmodifiableRemoved._collection$_source)))
        return true;
      t1 = J.$add$ns(this._list_diff$_index, this._addedCount);
      if (typeof t1 !== "number")
        return H.iae(t1);
      return key < t1;
    }, "call$1", "get$indexChanged", 2, 0, null, 42],
    toString$0: [function(_) {
      return "#<ListChangeRecord index: " + H.S(this._list_diff$_index) + ", removed: " + H.S(this._unmodifiableRemoved) + ", addedCount: " + H.S(this._addedCount) + ">";
    }, "call$0", "get$toString", 0, 0, null],
    $isListChangeRecord: true,
    static: {ListChangeRecord_ListChangeRecord: function(object, index, addedCount, removed) {
        var t1;
        if (removed == null)
          removed = [];
        if (addedCount == null)
          addedCount = 0;
        t1 = new P.UnmodifiableListView(removed);
        t1.$builtinTypeInfo = [null];
        return new G.ListChangeRecord(object, t1, removed, index, addedCount);
      }}
  }
}],
["observe.src.metadata", "package:observe/src/metadata.dart", , K, {
  "": "",
  ObservableProperty: {
    "": "Object;"
  },
  Reflectable: {
    "": "Object;"
  }
}],
["observe.src.observable", "package:observe/src/observable.dart", , F, {
  "": "",
  notifyPropertyChangeHelper: [function(obj, field, oldValue, newValue) {
    var t1 = J.getInterceptor$x(obj);
    if (t1.get$hasObservers(obj) && J.$eq(oldValue, newValue) !== true)
      t1.notifyChange$1(obj, H.setRuntimeTypeInfo(new T.PropertyChangeRecord(obj, field, oldValue, newValue), [null]));
    return newValue;
  }, "call$4", "notifyPropertyChangeHelper$closure", 8, 0, null, 93, 304, 273, 274],
  Observable: {
    "": "Object;",
    $isObservable: true
  },
  Observable_deliverChanges_closure: {
    "": "Closure:426;box_0,this_1",
    call$2: [function($name, oldValue) {
      var t1, newValue, t2, t3, records;
      t1 = this.this_1;
      newValue = t1._mirror.getField$1($name).reflectee;
      if (J.$eq(oldValue, newValue) !== true) {
        t2 = this.box_0;
        t3 = t2.records_0;
        if (t3 == null) {
          records = [];
          t2.records_0 = records;
          t2 = records;
        } else
          t2 = t3;
        t2.push(H.setRuntimeTypeInfo(new T.PropertyChangeRecord(t1, $name, oldValue, newValue), [null]));
        t1._observable$_values.$indexSet(0, $name, newValue);
      }
    }, "call$2", null, 4, 0, null, 12, 273, "call"],
    $isFunction: true
  }
}],
["observe.src.observable_box", "package:observe/src/observable_box.dart", , A, {
  "": "",
  ObservableBox: {
    "": "ChangeNotifier;_observable_box$_value,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records",
    get$value: [function(_) {
      return this._observable_box$_value;
    }, null, null, 1, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "T_", ret: T};
      }, this.$receiver, "ObservableBox");
    }, "value", 132],
    set$value: [function(_, newValue) {
      this._observable_box$_value = F.notifyPropertyChangeHelper(this, C.Symbol_value, this._observable_box$_value, newValue);
    }, null, null, 3, 0, function() {
      return H.computeSignature(function(T) {
        return {func: "void__T1", void: true, args: [T]};
      }, this.$receiver, "ObservableBox");
    }, 274, "value", 132],
    toString$0: [function(_) {
      return "#<" + H.S(new H.TypeImpl(H.getRuntimeTypeString(this), null)) + " value: " + H.S(this._observable_box$_value) + ">";
    }, "call$0", "get$toString", 0, 0, null]
  }
}],
["observe.src.observable_list", "package:observe/src/observable_list.dart", , Q, {
  "": "",
  ObservableList: {
    "": "ListBase_ChangeNotifier;_listRecords,_listChanges,_list,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records",
    get$listChanges: function() {
      var t1 = this._listChanges;
      if (t1 == null) {
        t1 = P.StreamController_StreamController$broadcast(new Q.ObservableList_listChanges_closure(this), null, true, null);
        this._listChanges = t1;
      }
      t1.toString;
      return H.setRuntimeTypeInfo(new P._BroadcastStream(t1), [H.getTypeArgumentByIndex(t1, 0)]);
    },
    get$length: [function(_) {
      return this._list.length;
    }, null, null, 1, 0, 594, "length", 132],
    set$length: [function(_, value) {
      var t1, len, t2, t3, t4, removed;
      t1 = this._list;
      len = t1.length;
      if (len === value)
        return;
      this.notifyPropertyChange$3(this, C.Symbol_length, len, value);
      t2 = len === 0;
      t3 = J.getInterceptor(value);
      this.notifyPropertyChange$3(this, C.Symbol_isEmpty, t2, t3.$eq(value, 0));
      this.notifyPropertyChange$3(this, C.Symbol_isNotEmpty, !t2, t3.$eq(value, 0) !== true);
      t2 = this._listChanges;
      if (t2 != null) {
        t4 = t2._async$_next;
        t2 = t4 == null ? t2 != null : t4 !== t2;
      } else
        t2 = false;
      if (t2)
        if (t3.$lt(value, len)) {
          if (t3.$lt(value, 0) || t3.$gt(value, t1.length))
            H.throwExpression(P.RangeError$range(value, 0, t1.length));
          if (typeof value !== "number")
            return H.iae(value);
          if (len < value || len > t1.length)
            H.throwExpression(P.RangeError$range(len, value, t1.length));
          t2 = new H.SubListIterable(t1, value, len);
          t2.$builtinTypeInfo = [null];
          if (value < 0)
            H.throwExpression(new P.RangeError("value " + H.S(value)));
          if (len < 0)
            H.throwExpression(new P.RangeError("value " + len));
          if (value > len)
            H.throwExpression(P.RangeError$range(value, 0, len));
          t2 = t2.toList$0(0);
          t3 = new P.UnmodifiableListView(t2);
          t3.$builtinTypeInfo = [null];
          this._recordChange$1(new G.ListChangeRecord(this, t3, t2, value, 0));
        } else {
          t2 = t3.$sub(value, len);
          removed = [];
          t3 = new P.UnmodifiableListView(removed);
          t3.$builtinTypeInfo = [null];
          this._recordChange$1(new G.ListChangeRecord(this, t3, removed, len, t2));
        }
      C.JSArray_methods.set$length(t1, value);
    }, null, null, 3, 0, 513, 23, "length", 132],
    $index: [function(_, index) {
      var t1 = this._list;
      if (index >>> 0 !== index || index >= t1.length)
        return H.ioore(t1, index);
      return t1[index];
    }, "call$1", "get$[]", 2, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "E__int", ret: E, args: [J.JSInt]};
      }, this.$receiver, "ObservableList");
    }, 47, "[]", 132],
    $indexSet: [function(_, index, value) {
      var t1, oldValue, t2, t3;
      t1 = this._list;
      if (index >>> 0 !== index || index >= t1.length)
        return H.ioore(t1, index);
      oldValue = t1[index];
      t2 = this._listChanges;
      if (t2 != null) {
        t3 = t2._async$_next;
        t2 = t3 == null ? t2 != null : t3 !== t2;
      } else
        t2 = false;
      if (t2) {
        t2 = [oldValue];
        t3 = new P.UnmodifiableListView(t2);
        t3.$builtinTypeInfo = [null];
        this._recordChange$1(new G.ListChangeRecord(this, t3, t2, index, 1));
      }
      if (index >= t1.length)
        return H.ioore(t1, index);
      t1[index] = value;
    }, "call$2", "get$[]=", 4, 0, function() {
      return H.computeSignature(function(E) {
        return {func: "void__int_E", void: true, args: [J.JSInt, E]};
      }, this.$receiver, "ObservableList");
    }, 47, 23, "[]=", 132],
    get$isEmpty: [function(_) {
      return P.ListMixin.prototype.get$isEmpty.call(this, this);
    }, null, null, 1, 0, 437, "isEmpty", 132],
    get$isNotEmpty: [function(_) {
      return P.ListMixin.prototype.get$isNotEmpty.call(this, this);
    }, null, null, 1, 0, 437, "isNotEmpty", 132],
    add$1: [function(_, value) {
      var t1, len, t2, t3;
      t1 = this._list;
      len = t1.length;
      this._notifyChangeLength$2(len, len + 1);
      t2 = this._listChanges;
      if (t2 != null) {
        t3 = t2._async$_next;
        t2 = t3 == null ? t2 != null : t3 !== t2;
      } else
        t2 = false;
      if (t2)
        this._recordChange$1(G.ListChangeRecord_ListChangeRecord(this, len, 1, null));
      C.JSArray_methods.add$1(t1, value);
    }, "call$1", "get$add", 2, 0, null, 23],
    addAll$1: [function(_, iterable) {
      var t1, len, added, t2;
      t1 = this._list;
      len = t1.length;
      C.JSArray_methods.addAll$1(t1, iterable);
      this._notifyChangeLength$2(len, t1.length);
      added = t1.length - len;
      t1 = this._listChanges;
      if (t1 != null) {
        t2 = t1._async$_next;
        t1 = t2 == null ? t1 != null : t2 !== t1;
      } else
        t1 = false;
      if (t1 && added > 0)
        this._recordChange$1(G.ListChangeRecord_ListChangeRecord(this, len, added, null));
    }, "call$1", "get$addAll", 2, 0, null, 153],
    remove$1: [function(_, element) {
      var t1, i;
      for (t1 = this._list, i = 0; i < t1.length; ++i)
        if (J.$eq(t1[i], element) === true) {
          this.removeRange$2(0, i, i + 1);
          return true;
        }
      return false;
    }, "call$1", "get$remove", 2, 0, null, 169],
    removeRange$2: [function(_, start, end) {
      var t1, rangeLength, t2, len, t3, t4;
      if (start > this._list.length)
        H.throwExpression(P.RangeError$range(start, 0, this._list.length));
      t1 = end >= start;
      if (end < start || end > this._list.length)
        H.throwExpression(P.RangeError$range(end, start, this._list.length));
      rangeLength = end - start;
      t2 = this._list;
      len = t2.length;
      t3 = len - rangeLength;
      this.notifyPropertyChange$3(this, C.Symbol_length, len, t3);
      t4 = len === 0;
      t3 = t3 === 0;
      this.notifyPropertyChange$3(this, C.Symbol_isEmpty, t4, t3);
      this.notifyPropertyChange$3(this, C.Symbol_isNotEmpty, !t4, !t3);
      t3 = this._listChanges;
      if (t3 != null) {
        t4 = t3._async$_next;
        t3 = t4 == null ? t3 != null : t4 !== t3;
      } else
        t3 = false;
      if (t3 && rangeLength > 0) {
        if (start > t2.length)
          H.throwExpression(P.RangeError$range(start, 0, t2.length));
        if (end < start || end > t2.length)
          H.throwExpression(P.RangeError$range(end, start, t2.length));
        t1 = new H.SubListIterable(t2, start, end);
        t1.$builtinTypeInfo = [null];
        if (start < 0)
          H.throwExpression(new P.RangeError("value " + start));
        if (end < 0)
          H.throwExpression(new P.RangeError("value " + end));
        if (start > end)
          H.throwExpression(P.RangeError$range(start, 0, end));
        t1 = t1.toList$0(0);
        t3 = new P.UnmodifiableListView(t1);
        t3.$builtinTypeInfo = [null];
        this._recordChange$1(new G.ListChangeRecord(this, t3, t1, start, 0));
      }
      C.JSArray_methods.removeRange$2(t2, start, end);
    }, "call$2", "get$removeRange", 4, 0, null, 161, 162],
    insert$2: [function(_, index, element) {
      var t1, t2, t3;
      if (index > this._list.length)
        throw H.wrapException(P.RangeError$range(index, 0, this._list.length));
      t1 = this._list;
      t2 = t1.length;
      if (index === t2) {
        this.add$1(0, element);
        return;
      }
      C.JSArray_methods.set$length(t1, t2 + 1);
      t2 = t1.length;
      H.IterableMixinWorkaround_setRangeList(t1, index + 1, t2, this, index);
      t2 = t1.length;
      this._notifyChangeLength$2(t2 - 1, t2);
      t2 = this._listChanges;
      if (t2 != null) {
        t3 = t2._async$_next;
        t2 = t3 == null ? t2 != null : t3 !== t2;
      } else
        t2 = false;
      if (t2)
        this._recordChange$1(G.ListChangeRecord_ListChangeRecord(this, index, 1, null));
      if (index >= t1.length)
        return H.ioore(t1, index);
      t1[index] = element;
    }, "call$2", "get$insert", 4, 0, null, 47, 169],
    _recordChange$1: [function(record) {
      var t1, t2;
      t1 = this._listChanges;
      if (t1 != null) {
        t2 = t1._async$_next;
        t1 = t2 == null ? t1 != null : t2 !== t1;
      } else
        t1 = false;
      if (!t1)
        return;
      if (this._listRecords == null) {
        this._listRecords = [];
        P.scheduleMicrotask(this.get$deliverListChanges());
      }
      this._listRecords.push(record);
    }, "call$1", "get$_recordChange", 2, 0, null, 22],
    _notifyChangeLength$2: [function(oldValue, newValue) {
      var t1, t2;
      this.notifyPropertyChange$3(this, C.Symbol_length, oldValue, newValue);
      t1 = oldValue === 0;
      t2 = J.getInterceptor(newValue);
      this.notifyPropertyChange$3(this, C.Symbol_isEmpty, t1, t2.$eq(newValue, 0));
      this.notifyPropertyChange$3(this, C.Symbol_isNotEmpty, !t1, t2.$eq(newValue, 0) !== true);
    }, "call$2", "get$_notifyChangeLength", 4, 0, null, 273, 274],
    deliverListChanges$0: [function() {
      var t1, records, t2;
      t1 = this._listRecords;
      if (t1 == null)
        return false;
      records = G.projectListSplices(this, t1);
      this._listRecords = null;
      t1 = this._listChanges;
      if (t1 != null) {
        t2 = t1._async$_next;
        t2 = t2 == null ? t1 != null : t2 !== t1;
      } else
        t2 = false;
      if (t2) {
        t2 = H.setRuntimeTypeInfo(new P.UnmodifiableListView(records), [G.ListChangeRecord]);
        if (t1._state >= 4)
          H.throwExpression(t1._addEventError$0());
        t1._sendData$1(t2);
        return true;
      }
      return false;
    }, "call$0", "get$deliverListChanges", 0, 0, 437],
    $isObservableList: true,
    static: {ObservableList$: function($length, $E) {
        var t1 = H.setRuntimeTypeInfo([], [$E]);
        return H.setRuntimeTypeInfo(new Q.ObservableList(null, null, t1, null, null), [$E]);
      }}
  },
  ListBase_ChangeNotifier: {
    "": "ListBase+ChangeNotifier;",
    $isObservable: true
  },
  ObservableList_listChanges_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      this.this_0._listChanges = null;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  }
}],
["observe.src.observable_map", "package:observe/src/observable_map.dart", , V, {
  "": "",
  MapChangeRecord: {
    "": "ChangeRecord;key>,oldValue>,newValue>,isInsert,isRemove",
    toString$0: [function(_) {
      var kind;
      if (this.isInsert)
        kind = "insert";
      else
        kind = this.isRemove ? "remove" : "set";
      return "#<MapChangeRecord " + kind + " " + H.S(this.key) + " from: " + H.S(this.oldValue) + " to: " + H.S(this.newValue) + ">";
    }, "call$0", "get$toString", 0, 0, null],
    $isMapChangeRecord: true
  },
  ObservableMap: {
    "": "ChangeNotifier;_observable_map$_map,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records",
    get$keys: [function() {
      return this._observable_map$_map.get$keys();
    }, null, null, 1, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "Iterable_", ret: [P.Iterable, K]};
      }, this.$receiver, "ObservableMap");
    }, "keys", 132],
    get$values: [function(_) {
      var t1 = this._observable_map$_map;
      return t1.get$values(t1);
    }, null, null, 1, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "Iterable_0", ret: [P.Iterable, V]};
      }, this.$receiver, "ObservableMap");
    }, "values", 132],
    get$length: [function(_) {
      var t1 = this._observable_map$_map;
      return t1.get$length(t1);
    }, null, null, 1, 0, 594, "length", 132],
    get$isEmpty: [function(_) {
      var t1 = this._observable_map$_map;
      return t1.get$length(t1) === 0;
    }, null, null, 1, 0, 437, "isEmpty", 132],
    get$isNotEmpty: [function(_) {
      var t1 = this._observable_map$_map;
      return t1.get$length(t1) !== 0;
    }, null, null, 1, 0, 437, "isNotEmpty", 132],
    containsValue$1: [function(value) {
      return this._observable_map$_map.containsValue$1(value);
    }, "call$1", "get$containsValue", 2, 0, 595, 23, "containsValue", 132],
    containsKey$1: [function(key) {
      return this._observable_map$_map.containsKey$1(key);
    }, "call$1", "get$containsKey", 2, 0, 595, 42, "containsKey", 132],
    $index: [function(_, key) {
      return this._observable_map$_map.$index(0, key);
    }, "call$1", "get$[]", 2, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "V__Object", ret: V, args: [P.Object]};
      }, this.$receiver, "ObservableMap");
    }, 42, "[]", 132],
    $indexSet: [function(_, key, value) {
      var t1, len, oldValue, t2, t3;
      t1 = this._observable_map$_map;
      len = t1.get$length(t1);
      oldValue = t1.$index(0, key);
      t1.$indexSet(0, key, value);
      t2 = this.change_notifier$ChangeNotifier$_changes;
      if (t2 != null) {
        t3 = t2._async$_next;
        t2 = t3 == null ? t2 != null : t3 !== t2;
      } else
        t2 = false;
      if (t2) {
        t1 = t1.get$length(t1);
        if (len !== t1) {
          F.notifyPropertyChangeHelper(this, C.Symbol_length, len, t1);
          this.notifyChange$1(this, H.setRuntimeTypeInfo(new V.MapChangeRecord(key, null, value, true, false), [null, null]));
        } else if (J.$eq(oldValue, value) !== true)
          this.notifyChange$1(this, H.setRuntimeTypeInfo(new V.MapChangeRecord(key, oldValue, value, false, false), [null, null]));
      }
    }, "call$2", "get$[]=", 4, 0, function() {
      return H.computeSignature(function(K, V) {
        return {func: "void__K_V", void: true, args: [K, V]};
      }, this.$receiver, "ObservableMap");
    }, 42, 23, "[]=", 132],
    addAll$1: [function(_, other) {
      J.forEach$1$ax(other, new V.ObservableMap_addAll_closure(this));
    }, "call$1", "get$addAll", 2, 0, null, 104],
    putIfAbsent$2: [function(key, ifAbsent) {
      var t1, len, result, t2, t3;
      t1 = this._observable_map$_map;
      len = t1.get$length(t1);
      result = t1.putIfAbsent$2(key, ifAbsent);
      t2 = this.change_notifier$ChangeNotifier$_changes;
      if (t2 != null) {
        t3 = t2._async$_next;
        t2 = t3 == null ? t2 != null : t3 !== t2;
      } else
        t2 = false;
      if (t2 && len !== t1.get$length(t1)) {
        F.notifyPropertyChangeHelper(this, C.Symbol_length, len, t1.get$length(t1));
        this.notifyChange$1(this, H.setRuntimeTypeInfo(new V.MapChangeRecord(key, null, result, true, false), [null, null]));
      }
      return result;
    }, "call$2", "get$putIfAbsent", 4, 0, null, 42, 427],
    remove$1: [function(_, key) {
      var t1, len, result, t2, t3;
      t1 = this._observable_map$_map;
      len = t1.get$length(t1);
      result = t1.remove$1(0, key);
      t2 = this.change_notifier$ChangeNotifier$_changes;
      if (t2 != null) {
        t3 = t2._async$_next;
        t2 = t3 == null ? t2 != null : t3 !== t2;
      } else
        t2 = false;
      if (t2 && len !== t1.get$length(t1)) {
        this.notifyChange$1(this, H.setRuntimeTypeInfo(new V.MapChangeRecord(key, result, null, false, true), [null, null]));
        F.notifyPropertyChangeHelper(this, C.Symbol_length, len, t1.get$length(t1));
      }
      return result;
    }, "call$1", "get$remove", 2, 0, null, 42],
    clear$0: [function(_) {
      var t1, len, t2, t3;
      t1 = this._observable_map$_map;
      len = t1.get$length(t1);
      t2 = this.change_notifier$ChangeNotifier$_changes;
      if (t2 != null) {
        t3 = t2._async$_next;
        t2 = t3 == null ? t2 != null : t3 !== t2;
      } else
        t2 = false;
      if (t2 && len > 0) {
        t1.forEach$1(0, new V.ObservableMap_clear_closure(this));
        F.notifyPropertyChangeHelper(this, C.Symbol_length, len, 0);
      }
      t1.clear$0(0);
    }, "call$0", "get$clear", 0, 0, null],
    forEach$1: [function(_, f) {
      return this._observable_map$_map.forEach$1(0, f);
    }, "call$1", "get$forEach", 2, 0, null, 154],
    toString$0: [function(_) {
      return P.Maps_mapToString(this);
    }, "call$0", "get$toString", 0, 0, null],
    $isMap: true,
    static: {ObservableMap_ObservableMap$from: function(other, $K, $V) {
        var t1 = V.ObservableMap_ObservableMap$createFromType(other, $K, $V);
        t1.addAll$1(0, other);
        return t1;
      }, ObservableMap_ObservableMap$createFromType: function(other, $K, $V) {
        var t1, result;
        t1 = J.getInterceptor(other);
        if (typeof other === "object" && other !== null && !!t1.$isSplayTreeMap)
          result = H.setRuntimeTypeInfo(new V.ObservableMap(P.SplayTreeMap$(null, null, $K, $V), null, null), [$K, $V]);
        else
          result = typeof other === "object" && other !== null && !!t1.$isLinkedHashMap ? H.setRuntimeTypeInfo(new V.ObservableMap(P.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V), null, null), [$K, $V]) : H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, $K, $V), null, null), [$K, $V]);
        return result;
      }}
  },
  ObservableMap_addAll_closure: {
    "": "Closure;this_0",
    call$2: [function(key, value) {
      this.this_0.$indexSet(0, key, value);
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(K, V) {
        return {func: "dynamic__K_V2", args: [K, V]};
      }, this.this_0, "ObservableMap");
    }
  },
  ObservableMap_clear_closure: {
    "": "Closure:426;this_0",
    call$2: [function(key, value) {
      var t1 = this.this_0;
      t1.notifyChange$1(t1, H.setRuntimeTypeInfo(new V.MapChangeRecord(key, value, null, false, true), [null, null]));
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true
  }
}],
["observe.src.path_observer", "package:observe/src/path_observer.dart", , L, {
  "": "",
  _changeRecordMatches: [function(record, key) {
    var t1 = J.getInterceptor(record);
    if (typeof record === "object" && record !== null && !!t1.$isPropertyChangeRecord)
      return J.$eq(record.name, key);
    if (typeof record === "object" && record !== null && !!t1.$isMapChangeRecord) {
      t1 = J.getInterceptor$x(key);
      if (typeof key === "object" && key !== null && !!t1.$isSymbol)
        key = t1.get$_name(key);
      return J.$eq(record.key, key);
    }
    return false;
  }, "call$2", "_changeRecordMatches$closure", 4, 0, null, 22, 42],
  _getObjectProperty: [function(object, property) {
    var mirror, type, t1, t2, exception;
    if (object == null)
      return;
    t1 = property;
    if (typeof t1 === "number" && Math.floor(t1) === t1) {
      t1 = object;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && (t1.constructor === Array || !!t2.$isList) && J.$ge$n(property, 0) && J.$lt$n(property, J.get$length$asx(object)))
        return J.$index$asx(object, property);
    } else {
      t1 = property;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isSymbol) {
        mirror = H.reflect(object);
        type = H.reflectClassByMangledName(J.get$runtimeType$(mirror.get$reflectee())._typeName);
        try {
          if (L._maybeHasGetter(type, property)) {
            t1 = property;
            t1 = mirror._invoke$4(t1, 1, J.get$_name$x(t1), []);
            return t1.reflectee;
          }
          if (L._hasMethod(type, C.Symbol_Qyo)) {
            t1 = J.$index$asx(object, J.get$_name$x(property));
            return t1;
          }
        } catch (exception) {
          t1 = H.unwrapException(exception);
          t2 = J.getInterceptor(t1);
          if (typeof t1 === "object" && t1 !== null && !!t2.$isNoSuchMethodError) {
            if (!L._hasMethod(type, C.Symbol_noSuchMethod))
              throw exception;
          } else
            throw exception;
        }

      }
    }
    t1 = $.get$_logger();
    if (t1.isLoggable$1(C.Level_FINER_400))
      t1.finer$1("can't get " + H.S(property) + " in " + H.S(object));
    return;
  }, "call$2", "_getObjectProperty$closure", 4, 0, null, 6, 66],
  _setObjectProperty: [function(object, property, value) {
    var mirror, type, t1, t2, exception;
    if (object == null)
      return false;
    t1 = property;
    if (typeof t1 === "number" && Math.floor(t1) === t1) {
      t1 = object;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && (t1.constructor === Array || !!t2.$isList) && J.$ge$n(property, 0) && J.$lt$n(property, J.get$length$asx(object))) {
        J.$indexSet$ax(object, property, value);
        return true;
      }
    } else {
      t1 = property;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isSymbol) {
        mirror = H.reflect(object);
        type = H.reflectClassByMangledName(J.get$runtimeType$(mirror.get$reflectee())._typeName);
        try {
          if (L._maybeHasSetter(type, property)) {
            mirror.setField$2(property, value);
            return true;
          }
          if (L._hasMethod(type, C.Symbol_sgp)) {
            J.$indexSet$ax(object, J.get$_name$x(property), value);
            return true;
          }
        } catch (exception) {
          t1 = H.unwrapException(exception);
          t2 = J.getInterceptor(t1);
          if (typeof t1 === "object" && t1 !== null && !!t2.$isNoSuchMethodError) {
            if (!L._hasMethod(type, C.Symbol_noSuchMethod))
              throw exception;
          } else
            throw exception;
        }

      }
    }
    t1 = $.get$_logger();
    if (t1.isLoggable$1(C.Level_FINER_400))
      t1.finer$1("can't set " + H.S(property) + " in " + H.S(object));
    return false;
  }, "call$3", "_setObjectProperty$closure", 6, 0, null, 6, 66, 23],
  _maybeHasGetter: [function(type, $name) {
    var t1;
    for (; J.$eq(type, $.get$objectType()) !== true;) {
      t1 = type.get$declarations().__js_mirrors$_source;
      if (t1.containsKey$1($name))
        return true;
      if (t1.containsKey$1(C.Symbol_noSuchMethod))
        return true;
      type = L._safeSuperclass(type);
    }
    return false;
  }, "call$2", "_maybeHasGetter$closure", 4, 0, null, 11, 12],
  _maybeHasSetter: [function(type, $name) {
    var setterName, t1, t2, t3;
    setterName = new H.Symbol0(H.Symbol_validate(H.S($name.get$_name($name)) + "="));
    for (; J.$eq(type, $.get$objectType()) !== true;) {
      t1 = type.get$declarations().__js_mirrors$_source;
      t2 = t1.$index(0, $name);
      t3 = J.getInterceptor(t2);
      if (typeof t2 === "object" && t2 !== null && !!t3.$isVariableMirror)
        return true;
      if (t1.containsKey$1(setterName))
        return true;
      if (t1.containsKey$1(C.Symbol_noSuchMethod))
        return true;
      type = L._safeSuperclass(type);
    }
    return false;
  }, "call$2", "_maybeHasSetter$closure", 4, 0, null, 11, 12],
  _hasMethod: [function(type, $name) {
    var member, t1;
    for (; J.$eq(type, $.get$objectType()) !== true;) {
      member = type.get$declarations().__js_mirrors$_source.$index(0, $name);
      t1 = J.getInterceptor(member);
      if (typeof member === "object" && member !== null && !!t1.$isMethodMirror && member.get$isRegularMethod())
        return true;
      type = L._safeSuperclass(type);
    }
    return false;
  }, "call$2", "_hasMethod$closure", 4, 0, null, 11, 12],
  _safeSuperclass: [function(type) {
    var t1, exception;
    try {
      t1 = type.get$superclass();
      return t1;
    } catch (exception) {
      H.unwrapException(exception);
      return $.get$objectType();
    }

  }, "call$1", "_safeSuperclass$closure", 2, 0, null, 11],
  _isPathValid: [function(s) {
    s = J.replaceAll$2$s(s, $.get$_spacesRegExp(), "");
    if (s === "")
      return true;
    if (0 >= s.length)
      return H.ioore(s, 0);
    if (s[0] === ".")
      return false;
    return $.get$_pathRegExp().hasMatch$1(s);
  }, "call$1", "_isPathValid$closure", 2, 0, null, 86],
  PathObserver: {
    "": "ChangeNotifier;path>,_isValid,_segments,_values,_subs,_computeValue,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records",
    _computeValue$1: function(arg0) {
      return this._computeValue.call$1(arg0);
    },
    get$object: function() {
      var t1 = this._values;
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      return t1[0];
    },
    get$value: [function(_) {
      var t1, t2;
      if (!this._isValid)
        return;
      t1 = this.change_notifier$ChangeNotifier$_changes;
      if (t1 != null) {
        t2 = t1._async$_next;
        t1 = t2 == null ? t1 != null : t2 !== t1;
      } else
        t1 = false;
      if (!t1)
        this._updateValues$0();
      return C.JSArray_methods.get$last(this._values);
    }, null, null, 1, 0, 108, "value", 132],
    set$value: [function(_, newValue) {
      var t1, len, t2, t3;
      t1 = this._segments;
      len = t1.length;
      if (len === 0)
        return;
      t2 = this.change_notifier$ChangeNotifier$_changes;
      if (t2 != null) {
        t3 = t2._async$_next;
        t2 = t3 == null ? t2 != null : t3 !== t2;
      } else
        t2 = false;
      if (!t2)
        this._updateValues$1$end(len - 1);
      t2 = this._values;
      t3 = len - 1;
      if (t3 < 0 || t3 >= t2.length)
        return H.ioore(t2, t3);
      t2 = t2[t3];
      if (t3 >= t1.length)
        return H.ioore(t1, t3);
      if (L._setObjectProperty(t2, t1[t3], newValue)) {
        t1 = this._values;
        if (len >= t1.length)
          return H.ioore(t1, len);
        t1[len] = newValue;
      }
    }, null, null, 3, 0, 569, 274, "value", 132],
    observed$0: [function(_) {
      O.ChangeNotifier.prototype.observed$0.call(this, this);
      this._updateValues$0();
      this._observePath$0();
    }, "call$0", "get$observed", 0, 0, 107],
    unobserved$0: [function(_) {
      var i, t1;
      for (i = 0; t1 = this._subs, i < t1.length; ++i) {
        t1 = t1[i];
        if (t1 != null) {
          t1.cancel$0();
          t1 = this._subs;
          if (i >= t1.length)
            return H.ioore(t1, i);
          t1[i] = null;
        }
      }
      O.ChangeNotifier.prototype.unobserved$0.call(this, this);
    }, "call$0", "get$unobserved", 0, 0, 107],
    _updateValues$1$end: [function(end) {
      var t1, last, t2, i, t3, newValue;
      if (end == null)
        end = this._segments.length;
      t1 = this._segments;
      last = t1.length - 1;
      if (typeof end !== "number")
        return H.iae(end);
      t2 = this._computeValue != null;
      i = 0;
      for (; i < end;) {
        t3 = this._values;
        if (i >= t3.length)
          return H.ioore(t3, i);
        t3 = t3[i];
        if (i >= t1.length)
          return H.ioore(t1, i);
        newValue = L._getObjectProperty(t3, t1[i]);
        if (i === last && t2)
          newValue = this._computeValue$1(newValue);
        t3 = this._values;
        ++i;
        if (i >= t3.length)
          return H.ioore(t3, i);
        t3[i] = newValue;
      }
    }, function() {
      return this._updateValues$1$end(null);
    }, "_updateValues$0", "call$1$end", null, "get$_updateValues", 0, 3, null, 77, 162],
    _updateObservedValues$1$start: [function(start) {
      var t1, last, t2, i, oldValue, newValue, t3, i0, t4;
      for (t1 = this._segments, last = t1.length - 1, t2 = this._computeValue != null, i = start, oldValue = null, newValue = null; i <= last; i = i0) {
        t3 = this._values;
        i0 = i + 1;
        t4 = t3.length;
        if (i0 >= t4)
          return H.ioore(t3, i0);
        oldValue = t3[i0];
        if (i >= t4)
          return H.ioore(t3, i);
        t3 = t3[i];
        if (i >= t1.length)
          return H.ioore(t1, i);
        newValue = L._getObjectProperty(t3, t1[i]);
        if (i === last && t2)
          newValue = this._computeValue$1(newValue);
        if (oldValue == null ? newValue == null : oldValue === newValue) {
          this._observePath$2(start, i);
          return;
        }
        t3 = this._values;
        if (i0 >= t3.length)
          return H.ioore(t3, i0);
        t3[i0] = newValue;
      }
      this._observePath$1(start);
      if (this.get$hasObservers(this) && J.$eq(oldValue, newValue) !== true) {
        t1 = new T.PropertyChangeRecord(this, C.Symbol_value, oldValue, newValue);
        t1.$builtinTypeInfo = [null];
        this.notifyChange$1(this, t1);
      }
    }, "call$1$start", "get$_updateObservedValues", 0, 3, null, 413, 161],
    _observePath$2: [function(start, end) {
      var i, t1;
      if (end == null)
        end = this._segments.length;
      if (typeof end !== "number")
        return H.iae(end);
      i = start;
      for (; i < end; ++i) {
        t1 = this._subs;
        if (i >= t1.length)
          return H.ioore(t1, i);
        t1 = t1[i];
        if (t1 != null)
          t1.cancel$0();
        this._observeIndex$1(i);
      }
    }, function() {
      return this._observePath$2(0, null);
    }, "_observePath$0", function(start) {
      return this._observePath$2(start, null);
    }, "_observePath$1", "call$2", null, null, "get$_observePath", 0, 4, null, 413, 77, 161, 162],
    _observeIndex$1: [function(i) {
      var t1, object, segment, subscription, t2;
      t1 = this._values;
      if (i >= t1.length)
        return H.ioore(t1, i);
      object = t1[i];
      t1 = this._segments;
      if (i >= t1.length)
        return H.ioore(t1, i);
      segment = t1[i];
      if (typeof segment === "number" && Math.floor(segment) === segment) {
        t1 = J.getInterceptor(object);
        if (typeof object === "object" && object !== null && !!t1.$isObservableList) {
          t1 = this._subs;
          subscription = object.get$listChanges()._createSubscription$1(false);
          t2 = subscription._zone;
          subscription._async$_onData = t2.registerUnaryCallback$1(new L.PathObserver__observeIndex_closure(this, i, segment));
          subscription._onError = P._registerErrorHandler(P._nullErrorHandler$closure(), t2);
          subscription._onDone = t2.registerCallback$1(P._nullDoneHandler$closure());
          if (i >= t1.length)
            return H.ioore(t1, i);
          t1[i] = subscription;
        }
      } else {
        t1 = J.getInterceptor$x(object);
        if (typeof object === "object" && object !== null && !!t1.$isObservable) {
          t2 = this._subs;
          subscription = t1.get$changes(object)._createSubscription$1(false);
          t1 = subscription._zone;
          subscription._async$_onData = t1.registerUnaryCallback$1(new L.PathObserver__observeIndex_closure0(this, i, segment));
          subscription._onError = P._registerErrorHandler(P._nullErrorHandler$closure(), t1);
          subscription._onDone = t1.registerCallback$1(P._nullDoneHandler$closure());
          if (i >= t2.length)
            return H.ioore(t2, i);
          t2[i] = subscription;
        }
      }
    }, "call$1", "get$_observeIndex", 2, 0, null, 418],
    PathObserver$3$computeValue: function(object, path, computeValue) {
      var t1, t2, segment, index;
      if (this._isValid)
        for (t1 = J.trim$0$s(path).split("."), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]), t2 = this._segments; t1.moveNext$0();) {
          segment = t1._current;
          if (J.$eq(segment, "") === true)
            continue;
          index = H.Primitives_parseInt(segment, 10, new L.PathObserver_closure());
          t2.push(index != null ? index : new H.Symbol0(H.Symbol_validate(segment)));
        }
      t1 = this._segments;
      this._values = H.setRuntimeTypeInfo(Array(t1.length + 1), [P.Object]);
      if (t1.length === 0 && computeValue != null)
        object = computeValue.call$1(object);
      t2 = this._values;
      if (0 >= t2.length)
        return H.ioore(t2, 0);
      t2[0] = object;
      this._subs = H.setRuntimeTypeInfo(Array(t1.length), [P.StreamSubscription]);
    },
    $isPathObserver: true,
    static: {PathObserver$: function(object, path, computeValue) {
        var t1 = new L.PathObserver(path, L._isPathValid(path), H.setRuntimeTypeInfo([], [P.Object]), null, null, computeValue, null, null);
        t1.PathObserver$3$computeValue(object, path, computeValue);
        return t1;
      }}
  },
  PathObserver_closure: {
    "": "Closure:271;",
    call$1: [function(_) {
      return;
    }, "call$1", null, 2, 0, null, 335, "call"],
    $isFunction: true
  },
  PathObserver__observeIndex_closure: {
    "": "Closure:596;this_0,i_1,segment_2",
    call$1: [function(records) {
      var t1, t2;
      for (t1 = J.get$iterator$ax(records), t2 = this.segment_2; t1.moveNext$0();)
        if (t1.get$current().indexChanged$1(t2)) {
          this.this_0._updateObservedValues$1$start(this.i_1);
          return;
        }
    }, "call$1", null, 2, 0, null, 303, "call"],
    $isFunction: true
  },
  PathObserver__observeIndex_closure0: {
    "": "Closure:597;this_3,i_4,segment_5",
    call$1: [function(records) {
      var t1, t2;
      for (t1 = J.get$iterator$ax(records), t2 = this.segment_5; t1.moveNext$0();)
        if (L._changeRecordMatches(t1.get$current(), t2) === true) {
          this.this_3._updateObservedValues$1$start(this.i_4);
          return;
        }
    }, "call$1", null, 2, 0, null, 303, "call"],
    $isFunction: true
  },
  closure1: {
    "": "Closure:108;",
    call$0: [function() {
      return new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^(?:(?:[$_a-zA-Z]+[$_a-zA-Z0-9]*|(?:[0-9]|[1-9]+[0-9]+)))(?:\\.(?:[$_a-zA-Z]+[$_a-zA-Z0-9]*|(?:[0-9]|[1-9]+[0-9]+)))*$", false, true, false), null, null);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  }
}],
["observe.src.to_observable", "package:observe/src/to_observable.dart", , R, {
  "": "",
  _toObservableDeep: [function(value) {
    var t1, result, t2;
    t1 = J.getInterceptor(value);
    if (typeof value === "object" && value !== null && !!t1.$isObservable)
      return value;
    if (typeof value === "object" && value !== null && !!t1.$isMap) {
      result = V.ObservableMap_ObservableMap$createFromType(value, null, null);
      t1.forEach$1(value, new R._toObservableDeep_closure(result));
      return result;
    }
    if (typeof value === "object" && value !== null && (value.constructor === Array || !!t1.$isIterable)) {
      t1 = t1.map$1(value, R._toObservableDeep$closure());
      t2 = Q.ObservableList$(null, null);
      t2.addAll$1(0, t1);
      return t2;
    }
    return value;
  }, "call$1", "_toObservableDeep$closure", 2, 0, 271, 23],
  _toObservableDeep_closure: {
    "": "Closure:426;result_0",
    call$2: [function(k, v) {
      this.result_0.$indexSet(0, R._toObservableDeep(k), R._toObservableDeep(v));
    }, "call$2", null, 4, 0, null, 501, 326, "call"],
    $isFunction: true
  }
}],
["parser", "package:yaml/src/parser.dart", , V, {
  "": "",
  Parser: {
    "": "Object;_s,_pos,_len,_line,_column,_inBareDocument,_farthestLine,_farthestColumn,_farthestPos,_farthestContext,_contextStack,_errorAnnotations,_capturedString,_captureStart,_capturingAs",
    next$0: [function() {
      var t1, $char, t2, t3;
      t1 = this._pos;
      if (t1 === this._len)
        return -1;
      this._pos = t1 + 1;
      $char = J.codeUnitAt$1$s(this._s, t1);
      if ($char === 10 || $char === 13) {
        this._line = this._line + 1;
        this._column = 0;
        t1 = 0;
      } else {
        t1 = this._column + 1;
        this._column = t1;
      }
      t2 = this._farthestLine;
      t3 = this._line;
      if (t2 < t3) {
        this._farthestLine = t3;
        this._farthestColumn = t1;
        this._farthestContext = C.JSArray_methods.get$last(this._contextStack);
      } else if (t2 === t3 && this._farthestColumn < t1) {
        this._farthestColumn = t1;
        this._farthestContext = C.JSArray_methods.get$last(this._contextStack);
      }
      this._farthestPos = this._pos;
      return $char;
    }, "call$0", "get$next", 0, 0, 594],
    peek$1: [function(i) {
      var peekPos, t1;
      peekPos = this._pos + i;
      t1 = this._len;
      if (typeof t1 !== "number")
        return H.iae(t1);
      return peekPos >= t1 || peekPos < 0 ? -1 : J.codeUnitAt$1$s(this._s, peekPos);
    }, function() {
      return this.peek$1(0);
    }, "peek$0", "call$1", null, "get$peek", 0, 2, null, 413, 418],
    consume$1: [function(matcher) {
      var peekPos, t1;
      peekPos = this._pos + 0;
      t1 = this._len;
      if (typeof t1 !== "number")
        return H.iae(t1);
      if (matcher.call$1(peekPos >= t1 || false ? -1 : J.codeUnitAt$1$s(this._s, peekPos)) === true) {
        this.next$0();
        return true;
      }
      return false;
    }, "call$1", "get$consume", 2, 0, null, 598],
    consumeChar$1: [function($char) {
      return this.consume$1(new V.Parser_consumeChar_closure($char));
    }, "call$1", "get$consumeChar", 2, 0, null, 599],
    oneOrMore$1: [function(consumer) {
      var first, out, el;
      first = consumer.call$0();
      if (!(first != null && J.$eq(first, false) !== true))
        return;
      out = [first];
      for (; true;) {
        el = consumer.call$0();
        if (!(el != null && J.$eq(el, false) !== true))
          return out;
        out.push(el);
      }
      return;
    }, "call$1", "get$oneOrMore", 2, 0, null, 600],
    zeroOrMore$1: [function(consumer) {
      var out, oldPos, el;
      out = [];
      oldPos = this._pos;
      for (; true;) {
        el = consumer.call$0();
        if (!(el != null && J.$eq(el, false) !== true) || oldPos === this._pos)
          return out;
        oldPos = this._pos;
        out.push(el);
      }
      return;
    }, "call$1", "get$zeroOrMore", 2, 0, null, 600],
    or$1: [function(consumers) {
      var t1, res;
      for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(consumers, consumers.length, 0, null), [H.getTypeArgumentByIndex(consumers, 0)]); t1.moveNext$0();) {
        res = t1._current.call$0();
        if (res != null && J.$eq(res, false) !== true)
          return res;
      }
      return;
    }, "call$1", "get$or", 2, 0, null, 601],
    transaction$1: [function(consumer) {
      var oldPos, oldLine, oldColumn, oldCaptureStart, t1, capturedSoFar, res;
      oldPos = this._pos;
      oldLine = this._line;
      oldColumn = this._column;
      oldCaptureStart = this._captureStart;
      t1 = this._capturedString;
      capturedSoFar = t1 == null ? null : J.toString$0(t1);
      res = consumer.call$0();
      if (res != null && J.$eq(res, false) !== true)
        return res;
      this._pos = oldPos;
      this._line = oldLine;
      this._column = oldColumn;
      this._captureStart = oldCaptureStart;
      this._capturedString = capturedSoFar == null ? null : P.StringBuffer$(capturedSoFar);
      return res;
    }, "call$1", "get$transaction", 2, 0, null, 600],
    nAtOnce$2: [function(n, matcher) {
      return this.transaction$1(new V.Parser_nAtOnce_closure(this, n, matcher));
    }, "call$2", "get$nAtOnce", 4, 0, null, 347, 598],
    rawString$1: [function(str) {
      return this.nAtOnce$2(str.length, new V.Parser_rawString_closure(str));
    }, "call$1", "get$rawString", 2, 0, null, 417],
    captureString$1: [function(consumer) {
      var t1, res, t2, result;
      this._captureStart = this._pos;
      t1 = new P.StringBuffer("");
      t1._contents = "";
      this._capturedString = t1;
      res = this.transaction$1(consumer);
      if (!(res != null && J.$eq(res, false) !== true)) {
        this._captureStart = null;
        this._capturedString = null;
        return;
      }
      t1 = this._capturedString;
      t2 = J.substring$2$s(this._s, this._captureStart, this._pos);
      t1.toString;
      t1._contents = t1._contents + t2;
      this._captureStart = this._pos;
      result = J.toString$0(this._capturedString);
      this._captureStart = null;
      this._capturedString = null;
      return result;
    }, "call$1", "get$captureString", 2, 0, null, 600],
    captureAs$2: [function(replacement, consumer) {
      return this.captureAndTransform$2(consumer, new V.Parser_captureAs_closure(replacement));
    }, "call$2", "get$captureAs", 4, 0, null, 602, 600],
    captureAndTransform$2: [function(consumer, transformation) {
      var res;
      if (this._capturedString == null)
        return consumer.call$0();
      if (this._capturingAs)
        return consumer.call$0();
      this.flushCapture$0();
      this._capturingAs = true;
      res = consumer.call$0();
      this._capturingAs = false;
      if (!(res != null && J.$eq(res, false) !== true))
        return res;
      this._capturedString.write$1(transformation.call$1(J.substring$2$s(this._s, this._captureStart, this._pos)));
      this._captureStart = this._pos;
      return res;
    }, "call$2", "get$captureAndTransform", 4, 0, null, 600, 603],
    flushCapture$0: [function() {
      this._capturedString.write$1(J.substring$2$s(this._s, this._captureStart, this._pos));
      this._captureStart = this._pos;
    }, "call$0", "get$flushCapture", 0, 0, null],
    addProps$2: [function(node, props) {
      var t1, t2;
      if (props == null || node == null)
        return node;
      t1 = J.getInterceptor$ax(props);
      t2 = t1.get$first(props);
      if (t2 != null && J.$eq(t2, false) !== true)
        J.set$tag$x(node, t1.get$first(props));
      t2 = t1.get$last(props);
      if (t2 != null && J.$eq(t2, false) !== true)
        node.set$anchor(t1.get$last(props));
      return node;
    }, "call$2", "get$addProps", 4, 0, null, 312, 307],
    map$1: [function(_, pairs) {
      var $content = P.LinkedHashMap_LinkedHashMap(null, null, null, R.Node0, R.Node0);
      J.forEach$1$ax(pairs, new V.Parser_map_closure($content));
      return new R.MappingNode($content, new R.Tag("?", 2), null);
    }, "call$1", "get$map", 2, 0, null, 604],
    context$2: [function($name, fn) {
      var t1;
      try {
        this._contextStack.push($name);
        t1 = fn.call$0();
        return t1;
      } finally {
        t1 = this._contextStack;
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        t1.pop();
      }
    }, "call$2", "get$context", 4, 0, null, 12, 605],
    annotateError$2: [function(message, fn) {
      var t1, start, t2;
      t1 = {};
      start = this._pos;
      t1.end_0 = null;
      this.transaction$1(new V.Parser_annotateError_closure(t1, this, fn));
      t2 = this._errorAnnotations;
      t1 = new V._Pair(new V._Range(start, t1.end_0), message);
      t1.$builtinTypeInfo = [V._Range, H.getTypeArgumentByIndex(t2, 0)];
      t2._parser$_contents.push(t1);
    }, "call$2", "get$annotateError", 4, 0, null, 20, 605],
    error$1: [function(_, message) {
      throw H.wrapException(V.SyntaxError$(this._line + 1, this._column + 1, H.S(message) + " (in " + this._farthestContext + ")"));
    }, "call$1", "get$error", 2, 0, 25, 20],
    expect$2: [function(result, expected) {
      if (result != null && J.$eq(result, false) !== true)
        return result;
      this.error$1(0, "expected " + expected);
    }, "call$2", "get$expect", 4, 0, null, 51, 606],
    parseFailed$0: [function() {
      var message, extraError;
      message = "invalid YAML in " + this._farthestContext;
      extraError = this._errorAnnotations.$index(0, this._farthestPos);
      if (extraError != null)
        message = message + " (" + H.S(extraError) + ")";
      throw H.wrapException(V.SyntaxError$(this._farthestLine + 1, this._farthestColumn + 1, message));
    }, "call$0", "get$parseFailed", 0, 0, null],
    countIndentation$0: [function() {
      var t1, t2, t3, i, peekPos;
      t1 = this._s;
      t2 = J.getInterceptor$s(t1);
      t3 = this._len;
      i = 0;
      while (true) {
        peekPos = this._pos + i;
        if (typeof t3 !== "number")
          return H.iae(t3);
        if (!((peekPos >= t3 || false ? -1 : t2.codeUnitAt$1(t1, peekPos)) === 32))
          break;
        ++i;
      }
      return i;
    }, "call$0", "get$countIndentation", 0, 0, null],
    blockScalarAdditionalIndentation$2: [function(header, indent) {
      var t1, t2, t3;
      t1 = {};
      if (!header.get$autoDetectIndent())
        return header.get$additionalIndent();
      t1.maxSpaces_0 = 0;
      t1.maxSpacesLine_1 = 0;
      t1.spaces_2 = 0;
      this.transaction$1(new V.Parser_blockScalarAdditionalIndentation_closure(t1, this));
      t2 = t1.spaces_2;
      if (t2 <= indent)
        return 1;
      t3 = t1.maxSpaces_0;
      if (t3 > t2)
        throw H.wrapException(V.SyntaxError$(t1.maxSpacesLine_1 + 1, t3, "Leading empty lines may not be indented more than the first non-empty line."));
      return t2 - indent;
    }, "call$2", "get$blockScalarAdditionalIndentation", 4, 0, null, 571, 607],
    indicatorType$1: [function($char) {
      switch ($char) {
        case 45:
          return 4;
        case 63:
          return 5;
        case 58:
          return 6;
        case 44:
          return 7;
        case 91:
          return 8;
        case 93:
          return 9;
        case 123:
          return 10;
        case 125:
          return 11;
        case 35:
          return 12;
        case 38:
          return 13;
        case 42:
          return 14;
        case 33:
          return 15;
        case 124:
          return 16;
        case 62:
          return 17;
        case 39:
          return 18;
        case 34:
          return 19;
        case 37:
          return 20;
        case 64:
        case 96:
          return 21;
        default:
          return;
      }
    }, "call$1", "get$indicatorType", 2, 0, null, 599],
    isJson$1: [function($char) {
      var t1;
      if ($char !== 9)
        t1 = $char >= 32 && $char <= 1114111;
      else
        t1 = true;
      return t1;
    }, "call$1", "get$isJson", 2, 0, null, 599],
    c_indicator$1: [function(type) {
      return this.consume$1(new V.Parser_c_indicator_closure(this, type));
    }, "call$1", "get$c_indicator", 2, 0, null, 11],
    isFlowIndicator$1: [function($char) {
      var indicator = this.indicatorType$1($char);
      return indicator === 7 || indicator === 8 || indicator === 9 || indicator === 10 || indicator === 11;
    }, "call$1", "get$isFlowIndicator", 2, 0, null, 599],
    isBreak$1: [function($char) {
      var t1 = J.getInterceptor($char);
      return t1.$eq($char, 10) === true || t1.$eq($char, 13) === true;
    }, "call$1", "get$isBreak", 2, 0, 561, 599],
    isNonBreak$1: [function($char) {
      var t1, t2;
      t1 = J.getInterceptor($char);
      if (t1.$eq($char, 9) !== true)
        if (t1.$eq($char, 10) !== true)
          if (t1.$eq($char, 13) !== true)
            if (!(t1.$ge($char, 32) && t1.$le($char, 126)))
              if (t1.$eq($char, 133) !== true)
                if (!(t1.$ge($char, 160) && t1.$le($char, 55295)))
                  if (!(t1.$ge($char, 57344) && t1.$le($char, 65533)))
                    t2 = t1.$ge($char, 65536) && t1.$le($char, 1114111);
                  else
                    t2 = true;
                else
                  t2 = true;
              else
                t2 = true;
            else
              t2 = true;
          else
            t2 = true;
        else
          t2 = true;
      else
        t2 = true;
      if (t2)
        t1 = !(t1.$eq($char, 10) === true || t1.$eq($char, 13) === true);
      else
        t1 = false;
      return t1;
    }, "call$1", "get$isNonBreak", 2, 0, 561, 599],
    b_break$0: [function() {
      if (this.consumeChar$1(13)) {
        new V.Parser_b_break_closure(this).call$0();
        return true;
      }
      return this.consumeChar$1(10);
    }, "call$0", "get$b_break", 0, 0, null],
    b_asLineFeed$0: [function() {
      return this.captureAs$2("\n", new V.Parser_b_asLineFeed_closure(this));
    }, "call$0", "get$b_asLineFeed", 0, 0, null],
    b_nonContent$0: [function() {
      return this.captureAs$2("", new V.Parser_b_nonContent_closure(this));
    }, "call$0", "get$b_nonContent", 0, 0, null],
    isSpace$1: [function($char) {
      var t1 = J.getInterceptor($char);
      return t1.$eq($char, 32) === true || t1.$eq($char, 9) === true;
    }, "call$1", "get$isSpace", 2, 0, 561, 599],
    isNonSpace$1: [function($char) {
      var t1, t2;
      t1 = J.getInterceptor($char);
      if (t1.$eq($char, 9) !== true)
        if (t1.$eq($char, 10) !== true)
          if (t1.$eq($char, 13) !== true)
            if (!(t1.$ge($char, 32) && t1.$le($char, 126)))
              if (t1.$eq($char, 133) !== true)
                if (!(t1.$ge($char, 160) && t1.$le($char, 55295)))
                  if (!(t1.$ge($char, 57344) && t1.$le($char, 65533)))
                    t2 = t1.$ge($char, 65536) && t1.$le($char, 1114111);
                  else
                    t2 = true;
                else
                  t2 = true;
              else
                t2 = true;
            else
              t2 = true;
          else
            t2 = true;
        else
          t2 = true;
      else
        t2 = true;
      if (t2)
        t2 = !(t1.$eq($char, 10) === true || t1.$eq($char, 13) === true);
      else
        t2 = false;
      if (t2)
        t1 = !(t1.$eq($char, 32) === true || t1.$eq($char, 9) === true);
      else
        t1 = false;
      return t1;
    }, "call$1", "get$isNonSpace", 2, 0, 561, 599],
    c_escape$0: [function() {
      return this.captureAs$2("", new V.Parser_c_escape_closure(this));
    }, "call$0", "get$c_escape", 0, 0, null],
    ns_escNull$0: [function() {
      return this.captureAs$2("\u0000", new V.Parser_ns_escNull_closure(this));
    }, "call$0", "get$ns_escNull", 0, 0, 437],
    ns_escBell$0: [function() {
      return this.captureAs$2("\u0007", new V.Parser_ns_escBell_closure(this));
    }, "call$0", "get$ns_escBell", 0, 0, 437],
    ns_escBackspace$0: [function() {
      return this.captureAs$2("\u0008", new V.Parser_ns_escBackspace_closure(this));
    }, "call$0", "get$ns_escBackspace", 0, 0, 437],
    ns_escHorizontalTab$0: [function() {
      return this.captureAs$2("\t", new V.Parser_ns_escHorizontalTab_closure(this));
    }, "call$0", "get$ns_escHorizontalTab", 0, 0, 437],
    ns_escLineFeed$0: [function() {
      return this.captureAs$2("\n", new V.Parser_ns_escLineFeed_closure(this));
    }, "call$0", "get$ns_escLineFeed", 0, 0, 437],
    ns_escVerticalTab$0: [function() {
      return this.captureAs$2("\u000b", new V.Parser_ns_escVerticalTab_closure(this));
    }, "call$0", "get$ns_escVerticalTab", 0, 0, 437],
    ns_escFormFeed$0: [function() {
      return this.captureAs$2("\u000c", new V.Parser_ns_escFormFeed_closure(this));
    }, "call$0", "get$ns_escFormFeed", 0, 0, 437],
    ns_escCarriageReturn$0: [function() {
      return this.captureAs$2("\r", new V.Parser_ns_escCarriageReturn_closure(this));
    }, "call$0", "get$ns_escCarriageReturn", 0, 0, 437],
    ns_escEscape$0: [function() {
      return this.captureAs$2("\u001b", new V.Parser_ns_escEscape_closure(this));
    }, "call$0", "get$ns_escEscape", 0, 0, 437],
    ns_escSpace$0: [function() {
      return this.consumeChar$1(32);
    }, "call$0", "get$ns_escSpace", 0, 0, 437],
    ns_escDoubleQuote$0: [function() {
      return this.consumeChar$1(34);
    }, "call$0", "get$ns_escDoubleQuote", 0, 0, 437],
    ns_escSlash$0: [function() {
      return this.consumeChar$1(47);
    }, "call$0", "get$ns_escSlash", 0, 0, 437],
    ns_escBackslash$0: [function() {
      return this.consumeChar$1(92);
    }, "call$0", "get$ns_escBackslash", 0, 0, 437],
    ns_escNextLine$0: [function() {
      return this.captureAs$2("\u0085", new V.Parser_ns_escNextLine_closure(this));
    }, "call$0", "get$ns_escNextLine", 0, 0, 437],
    ns_escNonBreakingSpace$0: [function() {
      return this.captureAs$2("\u00a0", new V.Parser_ns_escNonBreakingSpace_closure(this));
    }, "call$0", "get$ns_escNonBreakingSpace", 0, 0, 437],
    ns_escLineSeparator$0: [function() {
      return this.captureAs$2("\u2028", new V.Parser_ns_escLineSeparator_closure(this));
    }, "call$0", "get$ns_escLineSeparator", 0, 0, 437],
    ns_escParagraphSeparator$0: [function() {
      return this.captureAs$2("\u2029", new V.Parser_ns_escParagraphSeparator_closure(this));
    }, "call$0", "get$ns_escParagraphSeparator", 0, 0, 437],
    ns_esc8Bit$0: [function() {
      return this.ns_escNBit$2(120, 2);
    }, "call$0", "get$ns_esc8Bit", 0, 0, 437],
    ns_esc16Bit$0: [function() {
      return this.ns_escNBit$2(117, 4);
    }, "call$0", "get$ns_esc16Bit", 0, 0, 437],
    ns_esc32Bit$0: [function() {
      return this.ns_escNBit$2(85, 8);
    }, "call$0", "get$ns_esc32Bit", 0, 0, 437],
    ns_escNBit$2: [function($char, digits) {
      if (this.captureAs$2("", new V.Parser_ns_escNBit_closure(this, $char)) !== true)
        return false;
      return this.expect$2(this.captureAndTransform$2(new V.Parser_ns_escNBit_closure0(this, digits), new V.Parser_ns_escNBit_closure1()), "" + digits + " hexidecimal digits");
    }, "call$2", "get$ns_escNBit", 4, 0, null, 599, 608],
    c_ns_escChar$0: [function() {
      return this.context$2("escape sequence", new V.Parser_c_ns_escChar_closure(this));
    }, "call$0", "get$c_ns_escChar", 0, 0, 437],
    s_indent$1: [function(indent) {
      var result = this.nAtOnce$2(indent, new V.Parser_s_indent_closure());
      if (this.peek$0() === 9)
        this.annotateError$2("tab characters are not allowed as indentation in YAML", new V.Parser_s_indent_closure0(this));
      return result;
    }, "call$1", "get$s_indent", 2, 0, null, 607],
    s_indentLessThan$1: [function(indent) {
      var box_0, t1, box_00, t2, peekPos;
      box_0 = {};
      box_0.i_0 = 0;
      if (typeof indent !== "number")
        return indent.$sub();
      t1 = indent - 1;
      for (; box_0.i_0 < t1; box_00 = {}, t2 = box_0.i_0, box_00.i_0 = t2, box_00.i_0 = t2 + 1, box_0 = box_00)
        if (!this.consumeChar$1(32)) {
          peekPos = this._pos + 0;
          t1 = this._len;
          if (typeof t1 !== "number")
            return H.iae(t1);
          if ((peekPos >= t1 || false ? -1 : J.codeUnitAt$1$s(this._s, peekPos)) === 9)
            this.annotateError$2("tab characters are not allowed as indentation in YAML", new V.Parser_s_indentLessThan_closure(box_0, this, indent));
          break;
        }
      return true;
    }, "call$1", "get$s_indentLessThan", 2, 0, null, 607],
    s_separateInLine$0: [function() {
      return this.transaction$1(new V.Parser_s_separateInLine_closure(this));
    }, "call$0", "get$s_separateInLine", 0, 0, 437],
    s_linePrefix$2: [function(indent, ctx) {
      return this.captureAs$2("", new V.Parser_s_linePrefix_closure(this, indent, ctx));
    }, "call$2", "get$s_linePrefix", 4, 0, null, 607, 609],
    s_flowLinePrefix$1: [function(indent) {
      return this.captureAs$2("", new V.Parser_s_flowLinePrefix_closure(this, indent));
    }, "call$1", "get$s_flowLinePrefix", 2, 0, null, 607],
    l_empty$2: [function(indent, ctx) {
      return this.transaction$1(new V.Parser_l_empty_closure(this, indent, ctx));
    }, "call$2", "get$l_empty", 4, 0, null, 607, 609],
    b_asSpace$0: [function() {
      return this.captureAs$2(" ", new V.Parser_b_asSpace_closure(this));
    }, "call$0", "get$b_asSpace", 0, 0, 437],
    b_l_trimmed$2: [function(indent, ctx) {
      return this.transaction$1(new V.Parser_b_l_trimmed_closure(this, indent, ctx));
    }, "call$2", "get$b_l_trimmed", 4, 0, null, 607, 609],
    b_l_folded$2: [function(indent, ctx) {
      return this.or$1([new V.Parser_b_l_folded_closure(this, indent, ctx), this.get$b_asSpace()]);
    }, "call$2", "get$b_l_folded", 4, 0, null, 607, 609],
    s_flowFolded$1: [function(indent) {
      return this.transaction$1(new V.Parser_s_flowFolded_closure(this, indent));
    }, "call$1", "get$s_flowFolded", 2, 0, null, 607],
    c_nb_commentText$0: [function() {
      var t1 = this.c_indicator$1(12);
      if (!t1)
        return false;
      this.zeroOrMore$1(new V.Parser_c_nb_commentText_closure(this));
      return true;
    }, "call$0", "get$c_nb_commentText", 0, 0, 437],
    s_b_comment$0: [function() {
      var t1 = this.s_separateInLine$0();
      if (t1 != null && J.$eq(t1, false) !== true)
        this.get$c_nb_commentText().call$0();
      return this._pos === this._len || this.b_nonContent$0() === true;
    }, "call$0", "get$s_b_comment", 0, 0, null],
    l_comment$0: [function() {
      return this.transaction$1(new V.Parser_l_comment_closure(this));
    }, "call$0", "get$l_comment", 0, 0, 437],
    s_l_comments$0: [function() {
      var t1 = this.s_b_comment$0();
      if (!t1 && this._column !== 0)
        return false;
      this.zeroOrMore$1(this.get$l_comment());
      return true;
    }, "call$0", "get$s_l_comments", 0, 0, null],
    s_separate$2: [function(indent, ctx) {
      switch (ctx) {
        case 0:
        case 1:
        case 2:
        case 3:
          return this.s_separateLines$1(indent);
        case 4:
        case 5:
          return this.s_separateInLine$0();
        default:
          throw H.wrapException("invalid context \"" + H.S(ctx) + "\"");
      }
    }, "call$2", "get$s_separate", 4, 0, null, 607, 609],
    s_separateLines$1: [function(indent) {
      return this.transaction$1(new V.Parser_s_separateLines_closure(this, indent)) === true || this.s_separateInLine$0() === true;
    }, "call$1", "get$s_separateLines", 2, 0, null, 607],
    l_directive$0: [function() {
      return false;
    }, "call$0", "get$l_directive", 0, 0, 437],
    c_ns_properties$2: [function(indent, ctx) {
      return;
    }, "call$2", "get$c_ns_properties", 4, 0, null, 607, 609],
    isAnchorChar$1: [function($char) {
      var t1, t2;
      t1 = J.getInterceptor($char);
      if (t1.$eq($char, 9) !== true)
        if (t1.$eq($char, 10) !== true)
          if (t1.$eq($char, 13) !== true)
            if (!(t1.$ge($char, 32) && t1.$le($char, 126)))
              if (t1.$eq($char, 133) !== true)
                if (!(t1.$ge($char, 160) && t1.$le($char, 55295)))
                  if (!(t1.$ge($char, 57344) && t1.$le($char, 65533)))
                    t2 = t1.$ge($char, 65536) && t1.$le($char, 1114111);
                  else
                    t2 = true;
                else
                  t2 = true;
              else
                t2 = true;
            else
              t2 = true;
          else
            t2 = true;
        else
          t2 = true;
      else
        t2 = true;
      if (t2)
        t2 = !(t1.$eq($char, 10) === true || t1.$eq($char, 13) === true);
      else
        t2 = false;
      if (t2)
        t1 = !(t1.$eq($char, 32) === true || t1.$eq($char, 9) === true);
      else
        t1 = false;
      return t1 && !this.isFlowIndicator$1($char);
    }, "call$1", "get$isAnchorChar", 2, 0, 561, 599],
    ns_anchorName$0: [function() {
      return this.captureString$1(new V.Parser_ns_anchorName_closure(this));
    }, "call$0", "get$ns_anchorName", 0, 0, null],
    c_ns_aliasNode$0: [function() {
      var t1 = this.c_indicator$1(14);
      if (!t1)
        return;
      return new R.AliasNode(new R.Tag("tag:yaml.org,2002:str", 0), this.expect$2(this.ns_anchorName$0(), "anchor name"));
    }, "call$0", "get$c_ns_aliasNode", 0, 0, 610],
    e_scalar$0: [function() {
      return new R.ScalarNode("", null, new R.Tag("?", 0), null);
    }, "call$0", "get$e_scalar", 0, 0, 611],
    e_node$0: [function() {
      return new R.ScalarNode("", null, new R.Tag("?", 0), null);
    }, "call$0", "get$e_node", 0, 0, 611],
    nb_doubleChar$0: [function() {
      return this.or$1([this.get$c_ns_escChar(), new V.Parser_nb_doubleChar_closure(this)]);
    }, "call$0", "get$nb_doubleChar", 0, 0, 437],
    c_doubleQuoted$2: [function(indent, ctx) {
      return this.context$2("string", new V.Parser_c_doubleQuoted_closure(this, indent, ctx));
    }, "call$2", "get$c_doubleQuoted", 4, 0, null, 607, 609],
    nb_doubleText$2: [function(indent, ctx) {
      return this.captureString$1(new V.Parser_nb_doubleText_closure(this, indent, ctx));
    }, "call$2", "get$nb_doubleText", 4, 0, null, 607, 609],
    s_doubleEscaped$1: [function(indent) {
      return this.transaction$1(new V.Parser_s_doubleEscaped_closure(this, indent));
    }, "call$1", "get$s_doubleEscaped", 2, 0, null, 607],
    s_doubleBreak$1: [function(indent) {
      return this.or$1([new V.Parser_s_doubleBreak_closure(this, indent), new V.Parser_s_doubleBreak_closure0(this, indent)]);
    }, "call$1", "get$s_doubleBreak", 2, 0, null, 607],
    nb_ns_doubleInLine$0: [function() {
      this.zeroOrMore$1(new V.Parser_nb_ns_doubleInLine_closure(this));
    }, "call$0", "get$nb_ns_doubleInLine", 0, 0, null],
    s_doubleNextLine$1: [function(indent) {
      var t1 = this.s_doubleBreak$1(indent);
      if (!(t1 != null && J.$eq(t1, false) !== true))
        return false;
      new V.Parser_s_doubleNextLine_closure(this, indent).call$0();
      return true;
    }, "call$1", "get$s_doubleNextLine", 2, 0, null, 607],
    nb_doubleMultiLine$1: [function(indent) {
      this.nb_ns_doubleInLine$0();
      this.or$1([new V.Parser_nb_doubleMultiLine_closure(this, indent), new V.Parser_nb_doubleMultiLine_closure0(this)]);
    }, "call$1", "get$nb_doubleMultiLine", 2, 0, null, 607],
    c_quotedQuote$0: [function() {
      return this.captureAs$2("'", new V.Parser_c_quotedQuote_closure(this));
    }, "call$0", "get$c_quotedQuote", 0, 0, 437],
    nb_singleChar$0: [function() {
      return this.or$1([this.get$c_quotedQuote(), new V.Parser_nb_singleChar_closure(this)]);
    }, "call$0", "get$nb_singleChar", 0, 0, 437],
    c_singleQuoted$2: [function(indent, ctx) {
      return this.context$2("string", new V.Parser_c_singleQuoted_closure(this, indent, ctx));
    }, "call$2", "get$c_singleQuoted", 4, 0, null, 607, 609],
    nb_singleText$2: [function(indent, ctx) {
      return this.captureString$1(new V.Parser_nb_singleText_closure(this, indent, ctx));
    }, "call$2", "get$nb_singleText", 4, 0, null, 607, 609],
    nb_ns_singleInLine$0: [function() {
      this.zeroOrMore$1(new V.Parser_nb_ns_singleInLine_closure(this));
    }, "call$0", "get$nb_ns_singleInLine", 0, 0, null],
    s_singleNextLine$1: [function(indent) {
      var t1 = this.s_flowFolded$1(indent);
      if (!(t1 != null && J.$eq(t1, false) !== true))
        return false;
      new V.Parser_s_singleNextLine_closure(this, indent).call$0();
      return true;
    }, "call$1", "get$s_singleNextLine", 2, 0, null, 607],
    nb_singleMultiLine$1: [function(indent) {
      this.nb_ns_singleInLine$0();
      this.or$1([new V.Parser_nb_singleMultiLine_closure(this, indent), new V.Parser_nb_singleMultiLine_closure0(this)]);
    }, "call$1", "get$nb_singleMultiLine", 2, 0, null, 607],
    isPlainSafe$2: [function(ctx, $char) {
      var t1, t2;
      switch (ctx) {
        case 2:
        case 4:
          t1 = $char === 9;
          if (!t1)
            if ($char !== 10)
              if ($char !== 13)
                if (!($char >= 32 && $char <= 126))
                  if ($char !== 133)
                    if (!($char >= 160 && $char <= 55295))
                      if (!($char >= 57344 && $char <= 65533))
                        t2 = $char >= 65536 && $char <= 1114111;
                      else
                        t2 = true;
                    else
                      t2 = true;
                  else
                    t2 = true;
                else
                  t2 = true;
              else
                t2 = true;
            else
              t2 = true;
          else
            t2 = true;
          if (t2)
            t2 = !($char === 10 || $char === 13);
          else
            t2 = false;
          if (t2)
            t1 = !($char === 32 || t1);
          else
            t1 = false;
          return t1;
        case 3:
        case 5:
          t1 = $char === 9;
          if (!t1)
            if ($char !== 10)
              if ($char !== 13)
                if (!($char >= 32 && $char <= 126))
                  if ($char !== 133)
                    if (!($char >= 160 && $char <= 55295))
                      if (!($char >= 57344 && $char <= 65533))
                        t2 = $char >= 65536 && $char <= 1114111;
                      else
                        t2 = true;
                    else
                      t2 = true;
                  else
                    t2 = true;
                else
                  t2 = true;
              else
                t2 = true;
            else
              t2 = true;
          else
            t2 = true;
          if (t2)
            t2 = !($char === 10 || $char === 13);
          else
            t2 = false;
          if (t2)
            t1 = !($char === 32 || t1);
          else
            t1 = false;
          return t1 && !this.isFlowIndicator$1($char);
        default:
          throw H.wrapException("invalid context \"" + H.S(ctx) + "\"");
      }
    }, "call$2", "get$isPlainSafe", 4, 0, null, 609, 599],
    ns_plainChar$1: [function(ctx) {
      var $char, indicator, safeChar, t1, t2, t3, nonCommentHash, nonMappingColon, match;
      $char = this.peek$0();
      indicator = this.indicatorType$1($char);
      safeChar = this.isPlainSafe$2(ctx, $char) && indicator !== 6 && indicator !== 12;
      t1 = this.peek$1(-1);
      t2 = t1 === 9;
      if (!t2)
        if (t1 !== 10)
          if (t1 !== 13)
            if (!(t1 >= 32 && t1 <= 126))
              if (t1 !== 133)
                if (!(t1 >= 160 && t1 <= 55295))
                  if (!(t1 >= 57344 && t1 <= 65533))
                    t3 = t1 >= 65536 && t1 <= 1114111;
                  else
                    t3 = true;
                else
                  t3 = true;
              else
                t3 = true;
            else
              t3 = true;
          else
            t3 = true;
        else
          t3 = true;
      else
        t3 = true;
      if (t3)
        t3 = !(t1 === 10 || t1 === 13);
      else
        t3 = false;
      if (t3) {
        t2 = !(t1 === 32 || t2);
        t1 = t2;
      } else
        t1 = false;
      nonCommentHash = t1 && indicator === 12;
      nonMappingColon = indicator === 6 && this.isPlainSafe$2(ctx, this.peek$1(1));
      match = safeChar || nonCommentHash || nonMappingColon;
      if (match)
        this.next$0();
      return match;
    }, "call$1", "get$ns_plainChar", 2, 0, null, 609],
    ns_plain$2: [function(indent, ctx) {
      return this.context$2("plain scalar", new V.Parser_ns_plain_closure(this, indent, ctx));
    }, "call$2", "get$ns_plain", 4, 0, null, 607, 609],
    nb_ns_plainInLine$1: [function(ctx) {
      this.zeroOrMore$1(new V.Parser_nb_ns_plainInLine_closure(this, ctx));
    }, "call$1", "get$nb_ns_plainInLine", 2, 0, null, 609],
    ns_plainOneLine$1: [function(ctx) {
      var t1, $char, indicator, t2, match;
      t1 = this.c_forbidden$0();
      if (t1)
        return false;
      $char = this.peek$0();
      indicator = this.indicatorType$1($char);
      if (indicator === 21)
        this.error$1(0, "reserved indicators can't start a plain scalar");
      t1 = $char === 9;
      if (!t1)
        if ($char !== 10)
          if ($char !== 13)
            if (!($char >= 32 && $char <= 126))
              if ($char !== 133)
                if (!($char >= 160 && $char <= 55295))
                  if (!($char >= 57344 && $char <= 65533))
                    t2 = $char >= 65536 && $char <= 1114111;
                  else
                    t2 = true;
                else
                  t2 = true;
              else
                t2 = true;
            else
              t2 = true;
          else
            t2 = true;
        else
          t2 = true;
      else
        t2 = true;
      if (t2)
        t2 = !($char === 10 || $char === 13);
      else
        t2 = false;
      if (t2)
        t1 = !($char === 32 || t1);
      else
        t1 = false;
      if (!(t1 && indicator == null))
        match = (indicator === 5 || indicator === 6 || indicator === 4) && this.isPlainSafe$2(ctx, this.peek$1(1));
      else
        match = true;
      if (match)
        this.next$0();
      if (!match)
        return false;
      this.nb_ns_plainInLine$1(ctx);
      return true;
    }, "call$1", "get$ns_plainOneLine", 2, 0, null, 609],
    s_ns_plainNextLine$2: [function(indent, ctx) {
      return this.transaction$1(new V.Parser_s_ns_plainNextLine_closure(this, indent, ctx));
    }, "call$2", "get$s_ns_plainNextLine", 4, 0, null, 607, 609],
    ns_plainMultiLine$2: [function(indent, ctx) {
      var t1 = this.ns_plainOneLine$1(ctx);
      if (!t1)
        return false;
      this.zeroOrMore$1(new V.Parser_ns_plainMultiLine_closure(this, indent, ctx));
      return true;
    }, "call$2", "get$ns_plainMultiLine", 4, 0, null, 607, 609],
    inFlow$1: [function(ctx) {
      switch (ctx) {
        case 2:
        case 3:
          return 3;
        case 4:
        case 5:
          return 5;
        default:
      }
    }, "call$1", "get$inFlow", 2, 0, null, 609],
    c_flowSequence$2: [function(indent, ctx) {
      return this.transaction$1(new V.Parser_c_flowSequence_closure(this, indent, ctx));
    }, "call$2", "get$c_flowSequence", 4, 0, null, 607, 609],
    ns_s_flowSeqEntries$2: [function(indent, ctx) {
      var first, t1, t2, rest;
      first = this.ns_flowSeqEntry$2(indent, ctx);
      if (!(first != null && J.$eq(first, false) !== true)) {
        t1 = R.Node0;
        t2 = H.setRuntimeTypeInfo(new P.ListQueue(null, 0, 0, 0), [t1]);
        t2.ListQueue$1(null, t1);
        return t2;
      }
      new V.Parser_ns_s_flowSeqEntries_closure(this, indent, ctx).call$0();
      t1 = this.c_indicator$1(7);
      if (t1) {
        new V.Parser_ns_s_flowSeqEntries_closure0(this, indent, ctx).call$0();
        rest = new V.Parser_ns_s_flowSeqEntries_closure1(this, indent, ctx).call$0();
      } else
        rest = null;
      if (rest == null) {
        t1 = R.Node0;
        rest = H.setRuntimeTypeInfo(new P.ListQueue(null, 0, 0, 0), [t1]);
        rest.ListQueue$1(null, t1);
      }
      rest.addFirst$1(first);
      return rest;
    }, "call$2", "get$ns_s_flowSeqEntries", 4, 0, null, 607, 609],
    ns_flowSeqEntry$2: [function(indent, ctx) {
      return this.or$1([new V.Parser_ns_flowSeqEntry_closure(this, indent, ctx), new V.Parser_ns_flowSeqEntry_closure0(this, indent, ctx)]);
    }, "call$2", "get$ns_flowSeqEntry", 4, 0, null, 607, 609],
    c_flowMapping$2: [function(indent, ctx) {
      var t1, $content;
      t1 = this.c_indicator$1(10);
      if (!t1)
        return;
      new V.Parser_c_flowMapping_closure(this, indent, ctx).call$0();
      $content = new V.Parser_c_flowMapping_closure0(this, indent, ctx).call$0();
      t1 = this.c_indicator$1(11);
      if (!t1)
        return;
      return new R.MappingNode($content, new R.Tag("?", 2), null);
    }, "call$2", "get$c_flowMapping", 4, 0, null, 607, 609],
    ns_s_flowMapEntries$2: [function(indent, ctx) {
      var first, t1, rest, t2, t3;
      first = this.ns_flowMapEntry$2(indent, ctx);
      if (!(first != null && J.$eq(first, false) !== true))
        return new L.YamlMap(P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
      new V.Parser_ns_s_flowMapEntries_closure(this, indent, ctx).call$0();
      t1 = this.c_indicator$1(7);
      if (t1) {
        new V.Parser_ns_s_flowMapEntries_closure0(this, indent, ctx).call$0();
        rest = this.ns_s_flowMapEntries$2(indent, ctx);
      } else
        rest = null;
      if (rest == null)
        rest = new L.YamlMap(P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
      t1 = J.getInterceptor$ax(first);
      t2 = t1.get$first(first);
      t3 = rest._yaml_map$_map;
      if (t3.containsKey$1(rest._wrapKey$1(t2)) !== true) {
        t2 = t1.get$first(first);
        t1 = t1.get$last(first);
        t3.$indexSet(0, rest._wrapKey$1(t2), t1);
      }
      return rest;
    }, "call$2", "get$ns_s_flowMapEntries", 4, 0, null, 607, 609],
    ns_flowMapEntry$2: [function(indent, ctx) {
      return this.or$1([new V.Parser_ns_flowMapEntry_closure(this, indent, ctx), new V.Parser_ns_flowMapEntry_closure0(this, indent, ctx)]);
    }, "call$2", "get$ns_flowMapEntry", 4, 0, null, 607, 609],
    ns_flowMapExplicitEntry$2: [function(indent, ctx) {
      return this.or$1([new V.Parser_ns_flowMapExplicitEntry_closure(this, indent, ctx), new V.Parser_ns_flowMapExplicitEntry_closure0(this)]);
    }, "call$2", "get$ns_flowMapExplicitEntry", 4, 0, null, 607, 609],
    ns_flowMapImplicitEntry$2: [function(indent, ctx) {
      return this.or$1([new V.Parser_ns_flowMapImplicitEntry_closure(this, indent, ctx), new V.Parser_ns_flowMapImplicitEntry_closure0(this, indent, ctx), new V.Parser_ns_flowMapImplicitEntry_closure1(this, indent, ctx)]);
    }, "call$2", "get$ns_flowMapImplicitEntry", 4, 0, null, 607, 609],
    ns_flowMapYamlKeyEntry$2: [function(indent, ctx) {
      var key = this.ns_flowYamlNode$2(indent, ctx);
      if (!(key != null && J.$eq(key, false) !== true))
        return;
      return H.setRuntimeTypeInfo(new V._Pair(key, this.or$1([new V.Parser_ns_flowMapYamlKeyEntry_closure(this, indent, ctx), this.get$e_node()])), [R.Node0, R.Node0]);
    }, "call$2", "get$ns_flowMapYamlKeyEntry", 4, 0, null, 607, 609],
    c_ns_flowMapEmptyKeyEntry$2: [function(indent, ctx) {
      var value = this.c_ns_flowMapSeparateValue$2(indent, ctx);
      if (!(value != null && J.$eq(value, false) !== true))
        return;
      return H.setRuntimeTypeInfo(new V._Pair(new R.ScalarNode("", null, new R.Tag("?", 0), null), value), [R.Node0, R.Node0]);
    }, "call$2", "get$c_ns_flowMapEmptyKeyEntry", 4, 0, null, 607, 609],
    c_ns_flowMapSeparateValue$2: [function(indent, ctx) {
      return this.transaction$1(new V.Parser_c_ns_flowMapSeparateValue_closure(this, indent, ctx));
    }, "call$2", "get$c_ns_flowMapSeparateValue", 4, 0, null, 607, 609],
    c_ns_flowMapJsonKeyEntry$2: [function(indent, ctx) {
      var key = this.c_flowJsonNode$2(indent, ctx);
      if (!(key != null && J.$eq(key, false) !== true))
        return;
      return H.setRuntimeTypeInfo(new V._Pair(key, this.or$1([new V.Parser_c_ns_flowMapJsonKeyEntry_closure(this, indent, ctx), this.get$e_node()])), [R.Node0, R.Node0]);
    }, "call$2", "get$c_ns_flowMapJsonKeyEntry", 4, 0, null, 607, 609],
    c_ns_flowMapAdjacentValue$2: [function(indent, ctx) {
      var t1 = this.c_indicator$1(6);
      if (!t1)
        return;
      return this.or$1([new V.Parser_c_ns_flowMapAdjacentValue_closure(this, indent, ctx), this.get$e_node()]);
    }, "call$2", "get$c_ns_flowMapAdjacentValue", 4, 0, null, 607, 609],
    ns_flowPair$2: [function(indent, ctx) {
      var pair = this.or$1([new V.Parser_ns_flowPair_closure(this, indent, ctx), new V.Parser_ns_flowPair_closure0(this, indent, ctx)]);
      if (!(pair != null && J.$eq(pair, false) !== true))
        return;
      return this.map$1(0, [pair]);
    }, "call$2", "get$ns_flowPair", 4, 0, null, 607, 609],
    ns_flowPairEntry$2: [function(indent, ctx) {
      return this.or$1([new V.Parser_ns_flowPairEntry_closure(this, indent, ctx), new V.Parser_ns_flowPairEntry_closure0(this, indent, ctx), new V.Parser_ns_flowPairEntry_closure1(this, indent, ctx)]);
    }, "call$2", "get$ns_flowPairEntry", 4, 0, null, 607, 609],
    ns_flowPairYamlKeyEntry$2: [function(indent, ctx) {
      return this.transaction$1(new V.Parser_ns_flowPairYamlKeyEntry_closure(this, indent, ctx));
    }, "call$2", "get$ns_flowPairYamlKeyEntry", 4, 0, null, 607, 609],
    c_ns_flowPairJsonKeyEntry$2: [function(indent, ctx) {
      return this.transaction$1(new V.Parser_c_ns_flowPairJsonKeyEntry_closure(this, indent, ctx));
    }, "call$2", "get$c_ns_flowPairJsonKeyEntry", 4, 0, null, 607, 609],
    ns_s_implicitYamlKey$1: [function(ctx) {
      return this.transaction$1(new V.Parser_ns_s_implicitYamlKey_closure(this, ctx));
    }, "call$1", "get$ns_s_implicitYamlKey", 2, 0, null, 609],
    c_s_implicitJsonKey$1: [function(ctx) {
      return this.transaction$1(new V.Parser_c_s_implicitJsonKey_closure(this, ctx));
    }, "call$1", "get$c_s_implicitJsonKey", 2, 0, null, 609],
    ns_flowYamlContent$2: [function(indent, ctx) {
      var str = this.ns_plain$2(indent, ctx);
      if (!(str != null && J.$eq(str, false) !== true))
        return;
      return new R.ScalarNode(str, null, new R.Tag("?", 0), null);
    }, "call$2", "get$ns_flowYamlContent", 4, 0, null, 607, 609],
    c_flowJsonContent$2: [function(indent, ctx) {
      return this.or$1([new V.Parser_c_flowJsonContent_closure(this, indent, ctx), new V.Parser_c_flowJsonContent_closure0(this, indent, ctx), new V.Parser_c_flowJsonContent_closure1(this, indent, ctx), new V.Parser_c_flowJsonContent_closure2(this, indent, ctx)]);
    }, "call$2", "get$c_flowJsonContent", 4, 0, null, 607, 609],
    ns_flowContent$2: [function(indent, ctx) {
      return this.or$1([new V.Parser_ns_flowContent_closure(this, indent, ctx), new V.Parser_ns_flowContent_closure0(this, indent, ctx)]);
    }, "call$2", "get$ns_flowContent", 4, 0, null, 607, 609],
    ns_flowYamlNode$2: [function(indent, ctx) {
      return this.or$1([this.get$c_ns_aliasNode(), new V.Parser_ns_flowYamlNode_closure(this, indent, ctx), new V.Parser_ns_flowYamlNode_closure0(this, indent, ctx)]);
    }, "call$2", "get$ns_flowYamlNode", 4, 0, null, 607, 609],
    c_flowJsonNode$2: [function(indent, ctx) {
      return this.transaction$1(new V.Parser_c_flowJsonNode_closure(this, indent, ctx));
    }, "call$2", "get$c_flowJsonNode", 4, 0, null, 607, 609],
    ns_flowNode$2: [function(indent, ctx) {
      return this.or$1([this.get$c_ns_aliasNode(), new V.Parser_ns_flowNode_closure(this, indent, ctx), new V.Parser_ns_flowNode_closure0(this, indent, ctx)]);
    }, "call$2", "get$ns_flowNode", 4, 0, null, 607, 609],
    c_b_blockHeader$0: [function() {
      return this.transaction$1(new V.Parser_c_b_blockHeader_closure(this));
    }, "call$0", "get$c_b_blockHeader", 0, 0, null],
    c_indentationIndicator$0: [function() {
      var t1 = this.peek$0();
      if (!(t1 >= 48 && t1 <= 57))
        return;
      return this.next$0() - 48;
    }, "call$0", "get$c_indentationIndicator", 0, 0, null],
    c_chompingIndicator$0: [function() {
      switch (this.peek$0()) {
        case 45:
          this.next$0();
          return 0;
        case 43:
          this.next$0();
          return 1;
        default:
          return 2;
      }
    }, "call$0", "get$c_chompingIndicator", 0, 0, null],
    b_chompedLast$1: [function(chomping) {
      if (this._pos === this._len)
        return true;
      switch (chomping) {
        case 0:
          return this.b_nonContent$0();
        case 2:
        case 1:
          return this.b_asLineFeed$0();
        default:
      }
    }, "call$1", "get$b_chompedLast", 2, 0, null, 612],
    l_chompedEmpty$2: [function(indent, chomping) {
      switch (chomping) {
        case 0:
        case 2:
          this.l_stripEmpty$1(indent);
          break;
        case 1:
          this.l_keepEmpty$1(indent);
          break;
        default:
      }
    }, "call$2", "get$l_chompedEmpty", 4, 0, null, 607, 612],
    l_stripEmpty$1: [function(indent) {
      this.captureAs$2("", new V.Parser_l_stripEmpty_closure(this, indent));
    }, "call$1", "get$l_stripEmpty", 2, 0, null, 607],
    l_keepEmpty$1: [function(indent) {
      this.zeroOrMore$1(new V.Parser_l_keepEmpty_closure(this, indent));
      new V.Parser_l_keepEmpty_closure0(this, indent).call$0();
    }, "call$1", "get$l_keepEmpty", 2, 0, null, 607],
    l_trailComments$1: [function(indent) {
      return this.transaction$1(new V.Parser_l_trailComments_closure(this, indent));
    }, "call$1", "get$l_trailComments", 2, 0, null, 607],
    c_l_literal$1: [function(indent) {
      return this.transaction$1(new V.Parser_c_l_literal_closure(this, indent));
    }, "call$1", "get$c_l_literal", 2, 0, null, 607],
    l_nb_literalText$1: [function(indent) {
      return this.transaction$1(new V.Parser_l_nb_literalText_closure(this, indent));
    }, "call$1", "get$l_nb_literalText", 2, 0, null, 607],
    b_nb_literalNext$1: [function(indent) {
      return this.transaction$1(new V.Parser_b_nb_literalNext_closure(this, indent));
    }, "call$1", "get$b_nb_literalNext", 2, 0, null, 607],
    l_literalContent$2: [function(indent, chomping) {
      return this.captureString$1(new V.Parser_l_literalContent_closure(this, indent, chomping));
    }, "call$2", "get$l_literalContent", 4, 0, null, 607, 612],
    c_l_folded$1: [function(indent) {
      return this.transaction$1(new V.Parser_c_l_folded_closure(this, indent));
    }, "call$1", "get$c_l_folded", 2, 0, null, 607],
    s_nb_foldedText$1: [function(indent) {
      return this.transaction$1(new V.Parser_s_nb_foldedText_closure(this, indent));
    }, "call$1", "get$s_nb_foldedText", 2, 0, null, 607],
    l_nb_foldedLines$1: [function(indent) {
      var t1 = this.s_nb_foldedText$1(indent);
      if (!(t1 != null && J.$eq(t1, false) !== true))
        return false;
      this.zeroOrMore$1(new V.Parser_l_nb_foldedLines_closure(this, indent));
      return true;
    }, "call$1", "get$l_nb_foldedLines", 2, 0, null, 607],
    s_nb_spacedText$1: [function(indent) {
      return this.transaction$1(new V.Parser_s_nb_spacedText_closure(this, indent));
    }, "call$1", "get$s_nb_spacedText", 2, 0, null, 607],
    b_l_spaced$1: [function(indent) {
      var t1 = this.b_asLineFeed$0();
      if (!(t1 != null && J.$eq(t1, false) !== true))
        return false;
      this.zeroOrMore$1(new V.Parser_b_l_spaced_closure(this, indent));
      return true;
    }, "call$1", "get$b_l_spaced", 2, 0, null, 607],
    l_nb_spacedLines$1: [function(indent) {
      var t1 = this.s_nb_spacedText$1(indent);
      if (!(t1 != null && J.$eq(t1, false) !== true))
        return false;
      this.zeroOrMore$1(new V.Parser_l_nb_spacedLines_closure(this, indent));
      return true;
    }, "call$1", "get$l_nb_spacedLines", 2, 0, null, 607],
    l_nb_sameLines$1: [function(indent) {
      return this.transaction$1(new V.Parser_l_nb_sameLines_closure(this, indent));
    }, "call$1", "get$l_nb_sameLines", 2, 0, null, 607],
    l_nb_diffLines$1: [function(indent) {
      var t1 = this.l_nb_sameLines$1(indent);
      if (!(t1 != null && J.$eq(t1, false) !== true))
        return false;
      this.zeroOrMore$1(new V.Parser_l_nb_diffLines_closure(this, indent));
      return true;
    }, "call$1", "get$l_nb_diffLines", 2, 0, null, 607],
    l_foldedContent$2: [function(indent, chomping) {
      return this.captureString$1(new V.Parser_l_foldedContent_closure(this, indent, chomping));
    }, "call$2", "get$l_foldedContent", 4, 0, null, 607, 612],
    l_blockSequence$1: [function(indent) {
      return this.context$2("sequence", new V.Parser_l_blockSequence_closure(this, indent));
    }, "call$1", "get$l_blockSequence", 2, 0, null, 607],
    c_l_blockSeqEntry$1: [function(indent) {
      return this.transaction$1(new V.Parser_c_l_blockSeqEntry_closure(this, indent));
    }, "call$1", "get$c_l_blockSeqEntry", 2, 0, null, 607],
    s_l_blockIndented$2: [function(indent, ctx) {
      return this.or$1([new V.Parser_s_l_blockIndented_closure(this, indent, this.countIndentation$0()), new V.Parser_s_l_blockIndented_closure0(this, indent, ctx), new V.Parser_s_l_blockIndented_closure1(this)]);
    }, "call$2", "get$s_l_blockIndented", 4, 0, null, 607, 609],
    ns_l_compactSequence$1: [function(indent) {
      return this.context$2("sequence", new V.Parser_ns_l_compactSequence_closure(this, indent));
    }, "call$1", "get$ns_l_compactSequence", 2, 0, null, 607],
    l_blockMapping$1: [function(indent) {
      return this.context$2("mapping", new V.Parser_l_blockMapping_closure(this, indent));
    }, "call$1", "get$l_blockMapping", 2, 0, null, 607],
    ns_l_blockMapEntry$1: [function(indent) {
      return this.or$1([new V.Parser_ns_l_blockMapEntry_closure(this, indent), new V.Parser_ns_l_blockMapEntry_closure0(this, indent)]);
    }, "call$1", "get$ns_l_blockMapEntry", 2, 0, null, 607],
    c_l_blockMapExplicitEntry$1: [function(indent) {
      var key = this.c_l_blockMapExplicitKey$1(indent);
      if (!(key != null && J.$eq(key, false) !== true))
        return;
      return H.setRuntimeTypeInfo(new V._Pair(key, this.or$1([new V.Parser_c_l_blockMapExplicitEntry_closure(this, indent), this.get$e_node()])), [R.Node0, R.Node0]);
    }, "call$1", "get$c_l_blockMapExplicitEntry", 2, 0, null, 607],
    c_l_blockMapExplicitKey$1: [function(indent) {
      return this.transaction$1(new V.Parser_c_l_blockMapExplicitKey_closure(this, indent));
    }, "call$1", "get$c_l_blockMapExplicitKey", 2, 0, null, 607],
    l_blockMapExplicitValue$1: [function(indent) {
      return this.transaction$1(new V.Parser_l_blockMapExplicitValue_closure(this, indent));
    }, "call$1", "get$l_blockMapExplicitValue", 2, 0, null, 607],
    ns_l_blockMapImplicitEntry$1: [function(indent) {
      return this.transaction$1(new V.Parser_ns_l_blockMapImplicitEntry_closure(this, indent));
    }, "call$1", "get$ns_l_blockMapImplicitEntry", 2, 0, null, 607],
    ns_s_blockMapImplicitKey$0: [function() {
      return this.context$2("mapping key", new V.Parser_ns_s_blockMapImplicitKey_closure(this));
    }, "call$0", "get$ns_s_blockMapImplicitKey", 0, 0, 610],
    c_l_blockMapImplicitValue$1: [function(indent) {
      return this.context$2("mapping value", new V.Parser_c_l_blockMapImplicitValue_closure(this, indent));
    }, "call$1", "get$c_l_blockMapImplicitValue", 2, 0, null, 607],
    ns_l_compactMapping$1: [function(indent) {
      return this.context$2("mapping", new V.Parser_ns_l_compactMapping_closure(this, indent));
    }, "call$1", "get$ns_l_compactMapping", 2, 0, null, 607],
    s_l_blockNode$2: [function(indent, ctx) {
      return this.or$1([new V.Parser_s_l_blockNode_closure(this, indent, ctx), new V.Parser_s_l_blockNode_closure0(this, indent)]);
    }, "call$2", "get$s_l_blockNode", 4, 0, null, 607, 609],
    s_l_flowInBlock$1: [function(indent) {
      return this.transaction$1(new V.Parser_s_l_flowInBlock_closure(this, indent));
    }, "call$1", "get$s_l_flowInBlock", 2, 0, null, 607],
    s_l_blockInBlock$2: [function(indent, ctx) {
      return this.or$1([new V.Parser_s_l_blockInBlock_closure(this, indent, ctx), new V.Parser_s_l_blockInBlock_closure0(this, indent, ctx)]);
    }, "call$2", "get$s_l_blockInBlock", 4, 0, null, 607, 609],
    s_l_blockScalar$2: [function(indent, ctx) {
      return this.transaction$1(new V.Parser_s_l_blockScalar_closure(this, indent, ctx));
    }, "call$2", "get$s_l_blockScalar", 4, 0, null, 607, 609],
    s_l_blockCollection$2: [function(indent, ctx) {
      return this.transaction$1(new V.Parser_s_l_blockCollection_closure(this, indent, ctx));
    }, "call$2", "get$s_l_blockCollection", 4, 0, null, 607, 609],
    l_documentPrefix$0: [function() {
      this.zeroOrMore$1(this.get$l_comment());
    }, "call$0", "get$l_documentPrefix", 0, 0, 107],
    c_directivesEnd$0: [function() {
      return this.rawString$1("---");
    }, "call$0", "get$c_directivesEnd", 0, 0, 437],
    c_documentEnd$0: [function() {
      return this.rawString$1("...");
    }, "call$0", "get$c_documentEnd", 0, 0, 437],
    l_documentSuffix$0: [function() {
      return this.transaction$1(new V.Parser_l_documentSuffix_closure(this));
    }, "call$0", "get$l_documentSuffix", 0, 0, 437],
    c_forbidden$0: [function() {
      var t1 = {};
      if (!this._inBareDocument || this._column !== 0)
        return false;
      t1.forbidden_0 = false;
      this.transaction$1(new V.Parser_c_forbidden_closure(t1, this));
      return t1.forbidden_0;
    }, "call$0", "get$c_forbidden", 0, 0, null],
    l_bareDocument$0: [function() {
      try {
        this._inBareDocument = true;
        var t1 = this.s_l_blockNode$2(-1, 1);
        return t1;
      } finally {
        this._inBareDocument = false;
      }
    }, "call$0", "get$l_bareDocument", 0, 0, 610],
    l_explicitDocument$0: [function() {
      var t1, doc;
      t1 = this.rawString$1("---");
      if (!(t1 != null && J.$eq(t1, false) !== true))
        return;
      doc = this.l_bareDocument$0();
      if (doc != null && J.$eq(doc, false) !== true)
        return doc;
      this.s_l_comments$0();
      return new R.ScalarNode("", null, new R.Tag("?", 0), null);
    }, "call$0", "get$l_explicitDocument", 0, 0, 610],
    l_directiveDocument$0: [function() {
      if (!(this.oneOrMore$1(this.get$l_directive()) != null && true))
        return;
      var doc = this.l_explicitDocument$0();
      if (doc != null)
        return doc;
      this.parseFailed$0();
    }, "call$0", "get$l_directiveDocument", 0, 0, 610],
    l_anyDocument$0: [function() {
      return this.or$1([this.get$l_directiveDocument(), this.get$l_explicitDocument(), this.get$l_bareDocument()]);
    }, "call$0", "get$l_anyDocument", 0, 0, 610],
    l_yamlStream$0: [function() {
      var docs, first;
      docs = [];
      this.zeroOrMore$1(this.get$l_documentPrefix());
      first = this.get$l_anyDocument().call$0();
      docs.push(!(first != null && J.$eq(first, false) !== true) ? new R.ScalarNode("", null, new R.Tag("?", 0), null) : first);
      this.zeroOrMore$1(new V.Parser_l_yamlStream_closure(this, docs));
      if (this._pos !== this._len)
        this.parseFailed$0();
      return docs;
    }, "call$0", "get$l_yamlStream", 0, 0, null],
    static: {"": "Parser_TAB,Parser_LF,Parser_CR,Parser_SP,Parser_TILDE,Parser_NEL,Parser_PLUS,Parser_HYPHEN,Parser_QUESTION_MARK,Parser_COLON,Parser_COMMA,Parser_LEFT_BRACKET,Parser_RIGHT_BRACKET,Parser_LEFT_BRACE,Parser_RIGHT_BRACE,Parser_HASH,Parser_AMPERSAND,Parser_ASTERISK,Parser_EXCLAMATION,Parser_VERTICAL_BAR,Parser_GREATER_THAN,Parser_SINGLE_QUOTE,Parser_DOUBLE_QUOTE,Parser_PERCENT,Parser_AT,Parser_GRAVE_ACCENT,Parser_NULL,Parser_BELL,Parser_BACKSPACE,Parser_VERTICAL_TAB,Parser_FORM_FEED,Parser_ESCAPE,Parser_SLASH,Parser_BACKSLASH,Parser_UNDERSCORE,Parser_NBSP,Parser_LINE_SEPARATOR,Parser_PARAGRAPH_SEPARATOR,Parser_NUMBER_0,Parser_NUMBER_9,Parser_LETTER_A,Parser_LETTER_B,Parser_LETTER_E,Parser_LETTER_F,Parser_LETTER_N,Parser_LETTER_R,Parser_LETTER_T,Parser_LETTER_U,Parser_LETTER_V,Parser_LETTER_X,Parser_LETTER_CAP_A,Parser_LETTER_CAP_F,Parser_LETTER_CAP_L,Parser_LETTER_CAP_N,Parser_LETTER_CAP_P,Parser_LETTER_CAP_U,Parser_LETTER_CAP_X,Parser_C_SEQUENCE_ENTRY,Parser_C_MAPPING_KEY,Parser_C_MAPPING_VALUE,Parser_C_COLLECT_ENTRY,Parser_C_SEQUENCE_START,Parser_C_SEQUENCE_END,Parser_C_MAPPING_START,Parser_C_MAPPING_END,Parser_C_COMMENT,Parser_C_ANCHOR,Parser_C_ALIAS,Parser_C_TAG,Parser_C_LITERAL,Parser_C_FOLDED,Parser_C_SINGLE_QUOTE,Parser_C_DOUBLE_QUOTE,Parser_C_DIRECTIVE,Parser_C_RESERVED,Parser_BLOCK_OUT,Parser_BLOCK_IN,Parser_FLOW_OUT,Parser_FLOW_IN,Parser_BLOCK_KEY,Parser_FLOW_KEY,Parser_CHOMPING_STRIP,Parser_CHOMPING_KEEP,Parser_CHOMPING_CLIP"}
  },
  Parser_consumeChar_closure: {
    "": "Closure:271;char_0",
    call$1: [function(c) {
      return c === this.char_0;
    }, "call$1", null, 2, 0, null, 331, "call"],
    $isFunction: true
  },
  Parser_nAtOnce_closure: {
    "": "Closure:108;this_1,n_2,matcher_3",
    call$0: [function() {
      var box_0, t1, t2, t3, box_00, t4;
      box_0 = {};
      box_0.i_0 = 0;
      t1 = this.n_2;
      if (typeof t1 !== "number")
        return H.iae(t1);
      t2 = this.this_1;
      t3 = this.matcher_3;
      for (; box_0.i_0 < t1; box_00 = {}, t4 = box_0.i_0, box_00.i_0 = t4, box_00.i_0 = t4 + 1, box_0 = box_00)
        if (!t2.consume$1(new V.Parser_nAtOnce__closure(box_0, t3)))
          return false;
      return true;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nAtOnce__closure: {
    "": "Closure:271;box_0,matcher_4",
    call$1: [function(c) {
      return this.matcher_4.call$2(c, this.box_0.i_0);
    }, "call$1", null, 2, 0, null, 331, "call"],
    $isFunction: true
  },
  Parser_rawString_closure: {
    "": "Closure:426;str_0",
    call$2: [function(c, i) {
      return C.JSString_methods.codeUnitAt$1(this.str_0, i) === c;
    }, "call$2", null, 4, 0, null, 331, 418, "call"],
    $isFunction: true
  },
  Parser_captureAs_closure: {
    "": "Closure:271;replacement_0",
    call$1: [function(_) {
      return this.replacement_0;
    }, "call$1", null, 2, 0, null, 335, "call"],
    $isFunction: true
  },
  Parser_map_closure: {
    "": "Closure:271;content_0",
    call$1: [function(pair) {
      var t1, t2;
      t1 = J.getInterceptor$ax(pair);
      t2 = t1.get$first(pair);
      t1 = t1.get$last(pair);
      this.content_0.$indexSet(0, t2, t1);
      return t1;
    }, "call$1", null, 2, 0, null, 613, "call"],
    $isFunction: true
  },
  Parser_annotateError_closure: {
    "": "Closure:108;box_0,this_1,fn_2",
    call$0: [function() {
      this.fn_2.call$0();
      this.box_0.end_0 = this.this_1._pos;
      return false;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_blockScalarAdditionalIndentation_closure: {
    "": "Closure:108;box_0,this_1",
    call$0: [function() {
      var t1, t2, spaces;
      t1 = this.this_1;
      t2 = this.box_0;
      do {
        spaces = t1.captureString$1(new V.Parser_blockScalarAdditionalIndentation__closure(t1)).length;
        t2.spaces_2 = spaces;
        if (spaces > t2.maxSpaces_0) {
          t2.maxSpaces_0 = spaces;
          t2.maxSpacesLine_1 = t1._line;
        }
      } while (t1.b_break$0());
      return false;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_blockScalarAdditionalIndentation__closure: {
    "": "Closure:108;this_2",
    call$0: [function() {
      var t1 = this.this_2;
      return t1.zeroOrMore$1(new V.Parser_blockScalarAdditionalIndentation___closure(t1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_blockScalarAdditionalIndentation___closure: {
    "": "Closure:108;this_3",
    call$0: [function() {
      return this.this_3.consumeChar$1(32);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_indicator_closure: {
    "": "Closure:271;this_0,type_1",
    call$1: [function(c) {
      return this.this_0.indicatorType$1(c) === this.type_1;
    }, "call$1", null, 2, 0, null, 331, "call"],
    $isFunction: true
  },
  Parser_b_break_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.consumeChar$1(10);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_b_asLineFeed_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.b_break$0();
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_b_nonContent_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.b_break$0();
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_escape_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.consumeChar$1(92);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_escNull_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.consumeChar$1(48);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_escBell_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.consumeChar$1(97);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_escBackspace_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.consumeChar$1(98);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_escHorizontalTab_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.consume$1(new V.Parser_ns_escHorizontalTab__closure());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_escHorizontalTab__closure: {
    "": "Closure:271;",
    call$1: [function(c) {
      return c === 116 || c === 9;
    }, "call$1", null, 2, 0, null, 331, "call"],
    $isFunction: true
  },
  Parser_ns_escLineFeed_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.consumeChar$1(110);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_escVerticalTab_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.consumeChar$1(118);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_escFormFeed_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.consumeChar$1(102);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_escCarriageReturn_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.consumeChar$1(114);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_escEscape_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.consumeChar$1(101);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_escNextLine_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.consumeChar$1(78);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_escNonBreakingSpace_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.consumeChar$1(95);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_escLineSeparator_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.consumeChar$1(76);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_escParagraphSeparator_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.consumeChar$1(80);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_escNBit_closure: {
    "": "Closure:108;this_0,char_1",
    call$0: [function() {
      return this.this_0.consumeChar$1(this.char_1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_escNBit_closure0: {
    "": "Closure:108;this_2,digits_3",
    call$0: [function() {
      var t1 = this.this_2;
      return t1.nAtOnce$2(this.digits_3, new V.Parser_ns_escNBit__closure(t1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_escNBit__closure: {
    "": "Closure:426;this_4",
    call$2: [function(c, _) {
      var t1;
      if (!(c >= 48 && c <= 57))
        if (!(c >= 97 && c <= 102))
          t1 = c >= 65 && c <= 70;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    }, "call$2", null, 4, 0, null, 331, 335, "call"],
    $isFunction: true
  },
  Parser_ns_escNBit_closure1: {
    "": "Closure:271;",
    call$1: [function(hex) {
      return P.String_String$fromCharCodes([H.Primitives_parseInt("0x" + hex, null, null)]);
    }, "call$1", null, 2, 0, null, 614, "call"],
    $isFunction: true
  },
  Parser_c_ns_escChar_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.transaction$1(new V.Parser_c_ns_escChar__closure(t1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_ns_escChar__closure: {
    "": "Closure:108;this_1",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_1;
      t2 = t1.c_escape$0();
      if (!(t2 != null && J.$eq(t2, false) !== true))
        return false;
      t1 = t1.or$1([t1.get$ns_escNull(), t1.get$ns_escBell(), t1.get$ns_escBackspace(), t1.get$ns_escHorizontalTab(), t1.get$ns_escLineFeed(), t1.get$ns_escVerticalTab(), t1.get$ns_escFormFeed(), t1.get$ns_escCarriageReturn(), t1.get$ns_escEscape(), t1.get$ns_escSpace(), t1.get$ns_escDoubleQuote(), t1.get$ns_escSlash(), t1.get$ns_escBackslash(), t1.get$ns_escNextLine(), t1.get$ns_escNonBreakingSpace(), t1.get$ns_escLineSeparator(), t1.get$ns_escParagraphSeparator(), t1.get$ns_esc8Bit(), t1.get$ns_esc16Bit(), t1.get$ns_esc32Bit()]);
      return t1 != null && J.$eq(t1, false) !== true;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_indent_closure: {
    "": "Closure:426;",
    call$2: [function(c, i) {
      return c === 32;
    }, "call$2", null, 4, 0, null, 331, 418, "call"],
    $isFunction: true
  },
  Parser_s_indent_closure0: {
    "": "Closure:108;this_0",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.zeroOrMore$1(new V.Parser_s_indent__closure(t1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_indent__closure: {
    "": "Closure:108;this_1",
    call$0: [function() {
      var t1 = this.this_1;
      return t1.consume$1(t1.get$isSpace());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_indentLessThan_closure: {
    "": "Closure:108;box_0,this_1,indent_2",
    call$0: [function() {
      var t1, t2, t3;
      for (t1 = this.box_0, t2 = this.indent_2 - 1, t3 = this.this_1; t1.i_0 < t2; t1.i_0 = t1.i_0 + 1)
        if (!t3.consume$1(t3.get$isSpace()))
          break;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_separateInLine_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.captureAs$2("", new V.Parser_s_separateInLine__closure(t1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_separateInLine__closure: {
    "": "Closure:108;this_1",
    call$0: [function() {
      var t1 = this.this_1;
      return t1.oneOrMore$1(new V.Parser_s_separateInLine___closure(t1)) != null && true || t1._column === 0;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_separateInLine___closure: {
    "": "Closure:108;this_2",
    call$0: [function() {
      var t1 = this.this_2;
      return t1.consume$1(t1.get$isSpace());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_linePrefix_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      switch (this.ctx_2) {
        case 0:
        case 1:
          return this.this_0.s_indent$1(this.indent_1);
        case 2:
        case 3:
          return this.this_0.s_flowLinePrefix$1(this.indent_1);
        default:
      }
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_flowLinePrefix_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = t1.s_indent$1(this.indent_1);
      if (!(t2 != null && J.$eq(t2, false) !== true))
        return false;
      t1.get$s_separateInLine().call$0();
      return true;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_empty_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1, t2, start;
      t1 = this.this_0;
      t2 = this.indent_1;
      start = t1.or$1([new V.Parser_l_empty__closure(t1, t2, this.ctx_2), new V.Parser_l_empty__closure0(t1, t2)]);
      if (!(start != null && J.$eq(start, false) !== true))
        return false;
      return t1.b_asLineFeed$0();
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_empty__closure: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      return this.this_3.s_linePrefix$2(this.indent_4, this.ctx_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_empty__closure0: {
    "": "Closure:108;this_6,indent_7",
    call$0: [function() {
      return this.this_6.s_indentLessThan$1(this.indent_7);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_b_asSpace_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.consume$1(t1.get$isBreak());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_b_l_trimmed_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = t1.b_nonContent$0();
      if (!(t2 != null && J.$eq(t2, false) !== true))
        return false;
      return t1.oneOrMore$1(new V.Parser_b_l_trimmed__closure(t1, this.indent_1, this.ctx_2)) != null && true;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_b_l_trimmed__closure: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      var t1 = this.this_3;
      return t1.captureAs$2("\n", new V.Parser_b_l_trimmed___closure(t1, this.indent_4, this.ctx_5));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_b_l_trimmed___closure: {
    "": "Closure:108;this_6,indent_7,ctx_8",
    call$0: [function() {
      return this.this_6.l_empty$2(this.indent_7, this.ctx_8);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_b_l_folded_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      return this.this_0.b_l_trimmed$2(this.indent_1, this.ctx_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_flowFolded_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_0;
      t1.get$s_separateInLine().call$0();
      t2 = this.indent_1;
      t3 = t1.b_l_folded$2(t2, 3);
      if (!(t3 != null && J.$eq(t3, false) !== true))
        return false;
      return t1.s_flowLinePrefix$1(t2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_nb_commentText_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.consume$1(t1.get$isNonBreak());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_comment_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = t1.s_separateInLine$0();
      if (!(t2 != null && J.$eq(t2, false) !== true))
        return false;
      t1.get$c_nb_commentText().call$0();
      return t1._pos === t1._len || t1.b_nonContent$0() === true;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_separateLines_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.s_l_comments$0() && t1.s_flowLinePrefix$1(this.indent_1) === true;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_ns_properties_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1 = this.this_0.s_separate$2(this.indent_1, this.ctx_2);
      if (!(t1 != null && J.$eq(t1, false) !== true))
        return;
      return;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_ns_properties_closure0: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      var t1 = this.this_3.s_separate$2(this.indent_4, this.ctx_5);
      if (!(t1 != null && J.$eq(t1, false) !== true))
        return;
      return;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_anchorName_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.oneOrMore$1(new V.Parser_ns_anchorName__closure(t1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_anchorName__closure: {
    "": "Closure:108;this_1",
    call$0: [function() {
      var t1 = this.this_1;
      return t1.consume$1(t1.get$isAnchorChar());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_doubleChar_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.consume$1(new V.Parser_nb_doubleChar__closure(t1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_doubleChar__closure: {
    "": "Closure:271;this_1",
    call$1: [function(c) {
      return this.this_1.isJson$1(c) && c !== 92 && c !== 34;
    }, "call$1", null, 2, 0, null, 331, "call"],
    $isFunction: true
  },
  Parser_c_doubleQuoted_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.transaction$1(new V.Parser_c_doubleQuoted__closure(t1, this.indent_1, this.ctx_2));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_doubleQuoted__closure: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      var t1, t2, contents;
      t1 = this.this_3;
      t2 = t1.c_indicator$1(19);
      if (!t2)
        return;
      contents = t1.nb_doubleText$2(this.indent_4, this.ctx_5);
      t1 = t1.c_indicator$1(19);
      if (!t1)
        return;
      return new R.ScalarNode(contents, null, new R.Tag("!", 0), null);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_doubleText_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      switch (this.ctx_2) {
        case 2:
        case 3:
          this.this_0.nb_doubleMultiLine$1(this.indent_1);
          break;
        case 4:
        case 5:
          var t1 = this.this_0;
          t1.zeroOrMore$1(t1.get$nb_doubleChar());
          break;
        default:
      }
      return true;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_doubleEscaped_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t1.zeroOrMore$1(new V.Parser_s_doubleEscaped__closure(t1));
      if (t1.captureAs$2("", new V.Parser_s_doubleEscaped__closure0(t1)) !== true)
        return false;
      t2 = t1.b_nonContent$0();
      if (!(t2 != null && J.$eq(t2, false) !== true))
        return false;
      t2 = this.indent_1;
      t1.zeroOrMore$1(new V.Parser_s_doubleEscaped__closure1(t1, t2));
      return t1.s_flowLinePrefix$1(t2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_doubleEscaped__closure: {
    "": "Closure:108;this_2",
    call$0: [function() {
      var t1 = this.this_2;
      return t1.consume$1(t1.get$isSpace());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_doubleEscaped__closure0: {
    "": "Closure:108;this_3",
    call$0: [function() {
      return this.this_3.consumeChar$1(92);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_doubleEscaped__closure1: {
    "": "Closure:108;this_4,indent_5",
    call$0: [function() {
      var t1 = this.this_4;
      return t1.captureAs$2("\n", new V.Parser_s_doubleEscaped___closure(t1, this.indent_5));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_doubleEscaped___closure: {
    "": "Closure:108;this_6,indent_7",
    call$0: [function() {
      return this.this_6.l_empty$2(this.indent_7, 3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_doubleBreak_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      return this.this_0.s_doubleEscaped$1(this.indent_1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_doubleBreak_closure0: {
    "": "Closure:108;this_2,indent_3",
    call$0: [function() {
      return this.this_2.s_flowFolded$1(this.indent_3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_ns_doubleInLine_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.transaction$1(new V.Parser_nb_ns_doubleInLine__closure(t1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_ns_doubleInLine__closure: {
    "": "Closure:108;this_1",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_1;
      t1.zeroOrMore$1(new V.Parser_nb_ns_doubleInLine___closure(t1));
      t2 = t1.peek$0();
      if (!(t2 === 32 || t2 === 9)) {
        t1 = t1.nb_doubleChar$0();
        t1 = t1 != null && J.$eq(t1, false) !== true;
      } else
        t1 = false;
      return t1;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_ns_doubleInLine___closure: {
    "": "Closure:108;this_2",
    call$0: [function() {
      var t1 = this.this_2;
      return t1.consume$1(t1.get$isSpace());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_doubleNextLine_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = t1.peek$0();
      if (!(t2 === 32 || t2 === 9)) {
        t2 = t1.nb_doubleChar$0();
        t2 = t2 != null && J.$eq(t2, false) !== true;
      } else
        t2 = false;
      if (!t2)
        return;
      t1.nb_ns_doubleInLine$0();
      t1.or$1([new V.Parser_s_doubleNextLine__closure(t1, this.indent_1), new V.Parser_s_doubleNextLine__closure0(t1)]);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_doubleNextLine__closure: {
    "": "Closure:108;this_2,indent_3",
    call$0: [function() {
      return this.this_2.s_doubleNextLine$1(this.indent_3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_doubleNextLine__closure0: {
    "": "Closure:108;this_4",
    call$0: [function() {
      var t1 = this.this_4;
      return t1.zeroOrMore$1(new V.Parser_s_doubleNextLine___closure(t1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_doubleNextLine___closure: {
    "": "Closure:108;this_5",
    call$0: [function() {
      var t1 = this.this_5;
      return t1.consume$1(t1.get$isSpace());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_doubleMultiLine_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      return this.this_0.s_doubleNextLine$1(this.indent_1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_doubleMultiLine_closure0: {
    "": "Closure:108;this_2",
    call$0: [function() {
      var t1 = this.this_2;
      return t1.zeroOrMore$1(new V.Parser_nb_doubleMultiLine__closure(t1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_doubleMultiLine__closure: {
    "": "Closure:108;this_3",
    call$0: [function() {
      var t1 = this.this_3;
      return t1.consume$1(t1.get$isSpace());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_quotedQuote_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      return this.this_0.rawString$1("''");
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_singleChar_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.consume$1(new V.Parser_nb_singleChar__closure(t1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_singleChar__closure: {
    "": "Closure:271;this_1",
    call$1: [function(c) {
      return this.this_1.isJson$1(c) && c !== 39;
    }, "call$1", null, 2, 0, null, 331, "call"],
    $isFunction: true
  },
  Parser_c_singleQuoted_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.transaction$1(new V.Parser_c_singleQuoted__closure(t1, this.indent_1, this.ctx_2));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_singleQuoted__closure: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      var t1, t2, contents;
      t1 = this.this_3;
      t2 = t1.c_indicator$1(18);
      if (!t2)
        return;
      contents = t1.nb_singleText$2(this.indent_4, this.ctx_5);
      t1 = t1.c_indicator$1(18);
      if (!t1)
        return;
      return new R.ScalarNode(contents, null, new R.Tag("!", 0), null);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_singleText_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      switch (this.ctx_2) {
        case 2:
        case 3:
          this.this_0.nb_singleMultiLine$1(this.indent_1);
          break;
        case 4:
        case 5:
          var t1 = this.this_0;
          t1.zeroOrMore$1(t1.get$nb_singleChar());
          break;
        default:
      }
      return true;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_ns_singleInLine_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.transaction$1(new V.Parser_nb_ns_singleInLine__closure(t1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_ns_singleInLine__closure: {
    "": "Closure:108;this_1",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_1;
      t1.zeroOrMore$1(new V.Parser_nb_ns_singleInLine___closure(t1));
      t2 = t1.peek$0();
      if (!(t2 === 32 || t2 === 9)) {
        t1 = t1.nb_singleChar$0();
        t1 = t1 != null && J.$eq(t1, false) !== true;
      } else
        t1 = false;
      return t1;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_ns_singleInLine___closure: {
    "": "Closure:108;this_2",
    call$0: [function() {
      var t1 = this.this_2;
      return t1.consume$1(t1.get$isSpace());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_singleNextLine_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = t1.peek$0();
      if (!(t2 === 32 || t2 === 9)) {
        t2 = t1.nb_singleChar$0();
        t2 = t2 != null && J.$eq(t2, false) !== true;
      } else
        t2 = false;
      if (!t2)
        return;
      t1.nb_ns_singleInLine$0();
      t1.or$1([new V.Parser_s_singleNextLine__closure(t1, this.indent_1), new V.Parser_s_singleNextLine__closure0(t1)]);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_singleNextLine__closure: {
    "": "Closure:108;this_2,indent_3",
    call$0: [function() {
      return this.this_2.s_singleNextLine$1(this.indent_3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_singleNextLine__closure0: {
    "": "Closure:108;this_4",
    call$0: [function() {
      var t1 = this.this_4;
      return t1.zeroOrMore$1(new V.Parser_s_singleNextLine___closure(t1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_singleNextLine___closure: {
    "": "Closure:108;this_5",
    call$0: [function() {
      var t1 = this.this_5;
      return t1.consume$1(t1.get$isSpace());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_singleMultiLine_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      return this.this_0.s_singleNextLine$1(this.indent_1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_singleMultiLine_closure0: {
    "": "Closure:108;this_2",
    call$0: [function() {
      var t1 = this.this_2;
      return t1.zeroOrMore$1(new V.Parser_nb_singleMultiLine__closure(t1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_singleMultiLine__closure: {
    "": "Closure:108;this_3",
    call$0: [function() {
      var t1 = this.this_3;
      return t1.consume$1(t1.get$isSpace());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_plain_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.captureString$1(new V.Parser_ns_plain__closure(t1, this.indent_1, this.ctx_2));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_plain__closure: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      var t1 = this.ctx_5;
      switch (t1) {
        case 2:
        case 3:
          return this.this_3.ns_plainMultiLine$2(this.indent_4, t1);
        case 4:
        case 5:
          return this.this_3.ns_plainOneLine$1(t1);
        default:
          throw H.wrapException("invalid context \"" + H.S(t1) + "\"");
      }
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_ns_plainInLine_closure: {
    "": "Closure:108;this_0,ctx_1",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.transaction$1(new V.Parser_nb_ns_plainInLine__closure(t1, this.ctx_1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_ns_plainInLine__closure: {
    "": "Closure:108;this_2,ctx_3",
    call$0: [function() {
      var t1 = this.this_2;
      t1.zeroOrMore$1(new V.Parser_nb_ns_plainInLine___closure(t1));
      return t1.ns_plainChar$1(this.ctx_3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_nb_ns_plainInLine___closure: {
    "": "Closure:108;this_4",
    call$0: [function() {
      var t1 = this.this_4;
      return t1.consume$1(t1.get$isSpace());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_ns_plainNextLine_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_0;
      t2 = t1.s_flowFolded$1(this.indent_1);
      if (!(t2 != null && J.$eq(t2, false) !== true))
        return false;
      t2 = t1.c_forbidden$0();
      if (t2)
        return false;
      t2 = this.ctx_2;
      t3 = t1.ns_plainChar$1(t2);
      if (!t3)
        return false;
      t1.nb_ns_plainInLine$1(t2);
      return true;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_plainMultiLine_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      return this.this_0.s_ns_plainNextLine$2(this.indent_1, this.ctx_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_flowSequence_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1, t2, t3, $content;
      t1 = this.this_0;
      t2 = t1.c_indicator$1(8);
      if (!t2)
        return;
      t2 = this.indent_1;
      t3 = this.ctx_2;
      new V.Parser_c_flowSequence__closure(t1, t2, t3).call$0();
      $content = new V.Parser_c_flowSequence__closure0(t1, t2, t3).call$0();
      t1 = t1.c_indicator$1(9);
      if (!t1)
        return;
      return new R.SequenceNode(P.List_List$from($content, true, R.Node0), new R.Tag("?", 1), null);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_flowSequence__closure: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      return this.this_3.s_separate$2(this.indent_4, this.ctx_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_flowSequence__closure0: {
    "": "Closure:108;this_6,indent_7,ctx_8",
    call$0: [function() {
      var t1 = this.this_6;
      return t1.ns_s_flowSeqEntries$2(this.indent_7, t1.inFlow$1(this.ctx_8));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_s_flowSeqEntries_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      return this.this_0.s_separate$2(this.indent_1, this.ctx_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_s_flowSeqEntries_closure0: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      return this.this_3.s_separate$2(this.indent_4, this.ctx_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_s_flowSeqEntries_closure1: {
    "": "Closure:108;this_6,indent_7,ctx_8",
    call$0: [function() {
      return this.this_6.ns_s_flowSeqEntries$2(this.indent_7, this.ctx_8);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowSeqEntry_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      return this.this_0.ns_flowPair$2(this.indent_1, this.ctx_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowSeqEntry_closure0: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      return this.this_3.ns_flowNode$2(this.indent_4, this.ctx_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_flowMapping_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      return this.this_0.s_separate$2(this.indent_1, this.ctx_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_flowMapping_closure0: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      var t1 = this.this_3;
      return t1.ns_s_flowMapEntries$2(this.indent_4, t1.inFlow$1(this.ctx_5));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_s_flowMapEntries_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      return this.this_0.s_separate$2(this.indent_1, this.ctx_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_s_flowMapEntries_closure0: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      return this.this_3.s_separate$2(this.indent_4, this.ctx_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowMapEntry_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.transaction$1(new V.Parser_ns_flowMapEntry__closure(t1, this.indent_1, this.ctx_2));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowMapEntry__closure: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      var t1, t2, t3, t4;
      t1 = this.this_3;
      t2 = t1.c_indicator$1(5);
      if (!t2)
        return false;
      t2 = this.indent_4;
      t3 = this.ctx_5;
      t4 = t1.s_separate$2(t2, t3);
      if (!(t4 != null && J.$eq(t4, false) !== true))
        return false;
      return t1.ns_flowMapExplicitEntry$2(t2, t3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowMapEntry_closure0: {
    "": "Closure:108;this_6,indent_7,ctx_8",
    call$0: [function() {
      return this.this_6.ns_flowMapImplicitEntry$2(this.indent_7, this.ctx_8);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowMapExplicitEntry_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      return this.this_0.ns_flowMapImplicitEntry$2(this.indent_1, this.ctx_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowMapExplicitEntry_closure0: {
    "": "Closure:108;this_3",
    call$0: [function() {
      return H.setRuntimeTypeInfo(new V._Pair(new R.ScalarNode("", null, new R.Tag("?", 0), null), new R.ScalarNode("", null, new R.Tag("?", 0), null)), [R.Node0, R.Node0]);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowMapImplicitEntry_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      return this.this_0.ns_flowMapYamlKeyEntry$2(this.indent_1, this.ctx_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowMapImplicitEntry_closure0: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      return this.this_3.c_ns_flowMapEmptyKeyEntry$2(this.indent_4, this.ctx_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowMapImplicitEntry_closure1: {
    "": "Closure:108;this_6,indent_7,ctx_8",
    call$0: [function() {
      return this.this_6.c_ns_flowMapJsonKeyEntry$2(this.indent_7, this.ctx_8);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowMapYamlKeyEntry_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.transaction$1(new V.Parser_ns_flowMapYamlKeyEntry__closure(t1, this.indent_1, this.ctx_2));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowMapYamlKeyEntry__closure: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_3;
      t2 = this.indent_4;
      t3 = this.ctx_5;
      new V.Parser_ns_flowMapYamlKeyEntry___closure(t1, t2, t3).call$0();
      return t1.c_ns_flowMapSeparateValue$2(t2, t3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowMapYamlKeyEntry___closure: {
    "": "Closure:108;this_6,indent_7,ctx_8",
    call$0: [function() {
      return this.this_6.s_separate$2(this.indent_7, this.ctx_8);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_ns_flowMapSeparateValue_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = t1.c_indicator$1(6);
      if (!t2)
        return;
      t2 = this.ctx_2;
      if (t1.isPlainSafe$2(t2, t1.peek$0()))
        return;
      return t1.or$1([new V.Parser_c_ns_flowMapSeparateValue__closure(t1, this.indent_1, t2), t1.get$e_node()]);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_ns_flowMapSeparateValue__closure: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      var t1 = this.this_3;
      return t1.transaction$1(new V.Parser_c_ns_flowMapSeparateValue___closure(t1, this.indent_4, this.ctx_5));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_ns_flowMapSeparateValue___closure: {
    "": "Closure:108;this_6,indent_7,ctx_8",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_6;
      t2 = this.indent_7;
      t3 = this.ctx_8;
      if (t1.s_separate$2(t2, t3) !== true)
        return;
      return t1.ns_flowNode$2(t2, t3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_ns_flowMapJsonKeyEntry_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.transaction$1(new V.Parser_c_ns_flowMapJsonKeyEntry__closure(t1, this.indent_1, this.ctx_2));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_ns_flowMapJsonKeyEntry__closure: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_3;
      t2 = this.indent_4;
      t3 = this.ctx_5;
      new V.Parser_c_ns_flowMapJsonKeyEntry___closure(t1, t2, t3).call$0();
      return t1.c_ns_flowMapAdjacentValue$2(t2, t3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_ns_flowMapJsonKeyEntry___closure: {
    "": "Closure:108;this_6,indent_7,ctx_8",
    call$0: [function() {
      return this.this_6.s_separate$2(this.indent_7, this.ctx_8);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_ns_flowMapAdjacentValue_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.transaction$1(new V.Parser_c_ns_flowMapAdjacentValue__closure(t1, this.indent_1, this.ctx_2));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_ns_flowMapAdjacentValue__closure: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_3;
      t2 = this.indent_4;
      t3 = this.ctx_5;
      new V.Parser_c_ns_flowMapAdjacentValue___closure(t1, t2, t3).call$0();
      return t1.ns_flowNode$2(t2, t3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_ns_flowMapAdjacentValue___closure: {
    "": "Closure:108;this_6,indent_7,ctx_8",
    call$0: [function() {
      return this.this_6.s_separate$2(this.indent_7, this.ctx_8);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowPair_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.transaction$1(new V.Parser_ns_flowPair__closure(t1, this.indent_1, this.ctx_2));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowPair__closure: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      var t1, t2, t3, t4;
      t1 = this.this_3;
      t2 = t1.c_indicator$1(5);
      if (!t2)
        return;
      t2 = this.indent_4;
      t3 = this.ctx_5;
      t4 = t1.s_separate$2(t2, t3);
      if (!(t4 != null && J.$eq(t4, false) !== true))
        return;
      return t1.ns_flowMapExplicitEntry$2(t2, t3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowPair_closure0: {
    "": "Closure:108;this_6,indent_7,ctx_8",
    call$0: [function() {
      return this.this_6.ns_flowPairEntry$2(this.indent_7, this.ctx_8);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowPairEntry_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      return this.this_0.ns_flowPairYamlKeyEntry$2(this.indent_1, this.ctx_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowPairEntry_closure0: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      return this.this_3.c_ns_flowMapEmptyKeyEntry$2(this.indent_4, this.ctx_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowPairEntry_closure1: {
    "": "Closure:108;this_6,indent_7,ctx_8",
    call$0: [function() {
      return this.this_6.c_ns_flowPairJsonKeyEntry$2(this.indent_7, this.ctx_8);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowPairYamlKeyEntry_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1, key, value;
      t1 = this.this_0;
      key = t1.ns_s_implicitYamlKey$1(5);
      if (!(key != null && J.$eq(key, false) !== true))
        return;
      value = t1.c_ns_flowMapSeparateValue$2(this.indent_1, this.ctx_2);
      if (!(value != null && J.$eq(value, false) !== true))
        return;
      return H.setRuntimeTypeInfo(new V._Pair(key, value), [R.Node0, R.Node0]);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_ns_flowPairJsonKeyEntry_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1, key, value;
      t1 = this.this_0;
      key = t1.c_s_implicitJsonKey$1(5);
      if (!(key != null && J.$eq(key, false) !== true))
        return;
      value = t1.c_ns_flowMapAdjacentValue$2(this.indent_1, this.ctx_2);
      if (!(value != null && J.$eq(value, false) !== true))
        return;
      return H.setRuntimeTypeInfo(new V._Pair(key, value), [R.Node0, R.Node0]);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_s_implicitYamlKey_closure: {
    "": "Closure:108;this_0,ctx_1",
    call$0: [function() {
      var t1, node;
      t1 = this.this_0;
      node = t1.ns_flowYamlNode$2(null, this.ctx_1);
      if (!(node != null && J.$eq(node, false) !== true))
        return;
      t1.get$s_separateInLine().call$0();
      return node;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_s_implicitJsonKey_closure: {
    "": "Closure:108;this_0,ctx_1",
    call$0: [function() {
      var t1, node;
      t1 = this.this_0;
      node = t1.c_flowJsonNode$2(null, this.ctx_1);
      if (!(node != null && J.$eq(node, false) !== true))
        return;
      t1.get$s_separateInLine().call$0();
      return node;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_flowJsonContent_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      return this.this_0.c_flowSequence$2(this.indent_1, this.ctx_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_flowJsonContent_closure0: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      return this.this_3.c_flowMapping$2(this.indent_4, this.ctx_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_flowJsonContent_closure1: {
    "": "Closure:108;this_6,indent_7,ctx_8",
    call$0: [function() {
      return this.this_6.c_singleQuoted$2(this.indent_7, this.ctx_8);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_flowJsonContent_closure2: {
    "": "Closure:108;this_9,indent_10,ctx_11",
    call$0: [function() {
      return this.this_9.c_doubleQuoted$2(this.indent_10, this.ctx_11);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowContent_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      return this.this_0.ns_flowYamlContent$2(this.indent_1, this.ctx_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowContent_closure0: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      return this.this_3.c_flowJsonContent$2(this.indent_4, this.ctx_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowYamlNode_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      return this.this_0.ns_flowYamlContent$2(this.indent_1, this.ctx_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowYamlNode_closure0: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      var t1, t2, t3, props;
      t1 = this.this_3;
      t2 = this.indent_4;
      t3 = this.ctx_5;
      props = t1.c_ns_properties$2(t2, t3);
      if (!(props != null && true))
        return;
      return t1.addProps$2(t1.or$1([new V.Parser_ns_flowYamlNode__closure(t1, t2, t3), t1.get$e_scalar()]), props);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowYamlNode__closure: {
    "": "Closure:108;this_6,indent_7,ctx_8",
    call$0: [function() {
      var t1 = this.this_6;
      return t1.transaction$1(new V.Parser_ns_flowYamlNode___closure(t1, this.indent_7, this.ctx_8));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowYamlNode___closure: {
    "": "Closure:108;this_9,indent_10,ctx_11",
    call$0: [function() {
      var t1, t2, t3, t4;
      t1 = this.this_9;
      t2 = this.indent_10;
      t3 = this.ctx_11;
      t4 = t1.s_separate$2(t2, t3);
      if (!(t4 != null && J.$eq(t4, false) !== true))
        return;
      return t1.ns_flowYamlContent$2(t2, t3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_flowJsonNode_closure: {
    "": "Closure:108;this_1,indent_2,ctx_3",
    call$0: [function() {
      var t1, t2, t3, t4;
      t1 = {};
      t1.props_0 = null;
      t2 = this.this_1;
      t3 = this.indent_2;
      t4 = this.ctx_3;
      new V.Parser_c_flowJsonNode__closure(t1, t2, t3, t4).call$0();
      return t2.addProps$2(t2.c_flowJsonContent$2(t3, t4), t1.props_0);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_flowJsonNode__closure: {
    "": "Closure:108;box_0,this_4,indent_5,ctx_6",
    call$0: [function() {
      var t1 = this.this_4;
      return t1.transaction$1(new V.Parser_c_flowJsonNode___closure(this.box_0, t1, this.indent_5, this.ctx_6));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_flowJsonNode___closure: {
    "": "Closure:108;box_0,this_7,indent_8,ctx_9",
    call$0: [function() {
      var t1, t2, t3, props;
      t1 = this.this_7;
      t2 = this.indent_8;
      t3 = this.ctx_9;
      props = t1.c_ns_properties$2(t2, t3);
      this.box_0.props_0 = props;
      if (!(props != null && true))
        return;
      return t1.s_separate$2(t2, t3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowNode_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      return this.this_0.ns_flowContent$2(this.indent_1, this.ctx_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowNode_closure0: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      var t1 = this.this_3;
      return t1.transaction$1(new V.Parser_ns_flowNode__closure(t1, this.indent_4, this.ctx_5));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowNode__closure: {
    "": "Closure:108;this_6,indent_7,ctx_8",
    call$0: [function() {
      var t1, t2, t3, props;
      t1 = this.this_6;
      t2 = this.indent_7;
      t3 = this.ctx_8;
      props = t1.c_ns_properties$2(t2, t3);
      if (!(props != null && true))
        return;
      return t1.addProps$2(t1.or$1([new V.Parser_ns_flowNode___closure(t1, t2, t3), t1.get$e_scalar()]), props);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowNode___closure: {
    "": "Closure:108;this_9,indent_10,ctx_11",
    call$0: [function() {
      var t1 = this.this_9;
      return t1.transaction$1(new V.Parser_ns_flowNode____closure(t1, this.indent_10, this.ctx_11));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_flowNode____closure: {
    "": "Closure:108;this_12,indent_13,ctx_14",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_12;
      t2 = this.indent_13;
      t3 = this.ctx_14;
      return t1.s_separate$2(t2, t3) === true ? t1.ns_flowContent$2(t2, t3) : null;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_b_blockHeader_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      var t1, indentation, chomping;
      t1 = this.this_0;
      indentation = t1.c_indentationIndicator$0();
      chomping = t1.c_chompingIndicator$0();
      if (!(indentation != null && true))
        indentation = t1.c_indentationIndicator$0();
      t1 = t1.s_b_comment$0();
      if (!t1)
        return;
      return new V._BlockHeader(indentation, chomping);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_stripEmpty_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = this.indent_1;
      t1.zeroOrMore$1(new V.Parser_l_stripEmpty__closure(t1, t2));
      new V.Parser_l_stripEmpty__closure0(t1, t2).call$0();
      return true;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_stripEmpty__closure: {
    "": "Closure:108;this_2,indent_3",
    call$0: [function() {
      var t1 = this.this_2;
      return t1.transaction$1(new V.Parser_l_stripEmpty___closure(t1, this.indent_3));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_stripEmpty___closure: {
    "": "Closure:108;this_4,indent_5",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_4;
      t2 = t1.s_indentLessThan$1(this.indent_5 + 1);
      if (!t2)
        return false;
      return t1.b_nonContent$0();
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_stripEmpty__closure0: {
    "": "Closure:108;this_6,indent_7",
    call$0: [function() {
      return this.this_6.l_trailComments$1(this.indent_7);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_keepEmpty_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.captureAs$2("\n", new V.Parser_l_keepEmpty__closure0(t1, this.indent_1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_keepEmpty__closure0: {
    "": "Closure:108;this_2,indent_3",
    call$0: [function() {
      return this.this_2.l_empty$2(this.indent_3, 1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_keepEmpty_closure0: {
    "": "Closure:108;this_4,indent_5",
    call$0: [function() {
      var t1 = this.this_4;
      return t1.captureAs$2("", new V.Parser_l_keepEmpty__closure(t1, this.indent_5));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_keepEmpty__closure: {
    "": "Closure:108;this_6,indent_7",
    call$0: [function() {
      return this.this_6.l_trailComments$1(this.indent_7);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_trailComments_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = t1.s_indentLessThan$1(this.indent_1 + 1);
      if (!t2)
        return false;
      t2 = t1.c_nb_commentText$0();
      if (!t2)
        return false;
      t2 = t1._pos === t1._len || t1.b_nonContent$0() === true;
      if (!t2)
        return false;
      t1.zeroOrMore$1(t1.get$l_comment());
      return true;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_l_literal_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2, header, additionalIndent, $content;
      t1 = this.this_0;
      t2 = t1.c_indicator$1(16);
      if (!t2)
        return;
      header = t1.c_b_blockHeader$0();
      if (!(header != null && J.$eq(header, false) !== true))
        return;
      t2 = this.indent_1;
      additionalIndent = t1.blockScalarAdditionalIndentation$2(header, t2);
      if (typeof additionalIndent !== "number")
        return H.iae(additionalIndent);
      $content = t1.l_literalContent$2(t2 + additionalIndent, header.get$chomping());
      if (!($content != null && true))
        return;
      return new R.ScalarNode($content, null, new R.Tag("!", 0), null);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_nb_literalText_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = this.indent_1;
      t1.zeroOrMore$1(new V.Parser_l_nb_literalText__closure(t1, t2));
      t2 = t1.captureAs$2("", new V.Parser_l_nb_literalText__closure0(t1, t2));
      if (!(t2 != null && J.$eq(t2, false) !== true))
        return false;
      return t1.oneOrMore$1(new V.Parser_l_nb_literalText__closure1(t1)) != null && true;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_nb_literalText__closure: {
    "": "Closure:108;this_2,indent_3",
    call$0: [function() {
      var t1 = this.this_2;
      return t1.captureAs$2("\n", new V.Parser_l_nb_literalText___closure(t1, this.indent_3));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_nb_literalText___closure: {
    "": "Closure:108;this_4,indent_5",
    call$0: [function() {
      return this.this_4.l_empty$2(this.indent_5, 1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_nb_literalText__closure0: {
    "": "Closure:108;this_6,indent_7",
    call$0: [function() {
      return this.this_6.s_indent$1(this.indent_7);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_nb_literalText__closure1: {
    "": "Closure:108;this_8",
    call$0: [function() {
      var t1 = this.this_8;
      return t1.consume$1(t1.get$isNonBreak());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_b_nb_literalNext_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = t1.b_asLineFeed$0();
      if (!(t2 != null && J.$eq(t2, false) !== true))
        return false;
      return t1.l_nb_literalText$1(this.indent_1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_literalContent_closure: {
    "": "Closure:108;this_0,indent_1,chomping_2",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_0;
      t2 = this.indent_1;
      t3 = this.chomping_2;
      t1.transaction$1(new V.Parser_l_literalContent__closure(t1, t2, t3));
      t1.l_chompedEmpty$2(t2, t3);
      return true;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_literalContent__closure: {
    "": "Closure:108;this_3,indent_4,chomping_5",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_3;
      t2 = this.indent_4;
      t3 = t1.l_nb_literalText$1(t2);
      if (!(t3 != null && J.$eq(t3, false) !== true))
        return false;
      t1.zeroOrMore$1(new V.Parser_l_literalContent___closure(t1, t2));
      return t1.b_chompedLast$1(this.chomping_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_literalContent___closure: {
    "": "Closure:108;this_6,indent_7",
    call$0: [function() {
      return this.this_6.b_nb_literalNext$1(this.indent_7);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_l_folded_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2, header, additionalIndent, $content;
      t1 = this.this_0;
      t2 = t1.c_indicator$1(17);
      if (!t2)
        return;
      header = t1.c_b_blockHeader$0();
      if (!(header != null && J.$eq(header, false) !== true))
        return;
      t2 = this.indent_1;
      additionalIndent = t1.blockScalarAdditionalIndentation$2(header, t2);
      if (typeof additionalIndent !== "number")
        return H.iae(additionalIndent);
      $content = t1.l_foldedContent$2(t2 + additionalIndent, header.get$chomping());
      if (!($content != null && true))
        return;
      return new R.ScalarNode($content, null, new R.Tag("!", 0), null);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_nb_foldedText_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = t1.captureAs$2("", new V.Parser_s_nb_foldedText__closure(t1, this.indent_1));
      if (!(t2 != null && J.$eq(t2, false) !== true))
        return false;
      t2 = t1.consume$1(t1.get$isNonSpace());
      if (!t2)
        return false;
      t1.zeroOrMore$1(new V.Parser_s_nb_foldedText__closure0(t1));
      return true;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_nb_foldedText__closure: {
    "": "Closure:108;this_2,indent_3",
    call$0: [function() {
      return this.this_2.s_indent$1(this.indent_3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_nb_foldedText__closure0: {
    "": "Closure:108;this_4",
    call$0: [function() {
      var t1 = this.this_4;
      return t1.consume$1(t1.get$isNonBreak());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_nb_foldedLines_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.transaction$1(new V.Parser_l_nb_foldedLines__closure(t1, this.indent_1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_nb_foldedLines__closure: {
    "": "Closure:108;this_2,indent_3",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_2;
      t2 = this.indent_3;
      t3 = t1.b_l_folded$2(t2, 1);
      if (!(t3 != null && J.$eq(t3, false) !== true))
        return false;
      return t1.s_nb_foldedText$1(t2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_nb_spacedText_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = t1.captureAs$2("", new V.Parser_s_nb_spacedText__closure(t1, this.indent_1));
      if (!(t2 != null && J.$eq(t2, false) !== true))
        return false;
      t2 = t1.consume$1(t1.get$isSpace());
      if (!t2)
        return false;
      t1.zeroOrMore$1(new V.Parser_s_nb_spacedText__closure0(t1));
      return true;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_nb_spacedText__closure: {
    "": "Closure:108;this_2,indent_3",
    call$0: [function() {
      return this.this_2.s_indent$1(this.indent_3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_nb_spacedText__closure0: {
    "": "Closure:108;this_4",
    call$0: [function() {
      var t1 = this.this_4;
      return t1.consume$1(t1.get$isNonBreak());
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_b_l_spaced_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.captureAs$2("\n", new V.Parser_b_l_spaced__closure(t1, this.indent_1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_b_l_spaced__closure: {
    "": "Closure:108;this_2,indent_3",
    call$0: [function() {
      return this.this_2.l_empty$2(this.indent_3, 1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_nb_spacedLines_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.transaction$1(new V.Parser_l_nb_spacedLines__closure(t1, this.indent_1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_nb_spacedLines__closure: {
    "": "Closure:108;this_2,indent_3",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_2;
      t2 = this.indent_3;
      t3 = t1.b_l_spaced$1(t2);
      if (!t3)
        return false;
      return t1.s_nb_spacedText$1(t2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_nb_sameLines_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = this.indent_1;
      t1.zeroOrMore$1(new V.Parser_l_nb_sameLines__closure(t1, t2));
      return t1.or$1([new V.Parser_l_nb_sameLines__closure0(t1, t2), new V.Parser_l_nb_sameLines__closure1(t1, t2)]);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_nb_sameLines__closure: {
    "": "Closure:108;this_2,indent_3",
    call$0: [function() {
      var t1 = this.this_2;
      return t1.captureAs$2("\n", new V.Parser_l_nb_sameLines___closure(t1, this.indent_3));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_nb_sameLines___closure: {
    "": "Closure:108;this_4,indent_5",
    call$0: [function() {
      return this.this_4.l_empty$2(this.indent_5, 1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_nb_sameLines__closure0: {
    "": "Closure:108;this_6,indent_7",
    call$0: [function() {
      return this.this_6.l_nb_foldedLines$1(this.indent_7);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_nb_sameLines__closure1: {
    "": "Closure:108;this_8,indent_9",
    call$0: [function() {
      return this.this_8.l_nb_spacedLines$1(this.indent_9);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_nb_diffLines_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.transaction$1(new V.Parser_l_nb_diffLines__closure(t1, this.indent_1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_nb_diffLines__closure: {
    "": "Closure:108;this_2,indent_3",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_2;
      t2 = t1.b_asLineFeed$0();
      if (!(t2 != null && J.$eq(t2, false) !== true))
        return false;
      return t1.l_nb_sameLines$1(this.indent_3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_foldedContent_closure: {
    "": "Closure:108;this_0,indent_1,chomping_2",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_0;
      t2 = this.indent_1;
      t3 = this.chomping_2;
      t1.transaction$1(new V.Parser_l_foldedContent__closure(t1, t2, t3));
      t1.l_chompedEmpty$2(t2, t3);
      return true;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_foldedContent__closure: {
    "": "Closure:108;this_3,indent_4,chomping_5",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_3;
      t2 = t1.l_nb_diffLines$1(this.indent_4);
      if (!t2)
        return false;
      return t1.b_chompedLast$1(this.chomping_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_blockSequence_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2, additionalIndent, $content;
      t1 = this.this_0;
      t2 = this.indent_1;
      additionalIndent = t1.countIndentation$0() - t2;
      if (additionalIndent <= 0)
        return;
      $content = t1.oneOrMore$1(new V.Parser_l_blockSequence__closure(t1, t2, additionalIndent));
      if (!($content != null && true))
        return;
      return new R.SequenceNode($content, new R.Tag("?", 1), null);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_blockSequence__closure: {
    "": "Closure:108;this_2,indent_3,additionalIndent_4",
    call$0: [function() {
      var t1 = this.this_2;
      return t1.transaction$1(new V.Parser_l_blockSequence___closure(t1, this.indent_3, this.additionalIndent_4));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_blockSequence___closure: {
    "": "Closure:108;this_5,indent_6,additionalIndent_7",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_5;
      t2 = this.indent_6 + this.additionalIndent_7;
      t3 = t1.s_indent$1(t2);
      if (!(t3 != null && J.$eq(t3, false) !== true))
        return;
      return t1.c_l_blockSeqEntry$1(t2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_l_blockSeqEntry_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2, t3, t4;
      t1 = this.this_0;
      t2 = t1.c_indicator$1(4);
      if (!t2)
        return;
      t2 = t1.peek$0();
      t3 = t2 === 9;
      if (!t3)
        if (t2 !== 10)
          if (t2 !== 13)
            if (!(t2 >= 32 && t2 <= 126))
              if (t2 !== 133)
                if (!(t2 >= 160 && t2 <= 55295))
                  if (!(t2 >= 57344 && t2 <= 65533))
                    t4 = t2 >= 65536 && t2 <= 1114111;
                  else
                    t4 = true;
                else
                  t4 = true;
              else
                t4 = true;
            else
              t4 = true;
          else
            t4 = true;
        else
          t4 = true;
      else
        t4 = true;
      if (t4)
        t4 = !(t2 === 10 || t2 === 13);
      else
        t4 = false;
      if (t4) {
        t3 = !(t2 === 32 || t3);
        t2 = t3;
      } else
        t2 = false;
      if (t2)
        return;
      return t1.s_l_blockIndented$2(this.indent_1, 1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockIndented_closure: {
    "": "Closure:108;this_0,indent_1,additionalIndent_2",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.transaction$1(new V.Parser_s_l_blockIndented__closure(t1, this.indent_1, this.additionalIndent_2));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockIndented__closure: {
    "": "Closure:108;this_3,indent_4,additionalIndent_5",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_3;
      t2 = this.additionalIndent_5;
      t3 = t1.s_indent$1(t2);
      if (!(t3 != null && J.$eq(t3, false) !== true))
        return;
      t3 = this.indent_4;
      return t1.or$1([new V.Parser_s_l_blockIndented___closure(t1, t3, t2), new V.Parser_s_l_blockIndented___closure0(t1, t3, t2)]);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockIndented___closure: {
    "": "Closure:108;this_6,indent_7,additionalIndent_8",
    call$0: [function() {
      return this.this_6.ns_l_compactSequence$1(this.indent_7 + 1 + this.additionalIndent_8);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockIndented___closure0: {
    "": "Closure:108;this_9,indent_10,additionalIndent_11",
    call$0: [function() {
      return this.this_9.ns_l_compactMapping$1(this.indent_10 + 1 + this.additionalIndent_11);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockIndented_closure0: {
    "": "Closure:108;this_12,indent_13,ctx_14",
    call$0: [function() {
      return this.this_12.s_l_blockNode$2(this.indent_13, this.ctx_14);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockIndented_closure1: {
    "": "Closure:108;this_15",
    call$0: [function() {
      return this.this_15.s_l_comments$0() ? new R.ScalarNode("", null, new R.Tag("?", 0), null) : null;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_l_compactSequence_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2, first, $content;
      t1 = this.this_0;
      t2 = this.indent_1;
      first = t1.c_l_blockSeqEntry$1(t2);
      if (!(first != null && J.$eq(first, false) !== true))
        return;
      $content = t1.zeroOrMore$1(new V.Parser_ns_l_compactSequence__closure(t1, t2));
      J.insert$2$ax($content, 0, first);
      return new R.SequenceNode($content, new R.Tag("?", 1), null);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_l_compactSequence__closure: {
    "": "Closure:108;this_2,indent_3",
    call$0: [function() {
      var t1 = this.this_2;
      return t1.transaction$1(new V.Parser_ns_l_compactSequence___closure(t1, this.indent_3));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_l_compactSequence___closure: {
    "": "Closure:108;this_4,indent_5",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_4;
      t2 = this.indent_5;
      t3 = t1.s_indent$1(t2);
      if (!(t3 != null && J.$eq(t3, false) !== true))
        return;
      return t1.c_l_blockSeqEntry$1(t2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_blockMapping_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2, additionalIndent, pairs;
      t1 = this.this_0;
      t2 = this.indent_1;
      additionalIndent = t1.countIndentation$0() - t2;
      if (additionalIndent <= 0)
        return;
      pairs = t1.oneOrMore$1(new V.Parser_l_blockMapping__closure(t1, t2, additionalIndent));
      if (!(pairs != null && true))
        return;
      return t1.map$1(0, pairs);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_blockMapping__closure: {
    "": "Closure:108;this_2,indent_3,additionalIndent_4",
    call$0: [function() {
      var t1 = this.this_2;
      return t1.transaction$1(new V.Parser_l_blockMapping___closure(t1, this.indent_3, this.additionalIndent_4));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_blockMapping___closure: {
    "": "Closure:108;this_5,indent_6,additionalIndent_7",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_5;
      t2 = this.indent_6 + this.additionalIndent_7;
      t3 = t1.s_indent$1(t2);
      if (!(t3 != null && J.$eq(t3, false) !== true))
        return;
      return t1.ns_l_blockMapEntry$1(t2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_l_blockMapEntry_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      return this.this_0.c_l_blockMapExplicitEntry$1(this.indent_1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_l_blockMapEntry_closure0: {
    "": "Closure:108;this_2,indent_3",
    call$0: [function() {
      return this.this_2.ns_l_blockMapImplicitEntry$1(this.indent_3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_l_blockMapExplicitEntry_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      return this.this_0.l_blockMapExplicitValue$1(this.indent_1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_l_blockMapExplicitKey_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = t1.c_indicator$1(5);
      if (!t2)
        return;
      return t1.s_l_blockIndented$2(this.indent_1, 0);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_blockMapExplicitValue_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_0;
      t2 = this.indent_1;
      t3 = t1.s_indent$1(t2);
      if (!(t3 != null && J.$eq(t3, false) !== true))
        return;
      t3 = t1.c_indicator$1(6);
      if (!t3)
        return;
      return t1.s_l_blockIndented$2(t2, 0);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_l_blockMapImplicitEntry_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, key, value;
      t1 = this.this_0;
      key = t1.or$1([t1.get$ns_s_blockMapImplicitKey(), t1.get$e_node()]);
      value = t1.c_l_blockMapImplicitValue$1(this.indent_1);
      return value != null && J.$eq(value, false) !== true ? H.setRuntimeTypeInfo(new V._Pair(key, value), [R.Node0, R.Node0]) : null;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_s_blockMapImplicitKey_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.or$1([new V.Parser_ns_s_blockMapImplicitKey__closure(t1), new V.Parser_ns_s_blockMapImplicitKey__closure0(t1)]);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_s_blockMapImplicitKey__closure: {
    "": "Closure:108;this_1",
    call$0: [function() {
      return this.this_1.c_s_implicitJsonKey$1(4);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_s_blockMapImplicitKey__closure0: {
    "": "Closure:108;this_2",
    call$0: [function() {
      return this.this_2.ns_s_implicitYamlKey$1(4);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_l_blockMapImplicitValue_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1 = this.this_0;
      return t1.transaction$1(new V.Parser_c_l_blockMapImplicitValue__closure(t1, this.indent_1));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_l_blockMapImplicitValue__closure: {
    "": "Closure:108;this_2,indent_3",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_2;
      t2 = t1.c_indicator$1(6);
      if (!t2)
        return;
      return t1.or$1([new V.Parser_c_l_blockMapImplicitValue___closure(t1, this.indent_3), new V.Parser_c_l_blockMapImplicitValue___closure0(t1)]);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_l_blockMapImplicitValue___closure: {
    "": "Closure:108;this_4,indent_5",
    call$0: [function() {
      return this.this_4.s_l_blockNode$2(this.indent_5, 0);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_l_blockMapImplicitValue___closure0: {
    "": "Closure:108;this_6",
    call$0: [function() {
      return this.this_6.s_l_comments$0() ? new R.ScalarNode("", null, new R.Tag("?", 0), null) : null;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_l_compactMapping_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2, first, pairs;
      t1 = this.this_0;
      t2 = this.indent_1;
      first = t1.ns_l_blockMapEntry$1(t2);
      if (!(first != null && J.$eq(first, false) !== true))
        return;
      pairs = t1.zeroOrMore$1(new V.Parser_ns_l_compactMapping__closure(t1, t2));
      J.insert$2$ax(pairs, 0, first);
      return t1.map$1(0, pairs);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_l_compactMapping__closure: {
    "": "Closure:108;this_2,indent_3",
    call$0: [function() {
      var t1 = this.this_2;
      return t1.transaction$1(new V.Parser_ns_l_compactMapping___closure(t1, this.indent_3));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_ns_l_compactMapping___closure: {
    "": "Closure:108;this_4,indent_5",
    call$0: [function() {
      var t1, t2, t3;
      t1 = this.this_4;
      t2 = this.indent_5;
      t3 = t1.s_indent$1(t2);
      if (!(t3 != null && J.$eq(t3, false) !== true))
        return;
      return t1.ns_l_blockMapEntry$1(t2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockNode_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      return this.this_0.s_l_blockInBlock$2(this.indent_1, this.ctx_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockNode_closure0: {
    "": "Closure:108;this_3,indent_4",
    call$0: [function() {
      return this.this_3.s_l_flowInBlock$1(this.indent_4);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_flowInBlock_closure: {
    "": "Closure:108;this_0,indent_1",
    call$0: [function() {
      var t1, t2, t3, node;
      t1 = this.this_0;
      t2 = this.indent_1 + 1;
      t3 = t1.s_separate$2(t2, 2);
      if (!(t3 != null && J.$eq(t3, false) !== true))
        return;
      node = t1.ns_flowNode$2(t2, 2);
      if (!(node != null && J.$eq(node, false) !== true))
        return;
      t1 = t1.s_l_comments$0();
      if (!t1)
        return;
      return node;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockInBlock_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      return this.this_0.s_l_blockScalar$2(this.indent_1, this.ctx_2);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockInBlock_closure0: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      return this.this_3.s_l_blockCollection$2(this.indent_4, this.ctx_5);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockScalar_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1, t2, t3, t4, props, node;
      t1 = this.this_0;
      t2 = this.indent_1;
      t3 = this.ctx_2;
      t4 = t1.s_separate$2(t2 + 1, t3);
      if (!(t4 != null && J.$eq(t4, false) !== true))
        return;
      props = t1.transaction$1(new V.Parser_s_l_blockScalar__closure(t1, t2, t3));
      node = t1.or$1([new V.Parser_s_l_blockScalar__closure0(t1, t2), new V.Parser_s_l_blockScalar__closure1(t1, t2)]);
      if (!(node != null && J.$eq(node, false) !== true))
        return;
      return t1.addProps$2(node, props);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockScalar__closure: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      var t1, t2, t3, innerProps;
      t1 = this.this_3;
      t2 = this.indent_4 + 1;
      t3 = this.ctx_5;
      innerProps = t1.c_ns_properties$2(t2, t3);
      if (!(innerProps != null && true))
        return;
      t1 = t1.s_separate$2(t2, t3);
      if (!(t1 != null && J.$eq(t1, false) !== true))
        return;
      return innerProps;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockScalar__closure0: {
    "": "Closure:108;this_6,indent_7",
    call$0: [function() {
      return this.this_6.c_l_literal$1(this.indent_7);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockScalar__closure1: {
    "": "Closure:108;this_8,indent_9",
    call$0: [function() {
      return this.this_8.c_l_folded$1(this.indent_9);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockCollection_closure: {
    "": "Closure:108;this_0,indent_1,ctx_2",
    call$0: [function() {
      var t1, t2, t3, t4;
      t1 = this.this_0;
      t2 = this.indent_1;
      t3 = this.ctx_2;
      t1.transaction$1(new V.Parser_s_l_blockCollection__closure(t1, t2, t3));
      t4 = t1.s_l_comments$0();
      if (!t4)
        return;
      return t1.or$1([new V.Parser_s_l_blockCollection__closure0(t1, t2, t3), new V.Parser_s_l_blockCollection__closure1(t1, t2)]);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockCollection__closure: {
    "": "Closure:108;this_3,indent_4,ctx_5",
    call$0: [function() {
      var t1, t2, t3, t4;
      t1 = this.this_3;
      t2 = this.indent_4 + 1;
      t3 = this.ctx_5;
      t4 = t1.s_separate$2(t2, t3);
      if (!(t4 != null && J.$eq(t4, false) !== true))
        return;
      return t1.c_ns_properties$2(t2, t3);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockCollection__closure0: {
    "": "Closure:108;this_6,indent_7,ctx_8",
    call$0: [function() {
      var t1 = this.indent_7;
      if (this.ctx_8 === 0)
        --t1;
      return this.this_6.l_blockSequence$1(t1);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_s_l_blockCollection__closure1: {
    "": "Closure:108;this_9,indent_10",
    call$0: [function() {
      return this.this_9.l_blockMapping$1(this.indent_10);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_documentSuffix_closure: {
    "": "Closure:108;this_0",
    call$0: [function() {
      var t1, t2;
      t1 = this.this_0;
      t2 = t1.rawString$1("...");
      if (!(t2 != null && J.$eq(t2, false) !== true))
        return false;
      return t1.s_l_comments$0();
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_c_forbidden_closure: {
    "": "Closure:108;box_0,this_1",
    call$0: [function() {
      var t1, t2, $char, forbidden;
      t1 = this.this_1;
      t2 = t1.or$1([t1.get$c_directivesEnd(), t1.get$c_documentEnd()]);
      if (!(t2 != null && J.$eq(t2, false) !== true))
        return;
      $char = t1.peek$0();
      if (!($char === 10 || $char === 13))
        forbidden = $char === 32 || $char === 9 || t1._pos === t1._len;
      else
        forbidden = true;
      this.box_0.forbidden_0 = forbidden;
      return;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Parser_l_yamlStream_closure: {
    "": "Closure:108;this_0,docs_1",
    call$0: [function() {
      var t1, doc;
      t1 = this.this_0;
      if (t1.oneOrMore$1(t1.get$l_documentSuffix()) != null && true) {
        t1.zeroOrMore$1(t1.get$l_documentPrefix());
        doc = t1.get$l_anyDocument().call$0();
      } else {
        t1.zeroOrMore$1(t1.get$l_documentPrefix());
        doc = t1.get$l_explicitDocument().call$0();
      }
      if (doc != null && J.$eq(doc, false) !== true)
        this.docs_1.push(doc);
      return doc;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  SyntaxError: {
    "": "YamlException;_line,_column,_msg",
    toString$0: [function(_) {
      return "Syntax error on line " + this._line + ", column " + this._column + ": " + K.YamlException.prototype.toString$0.call(this, this);
    }, "call$0", "get$toString", 0, 0, null],
    static: {SyntaxError$: function(_line, _column, msg) {
        return new V.SyntaxError(_line, _column, msg);
      }}
  },
  _Pair: {
    "": "Object;first>,last>",
    toString$0: [function(_) {
      return "(" + H.S(this.first) + ", " + H.S(this.last) + ")";
    }, "call$0", "get$toString", 0, 0, null],
    $is_Pair: true
  },
  _BlockHeader: {
    "": "Object;additionalIndent<,chomping<",
    get$autoDetectIndent: function() {
      return this.additionalIndent == null;
    }
  },
  _Range: {
    "": "Object;start,end",
    contains$1: [function(_, pos) {
      var t1 = J.getInterceptor$n(pos);
      return t1.$ge(pos, this.start) && t1.$le(pos, this.end);
    }, "call$1", "get$contains", 2, 0, null, 253],
    $is_Range: true
  },
  _RangeMap: {
    "": "Object;_parser$_contents",
    $index: [function(_, pos) {
      var t1, pair, t2;
      for (t1 = H.setRuntimeTypeInfo(new H.ReversedListIterable(this._parser$_contents), [null]), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.get$length(t1), 0, null), [H.getRuntimeTypeArgument(t1, "ListIterable", 0)]); t1.moveNext$0();) {
        pair = t1._current;
        t2 = J.getInterceptor$ax(pair);
        if (J.contains$1$asx(t2.get$first(pair), pos) === true)
          return t2.get$last(pair);
      }
      return;
    }, "call$1", "get$[]", 2, 0, null, 253],
    $indexSet: [function(_, range, value) {
      return this._parser$_contents.push(H.setRuntimeTypeInfo(new V._Pair(range, value), [V._Range, H.getTypeArgumentByIndex(this, 0)]));
    }, "call$2", "get$[]=", 4, 0, null, 615, 23]
  }
}],
["path", "package:path/path.dart", , B, {
  "": "",
  current: function() {
    var uri, t1, t2, path;
    uri = P.Uri_base();
    t1 = $.get$Style_platform();
    t2 = $.get$Style_url();
    if (t1 == null ? t2 == null : t1 === t2)
      return uri.resolveUri$1(P.Uri$_fromMatch($.get$Uri__splitRe().firstMatch$1("."))).toString$0(0);
    else {
      path = uri.toFilePath$0();
      return C.JSString_methods.substring$2(path, 0, path.length - 1);
    }
  },
  "": "url<"
}],
["path.context", "package:path/src/context.dart", , F, {
  "": "",
  _validateArgList: [function(method, args) {
    var i, numArgs, numArgs0, message, t1, t2;
    for (i = 1; i < 8; ++i) {
      if (args[i] == null || args[i - 1] != null)
        continue;
      for (numArgs = 8; numArgs >= 1; numArgs = numArgs0) {
        numArgs0 = numArgs - 1;
        if (args[numArgs0] != null)
          break;
      }
      message = new P.StringBuffer("");
      message._contents = "";
      t1 = method + "(";
      t1 = "" + t1;
      message._contents = t1;
      t2 = new H.SubListIterable(args, 0, numArgs);
      t2.$builtinTypeInfo = [null];
      if (numArgs < 0)
        H.throwExpression(new P.RangeError("value " + numArgs));
      if (0 > numArgs)
        H.throwExpression(P.RangeError$range(0, 0, numArgs));
      t2 = new H.MappedListIterable(t2, new F._validateArgList_closure());
      t2.$builtinTypeInfo = [null, null];
      t2 = t2.join$1(0, ", ");
      t1 += t2;
      message._contents = t1;
      t2 = "): part " + (i - 1) + " was null, but part " + i + " was not.";
      t1 += t2;
      message._contents = t1;
      throw H.wrapException(new P.ArgumentError(t1));
    }
  }, "call$2", "_validateArgList$closure", 4, 0, null, 260, 305],
  Context: {
    "": "Object;style,current",
    dirname$1: [function(path) {
      var parsed, t1, t2;
      parsed = Q.ParsedPath_ParsedPath$parse(path, this.style);
      parsed.removeTrailingSeparators$0();
      t1 = parsed.parts;
      t2 = t1.length;
      if (t2 === 0) {
        t1 = parsed.root;
        return t1 == null ? "." : t1;
      }
      if (t2 === 1) {
        t1 = parsed.root;
        return t1 == null ? "." : t1;
      }
      C.JSArray_methods.removeLast$0(t1);
      t1 = parsed.separators;
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1.pop();
      parsed.removeTrailingSeparators$0();
      return parsed.toString$0(0);
    }, "call$1", "get$dirname", 2, 0, null, 313],
    join$8: [function(_, part1, part2, part3, part4, part5, part6, part7, part8) {
      var parts = [part1, part2, part3, part4, part5, part6, part7, part8];
      F._validateArgList("join", parts);
      return this.joinAll$1(H.setRuntimeTypeInfo(new H.WhereIterable(parts, new F.Context_join_closure()), [null]));
    }, function($receiver, part1) {
      return this.join$8($receiver, part1, null, null, null, null, null, null, null);
    }, "join$1", function($receiver, part1, part2) {
      return this.join$8($receiver, part1, part2, null, null, null, null, null, null);
    }, "join$2", "call$8", null, null, "get$join", 2, 14, null, 77, 77, 77, 77, 77, 77, 77, 616, 617, 618, 619, 620, 621, 622, 623],
    joinAll$1: [function(parts) {
      var buffer, t1, t2, t3, needsSeparator, isAbsoluteAndNotRootRelative, part, parsed, root, t4, t5, str;
      buffer = P.StringBuffer$("");
      for (t1 = H.setRuntimeTypeInfo(new H.WhereIterable(parts, new F.Context_joinAll_closure()), [H.getRuntimeTypeArgument(parts, "IterableBase", 0)]), t1 = H.setRuntimeTypeInfo(new H.WhereIterator(J.get$iterator$ax(t1._iterable), t1._f), [H.getTypeArgumentByIndex(t1, 0)]), t2 = this.style, t3 = t1._iterator, needsSeparator = false, isAbsoluteAndNotRootRelative = false; t1.moveNext$0();) {
        part = t3.get$current();
        if (Q.ParsedPath_ParsedPath$parse(part, t2).isRootRelative && isAbsoluteAndNotRootRelative) {
          parsed = Q.ParsedPath_ParsedPath$parse(part, t2);
          root = Q.ParsedPath_ParsedPath$parse(buffer._contents, t2).root;
          t4 = root == null ? "" : root;
          parsed.root = t4;
          if (J.contains$1$asx(t4, t2.get$needsSeparatorPattern()) === true) {
            t4 = parsed.separators;
            t5 = t2.get$separator();
            if (0 >= t4.length)
              return H.ioore(t4, 0);
            t4[0] = t5;
          }
          buffer._contents = "";
          t4 = parsed.toString$0(0);
          buffer._contents = buffer._contents + t4;
        } else if (Q.ParsedPath_ParsedPath$parse(part, t2).root != null) {
          isAbsoluteAndNotRootRelative = !Q.ParsedPath_ParsedPath$parse(part, t2).isRootRelative;
          buffer._contents = "";
          str = typeof part === "string" ? part : H.S(part);
          buffer._contents = buffer._contents + str;
        } else {
          t4 = J.getInterceptor$asx(part);
          if (J.$gt$n(t4.get$length(part), 0) && J.contains$1$asx(t4.$index(part, 0), t2.get$separatorPattern()) === true)
            ;
          else if (needsSeparator === true) {
            t4 = t2.get$separator();
            buffer._contents = buffer._contents + t4;
          }
          str = typeof part === "string" ? part : H.S(part);
          buffer._contents = buffer._contents + str;
        }
        needsSeparator = J.contains$1$asx(part, t2.get$needsSeparatorPattern());
      }
      return buffer._contents;
    }, "call$1", "get$joinAll", 2, 0, null, 225],
    split$1: [function(_, path) {
      var parsed, t1, t2;
      parsed = Q.ParsedPath_ParsedPath$parse(path, this.style);
      t1 = H.setRuntimeTypeInfo(new H.WhereIterable(parsed.parts, new F.Context_split_closure()), [null]);
      t1 = P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "IterableBase", 0));
      parsed.parts = t1;
      t2 = parsed.root;
      if (t2 != null)
        C.JSArray_methods.insert$2(t1, 0, t2);
      return parsed.parts;
    }, "call$1", "get$split", 2, 0, null, 313],
    static: {Context_Context: function(current, style) {
        current = style == null ? B.current() : ".";
        if (style == null)
          style = $.get$Style_platform();
        return new F.Context(style, current);
      }}
  },
  Context_join_closure: {
    "": "Closure:271;",
    call$1: [function(part) {
      return part != null;
    }, "call$1", null, 2, 0, null, 563, "call"],
    $isFunction: true
  },
  Context_joinAll_closure: {
    "": "Closure:271;",
    call$1: [function(part) {
      return J.$eq(part, "") !== true;
    }, "call$1", null, 2, 0, null, 563, "call"],
    $isFunction: true
  },
  Context_split_closure: {
    "": "Closure:271;",
    call$1: [function(part) {
      return J.get$isEmpty$asx(part) !== true;
    }, "call$1", null, 2, 0, null, 563, "call"],
    $isFunction: true
  },
  _validateArgList_closure: {
    "": "Closure:271;",
    call$1: [function(arg) {
      return arg == null ? "null" : "\"" + H.S(arg) + "\"";
    }, "call$1", null, 2, 0, null, 209, "call"],
    $isFunction: true
  }
}],
["path.parsed_path", "package:path/src/parsed_path.dart", , Q, {
  "": "",
  ParsedPath: {
    "": "Object;style,root,isRootRelative,parts,separators",
    removeTrailingSeparators$0: [function() {
      var t1, t2;
      t1 = this.separators;
      while (true) {
        t2 = this.parts;
        if (!(t2.length !== 0 && J.$eq(C.JSArray_methods.get$last(t2), "") === true))
          break;
        C.JSArray_methods.removeLast$0(this.parts);
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        t1.pop();
      }
      t2 = t1.length;
      if (t2 > 0)
        t1[t2 - 1] = "";
    }, "call$0", "get$removeTrailingSeparators", 0, 0, null],
    toString$0: [function(_) {
      var builder, t1, i, str, t2;
      builder = P.StringBuffer$("");
      t1 = this.root;
      if (t1 != null)
        builder.write$1(t1);
      for (t1 = this.separators, i = 0; i < this.parts.length; ++i) {
        if (i >= t1.length)
          return H.ioore(t1, i);
        str = t1[i];
        str = typeof str === "string" ? str : H.S(str);
        builder._contents = builder._contents + str;
        t2 = this.parts;
        if (i >= t2.length)
          return H.ioore(t2, i);
        str = t2[i];
        str = typeof str === "string" ? str : H.S(str);
        builder._contents = builder._contents + str;
      }
      builder.write$1(C.JSArray_methods.get$last(t1));
      return builder._contents;
    }, "call$0", "get$toString", 0, 0, null],
    static: {ParsedPath_ParsedPath$parse: function(path, style) {
        var root, t1, parts, separators, t2, firstSeparator, t3, start, t4, t5;
        root = style.getRoot$1(path);
        t1 = style.getRelativeRoot$1(path);
        if (root != null)
          path = J.substring$1$s(path, J.get$length$asx(root));
        parts = [];
        separators = [];
        t2 = style.get$separatorPattern();
        firstSeparator = t2.matchAsPrefix$1(0, path);
        if (firstSeparator != null) {
          t3 = firstSeparator._match;
          if (0 >= t3.length)
            return H.ioore(t3, 0);
          separators.push(t3[0]);
          if (0 >= t3.length)
            return H.ioore(t3, 0);
          path = J.substring$1$s(path, J.get$length$asx(t3[0]));
        } else
          separators.push("");
        if (typeof path !== "string")
          H.throwExpression(new P.ArgumentError(path));
        t2 = new H._AllMatchesIterator(t2, path, null);
        t3 = J.getInterceptor$asx(path);
        start = 0;
        for (; t2.moveNext$0();) {
          t4 = t2.__js_helper$_current._match;
          parts.push(t3.substring$2(path, start, t4.index));
          if (0 >= t4.length)
            return H.ioore(t4, 0);
          separators.push(t4[0]);
          t5 = t4.index;
          if (0 >= t4.length)
            return H.ioore(t4, 0);
          t4 = J.get$length$asx(t4[0]);
          if (typeof t4 !== "number")
            return H.iae(t4);
          start = t5 + t4;
        }
        t2 = t3.get$length(path);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (start < t2) {
          parts.push(t3.substring$1(path, start));
          separators.push("");
        }
        return new Q.ParsedPath(style, root, t1 != null, parts, separators);
      }}
  }
}],
["path.style", "package:path/src/style.dart", , S, {
  "": "",
  Style__getPlatformStyle: [function() {
    if (J.$eq(P.Uri_base().scheme, "file") !== true)
      return $.get$Style_url();
    if (J.endsWith$1$s(P.Uri_base()._path, "/") !== true)
      return $.get$Style_url();
    if (P.Uri$("", "", "a/b", null, 0, null, null, null, "").toFilePath$0() === "a\\b")
      return $.get$Style_windows();
    return $.get$Style_posix();
  }, "call$0", "Style__getPlatformStyle$closure", 0, 0, null],
  Style: {
    "": "Object;relativeRootPattern<",
    getRoot$1: [function(path) {
      var t1, matches;
      t1 = this.get$rootPattern();
      if (typeof path !== "string")
        H.throwExpression(new P.ArgumentError(path));
      matches = new H._AllMatchesIterable(t1, path);
      if (!matches.get$isEmpty(matches))
        return J.$index$asx(matches.get$first(matches), 0);
      return this.getRelativeRoot$1(path);
    }, "call$1", "get$getRoot", 2, 0, null, 313],
    getRelativeRoot$1: [function(path) {
      var t1, matches;
      t1 = this.get$relativeRootPattern();
      if (t1 == null)
        return;
      t1.toString;
      if (typeof path !== "string")
        H.throwExpression(new P.ArgumentError(path));
      matches = new H._AllMatchesIterable(t1, path);
      if (!matches.get$iterator(matches).moveNext$0())
        return;
      return J.$index$asx(matches.get$first(matches), 0);
    }, "call$1", "get$getRelativeRoot", 2, 0, null, 313],
    toString$0: [function(_) {
      return this.get$name(this);
    }, "call$0", "get$toString", 0, 0, null],
    static: {"": "Style_url<"}
  }
}],
["path.style.posix", "package:path/src/style/posix.dart", , Z, {
  "": "",
  PosixStyle: {
    "": "Style;name>,separator<,separatorPattern<,needsSeparatorPattern<,rootPattern<,relativeRootPattern"
  }
}],
["path.style.url", "package:path/src/style/url.dart", , E, {
  "": "",
  UrlStyle: {
    "": "Style;name>,separator<,separatorPattern<,needsSeparatorPattern<,rootPattern<,relativeRootPattern:url0$UrlStyle$relativeRootPattern<,relativeRootPattern"
  }
}],
["path.style.windows", "package:path/src/style/windows.dart", , T, {
  "": "",
  WindowsStyle: {
    "": "Style;name>,separator<,separatorPattern<,needsSeparatorPattern<,rootPattern<,relativeRootPattern:windows$WindowsStyle$relativeRootPattern<,relativeRootPattern"
  }
}],
["polymer", "package:polymer/polymer.dart", , A, {
  "": "",
  _preventFlashOfUnstyledContent: [function() {
    var style, head;
    style = document.createElement("style", null);
    style.textContent = ".polymer-veiled { opacity: 0; } \n.polymer-unveil{ -webkit-transition: opacity 0.3s; transition: opacity 0.3s; }\n";
    head = document.querySelector("head");
    head.insertBefore(style, head.firstChild);
    A._veilElements();
    $.get$Polymer__ready().future.then$1(new A._preventFlashOfUnstyledContent_closure());
  }, "call$0", "_preventFlashOfUnstyledContent$closure", 0, 0, null],
  _veilElements: [function() {
    var t1, selector, t2;
    for (t1 = $.get$Polymer_veiledElements(), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, 1, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();) {
      selector = t1._current;
      for (t2 = W._FrozenElementList$_wrap(document.querySelectorAll(selector), null), t2 = t2.get$iterator(t2); t2.moveNext$0();)
        J.add$1$ax(J.get$classes$x(t2._current), "polymer-veiled");
    }
  }, "call$0", "_veilElements$closure", 0, 0, null],
  _notifySuper: [function($name) {
    var waiting, t1;
    waiting = $.get$_waitSuper().remove$1(0, $name);
    if (waiting != null)
      for (t1 = J.get$iterator$ax(waiting); t1.moveNext$0();)
        J.registerWhenReady$0$x(t1.get$current());
  }, "call$1", "_notifySuper$closure", 2, 0, null, 12],
  _getPublishedProperties: [function(cls, props) {
    var t1, member, t2, t3, t4, t5;
    if (J.$eq(cls, $.get$_objectType()) === true)
      return props;
    props = A._getPublishedProperties(cls.get$superclass(), props);
    for (t1 = cls.get$declarations().__js_mirrors$_source, t1 = t1.get$values(t1), t1 = H.setRuntimeTypeInfo(new H.MappedIterator(null, J.get$iterator$ax(t1._iterable), t1._f), [H.getTypeArgumentByIndex(t1, 0), H.getTypeArgumentByIndex(t1, 1)]); t1.moveNext$0();) {
      member = t1._current;
      if (member.get$isStatic() === true || member.get$isPrivate())
        continue;
      t2 = J.getInterceptor$x(member);
      if (!(typeof member === "object" && member !== null && !!t2.$isVariableMirror && !t2.get$isFinal(member)))
        t3 = typeof member === "object" && member !== null && !!t2.$isMethodMirror && member.get$isGetter();
      else
        t3 = true;
      if (t3)
        for (t3 = J.get$iterator$ax(member.get$metadata()); t3.moveNext$0();) {
          t4 = t3._current.get$reflectee();
          t5 = J.getInterceptor(t4);
          if (typeof t4 === "object" && t4 !== null && !!t5.$isPublishedProperty) {
            if (typeof member !== "object" || member === null || !t2.$isMethodMirror || A._hasSetter(cls, member)) {
              if (props == null)
                props = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
              props.$indexSet(0, member.get$simpleName(), member);
            }
            break;
          }
        }
    }
    return props;
  }, "call$2", "_getPublishedProperties$closure", 4, 0, null, 306, 307],
  _getProperty: [function(cls, property) {
    var mirror, t1;
    do {
      mirror = cls.get$declarations().__js_mirrors$_source.$index(0, property);
      t1 = J.getInterceptor(mirror);
      if (typeof mirror === "object" && mirror !== null && !!t1.$isMethodMirror && mirror.get$isGetter() && A._hasSetter(cls, mirror) || typeof mirror === "object" && mirror !== null && !!t1.$isVariableMirror)
        return mirror;
      cls = cls.get$superclass();
    } while (cls != null);
    return;
  }, "call$2", "_getProperty$closure", 4, 0, null, 306, 66],
  _hasSetter: [function(cls, getter) {
    var t1, mirror;
    t1 = H.Symbol_validate(H.S(getter.get$simpleName()._name) + "=");
    mirror = cls.get$declarations().__js_mirrors$_source.$index(0, new H.Symbol0(t1));
    t1 = J.getInterceptor(mirror);
    return typeof mirror === "object" && mirror !== null && !!t1.$isMethodMirror && mirror.get$isSetter();
  }, "call$2", "_hasSetter$closure", 4, 0, null, 306, 308],
  _shimShadowDomStyling: [function(template, $name, extendee) {
    var t1, platform, shadowCss;
    t1 = $.get$context();
    if (t1 == null || template == null)
      return;
    if (!t1.hasProperty$1("ShadowDOMPolyfill"))
      return;
    platform = J.$index$asx(t1, "Platform");
    if (platform == null)
      return;
    shadowCss = J.$index$asx(platform, "ShadowCSS");
    if (shadowCss == null)
      return;
    shadowCss.callMethod$2("shimStyling", [template, $name, extendee]);
  }, "call$3", "_shimShadowDomStyling$closure", 6, 0, null, 309, 12, 310],
  _cssTextFromSheet: [function(sheet) {
    var href, e, t, t1, resource, exception, t2;
    if (sheet == null)
      return "";
    t1 = J.getInterceptor$x(sheet);
    href = t1.get$href(sheet);
    if (J.$eq(href, "") === true)
      href = t1.get$attributes(sheet)._element.getAttribute("href");
    t1 = $.get$context();
    if (t1 != null && t1.hasProperty$1("HTMLImports")) {
      if (typeof sheet === "number" || typeof sheet === "string" || typeof sheet === "boolean" || false)
        H.throwExpression(new P.ArgumentError("object cannot be a num, string, bool, or null"));
      resource = J.$index$asx(P._wrapToDart(P._convertToJS(sheet)), "__resource");
      if (resource != null)
        return resource;
      $.get$_sheetLog().fine$1("failed to get stylesheet text href=\"" + H.S(href) + "\"");
      return "";
    }
    try {
      t1 = new XMLHttpRequest();
      C.HttpRequest_methods.open$3$async(t1, "GET", href, false);
      t1.send();
      t1 = t1.responseText;
      return t1;
    } catch (exception) {
      t1 = H.unwrapException(exception);
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isDomException) {
        e = t1;
        t = new H._StackTrace(exception, null);
        $.get$_sheetLog().fine$1("failed to get stylesheet text href=\"" + H.S(href) + "\" error: " + H.S(e) + ", trace: " + H.S(t));
        return "";
      } else
        throw exception;
    }

  }, "call$1", "_cssTextFromSheet$closure", 2, 0, null, 311],
  Polymer_register: [function($name, type) {
    var waiting;
    if (type == null)
      type = C.Type_I2I;
    $.get$_typesByName().$indexSet(0, $name, type);
    waiting = $.get$_waitType().remove$1(0, $name);
    if (waiting != null)
      J.registerWhenReady$0$x(waiting);
  }, "call$2", "Polymer_register$closure", 2, 2, null, 77, 12, 11],
  Polymer__unbindNodeTree: [function(node) {
    A.Polymer__forNodeTree(node, new A.Polymer__unbindNodeTree_closure());
  }, "call$1", "Polymer__unbindNodeTree$closure", 2, 0, null, 312],
  Polymer__forNodeTree: [function(node, callback) {
    var child;
    if (node == null)
      return;
    callback.call$1(node);
    for (child = node.firstChild; child != null; child = child.nextSibling)
      A.Polymer__forNodeTree(child, callback);
  }, "call$2", "Polymer__forNodeTree$closure", 4, 0, null, 312, 194],
  Polymer_prepareBinding: [function(path, $name, node, originalPrepareBinding) {
    if (!J.startsWith$1$s($name, "on-"))
      return originalPrepareBinding.call$3(path, $name, node);
    return new A.Polymer_prepareBinding_closure(path, $name);
  }, "call$4", "Polymer_prepareBinding$closure", 8, 0, null, 313, 12, 312, 314],
  Polymer__findController: [function(node) {
    var t1;
    for (; t1 = J.getInterceptor$x(node), t1.get$parentNode(node) != null;)
      node = t1.get$parentNode(node);
    return $.get$_shadowHost().$index(0, node);
  }, "call$1", "Polymer__findController$closure", 2, 0, null, 312],
  Polymer__invokeMethod: [function(receiver, methodName, args) {
    var receiverMirror, method, t1;
    receiverMirror = H.reflect(receiver);
    method = A.Polymer__findMethod(H.reflectClassByMangledName(J.get$runtimeType$(receiverMirror.reflectee)._typeName), methodName);
    if (method != null) {
      t1 = method.get$parameters(method);
      t1 = t1.where$1(t1, new A.Polymer__invokeMethod_closure());
      C.JSArray_methods.set$length(args, t1.get$length(t1));
    }
    return receiverMirror.invoke$2(methodName, args).reflectee;
  }, "call$3", "Polymer__invokeMethod$closure", 6, 0, null, 41, 315, 305],
  Polymer__findMethod: [function(type, $name) {
    var member, t1;
    do {
      member = type.get$declarations().__js_mirrors$_source.$index(0, $name);
      t1 = J.getInterceptor(member);
      if (typeof member === "object" && member !== null && !!t1.$isMethodMirror)
        return member;
      type = type.get$superclass();
    } while (type != null);
  }, "call$2", "Polymer__findMethod$closure", 4, 0, null, 11, 12],
  Polymer_applyStyleToScope: [function(style, scope) {
    var clone, attr;
    if (style == null)
      return;
    clone = document.createElement("style", null);
    clone.textContent = style.textContent;
    attr = style.getAttribute("element");
    if (attr != null)
      clone.setAttribute("element", attr);
    scope.appendChild(clone);
  }, "call$2", "Polymer_applyStyleToScope$closure", 4, 0, null, 316, 317],
  Polymer_unveilElements: [function() {
    var t1 = window;
    C.Window_methods._ensureRequestAnimationFrame$0(t1);
    C.Window_methods._requestAnimationFrame$1(t1, W._wrapZone(new A.Polymer_unveilElements_closure()));
  }, "call$0", "Polymer_unveilElements$closure", 0, 0, null],
  _inferPropertyType: [function(value, property) {
    var t1, type, t;
    t1 = J.getInterceptor$x(property);
    type = typeof property === "object" && property !== null && !!t1.$isVariableMirror ? t1.get$type(property) : H.interceptedTypeCast(property, "$isMethodMirror").get$returnType();
    if (J.$eq(type.get$qualifiedName(), C.Symbol_46c) === true || J.$eq(type.get$qualifiedName(), C.Symbol_dynamic) === true)
      if (value != null) {
        t = A._getCoreType(value);
        if (t != null)
          return P.reflectClass(t);
        return H.reflectClassByMangledName(J.get$runtimeType$(H.reflect(value).reflectee)._typeName);
      }
    return type;
  }, "call$2", "_inferPropertyType$closure", 4, 0, null, 23, 66],
  _getCoreType: [function(value) {
    var t1;
    if (value == null)
      return C.Type_eZO;
    if (typeof value === "number" && Math.floor(value) === value)
      return C.Type_SnA;
    if (typeof value === "number")
      return C.Type_qq1;
    if (typeof value === "boolean")
      return C.Type_EsU;
    if (typeof value === "string")
      return C.Type_Ejg;
    t1 = J.getInterceptor(value);
    if (typeof value === "object" && value !== null && !!t1.$isDateTime)
      return C.Type_dVs;
    return;
  }, "call$1", "_getCoreType$closure", 2, 0, null, 23],
  initPolymer: [function() {
    if ($._useDirtyChecking) {
      var t1 = $.Zone__current.fork$1$specification(O.dirtyCheckZoneSpec());
      t1.run$1(A._initPolymerOptimized$closure());
      return t1;
    }
    A._initPolymerOptimized();
    return $.Zone__current;
  }, "call$0", "initPolymer$closure", 0, 0, null],
  _initPolymerOptimized: [function() {
    var t1 = document;
    W._registerCustomElement(window, t1, "polymer-element", C.Type_YnA, null);
    A._loadLibraries();
    A._preventFlashOfUnstyledContent();
    $.get$customElementsReady().then$1(new A._initPolymerOptimized_closure());
  }, "call$0", "_initPolymerOptimized$closure", 0, 0, 107],
  _loadLibraries: [function() {
    var lib, e, s, t1, exception, t2, t3;
    for (t1 = $.get$_librariesToLoad(), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();) {
      lib = t1._current;
      try {
        A._loadLibrary(lib);
      } catch (exception) {
        t2 = H.unwrapException(exception);
        e = t2;
        s = new H._StackTrace(exception, null);
        t2 = new P._Future(0, $.Zone__current, null, null, null, null, null, null);
        t2.$builtinTypeInfo = [null];
        new P._AsyncCompleter(t2).$builtinTypeInfo = [null];
        t3 = e;
        if (t3 == null)
          H.throwExpression(new P.ArgumentError("Error must not be null"));
        if (t2._state !== 0)
          H.throwExpression(new P.StateError("Future already completed"));
        t2._asyncCompleteError$2(t3, s);
      }

    }
  }, "call$0", "_loadLibraries$closure", 0, 0, null],
  _discoverScripts: [function(doc, baseUri, seen, scripts) {
    var line, t1, scriptSeen, node, t2, url;
    if (seen == null)
      seen = P.LinkedHashSet_LinkedHashSet(null, null, null, W.Document);
    if (scripts == null) {
      scripts = [];
      scripts.$builtinTypeInfo = [J.JSString];
    }
    if (doc == null) {
      line = "warning: " + H.S(baseUri) + " not found.";
      t1 = $.printToZone;
      if (t1 == null)
        H.printString(line);
      else
        t1.call$1(line);
      return scripts;
    }
    if (seen.contains$1(0, doc))
      return scripts;
    seen.add$1(seen, doc);
    for (t1 = W._FrozenElementList$_wrap(doc.querySelectorAll("script,link[rel=\"import\"]"), null), t1 = t1.get$iterator(t1), scriptSeen = false; t1.moveNext$0();) {
      node = t1._current;
      t2 = J.getInterceptor$x(node);
      if (typeof node === "object" && node !== null && !!t2.$isLinkElement)
        A._discoverScripts(node.import, node.href, seen, scripts);
      else if (typeof node === "object" && node !== null && !!t2.$isScriptElement0 && node.type === "application/dart")
        if (!scriptSeen) {
          url = t2.get$src(node);
          scripts.push(url === "" ? baseUri : url);
          scriptSeen = true;
        } else {
          line = "warning: more than one Dart script tag in " + H.S(baseUri) + ". Dartium currently only allows a single Dart script tag per document.";
          t2 = $.printToZone;
          if (t2 == null)
            H.printString(line);
          else
            t2.call$1(line);
        }
    }
    return scripts;
  }, "call$4", "_discoverScripts$closure", 4, 4, null, 77, 77, 318, 319, 320, 321],
  _loadLibrary: [function(uriString) {
    var t1, t2, uri, lib, t3, t4, canonicalLib, c, meta, t5, waiting;
    t1 = $.get$_rootUri();
    t1.toString;
    t2 = $.get$Uri__splitRe();
    uri = t1.resolveUri$1(P.Uri$_fromMatch(t2.firstMatch$1(uriString)));
    t1 = $.get$_libs().__js_mirrors$_source;
    lib = t1.$index(0, uri);
    t3 = uri._path;
    t4 = $.get$_packageRoot();
    if (J.startsWith$1$s(t3, t4) && J.endsWith$1$s(uri._path, ".dart") === true) {
      canonicalLib = t1.$index(0, P.Uri$_fromMatch(t2.firstMatch$1("package:" + J.substring$1$s(uri._path, t4.length))));
      if (canonicalLib != null)
        lib = canonicalLib;
    }
    if (lib == null) {
      $.get$_loaderLog().info$1(H.S(uri) + " library not found");
      return;
    }
    t1 = lib.get$declarations().__js_mirrors$_source;
    t1 = t1.get$values(t1);
    t2 = new A._loadLibrary_closure();
    t3 = new H.WhereIterable(t1, t2);
    t3.$builtinTypeInfo = [H.getRuntimeTypeArgument(t1, "IterableBase", 0)];
    t1 = t1.get$iterator(t1);
    t2 = new H.WhereIterator(t1, t2);
    t2.$builtinTypeInfo = [H.getTypeArgumentByIndex(t3, 0)];
    for (; t2.moveNext$0();)
      A._maybeInvoke(lib, t1.get$current());
    t1 = lib.get$declarations().__js_mirrors$_source;
    t1 = t1.get$values(t1);
    t2 = new A._loadLibrary_closure0();
    t3 = new H.WhereIterable(t1, t2);
    t3.$builtinTypeInfo = [H.getRuntimeTypeArgument(t1, "IterableBase", 0)];
    t1 = t1.get$iterator(t1);
    t2 = new H.WhereIterator(t1, t2);
    t2.$builtinTypeInfo = [H.getTypeArgumentByIndex(t3, 0)];
    for (; t2.moveNext$0();) {
      c = t1.get$current();
      for (t3 = J.get$iterator$ax(c.get$metadata()); t3.moveNext$0();) {
        meta = t3._current.get$reflectee();
        t4 = J.getInterceptor(meta);
        if (typeof meta === "object" && meta !== null && !!t4.$isCustomTag) {
          t4 = meta.tagName;
          t5 = c.get$reflectedType();
          $.get$_typesByName().$indexSet(0, t4, t5);
          waiting = $.get$_waitType().remove$1(0, t4);
          if (waiting != null)
            J.registerWhenReady$0$x(waiting);
        }
      }
    }
  }, "call$1", "_loadLibrary$closure", 2, 0, null, 322],
  _maybeInvoke: [function(obj, method) {
    var t1, annotationFound, line;
    for (t1 = J.get$iterator$ax(method.get$metadata()); annotationFound = false, t1.moveNext$0();)
      if (t1._current.get$reflectee() === C.C__InitMethodAnnotation) {
        annotationFound = true;
        break;
      }
    if (!annotationFound)
      return;
    if (method.get$isStatic() !== true) {
      line = "warning: methods marked with @initMethod should be static, " + H.S(method.get$simpleName()) + " is not.";
      t1 = $.printToZone;
      if (t1 == null)
        H.printString(line);
      else
        t1.call$1(line);
      return;
    }
    t1 = J.where$1$ax(J.get$parameters$x(method), new A._maybeInvoke_closure());
    if (t1.get$isEmpty(t1) !== true) {
      line = "warning: methods marked with @initMethod should take no arguments, " + H.S(method.get$simpleName()) + " expects some.";
      t1 = $.printToZone;
      if (t1 == null)
        H.printString(line);
      else
        t1.call$1(line);
      return;
    }
    obj.invoke$2(method.get$simpleName(), C.List_empty);
  }, "call$2", "_maybeInvoke$closure", 4, 0, null, 93, 260],
  _preventFlashOfUnstyledContent_closure: {
    "": "Closure:271;",
    call$1: [function(_) {
      A.Polymer_unveilElements();
    }, "call$1", null, 2, 0, null, 335, "call"],
    $isFunction: true
  },
  PolymerDeclaration: {
    "": "HtmlElement;_type,_supertype,_super,_polymer$_name,_publish=,_publishLC=,_observe=,_instanceAttributes=,_sheets,_styles,_eventDelegates=,_templateDelegates",
    get$type: function(receiver) {
      return receiver._type;
    },
    get$superDeclaration: function(receiver) {
      return receiver._super;
    },
    get$name: function(receiver) {
      return receiver._polymer$_name;
    },
    get$templateContent: function(receiver) {
      var template, t1, t2;
      template = receiver.querySelector("template");
      if (template != null) {
        t1 = J.getInterceptor(template);
        t2 = J.get$content$x(typeof template === "object" && template !== null && !!t1.$isNodeBindExtension ? template : M.nodeBindFallback(template));
        t1 = t2;
      } else
        t1 = null;
      return t1;
    },
    registerWhenReady$0: [function(receiver) {
      var extendee, t1, t2, cls, registered;
      if (this.waitingForType$1(receiver, receiver._polymer$_name))
        return;
      extendee = receiver.getAttribute("extends");
      if (this.waitingForExtendee$1(receiver, extendee))
        return;
      t1 = receiver._polymer$_name;
      t2 = $.get$_typesByName();
      receiver._type = t2.$index(0, t1);
      t2 = t2.$index(0, extendee);
      receiver._supertype = t2;
      if (t2 != null)
        receiver._super = $.get$_declarations().$index(0, extendee);
      cls = P.reflectClass(receiver._type);
      this.publishAttributes$2(receiver, cls, receiver._super);
      t2 = receiver._publish;
      if (t2 != null)
        receiver._publishLC = this._lowerCaseMap$1(receiver, t2);
      this.inferObservers$1(receiver, cls);
      $.get$_declarations().$indexSet(0, t1, receiver);
      this.accumulateInstanceAttributes$0(receiver);
      this.addAttributeDelegates$1(receiver, receiver._eventDelegates);
      this.cacheSheets$0(receiver);
      this.cacheStyles$0(receiver);
      this.installLocalSheets$0(receiver);
      A.Polymer_applyStyleToScope(this.cssTextToScopeStyle$2(receiver, this.cssTextForScope$1(receiver, "global"), "global"), document.head);
      A._shimShadowDomStyling(this.get$templateContent(receiver), t1, extendee);
      cls = P.reflectClass(receiver._type);
      registered = cls.get$declarations().__js_mirrors$_source.$index(0, C.Symbol_registerCallback);
      if (registered != null) {
        t2 = J.getInterceptor(registered);
        t2 = typeof registered === "object" && registered !== null && !!t2.$isMethodMirror && registered.get$isStatic() && registered.get$isRegularMethod();
      } else
        t2 = false;
      if (t2)
        cls.invoke$2(C.Symbol_registerCallback, [receiver]);
      this.registerType$1(receiver, t1);
      A._notifySuper(receiver._polymer$_name);
    }, "call$0", "get$registerWhenReady", 0, 0, null],
    waitingForType$1: [function(receiver, $name) {
      if ($.get$_typesByName().$index(0, $name) != null)
        return false;
      $.get$_waitType().$indexSet(0, $name, receiver);
      if (receiver.hasAttribute("noscript") === true)
        A.Polymer_register($name, null);
      return true;
    }, "call$1", "get$waitingForType", 2, 0, null, 12],
    waitingForExtendee$1: [function(receiver, extendee) {
      if (extendee != null && J.indexOf$1$asx(extendee, "-") >= 0)
        if (!$.get$_declarations().containsKey$1(extendee)) {
          J.add$1$ax($.get$_waitSuper().putIfAbsent$2(extendee, new A.PolymerDeclaration_waitingForExtendee_closure()), receiver);
          return true;
        }
      return false;
    }, "call$1", "get$waitingForExtendee", 2, 0, null, 310],
    registerType$1: [function(receiver, $name) {
      var decl, baseTag, t1, t2;
      for (decl = receiver, baseTag = null; decl != null;) {
        t1 = J.getInterceptor$x(decl);
        baseTag = t1.get$attributes(decl)._element.getAttribute("extends");
        decl = t1.get$superDeclaration(decl);
      }
      t1 = document;
      t2 = receiver._type;
      W._registerCustomElement(window, t1, $name, t2, baseTag);
    }, "call$1", "get$registerType", 2, 0, null, 12],
    publishAttributes$2: [function(receiver, cls, superDecl) {
      var t1, t2, attrs, attr, property, mirror, t3;
      if (superDecl != null && J.get$_publish$x(superDecl) != null) {
        t1 = J.get$_publish$x(superDecl);
        t2 = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
        t2.addAll$1(0, t1);
        receiver._publish = t2;
      }
      receiver._publish = A._getPublishedProperties(cls, receiver._publish);
      attrs = receiver.getAttribute("attributes");
      if (attrs != null) {
        t1 = attrs.split(J.contains$1$asx(attrs, ",") ? "," : " ");
        t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]);
        for (; t1.moveNext$0();) {
          attr = J.trim$0$s(t1._current);
          if (attr !== "") {
            t2 = receiver._publish;
            t2 = t2 != null && t2.containsKey$1(attr);
          } else
            t2 = false;
          if (t2)
            continue;
          property = new H.Symbol0(H.Symbol_validate(attr));
          mirror = A._getProperty(cls, property);
          if (mirror == null) {
            window;
            t2 = $.get$Console__safeConsole();
            t3 = "property for attribute " + attr + " of polymer-element name=" + receiver._polymer$_name + " not found.";
            t2.toString;
            if (typeof console != "undefined")
              console.warn(t3);
            continue;
          }
          t2 = receiver._publish;
          if (t2 == null) {
            t2 = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
            receiver._publish = t2;
          }
          t2.$indexSet(0, property, mirror);
        }
      }
    }, "call$2", "get$publishAttributes", 4, 0, null, 306, 624],
    accumulateInstanceAttributes$0: [function(receiver) {
      var t1, t2;
      t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, P.Object);
      receiver._instanceAttributes = t1;
      t2 = receiver._super;
      if (t2 != null)
        t1.addAll$1(0, J.get$_instanceAttributes$x(t2));
      new W._ElementAttributeMap(receiver).forEach$1(0, new A.PolymerDeclaration_accumulateInstanceAttributes_closure(receiver));
    }, "call$0", "get$accumulateInstanceAttributes", 0, 0, null],
    addAttributeDelegates$1: [function(receiver, delegates) {
      new W._ElementAttributeMap(receiver).forEach$1(0, new A.PolymerDeclaration_addAttributeDelegates_closure(delegates));
    }, "call$1", "get$addAttributeDelegates", 2, 0, null, 625],
    cacheSheets$0: [function(receiver) {
      var t1 = this.findNodes$1(receiver, "[rel=stylesheet]");
      receiver._sheets = t1;
      for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();)
        J.remove$0$ax(t1._current);
    }, "call$0", "get$cacheSheets", 0, 0, null],
    cacheStyles$0: [function(receiver) {
      var t1 = this.findNodes$1(receiver, "style[polymer-scope]");
      receiver._styles = t1;
      for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();)
        J.remove$0$ax(t1._current);
    }, "call$0", "get$cacheStyles", 0, 0, null],
    installLocalSheets$0: [function(receiver) {
      var t1, sheets, $content, cssText, t2, str, t3;
      t1 = receiver._sheets;
      t1.toString;
      sheets = H.setRuntimeTypeInfo(new H.WhereIterable(t1, new A.PolymerDeclaration_installLocalSheets_closure()), [null]);
      $content = this.get$templateContent(receiver);
      if ($content != null) {
        cssText = P.StringBuffer$("");
        for (t1 = H.setRuntimeTypeInfo(new H.WhereIterator(J.get$iterator$ax(sheets._iterable), sheets._f), [H.getTypeArgumentByIndex(sheets, 0)]), t2 = t1._iterator; t1.moveNext$0();) {
          str = A._cssTextFromSheet(t2.get$current());
          str = typeof str === "string" ? str : H.S(str);
          t3 = cssText._contents + str;
          cssText._contents = t3;
          cssText._contents = t3 + "\n";
        }
        if (cssText._contents.length > 0) {
          t1 = document.createElement("style", null);
          t1.textContent = H.S(cssText);
          t2 = J.getInterceptor$x($content);
          t2.insertBefore$2($content, t1, t2.get$firstChild($content));
        }
      }
    }, "call$0", "get$installLocalSheets", 0, 0, null],
    findNodes$2: [function(receiver, selector, matcher) {
      var t1, nodes, $content;
      t1 = W._FrozenElementList$_wrap(receiver.querySelectorAll(selector), null);
      nodes = t1.toList$0(t1);
      $content = this.get$templateContent(receiver);
      if ($content != null)
        C.JSArray_methods.addAll$1(nodes, J.queryAll$1$x($content, selector));
      return nodes;
    }, function($receiver, selector) {
      return this.findNodes$2($receiver, selector, null);
    }, "findNodes$1", "call$2", null, "get$findNodes", 2, 2, null, 77, 578, 598],
    cssTextForScope$1: [function(receiver, scopeDescriptor) {
      var cssText, t1, t2, t3, str, t4;
      cssText = P.StringBuffer$("");
      t1 = new A.PolymerDeclaration_cssTextForScope_matcher("[polymer-scope=" + scopeDescriptor + "]");
      for (t2 = receiver._sheets, t2.toString, t2 = H.setRuntimeTypeInfo(new H.WhereIterable(t2, t1), [null]), t2 = H.setRuntimeTypeInfo(new H.WhereIterator(J.get$iterator$ax(t2._iterable), t2._f), [H.getTypeArgumentByIndex(t2, 0)]), t3 = t2._iterator; t2.moveNext$0();) {
        str = A._cssTextFromSheet(t3.get$current());
        str = typeof str === "string" ? str : H.S(str);
        t4 = cssText._contents + str;
        cssText._contents = t4;
        cssText._contents = t4 + "\n\n";
      }
      for (t2 = receiver._styles, t2.toString, t1 = H.setRuntimeTypeInfo(new H.WhereIterable(t2, t1), [null]), t1 = H.setRuntimeTypeInfo(new H.WhereIterator(J.get$iterator$ax(t1._iterable), t1._f), [H.getTypeArgumentByIndex(t1, 0)]), t2 = t1._iterator; t1.moveNext$0();) {
        t3 = t2.get$current().get$textContent();
        t3 = cssText._contents + t3;
        cssText._contents = t3;
        cssText._contents = t3 + "\n\n";
      }
      return cssText._contents;
    }, "call$1", "get$cssTextForScope", 2, 0, null, 626],
    cssTextToScopeStyle$2: [function(receiver, cssText, scopeDescriptor) {
      var t1;
      if (cssText === "")
        return;
      t1 = document.createElement("style", null);
      t1.textContent = cssText;
      t1.toString;
      t1.setAttribute("element", receiver._polymer$_name + "-" + scopeDescriptor);
      return t1;
    }, "call$2", "get$cssTextToScopeStyle", 4, 0, null, 627, 626],
    inferObservers$1: [function(receiver, cls) {
      var t1, method, t2, $name;
      if (J.$eq(cls, $.get$_objectType()) === true)
        return;
      this.inferObservers$1(receiver, cls.get$superclass());
      for (t1 = cls.get$declarations().__js_mirrors$_source, t1 = t1.get$values(t1), t1 = H.setRuntimeTypeInfo(new H.MappedIterator(null, J.get$iterator$ax(t1._iterable), t1._f), [H.getTypeArgumentByIndex(t1, 0), H.getTypeArgumentByIndex(t1, 1)]); t1.moveNext$0();) {
        method = t1._current;
        t2 = J.getInterceptor(method);
        if (typeof method !== "object" || method === null || !t2.$isMethodMirror || method.get$isStatic() || !method.get$isRegularMethod())
          continue;
        $name = method.get$simpleName()._name;
        t2 = J.getInterceptor$s($name);
        if (t2.endsWith$1($name, "Changed") === true && t2.$eq($name, "attributeChanged") !== true) {
          if (receiver._observe == null)
            receiver._observe = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
          $name = t2.substring$2($name, 0, J.$sub$n(t2.get$length($name), 7));
          receiver._observe.$indexSet(0, new H.Symbol0(H.Symbol_validate($name)), method.get$simpleName());
        }
      }
    }, "call$1", "get$inferObservers", 2, 0, null, 306],
    _lowerCaseMap$1: [function(receiver, properties) {
      var map = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, null);
      properties.forEach$1(0, new A.PolymerDeclaration__lowerCaseMap_closure(map));
      return map;
    }, "call$1", "get$_lowerCaseMap", 2, 0, null, 628],
    PolymerDeclaration$created$0: function(receiver) {
      receiver._polymer$_name = receiver.getAttribute("name");
      this.registerWhenReady$0(receiver);
    },
    $isPolymerDeclaration: true,
    static: {"": "PolymerDeclaration__TAG", PolymerDeclaration$created: function(receiver) {
        receiver._eventDelegates = H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
        C.PolymerDeclaration_methods.Element$created$0(receiver);
        C.PolymerDeclaration_methods.PolymerDeclaration$created$0(receiver);
        return receiver;
      }}
  },
  PolymerDeclaration_waitingForExtendee_closure: {
    "": "Closure:108;",
    call$0: [function() {
      return [];
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  PolymerDeclaration_accumulateInstanceAttributes_closure: {
    "": "Closure:426;this_0",
    call$2: [function($name, value) {
      if (C.Map_c94aj.containsKey$1($name) !== true && !J.startsWith$1$s($name, "on-"))
        this.this_0._instanceAttributes.$indexSet(0, $name, value);
    }, "call$2", null, 4, 0, null, 12, 23, "call"],
    $isFunction: true
  },
  PolymerDeclaration_addAttributeDelegates_closure: {
    "": "Closure:426;delegates_0",
    call$2: [function($name, value) {
      var t1, start, end;
      t1 = J.getInterceptor$s($name);
      if (t1.startsWith$1($name, "on-")) {
        start = J.getInterceptor$asx(value).indexOf$1(value, "{{");
        end = C.JSString_methods.lastIndexOf$1(value, "}}");
        if (start >= 0 && end >= 0)
          this.delegates_0.$indexSet(0, t1.substring$1($name, 3), C.JSString_methods.trim$0(C.JSString_methods.substring$2(value, start + 2, end)));
      }
    }, "call$2", null, 4, 0, null, 12, 23, "call"],
    $isFunction: true
  },
  PolymerDeclaration_installLocalSheets_closure: {
    "": "Closure:271;",
    call$1: [function(s) {
      return J.get$attributes$x(s)._element.hasAttribute("polymer-scope") !== true;
    }, "call$1", null, 2, 0, null, 86, "call"],
    $isFunction: true
  },
  PolymerDeclaration_cssTextForScope_matcher: {
    "": "Closure:271;selector_0",
    call$1: [function(s) {
      return J.matches$1$x(s, this.selector_0);
    }, "call$1", null, 2, 0, null, 86, "call"],
    $isFunction: true
  },
  PolymerDeclaration__lowerCaseMap_closure: {
    "": "Closure:426;map_0",
    call$2: [function($name, value) {
      this.map_0.$indexSet(0, J.toLowerCase$0$s(J.get$_name$x($name)), value);
    }, "call$2", null, 4, 0, null, 12, 23, "call"],
    $isFunction: true
  },
  closure4: {
    "": "Closure:108;",
    call$0: [function() {
      var map = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, J.JSString);
      C.Map_484CA.forEach$1(0, new A._closure7(map));
      return map;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _closure7: {
    "": "Closure:426;map_0",
    call$2: [function(onName, eventType) {
      this.map_0.$indexSet(0, eventType, onName);
    }, "call$2", null, 4, 0, null, 629, 630, "call"],
    $isFunction: true
  },
  PublishedProperty: {
    "": "ObservableProperty;",
    $isPublishedProperty: true
  },
  Polymer: {
    "": ["Object;syntax:polymer$Polymer$syntax=,$$:polymer$Polymer$$=-631", null, function() {
      return [C.C_Reflectable];
    }],
    get$applyAuthorStyles: function(receiver) {
      return false;
    },
    polymerCreated$0: [function(receiver) {
      if (W._convertNativeToDart_Window(this.get$ownerDocument(receiver).defaultView) != null || $.Polymer__preparingElements > 0)
        this.prepareElement$0(receiver);
    }, "call$0", "get$polymerCreated", 0, 0, null],
    prepareElement$0: [function(receiver) {
      var isAttr, t1;
      isAttr = this.get$attributes(receiver)._element.getAttribute("is");
      t1 = isAttr == null || isAttr === "" ? this.get$localName(receiver) : isAttr;
      receiver.polymer$Polymer$_declaration = $.get$_declarations().$index(0, t1);
      this.observeProperties$0(receiver);
      this.copyInstanceAttributes$0(receiver);
      this.takeAttributes$0(receiver);
      this.addHostListeners$0(receiver);
      $.Polymer__preparingElements = $.Polymer__preparingElements + 1;
      this.parseDeclarations$1(receiver, receiver.polymer$Polymer$_declaration);
      $.Polymer__preparingElements = $.Polymer__preparingElements - 1;
    }, "call$0", "get$prepareElement", 0, 0, null],
    enteredView$0: [function(receiver) {
      if (receiver.polymer$Polymer$_declaration == null)
        this.prepareElement$0(receiver);
      this.cancelUnbindAll$1$preventCascade(receiver, true);
    }, "call$0", "get$enteredView", 0, 0, null],
    leftView$0: [function(receiver) {
      this.asyncUnbindAll$0(receiver);
    }, "call$0", "get$leftView", 0, 0, null],
    parseDeclarations$1: [function(receiver, declaration) {
      if (declaration != null) {
        this.parseDeclarations$1(receiver, J.get$superDeclaration$x(declaration));
        this.parseDeclaration$1(receiver, declaration);
      }
    }, "call$1", "get$parseDeclarations", 2, 0, null, 632],
    parseDeclaration$1: [function(receiver, elementElement) {
      var t1, template, root, t2, $name;
      t1 = J.getInterceptor$x(elementElement);
      template = t1.query$1(elementElement, "template");
      if (template != null)
        if (J.get$attributes$x(receiver.polymer$Polymer$_declaration)._element.hasAttribute("lightdom") === true) {
          this.lightFromTemplate$1(receiver, template);
          root = null;
        } else
          root = this.shadowFromTemplate$1(receiver, template);
      else
        root = null;
      t2 = J.getInterceptor(root);
      if (typeof root !== "object" || root === null || !t2.$isShadowRoot)
        return;
      $name = t1.get$attributes(elementElement)._element.getAttribute("name");
      if ($name == null)
        return;
      receiver.polymer$Polymer$_shadowRoots.$indexSet(0, $name, root);
    }, "call$1", "get$parseDeclaration", 2, 0, null, 633],
    lightFromTemplate$1: [function(receiver, template) {
      var t1, dom;
      if (template == null)
        return;
      t1 = J.getInterceptor(template);
      t1 = typeof template === "object" && template !== null && !!t1.$isNodeBindExtension ? template : M.nodeBindFallback(template);
      dom = t1.createInstance$2(receiver, this.get$syntax(receiver));
      this.append$1(receiver, dom);
      this.shadowRootReady$2(receiver, receiver, template);
      return dom;
    }, "call$1", "get$lightFromTemplate", 2, 0, null, 309],
    shadowFromTemplate$1: [function(receiver, template) {
      var root, t1;
      if (template == null)
        return;
      this.get$shadowRoot(receiver);
      root = this.createShadowRoot$0(receiver);
      $.get$_shadowHost().$indexSet(0, root, receiver);
      root.applyAuthorStyles = this.get$applyAuthorStyles(receiver);
      root.resetStyleInheritance = false;
      t1 = J.getInterceptor(template);
      t1 = typeof template === "object" && template !== null && !!t1.$isNodeBindExtension ? template : M.nodeBindFallback(template);
      root.appendChild(t1.createInstance$2(receiver, this.get$syntax(receiver)));
      this.shadowRootReady$2(receiver, root, template);
      return root;
    }, "call$1", "get$shadowFromTemplate", 2, 0, null, 309],
    shadowRootReady$2: [function(receiver, root, template) {
      this.marshalNodeReferences$1(receiver, root);
    }, "call$2", "get$shadowRootReady", 4, 0, null, 588, 309],
    marshalNodeReferences$1: [function(receiver, root) {
      var t1, t2, t3, n;
      if (root == null)
        return;
      for (t1 = J.queryAll$1$x(root, "[id]"), t1 = t1.get$iterator(t1), t2 = receiver.polymer$Polymer$$, t3 = J.getInterceptor$ax(t2); t1.moveNext$0();) {
        n = t1._current;
        t3.$indexSet(t2, J.get$id$x(n), n);
      }
    }, "call$1", "get$marshalNodeReferences", 2, 0, null, 588],
    attributeChanged$3: [function(receiver, $name, oldValue, newValue) {
      var t1 = J.getInterceptor($name);
      if (t1.$eq($name, "class") !== true && t1.$eq($name, "style") !== true)
        this.attributeToProperty$2(receiver, $name, newValue);
    }, "call$3", "get$attributeChanged", 6, 0, null, 12, 273, 274],
    onMutation$1: [function(receiver, node) {
      var completer = H.setRuntimeTypeInfo(new P._AsyncCompleter(P._Future$(null)), [null]);
      C.MutationObserver_methods.observe$3$childList$subtree(W.MutationObserver_MutationObserver(new A.Polymer_onMutation_closure(completer)), node, true, true);
      return completer.future;
    }, "call$1", "get$onMutation", 2, 0, null, 312],
    copyInstanceAttributes$0: [function(receiver) {
      J.get$_instanceAttributes$x(receiver.polymer$Polymer$_declaration).forEach$1(0, new A.Polymer_copyInstanceAttributes_closure(receiver));
    }, "call$0", "get$copyInstanceAttributes", 0, 0, null],
    takeAttributes$0: [function(receiver) {
      if (J.get$_publishLC$x(receiver.polymer$Polymer$_declaration) == null)
        return;
      this.get$attributes(receiver).forEach$1(0, this.get$attributeToProperty(receiver));
    }, "call$0", "get$takeAttributes", 0, 0, null],
    attributeToProperty$2: [function(receiver, $name, value) {
      var property, $self, currentValue, newValue;
      property = this.propertyForAttribute$1(receiver, $name);
      if (property == null)
        return;
      if (value == null || J.contains$1$asx(value, $.get$Polymer_bindPattern()) === true)
        return;
      $self = H.reflect(receiver);
      currentValue = $self.getField$1(property.get$simpleName()).reflectee;
      newValue = Z.deserializeValue(value, currentValue, A._inferPropertyType(currentValue, property));
      if (newValue == null ? currentValue != null : newValue !== currentValue)
        $self.setField$2(property.get$simpleName(), newValue);
    }, "call$2", "get$attributeToProperty", 4, 0, 634, 12, 23],
    propertyForAttribute$1: [function(receiver, $name) {
      var publishLC = J.get$_publishLC$x(receiver.polymer$Polymer$_declaration);
      if (publishLC == null)
        return;
      return publishLC.$index(0, $name);
    }, "call$1", "get$propertyForAttribute", 2, 0, null, 12],
    serializeValue$1: [function(receiver, value) {
      if (value == null)
        return;
      if (typeof value === "boolean")
        return value ? "" : null;
      else if (typeof value === "string" || typeof value === "number" && Math.floor(value) === value || typeof value === "number")
        return H.S(value);
      return;
    }, "call$1", "get$serializeValue", 2, 0, null, 23],
    reflectPropertyToAttribute$1: [function(receiver, $name) {
      var propValue, serializedValue;
      propValue = H.reflect(receiver).getField$1($name).reflectee;
      serializedValue = this.serializeValue$1(receiver, propValue);
      if (serializedValue != null)
        this.get$attributes(receiver)._element.setAttribute(J.get$_name$x($name), serializedValue);
      else if (typeof propValue === "boolean")
        this.get$attributes(receiver).remove$1(0, J.get$_name$x($name));
    }, "call$1", "get$reflectPropertyToAttribute", 2, 0, null, 12],
    bind$3: [function(receiver, $name, model, path) {
      var property, t1, t2, path0, t3, t4, observer;
      if (receiver.polymer$Polymer$_declaration == null)
        this.prepareElement$0(receiver);
      property = this.propertyForAttribute$1(receiver, $name);
      if (property == null)
        return J.bind$3$x(M.nodeBindFallback(receiver), $name, model, path);
      else {
        J.unbind$1$x(M.nodeBindFallback(receiver), $name);
        t1 = property.get$simpleName();
        t2 = $.get$_bindLog();
        if (t2.isLoggable$1(C.Level_FINE_500))
          t2.fine$1("[" + H.S(model) + "]: bindProperties: [" + H.S(path) + "] to [" + this.get$localName(receiver) + "].[" + H.S(t1) + "]");
        path0 = L.PathObserver$(model, path, null);
        if (path0.get$value(path0) == null)
          path0.set$value(0, H.reflect(receiver).getField$1(t1).reflectee);
        t2 = H.reflect(receiver);
        t3 = t1._name;
        t4 = path != null ? path : "";
        observer = new A._PolymerBinding(t2, t1, null, null, receiver, model, null, null, t3, t4);
        observer.NodeBinding$4(receiver, t3, model, path);
        observer._PolymerBinding$4(receiver, t1, model, path);
        this.reflectPropertyToAttribute$1(receiver, property.get$simpleName());
        J.$indexSet$ax(J.get$bindings$x(M.nodeBindFallback(receiver)), $name, observer);
        return observer;
      }
    }, "call$3", "get$bind", 4, 2, null, 77, 12, 340, 313],
    get$bindings: function(receiver) {
      return J.get$bindings$x(M.nodeBindFallback(receiver));
    },
    unbind$1: [function(receiver, $name) {
      return J.unbind$1$x(M.nodeBindFallback(receiver), $name);
    }, "call$1", "get$unbind", 2, 0, null, 12],
    asyncUnbindAll$0: [function(receiver) {
      var job, t1;
      if (receiver.polymer$Polymer$_unbound === true)
        return;
      $.get$_unbindLog().fine$1("[" + this.get$localName(receiver) + "] asyncUnbindAll");
      job = receiver.polymer$Polymer$_unbindAllJob;
      t1 = this.get$unbindAll(receiver);
      if (job != null)
        job.stop$0(0);
      else
        job = new A._Job(null, null);
      job._callback = t1;
      job._timer = P.Timer_Timer(C.Duration_0, job.get$complete(job));
      receiver.polymer$Polymer$_unbindAllJob = job;
    }, "call$0", "get$asyncUnbindAll", 0, 0, null],
    unbindAll$0: [function(receiver) {
      var t1, root;
      if (receiver.polymer$Polymer$_unbound === true)
        return;
      t1 = receiver.polymer$Polymer$_propertyObserver;
      if (t1 != null) {
        t1.cancel$0();
        receiver.polymer$Polymer$_propertyObserver = null;
      }
      this.unregisterObservers$0(receiver);
      J.unbindAll$0$x(M.nodeBindFallback(receiver));
      root = this.get$shadowRoot(receiver);
      for (; root != null;) {
        A.Polymer__unbindNodeTree(root);
        root = root.olderShadowRoot;
      }
      receiver.polymer$Polymer$_unbound = true;
    }, "call$0", "get$unbindAll", 0, 0, 107],
    cancelUnbindAll$1$preventCascade: [function(receiver, preventCascade) {
      var t1;
      if (receiver.polymer$Polymer$_unbound === true) {
        $.get$_unbindLog().warning$1("[" + this.get$localName(receiver) + "] already unbound, cannot cancel unbindAll");
        return;
      }
      $.get$_unbindLog().fine$1("[" + this.get$localName(receiver) + "] cancelUnbindAll");
      t1 = receiver.polymer$Polymer$_unbindAllJob;
      if (t1 != null) {
        t1.stop$0(0);
        receiver.polymer$Polymer$_unbindAllJob = null;
      }
      if (preventCascade === true)
        return;
      A.Polymer__forNodeTree(this.get$shadowRoot(receiver), new A.Polymer_cancelUnbindAll_closure());
    }, function($receiver) {
      return this.cancelUnbindAll$1$preventCascade($receiver, null);
    }, "cancelUnbindAll$0", "call$1$preventCascade", null, "get$cancelUnbindAll", 0, 3, null, 77, 635],
    observeProperties$0: [function(receiver) {
      var observe, publish, t1, t2, t3, $name;
      observe = J.get$_observe$x(receiver.polymer$Polymer$_declaration);
      publish = J.get$_publish$x(receiver.polymer$Polymer$_declaration);
      t1 = observe == null;
      if (!t1)
        for (observe.toString, t2 = H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterable(observe), [H.getTypeArgumentByIndex(observe, 0)]), t3 = t2._collection$_map, t2 = H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterator(t3, t3._modifications, null, null), [H.getTypeArgumentByIndex(t2, 0)]), t2._cell = t2._collection$_map._first; t2.moveNext$0();) {
          $name = t2._collection$_current;
          this.observeArrayValue$3(receiver, $name, H.reflect(receiver)._invoke$4($name, 1, J.get$_name$x($name), []), null);
        }
      if (!t1 || publish != null)
        receiver.polymer$Polymer$_propertyObserver = this.get$changes(receiver).listen$1(this.get$notifyPropertyChanges(receiver));
    }, "call$0", "get$observeProperties", 0, 0, null],
    notifyPropertyChanges$1: [function(receiver, changes) {
      var observe, publish, valuePairs, t1, c, t2;
      observe = J.get$_observe$x(receiver.polymer$Polymer$_declaration);
      publish = J.get$_publish$x(receiver.polymer$Polymer$_declaration);
      valuePairs = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol, A._PropertyValue);
      for (t1 = J.get$iterator$ax(changes); t1.moveNext$0();) {
        c = t1.get$current();
        t2 = J.getInterceptor(c);
        if (typeof c !== "object" || c === null || !t2.$isPropertyChangeRecord)
          continue;
        J.set$newValue$x(valuePairs.putIfAbsent$2(c.name, new A.Polymer_notifyPropertyChanges_closure(c)), c.newValue);
      }
      valuePairs.forEach$1(0, new A.Polymer_notifyPropertyChanges_closure0(receiver, changes, observe, publish));
    }, "call$1", "get$notifyPropertyChanges", 2, 0, 636, 637],
    observeArrayValue$3: [function(receiver, $name, value, old) {
      var observe, callbackName, t1, subscription, t2;
      observe = J.get$_observe$x(receiver.polymer$Polymer$_declaration);
      if (observe == null)
        return;
      callbackName = observe.$index(0, $name);
      if (callbackName == null)
        return;
      t1 = J.getInterceptor(old);
      if (typeof old === "object" && old !== null && !!t1.$isObservableList) {
        t1 = $.get$_observeLog();
        if (t1.isLoggable$1(C.Level_FINE_500))
          t1.fine$1("[" + this.get$localName(receiver) + "] observeArrayValue: unregister observer " + H.S($name));
        this.unregisterObserver$1(receiver, H.S(J.get$_name$x($name)) + "__array");
      }
      t1 = J.getInterceptor(value);
      if (typeof value === "object" && value !== null && !!t1.$isObservableList) {
        t1 = $.get$_observeLog();
        if (t1.isLoggable$1(C.Level_FINE_500))
          t1.fine$1("[" + this.get$localName(receiver) + "] observeArrayValue: register observer " + H.S($name));
        subscription = value.get$listChanges()._createSubscription$1(false);
        t1 = subscription._zone;
        subscription._async$_onData = t1.registerUnaryCallback$1(new A.Polymer_observeArrayValue_closure(receiver, old, callbackName));
        subscription._onError = P._registerErrorHandler(P._nullErrorHandler$closure(), t1);
        subscription._onDone = t1.registerCallback$1(P._nullDoneHandler$closure());
        t1 = H.S(J.get$_name$x($name)) + "__array";
        t2 = receiver.polymer$Polymer$_observers;
        if (t2 == null) {
          t2 = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, P.StreamSubscription);
          receiver.polymer$Polymer$_observers = t2;
        }
        t2.$indexSet(0, t1, subscription);
      }
    }, "call$3", "get$observeArrayValue", 6, 0, null, 12, 23, 295],
    registerObserver$2: [function(receiver, $name, sub) {
      var t1 = receiver.polymer$Polymer$_observers;
      if (t1 == null) {
        t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, P.StreamSubscription);
        receiver.polymer$Polymer$_observers = t1;
      }
      t1.$indexSet(0, $name, sub);
    }, "call$2", "get$registerObserver", 4, 0, null, 12, 638],
    unregisterObserver$1: [function(receiver, $name) {
      var sub = receiver.polymer$Polymer$_observers.remove$1(0, $name);
      if (sub == null)
        return false;
      sub.cancel$0();
      return true;
    }, "call$1", "get$unregisterObserver", 2, 0, null, 12],
    unregisterObservers$0: [function(receiver) {
      var t1 = receiver.polymer$Polymer$_observers;
      if (t1 == null)
        return;
      for (t1 = t1.get$values(t1), t1 = H.setRuntimeTypeInfo(new H.MappedIterator(null, J.get$iterator$ax(t1._iterable), t1._f), [H.getTypeArgumentByIndex(t1, 0), H.getTypeArgumentByIndex(t1, 1)]); t1.moveNext$0();)
        t1._current.cancel$0();
      receiver.polymer$Polymer$_observers.clear$0(0);
      receiver.polymer$Polymer$_observers = null;
    }, "call$0", "get$unregisterObservers", 0, 0, null],
    addHostListeners$0: [function(receiver) {
      var events, t1;
      events = J.get$_eventDelegates$x(receiver.polymer$Polymer$_declaration);
      if (events.get$isEmpty(events))
        return;
      t1 = $.get$_eventsLog();
      if (t1.isLoggable$1(C.Level_FINE_500))
        t1.fine$1("[" + this.get$localName(receiver) + "] addHostListeners: " + H.S(events));
      this.addNodeListeners$3(receiver, receiver, events.get$keys(), this.get$hostEventListener(receiver));
    }, "call$0", "get$addHostListeners", 0, 0, null],
    addNodeListeners$3: [function(receiver, node, events, listener) {
      var t1, t2, $name, t3, t4, t5, t6;
      for (t1 = events._collection$_map, t1 = H.setRuntimeTypeInfo(new P.LinkedHashMapKeyIterator(t1, t1._modifications, null, null), [H.getTypeArgumentByIndex(events, 0)]), t1._cell = t1._collection$_map._first, t2 = J.getInterceptor$x(node); t1.moveNext$0();) {
        $name = t1._collection$_current;
        t3 = t2.get$on(node).$index(0, $name);
        t4 = t3._eventType;
        t5 = t3._useCapture;
        t6 = new W._EventStreamSubscription(0, t3._target, t4, W._wrapZone(listener), t5);
        t6.$builtinTypeInfo = [H.getTypeArgumentByIndex(t3, 0)];
        t3 = t6._onData;
        if (t3 != null && t6._pauseCount <= 0)
          J.addEventListener$3$x(t6._target, t4, t3, t5);
      }
    }, "call$3", "get$addNodeListeners", 6, 0, null, 312, 639, 371],
    hostEventListener$1: [function(receiver, $event) {
      var t1, t2, log, t3, t4, result, h;
      t1 = J.getInterceptor$x($event);
      if (t1.get$bubbles($event) !== true)
        return;
      t2 = $.get$_eventsLog();
      log = t2.isLoggable$1(C.Level_FINE_500);
      if (log)
        t2.fine$1(">>> [" + this.get$localName(receiver) + "]: hostEventListener(" + H.S(t1.get$type($event)) + ")");
      t3 = J.get$_eventDelegates$x(receiver.polymer$Polymer$_declaration);
      t4 = t1.get$type($event);
      result = J.$index$asx($.get$_reverseEventTranslations(), t4);
      h = t3.$index(0, result != null ? result : t4);
      if (h != null) {
        if (log)
          t2.fine$1("[" + this.get$localName(receiver) + "] found host handler name [" + H.S(h) + "]");
        this.dispatchMethod$3(receiver, receiver, h, [$event, typeof $event === "object" && $event !== null && !!t1.$isCustomEvent ? t1.get$detail($event) : null, receiver]);
      }
      if (log)
        t2.fine$1("<<< [" + this.get$localName(receiver) + "]: hostEventListener(" + H.S(t1.get$type($event)) + ")");
    }, "call$1", "get$hostEventListener", 2, 0, 640, 349],
    dispatchMethod$3: [function(receiver, object, callbackOrMethod, args) {
      var t1, log, t2;
      t1 = $.get$_eventsLog();
      log = t1.isLoggable$1(C.Level_FINE_500);
      if (log)
        t1.fine$1(">>> [" + this.get$localName(receiver) + "]: dispatch " + H.S(callbackOrMethod));
      t2 = J.getInterceptor(callbackOrMethod);
      if (typeof callbackOrMethod === "object" && callbackOrMethod !== null && !!t2.$isFunction)
        H.Primitives_applyFunction(callbackOrMethod, args, P.Function__toMangledNames(null));
      else if (typeof callbackOrMethod === "string")
        A.Polymer__invokeMethod(object, new H.Symbol0(H.Symbol_validate(callbackOrMethod)), args);
      else
        t1.warning$1("invalid callback");
      if (log)
        t1.info$1("<<< [" + this.get$localName(receiver) + "]: dispatch " + H.S(callbackOrMethod));
    }, "call$3", "get$dispatchMethod", 6, 0, null, 6, 641, 305],
    fire$4$canBubble$detail$toNode: [function(receiver, type, canBubble, detail, toNode) {
      this.dispatchEvent$1(receiver, W.CustomEvent_CustomEvent(type, true, true, detail));
      return detail;
    }, function($receiver, type) {
      return this.fire$4$canBubble$detail$toNode($receiver, type, null, null, null);
    }, "fire$1", "call$4$canBubble$detail$toNode", null, "get$fire", 2, 7, null, 77, 77, 77, 11, 379, 382, 642],
    $isPolymer: true,
    $isNodeBindExtension: true,
    $isObservable: true,
    $isElement: true,
    $isInterceptor: true,
    $isEventTarget: true,
    $isNode: true
  },
  Polymer_onMutation_closure: {
    "": "Closure:426;completer_0",
    call$2: [function(mutations, observer) {
      var t1;
      J.disconnect$0$x(observer);
      t1 = this.completer_0.future;
      if (t1._state !== 0)
        H.throwExpression(new P.StateError("Future already completed"));
      t1._asyncComplete$1(mutations);
    }, "call$2", null, 4, 0, null, 643, 644, "call"],
    $isFunction: true
  },
  Polymer_copyInstanceAttributes_closure: {
    "": "Closure:426;this_0",
    call$2: [function($name, value) {
      J.get$attributes$x(this.this_0).putIfAbsent$2($name, new A.Polymer_copyInstanceAttributes__closure(value));
    }, "call$2", null, 4, 0, null, 12, 23, "call"],
    $isFunction: true
  },
  Polymer_copyInstanceAttributes__closure: {
    "": "Closure:108;value_1",
    call$0: [function() {
      return this.value_1;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Polymer_cancelUnbindAll_closure: {
    "": "Closure:271;",
    call$1: [function(n) {
      var t1 = J.getInterceptor$x(n);
      if (typeof n === "object" && n !== null && !!t1.$isPolymer)
        t1.cancelUnbindAll$0(n);
    }, "call$1", null, 2, 0, null, 347, "call"],
    $isFunction: true
  },
  Polymer__unbindNodeTree_closure: {
    "": "Closure:271;",
    call$1: [function(node) {
      var t1 = J.getInterceptor(node);
      return J.unbindAll$0$x(typeof node === "object" && node !== null && !!t1.$isNodeBindExtension ? node : M.nodeBindFallback(node));
    }, "call$1", null, 2, 0, null, 312, "call"],
    $isFunction: true
  },
  Polymer_notifyPropertyChanges_closure: {
    "": "Closure:108;c_0",
    call$0: [function() {
      return new A._PropertyValue(this.c_0.oldValue, null);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Polymer_notifyPropertyChanges_closure0: {
    "": "Closure:426;this_1,changes_2,observe_3,publish_4",
    call$2: [function($name, pair) {
      var t1, method, t2;
      t1 = this.publish_4;
      if (t1 != null && t1.containsKey$1($name))
        J.reflectPropertyToAttribute$1$x(this.this_1, $name);
      t1 = this.observe_3;
      if (t1 == null)
        return;
      method = t1.$index(0, $name);
      if (method != null) {
        t1 = this.this_1;
        t2 = J.getInterceptor$x(pair);
        J.observeArrayValue$3$x(t1, $name, t2.get$newValue(pair), t2.get$oldValue(pair));
        A.Polymer__invokeMethod(t1, method, [t2.get$oldValue(pair), t2.get$newValue(pair), this.changes_2]);
      }
    }, "call$2", null, 4, 0, null, 12, 613, "call"],
    $isFunction: true
  },
  Polymer_observeArrayValue_closure: {
    "": "Closure:271;this_0,old_1,callbackName_2",
    call$1: [function(changes) {
      A.Polymer__invokeMethod(this.this_0, this.callbackName_2, [this.old_1]);
    }, "call$1", null, 2, 0, null, 637, "call"],
    $isFunction: true
  },
  Polymer_prepareBinding_closure: {
    "": "Closure:426;path_0,name_1",
    call$2: [function(model, node) {
      var t1, eventName, translated;
      t1 = $.get$_eventsLog();
      if (t1.isLoggable$1(C.Level_FINE_500))
        t1.fine$1("event: [" + H.S(node) + "]." + H.S(this.name_1) + " => [" + H.S(model) + "]." + this.path_0 + "())");
      eventName = J.substring$1$s(this.name_1, 3);
      translated = C.Map_484CA.$index(0, eventName);
      if (translated != null)
        eventName = translated;
      t1 = J.get$on$x(node).$index(0, eventName);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(new A.Polymer_prepareBinding__closure(this.path_0, model, node)), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      return H.setRuntimeTypeInfo(new A.ObservableBox(null, null, null), [null]);
    }, "call$2", null, 4, 0, null, 340, 312, "call"],
    $isFunction: true
  },
  Polymer_prepareBinding__closure: {
    "": "Closure:271;path_2,model_3,node_4",
    call$1: [function($event) {
      var t1, ctrlr, t2, method, obj, t3;
      t1 = this.node_4;
      ctrlr = A.Polymer__findController(t1);
      t2 = J.getInterceptor$x(ctrlr);
      if (typeof ctrlr !== "object" || ctrlr === null || !t2.$isPolymer)
        return;
      method = this.path_2;
      if (0 >= method.length)
        return H.ioore(method, 0);
      if (method[0] === "@") {
        obj = this.model_3;
        t3 = L.PathObserver$(obj, C.JSString_methods.substring$1(method, 1), null);
        method = t3.get$value(t3);
      } else
        obj = ctrlr;
      t3 = J.getInterceptor$x($event);
      t2.dispatchMethod$3(ctrlr, obj, method, [$event, typeof $event === "object" && $event !== null && !!t3.$isCustomEvent ? t3.get$detail($event) : null, t1]);
    }, "call$1", null, 2, 0, null, 349, "call"],
    $isFunction: true
  },
  Polymer__invokeMethod_closure: {
    "": "Closure:271;",
    call$1: [function(p) {
      return p.get$isOptional() !== true;
    }, "call$1", null, 2, 0, null, 645, "call"],
    $isFunction: true
  },
  Polymer_unveilElements_closure: {
    "": "Closure:271;",
    call$1: [function(_) {
      var nodes, t1, t2, t3;
      nodes = W._FrozenElementList$_wrap(document.querySelectorAll(".polymer-veiled"), null);
      for (t1 = nodes.get$iterator(nodes); t1.moveNext$0();) {
        t2 = J.get$classes$x(t1._current);
        t3 = J.getInterceptor$ax(t2);
        t3.add$1(t2, "polymer-unveil");
        t3.remove$1(t2, "polymer-veiled");
      }
      if (nodes.get$isNotEmpty(nodes)) {
        t1 = C._CustomEventStreamProvider__determineTransitionEventType.forTarget$1(window);
        t1.get$first(t1).then$1(new A.Polymer_unveilElements__closure(nodes));
      }
    }, "call$1", null, 2, 0, null, 335, "call"],
    $isFunction: true
  },
  Polymer_unveilElements__closure: {
    "": "Closure:271;nodes_0",
    call$1: [function(_) {
      var t1;
      for (t1 = this.nodes_0, t1 = t1.get$iterator(t1); t1.moveNext$0();)
        J.remove$1$ax(J.get$classes$x(t1._current), "polymer-unveil");
    }, "call$1", null, 2, 0, null, 335, "call"],
    $isFunction: true
  },
  _PolymerBinding: {
    "": "NodeBinding;_polymer$_target,_property,_sub,_lastValue,_node_binding$_node,_model,_observer,_pathSub,property,path",
    close$0: [function(_) {
      if (this._node_binding$_node == null)
        return;
      this._sub.cancel$0();
      X.NodeBinding.prototype.close$0.call(this, this);
    }, "call$0", "get$close", 0, 0, null],
    valueChanged$1: [function(newValue) {
      this._lastValue = newValue;
      this._polymer$_target.setField$2(this._property, newValue);
    }, "call$1", "get$valueChanged", 2, 0, null, 274],
    _propertyValueChanged$1: [function(records) {
      var t1, t2, record, t3, newValue;
      for (t1 = J.get$iterator$ax(records), t2 = this._property; t1.moveNext$0();) {
        record = t1.get$current();
        t3 = J.getInterceptor(record);
        if (typeof record === "object" && record !== null && !!t3.$isPropertyChangeRecord && J.$eq(record.name, t2) === true) {
          newValue = this._polymer$_target._invoke$4(t2, 1, t2._name, []).reflectee;
          t1 = this._lastValue;
          if (t1 == null ? newValue != null : t1 !== newValue)
            J.set$value$x(this._observer, newValue);
          return;
        }
      }
    }, "call$1", "get$_propertyValueChanged", 2, 0, 646, 303],
    _PolymerBinding$4: function(node, property, model, path) {
      this._sub = J.get$changes$x(node).listen$1(this.get$_propertyValueChanged());
    }
  },
  PolymerElement: {
    "": ["HtmlElement_Polymer_ChangeNotifier;change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    PolymerElement$created$0: function(receiver) {
      this.polymerCreated$0(receiver);
    },
    static: {PolymerElement$created: function(receiver) {
        var t1, t2, t3, t4;
        t1 = $.get$Polymer__polymerSyntax();
        t2 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t3 = J.JSString;
        t4 = W.Element;
        t4 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t3, t4), null, null), [t3, t4]);
        receiver.polymer$Polymer$syntax = t1;
        receiver.polymer$Polymer$_shadowRoots = t2;
        receiver.polymer$Polymer$$ = t4;
        C.PolymerElement_methods.Element$created$0(receiver);
        C.PolymerElement_methods.PolymerElement$created$0(receiver);
        return receiver;
      }}
  },
  HtmlElement_Polymer: {
    "": ["HtmlElement+Polymer;syntax:polymer$Polymer$syntax=,$$:polymer$Polymer$$=-631", null, function() {
      return [C.C_Reflectable];
    }],
    $isPolymer: true,
    $isNodeBindExtension: true,
    $isObservable: true,
    $isElement: true,
    $isInterceptor: true,
    $isEventTarget: true,
    $isNode: true
  },
  HtmlElement_Polymer_ChangeNotifier: {
    "": "HtmlElement_Polymer+ChangeNotifier;",
    $isObservable: true
  },
  _PropertyValue: {
    "": "Object;oldValue>,newValue*",
    $is_PropertyValue: true
  },
  _PolymerExpressionsWithEventDelegate: {
    "": "PolymerExpressions;globals",
    prepareBinding$3: [function(path, $name, node) {
      return A.Polymer_prepareBinding(path, $name, node, T.PolymerExpressions.prototype.get$prepareBinding.call(this));
    }, "call$3", "get$prepareBinding", 6, 0, null, 313, 12, 312]
  },
  _Job: {
    "": "Object;_callback,_timer",
    _callback$0: function() {
      return this._callback.call$0();
    },
    stop$0: [function(_) {
      var t1 = this._timer;
      if (t1 != null) {
        t1.cancel$0();
        this._timer = null;
      }
    }, "call$0", "get$stop", 0, 0, null],
    complete$0: [function(_) {
      if (this._timer != null) {
        this.stop$0(0);
        this._callback$0();
      }
    }, "call$0", "get$complete", 0, 0, 107]
  },
  CustomTag: {
    "": "Object;tagName>",
    $isCustomTag: true
  },
  _initPolymerOptimized_closure: {
    "": "Closure:271;",
    call$1: [function(_) {
      var t1 = $.get$Polymer__ready().future;
      if (t1._state !== 0)
        H.throwExpression(new P.StateError("Future already completed"));
      t1._asyncComplete$1(null);
      return;
    }, "call$1", null, 2, 0, null, 335, "call"],
    $isFunction: true
  },
  _loadLibrary_closure: {
    "": "Closure:271;",
    call$1: [function(d) {
      var t1 = J.getInterceptor(d);
      return typeof d === "object" && d !== null && !!t1.$isMethodMirror;
    }, "call$1", null, 2, 0, null, 647, "call"],
    $isFunction: true
  },
  _loadLibrary_closure0: {
    "": "Closure:271;",
    call$1: [function(d) {
      var t1 = J.getInterceptor(d);
      return typeof d === "object" && d !== null && !!t1.$isClassMirror;
    }, "call$1", null, 2, 0, null, 647, "call"],
    $isFunction: true
  },
  _maybeInvoke_closure: {
    "": "Closure:271;",
    call$1: [function(p) {
      return p.get$isOptional() !== true;
    }, "call$1", null, 2, 0, null, 645, "call"],
    $isFunction: true
  },
  _InitMethodAnnotation: {
    "": "Object;"
  }
}],
["polymer.deserialize", "package:polymer/deserialize.dart", , Z, {
  "": "",
  deserializeValue: [function(value, currentValue, type) {
    var handler, t1, exception;
    handler = J.$index$asx($.get$_typeHandlers(), type.get$qualifiedName());
    if (handler != null)
      return handler.call$2(value, currentValue);
    try {
      t1 = C.C_JsonCodec.decode$1(J.replaceAll$2$s(value, "'", "\""));
      return t1;
    } catch (exception) {
      H.unwrapException(exception);
      return value;
    }

  }, "call$3", "deserializeValue$closure", 6, 0, null, 23, 323, 11],
  closure0: {
    "": "Closure:108;",
    call$0: [function() {
      var m = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      m.$indexSet(0, C.Symbol_iC9, new Z._closure());
      m.$indexSet(0, C.Symbol_s2s, new Z._closure0());
      m.$indexSet(0, C.Symbol_4YB, new Z._closure1());
      m.$indexSet(0, C.Symbol_6TA, new Z._closure2());
      m.$indexSet(0, C.Symbol_mdn, new Z._closure3());
      m.$indexSet(0, C.Symbol_sMO, new Z._closure4());
      return m;
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _closure: {
    "": "Closure:426;",
    call$2: [function(x, _) {
      return x;
    }, "call$2", null, 4, 0, null, 21, 335, "call"],
    $isFunction: true
  },
  _closure0: {
    "": "Closure:426;",
    call$2: [function(x, _) {
      return x;
    }, "call$2", null, 4, 0, null, 21, 335, "call"],
    $isFunction: true
  },
  _closure1: {
    "": "Closure:426;",
    call$2: [function(x, def) {
      var t1, exception;
      try {
        t1 = P.DateTime_parse(x);
        return t1;
      } catch (exception) {
        H.unwrapException(exception);
        return def;
      }

    }, "call$2", null, 4, 0, null, 21, 648, "call"],
    $isFunction: true
  },
  _closure2: {
    "": "Closure:426;",
    call$2: [function(x, _) {
      return J.$eq(x, "false") !== true;
    }, "call$2", null, 4, 0, null, 21, 335, "call"],
    $isFunction: true
  },
  _closure3: {
    "": "Closure:426;",
    call$2: [function(x, def) {
      return H.Primitives_parseInt(x, null, new Z.__closure0(def));
    }, "call$2", null, 4, 0, null, 21, 648, "call"],
    $isFunction: true
  },
  __closure0: {
    "": "Closure:271;def_0",
    call$1: [function(_) {
      return this.def_0;
    }, "call$1", null, 2, 0, null, 335, "call"],
    $isFunction: true
  },
  _closure4: {
    "": "Closure:426;",
    call$2: [function(x, def) {
      return H.Primitives_parseDouble(x, new Z.__closure(def));
    }, "call$2", null, 4, 0, null, 21, 648, "call"],
    $isFunction: true
  },
  __closure: {
    "": "Closure:271;def_1",
    call$1: [function(_) {
      return this.def_1;
    }, "call$1", null, 2, 0, null, 335, "call"],
    $isFunction: true
  }
}],
["polymer.src.utils", "package:polymer/src/build/utils.dart", , G, {
  "": "",
  toCamelCase: [function(hyphenedName, startUppercase) {
    var segments, start, i, segment, t1;
    segments = hyphenedName.split("-");
    start = startUppercase ? 0 : 1;
    for (i = start; i < segments.length; ++i) {
      segment = segments[i];
      t1 = J.getInterceptor$asx(segment);
      if (J.$gt$n(t1.get$length(segment), 0)) {
        t1 = J.toUpperCase$0$s(t1.$index(segment, 0)) + t1.substring$1(segment, 1);
        if (i >= segments.length)
          return H.ioore(segments, i);
        segments[i] = t1;
      }
    }
    return C.JSArray_methods.join$1(segments, "");
  }, "call$2$startUppercase", "toCamelCase$closure", 2, 3, null, 112, 324, 325]
}],
["polymer_expressions", "package:polymer_expressions/polymer_expressions.dart", , T, {
  "": "",
  _classAttributeConverter: [function(v) {
    var t1 = J.getInterceptor$ax(v);
    if (typeof v === "object" && v !== null && !!t1.$isMap)
      t1 = J.where$1$ax(v.get$keys(), new T._classAttributeConverter_closure(v)).join$1(0, " ");
    else
      t1 = typeof v === "object" && v !== null && (v.constructor === Array || !!t1.$isIterable) ? t1.join$1(v, " ") : v;
    return t1;
  }, "call$1", "_classAttributeConverter$closure", 2, 0, 280, 326],
  _styleAttributeConverter: [function(v) {
    var t1 = J.getInterceptor$ax(v);
    if (typeof v === "object" && v !== null && !!t1.$isMap)
      t1 = J.map$1$ax(v.get$keys(), new T._styleAttributeConverter_closure(v)).join$1(0, ";");
    else
      t1 = typeof v === "object" && v !== null && (v.constructor === Array || !!t1.$isIterable) ? t1.join$1(v, ";") : v;
    return t1;
  }, "call$1", "_styleAttributeConverter$closure", 2, 0, 280, 326],
  _classAttributeConverter_closure: {
    "": "Closure:271;v_0",
    call$1: [function(k) {
      return J.$eq(this.v_0.$index(0, k), true);
    }, "call$1", null, 2, 0, null, 501, "call"],
    $isFunction: true
  },
  _styleAttributeConverter_closure: {
    "": "Closure:271;v_0",
    call$1: [function(k) {
      return H.S(k) + ": " + H.S(this.v_0.$index(0, k));
    }, "call$1", null, 2, 0, null, 501, "call"],
    $isFunction: true
  },
  PolymerExpressions: {
    "": "BindingDelegate;",
    prepareBinding$3: [function(path, $name, node) {
      var t1, t2, expr;
      if (path == null)
        return;
      t1 = new Y.Tokenizer(H.setRuntimeTypeInfo([], [Y.Token]), P.StringBuffer$(""), new P.RuneIterator(path, 0, 0, null), null);
      t2 = new U.AstFactory();
      t2 = new T.Parser0(t2, t1, null, null);
      t1 = t1.tokenize$0();
      t2._tokens = t1;
      t2._parser0$_iterator = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]);
      t2._advance$0();
      expr = t2._parseExpression$0();
      if (M.isSemanticTemplate(node)) {
        t1 = J.getInterceptor($name);
        if (t1.$eq($name, "bind") === true || t1.$eq($name, "repeat") === true) {
          t1 = J.getInterceptor(expr);
          t1 = typeof expr === "object" && expr !== null && !!t1.$isEmptyExpression;
        } else
          t1 = false;
      } else
        t1 = false;
      if (t1)
        return;
      return new T.PolymerExpressions_prepareBinding_closure(this, $name, expr);
    }, "call$3", "get$prepareBinding", 6, 0, 649, 313, 12, 312],
    prepareInstanceModel$1: [function(template) {
      return new T.PolymerExpressions_prepareInstanceModel_closure(this);
    }, "call$1", "get$prepareInstanceModel", 2, 0, null, 309]
  },
  PolymerExpressions_prepareBinding_closure: {
    "": "Closure:426;this_0,name_1,expr_2",
    call$2: [function(model, node) {
      var t1 = J.getInterceptor(model);
      if (typeof model !== "object" || model === null || !t1.$isScope) {
        t1 = this.this_0.globals;
        model = new K.Scope(null, model, V.ObservableMap_ObservableMap$from(t1 == null ? H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)) : t1, null, null), null);
      }
      t1 = J.getInterceptor(node);
      t1 = typeof node === "object" && node !== null && !!t1.$isElement;
      if (t1 && J.$eq(this.name_1, "class") === true)
        return T._Binding$(this.expr_2, model, T._classAttributeConverter$closure());
      if (t1 && J.$eq(this.name_1, "style") === true)
        return T._Binding$(this.expr_2, model, T._styleAttributeConverter$closure());
      return T._Binding$(this.expr_2, model, null);
    }, "call$2", null, 4, 0, null, 340, 312, "call"],
    $isFunction: true
  },
  PolymerExpressions_prepareInstanceModel_closure: {
    "": "Closure:271;this_0",
    call$1: [function(model) {
      var t1 = J.getInterceptor(model);
      if (typeof model === "object" && model !== null && !!t1.$isScope)
        t1 = model;
      else {
        t1 = this.this_0.globals;
        t1 = new K.Scope(null, model, V.ObservableMap_ObservableMap$from(t1 == null ? H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)) : t1, null, null), null);
      }
      return t1;
    }, "call$1", null, 2, 0, null, 340, "call"],
    $isFunction: true
  },
  _Binding: {
    "": "ChangeNotifier;_scope,_polymer_expressions$_expr,_converter,_polymer_expressions$_value,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records",
    _converter$1: function(arg0) {
      return this._converter.call$1(arg0);
    },
    _polymer_expressions$_setValue$1: [function(v) {
      var oldValue, t1;
      oldValue = this._polymer_expressions$_value;
      t1 = J.getInterceptor(v);
      if (typeof v === "object" && v !== null && !!t1.$isComprehension) {
        t1 = J.toList$1$growable$ax(J.map$1$ax(v.iterable, new T._Binding__setValue_closure(this, v)), false);
        this._polymer_expressions$_value = t1;
      } else {
        t1 = this._converter == null ? v : this._converter$1(v);
        this._polymer_expressions$_value = t1;
      }
      F.notifyPropertyChangeHelper(this, C.Symbol_value, oldValue, t1);
    }, "call$1", "get$_polymer_expressions$_setValue", 2, 0, 271, 326],
    get$value: [function(_) {
      return this._polymer_expressions$_value;
    }, null, null, 1, 0, 108, "value", 132],
    set$value: [function(_, v) {
      var e, exception, t1, t2;
      try {
        K.assign(this._polymer_expressions$_expr, v, this._scope);
      } catch (exception) {
        t1 = H.unwrapException(exception);
        t2 = J.getInterceptor(t1);
        if (typeof t1 === "object" && t1 !== null && !!t2.$isEvalException) {
          e = t1;
          $.get$_logger1().warning$1("Error evaluating expression '" + H.S(this._polymer_expressions$_expr) + "': " + J.get$message$x(e));
        } else
          throw exception;
      }

    }, null, null, 3, 0, 271, 326, "value", 132],
    _Binding$3: function(expr, scope, _converter) {
      var e, t1, exception, t2, t3;
      t1 = this._polymer_expressions$_expr;
      t1.get$onUpdate().listen$1(this.get$_polymer_expressions$_setValue()).onError$1(0, new T._Binding_closure(this));
      try {
        J.accept$1$x(t1, new K.Updater(this._scope));
        t1.get$currentValue();
        this._polymer_expressions$_setValue$1(t1.get$currentValue());
      } catch (exception) {
        t2 = H.unwrapException(exception);
        t3 = J.getInterceptor(t2);
        if (typeof t2 === "object" && t2 !== null && !!t3.$isEvalException) {
          e = t2;
          $.get$_logger1().warning$1("Error evaluating expression '" + H.S(t1) + "': " + J.get$message$x(e));
        } else
          throw exception;
      }

    },
    static: {_Binding$: function(expr, scope, _converter) {
        var t1 = H.setRuntimeTypeInfo(new P.ListQueue(null, 0, 0, 0), [null]);
        t1.ListQueue$1(null, null);
        t1 = new T._Binding(scope, expr.accept$1(0, new K.ObserverBuilder(scope, t1)), _converter, null, null, null);
        t1._Binding$3(expr, scope, _converter);
        return t1;
      }}
  },
  _Binding_closure: {
    "": "Closure:271;this_0",
    call$1: [function(e) {
      $.get$_logger1().warning$1("Error evaluating expression '" + H.S(this.this_0._polymer_expressions$_expr) + "': " + H.S(J.get$message$x(e)));
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  _Binding__setValue_closure: {
    "": "Closure:271;this_0,v_1",
    call$1: [function(i) {
      var vars = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      vars.$indexSet(0, this.v_1.identifier, i);
      return new K.Scope(this.this_0._scope, null, V.ObservableMap_ObservableMap$from(vars, null, null), null);
    }, "call$1", null, 2, 0, null, 418, "call"],
    $isFunction: true
  }
}],
["polymer_expressions.async", "package:polymer_expressions/async.dart", , B, {
  "": "",
  StreamBinding: {
    "": "ObservableBox;stream,_observable_box$_value,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records",
    StreamBinding$1: function(stream, $T) {
      this.stream.listen$1(new B.StreamBinding_closure($T, this));
    },
    $asObservableBox: function($T) {
      return [null];
    },
    static: {StreamBinding$: function(stream, $T) {
        var t1 = H.setRuntimeTypeInfo(new B.StreamBinding(stream, null, null, null), [$T]);
        t1.StreamBinding$1(stream, $T);
        return t1;
      }}
  },
  StreamBinding_closure: {
    "": "Closure;T_0,this_1",
    call$1: [function(i) {
      var t1 = this.this_1;
      t1._observable_box$_value = F.notifyPropertyChangeHelper(t1, C.Symbol_value, t1._observable_box$_value, i);
    }, "call$1", null, 2, 0, null, 418, "call"],
    $isFunction: true,
    $signature: function() {
      return H.computeSignature(function(T) {
        return {func: "dynamic__T0", args: [T]};
      }, this.this_1, "StreamBinding");
    }
  }
}],
["polymer_expressions.eval", "package:polymer_expressions/eval.dart", , K, {
  "": "",
  eval0: [function(expr, scope) {
    var t1, observer;
    t1 = new P.ListQueue(null, 0, 0, 0);
    t1.$builtinTypeInfo = [null];
    t1.ListQueue$1(null, null);
    observer = J.accept$1$x(expr, new K.ObserverBuilder(scope, t1));
    J.accept$1$x(observer, new K.Updater(scope));
    return observer.get$_eval$_value();
  }, "call$2", "eval0$closure", 4, 0, null, 327, 317],
  assign: [function(expr, value, scope) {
    var t1, t2, filters, t3, t4, property, expression, isIndex, filterExpr, observer, o;
    t1 = {};
    t1.expr_0 = expr;
    t2 = new K.assign_notAssignable(t1);
    filters = H.setRuntimeTypeInfo([], [U.Expression]);
    for (; t3 = t1.expr_0, t4 = J.getInterceptor$x(t3), typeof t3 === "object" && t3 !== null && !!t4.$isBinaryOperator;) {
      if (J.$eq(t4.get$operator(t3), "|") !== true)
        break;
      filters.push(t4.get$right(t3));
      t1.expr_0 = t4.get$left(t3);
    }
    t3 = t1.expr_0;
    t4 = J.getInterceptor$x(t3);
    if (typeof t3 === "object" && t3 !== null && !!t4.$isIdentifier) {
      property = t4.get$value(t3);
      expression = C.C_EmptyExpression;
      isIndex = false;
    } else if (typeof t3 === "object" && t3 !== null && !!t4.$isIndex) {
      t3 = t3.get$argument();
      t4 = J.getInterceptor(t3);
      if (typeof t3 !== "object" || t3 === null || !t4.$isLiteral)
        t2.call$0();
      expression = t1.expr_0.get$receiver();
      property = J.get$value$x(t1.expr_0.get$argument());
      isIndex = true;
    } else {
      if (typeof t3 === "object" && t3 !== null && !!t4.$isGetter) {
        expression = t3.get$receiver();
        property = J.get$name$x(t1.expr_0);
      } else if (typeof t3 === "object" && t3 !== null && !!t4.$isInvoke) {
        expression = t3.get$receiver();
        if (J.get$method$x(t1.expr_0) != null) {
          if (t1.expr_0.get$arguments() != null)
            t2.call$0();
          property = J.get$method$x(t1.expr_0);
        } else {
          t2.call$0();
          property = null;
        }
      } else {
        t2.call$0();
        expression = null;
        property = null;
      }
      isIndex = false;
    }
    for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(filters, filters.length, 0, null), [H.getTypeArgumentByIndex(filters, 0)]); t1.moveNext$0();) {
      filterExpr = t1._current;
      t2 = new P.ListQueue(null, 0, 0, 0);
      t2.$builtinTypeInfo = [null];
      t2.ListQueue$1(null, null);
      observer = J.accept$1$x(filterExpr, new K.ObserverBuilder(scope, t2));
      J.accept$1$x(observer, new K.Updater(scope));
      observer.get$_eval$_value();
      throw H.wrapException(K.EvalException$("filter must implement Transformer: " + H.S(filterExpr)));
    }
    o = K.eval0(expression, scope);
    if (o == null)
      throw H.wrapException(K.EvalException$("Can't assign to null: " + H.S(expression)));
    if (isIndex)
      J.$indexSet$ax(o, property, value);
    else
      H.reflect(o).setField$2(new H.Symbol0(H.Symbol_validate(property)), value);
  }, "call$3", "assign$closure", 6, 0, null, 327, 23, 317],
  _convert: [function(v) {
    var t1 = J.getInterceptor(v);
    if (typeof v === "object" && v !== null && !!t1.$isStream)
      return B.StreamBinding$(v, null);
    return v;
  }, "call$1", "_convert$closure", 2, 0, null, 326],
  closure5: {
    "": "Closure:426;",
    call$2: [function(a, b) {
      return J.$add$ns(a, b);
    }, "call$2", null, 4, 0, null, 133, 134, "call"],
    $isFunction: true
  },
  closure6: {
    "": "Closure:426;",
    call$2: [function(a, b) {
      return J.$sub$n(a, b);
    }, "call$2", null, 4, 0, null, 133, 134, "call"],
    $isFunction: true
  },
  closure7: {
    "": "Closure:426;",
    call$2: [function(a, b) {
      return J.$mul$n(a, b);
    }, "call$2", null, 4, 0, null, 133, 134, "call"],
    $isFunction: true
  },
  closure8: {
    "": "Closure:426;",
    call$2: [function(a, b) {
      return J.$div$n(a, b);
    }, "call$2", null, 4, 0, null, 133, 134, "call"],
    $isFunction: true
  },
  closure9: {
    "": "Closure:426;",
    call$2: [function(a, b) {
      return J.$eq(a, b);
    }, "call$2", null, 4, 0, null, 133, 134, "call"],
    $isFunction: true
  },
  closure10: {
    "": "Closure:426;",
    call$2: [function(a, b) {
      return J.$eq(a, b) !== true;
    }, "call$2", null, 4, 0, null, 133, 134, "call"],
    $isFunction: true
  },
  closure11: {
    "": "Closure:426;",
    call$2: [function(a, b) {
      return J.$gt$n(a, b);
    }, "call$2", null, 4, 0, null, 133, 134, "call"],
    $isFunction: true
  },
  closure12: {
    "": "Closure:426;",
    call$2: [function(a, b) {
      return J.$ge$n(a, b);
    }, "call$2", null, 4, 0, null, 133, 134, "call"],
    $isFunction: true
  },
  closure13: {
    "": "Closure:426;",
    call$2: [function(a, b) {
      return J.$lt$n(a, b);
    }, "call$2", null, 4, 0, null, 133, 134, "call"],
    $isFunction: true
  },
  closure14: {
    "": "Closure:426;",
    call$2: [function(a, b) {
      return J.$le$n(a, b);
    }, "call$2", null, 4, 0, null, 133, 134, "call"],
    $isFunction: true
  },
  closure15: {
    "": "Closure:426;",
    call$2: [function(a, b) {
      return a === true || b === true;
    }, "call$2", null, 4, 0, null, 133, 134, "call"],
    $isFunction: true
  },
  closure16: {
    "": "Closure:426;",
    call$2: [function(a, b) {
      return a === true && b === true;
    }, "call$2", null, 4, 0, null, 133, 134, "call"],
    $isFunction: true
  },
  closure17: {
    "": "Closure:426;",
    call$2: [function(a, f) {
      var t1 = H.buildInterfaceType(P.Object);
      t1 = H.buildFunctionType(t1, [t1])._isTest$1(f);
      if (t1)
        return f.call$1(a);
      throw H.wrapException(K.EvalException$("Filters must be a one-argument function."));
    }, "call$2", null, 4, 0, null, 133, 154, "call"],
    $isFunction: true
  },
  closure18: {
    "": "Closure:271;",
    call$1: [function(a) {
      return a;
    }, "call$1", null, 2, 0, null, 133, "call"],
    $isFunction: true
  },
  closure19: {
    "": "Closure:271;",
    call$1: [function(a) {
      return J.$negate$n(a);
    }, "call$1", null, 2, 0, null, 133, "call"],
    $isFunction: true
  },
  closure20: {
    "": "Closure:271;",
    call$1: [function(a) {
      return a !== true;
    }, "call$1", null, 2, 0, null, 133, "call"],
    $isFunction: true
  },
  assign_notAssignable: {
    "": "Closure:108;box_0",
    call$0: [function() {
      return H.throwExpression(K.EvalException$("Expression is not assignable: " + H.S(this.box_0.expr_0)));
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Scope: {
    "": "Object;parent>,model,_variables,__modelMirror",
    get$_modelMirror: function() {
      var t1 = this.__modelMirror;
      if (t1 != null)
        return t1;
      t1 = H.reflect(this.model);
      this.__modelMirror = t1;
      return t1;
    },
    $index: [function(_, $name) {
      var t1, symbol, memberMirror, t2;
      if (J.$eq($name, "this") === true)
        return this.model;
      else {
        t1 = this._variables._observable_map$_map;
        if (t1.containsKey$1($name))
          return K._convert(t1.$index(0, $name));
        else if (this.model != null) {
          symbol = new H.Symbol0(H.Symbol_validate($name));
          memberMirror = Z.getMemberMirror(H.reflectClassByMangledName(J.get$runtimeType$(this.get$_modelMirror().reflectee)._typeName), symbol);
          t1 = J.getInterceptor(memberMirror);
          if (typeof memberMirror !== "object" || memberMirror === null || !t1.$isVariableMirror)
            t2 = typeof memberMirror === "object" && memberMirror !== null && !!t1.$isMethodMirror && memberMirror.get$isGetter();
          else
            t2 = true;
          if (t2)
            return K._convert(this.get$_modelMirror().getField$1(symbol).reflectee);
          else if (typeof memberMirror === "object" && memberMirror !== null && !!t1.$isMethodMirror)
            return new K.Method0(this.get$_modelMirror(), symbol);
        }
      }
      t1 = this.parent;
      if (t1 != null)
        return K._convert(t1.$index(0, $name));
      else
        throw H.wrapException(K.EvalException$("variable '" + H.S($name) + "' not found"));
    }, "call$1", "get$[]", 2, 0, null, 12],
    ownerOf$1: [function($name) {
      var t1;
      if (J.$eq($name, "this") === true)
        return;
      else {
        t1 = this._variables;
        if (t1._observable_map$_map.containsKey$1($name))
          return t1;
        else {
          t1 = H.Symbol_validate($name);
          if (Z.getMemberMirror(H.reflectClassByMangledName(J.get$runtimeType$(this.get$_modelMirror().reflectee)._typeName), new H.Symbol0(t1)) != null)
            return this.model;
        }
      }
      t1 = this.parent;
      if (t1 != null)
        return t1.ownerOf$1($name);
    }, "call$1", "get$ownerOf", 2, 0, null, 12],
    contains$1: [function(_, $name) {
      var t1;
      if (this._variables._observable_map$_map.containsKey$1($name))
        return true;
      else {
        t1 = H.Symbol_validate($name);
        if (Z.getMemberMirror(H.reflectClassByMangledName(J.get$runtimeType$(this.get$_modelMirror().reflectee)._typeName), new H.Symbol0(t1)) != null)
          return true;
      }
      t1 = this.parent;
      if (t1 != null)
        return t1.contains$1(0, $name);
      return false;
    }, "call$1", "get$contains", 2, 0, null, 12],
    $isScope: true
  },
  ExpressionObserver: {
    "": "Object;_parent?,_eval$_value<",
    get$onUpdate: function() {
      var t1 = this._eval$_controller;
      return H.setRuntimeTypeInfo(new P._BroadcastStream(t1), [H.getTypeArgumentByIndex(t1, 0)]);
    },
    get$currentValue: function() {
      return this._eval$_value;
    },
    _updateSelf$1: [function(scope) {
    }, "call$1", "get$_updateSelf", 2, 0, null, 317],
    _invalidate$1: [function(scope) {
      var t1;
      this._eval$_observe$1(0, scope);
      t1 = this._parent;
      if (t1 != null)
        t1._invalidate$1(scope);
    }, "call$1", "get$_invalidate", 2, 0, null, 317],
    _eval$_observe$1: [function(_, scope) {
      var t1, _oldValue, t2;
      t1 = this._eval$_subscription;
      if (t1 != null) {
        t1.cancel$0();
        this._eval$_subscription = null;
      }
      _oldValue = this._eval$_value;
      this._updateSelf$1(scope);
      t1 = this._eval$_value;
      if (t1 == null ? _oldValue != null : t1 !== _oldValue) {
        t2 = this._eval$_controller;
        if (t2._state >= 4)
          H.throwExpression(t2._addEventError$0());
        t2._sendData$1(t1);
      }
    }, "call$1", "get$_eval$_observe", 2, 0, null, 317],
    toString$0: [function(_) {
      return this._eval$_expr.toString$0(0);
    }, "call$0", "get$toString", 0, 0, null],
    $isExpression: true
  },
  Updater: {
    "": "RecursiveVisitor;scope",
    visitExpression$1: [function(e) {
      e._eval$_observe$1(0, this.scope);
    }, "call$1", "get$visitExpression", 2, 0, null, 18],
    visitInExpression$1: [function(c) {
      J.accept$1$x(c.get$right(c), this);
      c._eval$_observe$1(0, this.scope);
    }, "call$1", "get$visitInExpression", 2, 0, null, 331]
  },
  ObserverBuilder: {
    "": "Visitor0;scope,parents",
    visitEmptyExpression$1: [function(e) {
      return new K.EmptyObserver(e, null, null, null, P.StreamController_StreamController$broadcast(null, null, false, null));
    }, "call$1", "get$visitEmptyExpression", 2, 0, null, 18],
    visitParenthesizedExpression$1: [function(e) {
      return e.child.accept$1(0, this);
    }, "call$1", "get$visitParenthesizedExpression", 2, 0, null, 18],
    visitGetter$1: [function(g) {
      var receiver, getter;
      receiver = J.accept$1$x(g.get$receiver(), this);
      getter = new K.GetterObserver(receiver, g, null, null, null, P.StreamController_StreamController$broadcast(null, null, false, null));
      receiver.set$_parent(getter);
      return getter;
    }, "call$1", "get$visitGetter", 2, 0, null, 433],
    visitIndex$1: [function(i) {
      var receiver, arg, index;
      receiver = J.accept$1$x(i.get$receiver(), this);
      arg = J.accept$1$x(i.get$argument(), this);
      index = new K.IndexObserver(receiver, arg, i, null, null, null, P.StreamController_StreamController$broadcast(null, null, false, null));
      receiver.set$_parent(index);
      arg.set$_parent(index);
      return index;
    }, "call$1", "get$visitIndex", 2, 0, null, 418],
    visitInvoke$1: [function(i) {
      var receiver, t1, args, t2, invoke;
      receiver = J.accept$1$x(i.get$receiver(), this);
      t1 = i.get$arguments();
      if (t1 == null)
        args = null;
      else {
        t2 = this.get$visit();
        t1.toString;
        args = H.setRuntimeTypeInfo(new H.MappedListIterable(t1, t2), [null, null]).toList$1$growable(0, false);
      }
      invoke = new K.InvokeObserver(receiver, args, i, null, null, null, P.StreamController_StreamController$broadcast(null, null, false, null));
      receiver.set$_parent(invoke);
      if (args != null) {
        args.toString;
        H.IterableMixinWorkaround_forEach(args, new K.ObserverBuilder_visitInvoke_closure(invoke));
      }
      return invoke;
    }, "call$1", "get$visitInvoke", 2, 0, null, 418],
    visitLiteral$1: [function(l) {
      return new K.LiteralObserver(l, null, null, null, P.StreamController_StreamController$broadcast(null, null, false, null));
    }, "call$1", "get$visitLiteral", 2, 0, null, 328],
    visitMapLiteral$1: [function(l) {
      var entries, map;
      entries = H.setRuntimeTypeInfo(new H.MappedListIterable(l.get$entries(l), this.get$visit()), [null, null]).toList$1$growable(0, false);
      map = new K.MapLiteralObserver(entries, l, null, null, null, P.StreamController_StreamController$broadcast(null, null, false, null));
      H.IterableMixinWorkaround_forEach(entries, new K.ObserverBuilder_visitMapLiteral_closure(map));
      return map;
    }, "call$1", "get$visitMapLiteral", 2, 0, null, 328],
    visitMapLiteralEntry$1: [function(e) {
      var key, value, entry;
      key = J.accept$1$x(e.get$key(e), this);
      value = J.accept$1$x(e.get$entryValue(), this);
      entry = new K.MapLiteralEntryObserver(key, value, e, null, null, null, P.StreamController_StreamController$broadcast(null, null, false, null));
      key.set$_parent(entry);
      value.set$_parent(entry);
      return entry;
    }, "call$1", "get$visitMapLiteralEntry", 2, 0, null, 18],
    visitIdentifier$1: [function(i) {
      return new K.IdentifierObserver(i, null, null, null, P.StreamController_StreamController$broadcast(null, null, false, null));
    }, "call$1", "get$visitIdentifier", 2, 0, null, 418],
    visitBinaryOperator$1: [function(o) {
      var left, right, binary;
      left = J.accept$1$x(o.get$left(o), this);
      right = J.accept$1$x(o.get$right(o), this);
      binary = new K.BinaryObserver(left, right, o, null, null, null, P.StreamController_StreamController$broadcast(null, null, false, null));
      left.set$_parent(binary);
      right.set$_parent(binary);
      return binary;
    }, "call$1", "get$visitBinaryOperator", 2, 0, null, 91],
    visitUnaryOperator$1: [function(o) {
      var expr, unary;
      expr = J.accept$1$x(o.get$child(), this);
      unary = new K.UnaryObserver(expr, o, null, null, null, P.StreamController_StreamController$broadcast(null, null, false, null));
      expr.set$_parent(unary);
      return unary;
    }, "call$1", "get$visitUnaryOperator", 2, 0, null, 91],
    visitInExpression$1: [function(i) {
      var left, right, inexpr;
      left = J.accept$1$x(i.get$left(i), this);
      right = J.accept$1$x(i.get$right(i), this);
      inexpr = new K.InObserver(left, right, i, null, null, null, P.StreamController_StreamController$broadcast(null, null, false, null));
      right.set$_parent(inexpr);
      return inexpr;
    }, "call$1", "get$visitInExpression", 2, 0, null, 418]
  },
  ObserverBuilder_visitInvoke_closure: {
    "": "Closure:271;invoke_0",
    call$1: [function(a) {
      var t1 = this.invoke_0;
      a.set$_parent(t1);
      return t1;
    }, "call$1", null, 2, 0, null, 133, "call"],
    $isFunction: true
  },
  ObserverBuilder_visitMapLiteral_closure: {
    "": "Closure:271;map_0",
    call$1: [function(e) {
      var t1 = this.map_0;
      e.set$_parent(t1);
      return t1;
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  EmptyObserver: {
    "": "ExpressionObserver;_eval$_expr,_parent,_eval$_subscription,_eval$_value,_eval$_controller",
    _updateSelf$1: [function(scope) {
      this._eval$_value = scope.model;
    }, "call$1", "get$_updateSelf", 2, 0, null, 317],
    accept$1: [function(_, v) {
      return v.visitEmptyExpression$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    $asExpressionObserver: function() {
      return [U.EmptyExpression];
    },
    $isEmptyExpression: true,
    $isExpression: true
  },
  LiteralObserver: {
    "": "ExpressionObserver;_eval$_expr,_parent,_eval$_subscription,_eval$_value,_eval$_controller",
    get$value: function(_) {
      var t1 = this._eval$_expr;
      return t1.get$value(t1);
    },
    _updateSelf$1: [function(scope) {
      var t1 = this._eval$_expr;
      this._eval$_value = t1.get$value(t1);
    }, "call$1", "get$_updateSelf", 2, 0, null, 317],
    accept$1: [function(_, v) {
      return v.visitLiteral$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    $asExpressionObserver: function() {
      return [U.Literal];
    },
    $asLiteral: function() {
      return [null];
    },
    $isLiteral: true,
    $isExpression: true
  },
  MapLiteralObserver: {
    "": "ExpressionObserver;entries>,_eval$_expr,_parent,_eval$_subscription,_eval$_value,_eval$_controller",
    _updateSelf$1: [function(scope) {
      this._eval$_value = H.IterableMixinWorkaround_fold(this.entries, P.LinkedHashMap_LinkedHashMap(null, null, null, null, null), new K.MapLiteralObserver__updateSelf_closure());
    }, "call$1", "get$_updateSelf", 2, 0, null, 317],
    accept$1: [function(_, v) {
      return v.visitMapLiteral$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    $asExpressionObserver: function() {
      return [U.MapLiteral];
    },
    $isMapLiteral: true,
    $isExpression: true
  },
  MapLiteralObserver__updateSelf_closure: {
    "": "Closure:426;",
    call$2: [function(m, e) {
      J.$indexSet$ax(m, J.get$key$x(e).get$_eval$_value(), e.get$entryValue().get$_eval$_value());
      return m;
    }, "call$2", null, 4, 0, null, 226, 18, "call"],
    $isFunction: true
  },
  MapLiteralEntryObserver: {
    "": "ExpressionObserver;key>,entryValue<,_eval$_expr,_parent,_eval$_subscription,_eval$_value,_eval$_controller",
    accept$1: [function(_, v) {
      return v.visitMapLiteralEntry$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    $asExpressionObserver: function() {
      return [U.MapLiteralEntry];
    },
    $isMapLiteralEntry: true,
    $isExpression: true
  },
  IdentifierObserver: {
    "": "ExpressionObserver;_eval$_expr,_parent,_eval$_subscription,_eval$_value,_eval$_controller",
    get$value: function(_) {
      var t1 = this._eval$_expr;
      return t1.get$value(t1);
    },
    _updateSelf$1: [function(scope) {
      var t1, owner, t2;
      t1 = this._eval$_expr;
      this._eval$_value = scope.$index(0, t1.get$value(t1));
      owner = scope.ownerOf$1(t1.get$value(t1));
      t2 = J.getInterceptor$x(owner);
      if (typeof owner === "object" && owner !== null && !!t2.$isObservable) {
        t1 = H.Symbol_validate(t1.get$value(t1));
        this._eval$_subscription = t2.get$changes(owner).listen$1(new K.IdentifierObserver__updateSelf_closure(this, scope, new H.Symbol0(t1)));
      }
    }, "call$1", "get$_updateSelf", 2, 0, null, 317],
    accept$1: [function(_, v) {
      return v.visitIdentifier$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    $asExpressionObserver: function() {
      return [U.Identifier];
    },
    $isIdentifier: true,
    $isExpression: true
  },
  IdentifierObserver__updateSelf_closure: {
    "": "Closure:271;this_0,scope_1,symbol_2",
    call$1: [function(changes) {
      if (J.any$1$ax(changes, new K.IdentifierObserver__updateSelf__closure(this.symbol_2)) === true)
        this.this_0._invalidate$1(this.scope_1);
    }, "call$1", null, 2, 0, null, 637, "call"],
    $isFunction: true
  },
  IdentifierObserver__updateSelf__closure: {
    "": "Closure:271;symbol_3",
    call$1: [function(c) {
      var t1 = J.getInterceptor(c);
      return typeof c === "object" && c !== null && !!t1.$isPropertyChangeRecord && J.$eq(c.name, this.symbol_3) === true;
    }, "call$1", null, 2, 0, null, 331, "call"],
    $isFunction: true
  },
  UnaryObserver: {
    "": "ExpressionObserver;child<,_eval$_expr,_parent,_eval$_subscription,_eval$_value,_eval$_controller",
    get$operator: function(_) {
      var t1 = this._eval$_expr;
      return t1.get$operator(t1);
    },
    _updateSelf$1: [function(scope) {
      var t1, f;
      t1 = this._eval$_expr;
      f = $.get$_UNARY_OPERATORS().$index(0, t1.get$operator(t1));
      if (J.$eq(t1.get$operator(t1), "!") === true) {
        t1 = this.child.get$_eval$_value();
        this._eval$_value = f.call$1(t1 == null ? false : t1);
      } else {
        t1 = this.child;
        this._eval$_value = t1.get$_eval$_value() == null ? null : f.call$1(t1.get$_eval$_value());
      }
    }, "call$1", "get$_updateSelf", 2, 0, null, 317],
    accept$1: [function(_, v) {
      return v.visitUnaryOperator$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    $asExpressionObserver: function() {
      return [U.UnaryOperator];
    },
    $isUnaryOperator: true,
    $isExpression: true
  },
  BinaryObserver: {
    "": "ExpressionObserver;left>,right>,_eval$_expr,_parent,_eval$_subscription,_eval$_value,_eval$_controller",
    get$operator: function(_) {
      var t1 = this._eval$_expr;
      return t1.get$operator(t1);
    },
    _updateSelf$1: [function(scope) {
      var t1, f, t2, t3;
      t1 = this._eval$_expr;
      f = $.get$_BINARY_OPERATORS().$index(0, t1.get$operator(t1));
      if (J.$eq(t1.get$operator(t1), "&&") === true || J.$eq(t1.get$operator(t1), "||") === true) {
        t1 = this.left.get$_eval$_value();
        if (t1 == null)
          t1 = false;
        t2 = this.right.get$_eval$_value();
        this._eval$_value = f.call$2(t1, t2 == null ? false : t2);
      } else if (J.$eq(t1.get$operator(t1), "==") === true || J.$eq(t1.get$operator(t1), "!=") === true)
        this._eval$_value = f.call$2(this.left.get$_eval$_value(), this.right.get$_eval$_value());
      else {
        t2 = this.left;
        if (t2.get$_eval$_value() == null || this.right.get$_eval$_value() == null)
          this._eval$_value = null;
        else {
          if (J.$eq(t1.get$operator(t1), "|") === true) {
            t1 = t2.get$_eval$_value();
            t3 = J.getInterceptor(t1);
            t3 = typeof t1 === "object" && t1 !== null && !!t3.$isObservableList;
            t1 = t3;
          } else
            t1 = false;
          if (t1)
            this._eval$_subscription = H.interceptedTypeCast(t2.get$_eval$_value(), "$isObservableList").get$listChanges().listen$1(new K.BinaryObserver__updateSelf_closure(this, scope));
          this._eval$_value = f.call$2(t2.get$_eval$_value(), this.right.get$_eval$_value());
        }
      }
    }, "call$1", "get$_updateSelf", 2, 0, null, 317],
    accept$1: [function(_, v) {
      return v.visitBinaryOperator$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    $asExpressionObserver: function() {
      return [U.BinaryOperator];
    },
    $isBinaryOperator: true,
    $isExpression: true
  },
  BinaryObserver__updateSelf_closure: {
    "": "Closure:271;this_0,scope_1",
    call$1: [function(_) {
      return this.this_0._invalidate$1(this.scope_1);
    }, "call$1", null, 2, 0, null, 335, "call"],
    $isFunction: true
  },
  GetterObserver: {
    "": "ExpressionObserver;receiver<,_eval$_expr,_parent,_eval$_subscription,_eval$_value,_eval$_controller",
    get$name: function(_) {
      var t1 = this._eval$_expr;
      return t1.get$name(t1);
    },
    _updateSelf$1: [function(scope) {
      var receiverValue, t1, symbol;
      receiverValue = this.receiver.get$_eval$_value();
      if (receiverValue == null) {
        this._eval$_value = null;
        return;
      }
      t1 = this._eval$_expr;
      symbol = new H.Symbol0(H.Symbol_validate(t1.get$name(t1)));
      this._eval$_value = H.reflect(receiverValue).getField$1(symbol).reflectee;
      t1 = J.getInterceptor$x(receiverValue);
      if (typeof receiverValue === "object" && receiverValue !== null && !!t1.$isObservable)
        this._eval$_subscription = t1.get$changes(receiverValue).listen$1(new K.GetterObserver__updateSelf_closure(this, scope, symbol));
    }, "call$1", "get$_updateSelf", 2, 0, null, 317],
    accept$1: [function(_, v) {
      return v.visitGetter$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    $asExpressionObserver: function() {
      return [U.Getter];
    },
    $isGetter: true,
    $isExpression: true
  },
  GetterObserver__updateSelf_closure: {
    "": "Closure:271;this_0,scope_1,symbol_2",
    call$1: [function(changes) {
      if (J.any$1$ax(changes, new K.GetterObserver__updateSelf__closure(this.symbol_2)) === true)
        this.this_0._invalidate$1(this.scope_1);
    }, "call$1", null, 2, 0, null, 637, "call"],
    $isFunction: true
  },
  GetterObserver__updateSelf__closure: {
    "": "Closure:271;symbol_3",
    call$1: [function(c) {
      var t1 = J.getInterceptor(c);
      return typeof c === "object" && c !== null && !!t1.$isPropertyChangeRecord && J.$eq(c.name, this.symbol_3) === true;
    }, "call$1", null, 2, 0, null, 331, "call"],
    $isFunction: true
  },
  IndexObserver: {
    "": "ExpressionObserver;receiver<,argument<,_eval$_expr,_parent,_eval$_subscription,_eval$_value,_eval$_controller",
    _updateSelf$1: [function(scope) {
      var receiverValue, key, t1;
      receiverValue = this.receiver.get$_eval$_value();
      if (receiverValue == null) {
        this._eval$_value = null;
        return;
      }
      key = this.argument.get$_eval$_value();
      t1 = J.getInterceptor$asx(receiverValue);
      this._eval$_value = t1.$index(receiverValue, key);
      if (typeof receiverValue === "object" && receiverValue !== null && !!t1.$isObservable)
        this._eval$_subscription = t1.get$changes(receiverValue).listen$1(new K.IndexObserver__updateSelf_closure(this, scope, key));
    }, "call$1", "get$_updateSelf", 2, 0, null, 317],
    accept$1: [function(_, v) {
      return v.visitIndex$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    $asExpressionObserver: function() {
      return [U.Index];
    },
    $isIndex: true,
    $isExpression: true
  },
  IndexObserver__updateSelf_closure: {
    "": "Closure:271;this_0,scope_1,key_2",
    call$1: [function(changes) {
      if (J.any$1$ax(changes, new K.IndexObserver__updateSelf__closure(this.key_2)) === true)
        this.this_0._invalidate$1(this.scope_1);
    }, "call$1", null, 2, 0, null, 637, "call"],
    $isFunction: true
  },
  IndexObserver__updateSelf__closure: {
    "": "Closure:271;key_3",
    call$1: [function(c) {
      var t1 = J.getInterceptor(c);
      return typeof c === "object" && c !== null && !!t1.$isMapChangeRecord && J.$eq(c.key, this.key_3) === true;
    }, "call$1", null, 2, 0, null, 331, "call"],
    $isFunction: true
  },
  InvokeObserver: {
    "": "ExpressionObserver;receiver<,arguments<,_eval$_expr,_parent,_eval$_subscription,_eval$_value,_eval$_controller",
    get$method: function(_) {
      var t1 = this._eval$_expr;
      return t1.get$method(t1);
    },
    _updateSelf$1: [function(scope) {
      var t1, args, receiverValue, symbol;
      t1 = this.arguments;
      t1.toString;
      args = H.setRuntimeTypeInfo(new H.MappedListIterable(t1, new K.InvokeObserver__updateSelf_closure()), [null, null]).toList$0(0);
      receiverValue = this.receiver.get$_eval$_value();
      if (receiverValue == null) {
        this._eval$_value = null;
        return;
      }
      t1 = this._eval$_expr;
      if (t1.get$method(t1) == null) {
        t1 = J.getInterceptor(receiverValue);
        this._eval$_value = K._convert(typeof receiverValue === "object" && receiverValue !== null && !!t1.$isMethod0 ? receiverValue.mirror.invoke$3(receiverValue.symbol, args, null).reflectee : H.Primitives_applyFunction(receiverValue, args, P.Function__toMangledNames(null)));
      } else {
        symbol = new H.Symbol0(H.Symbol_validate(t1.get$method(t1)));
        this._eval$_value = H.reflect(receiverValue).invoke$3(symbol, args, null).reflectee;
        t1 = J.getInterceptor$x(receiverValue);
        if (typeof receiverValue === "object" && receiverValue !== null && !!t1.$isObservable)
          this._eval$_subscription = t1.get$changes(receiverValue).listen$1(new K.InvokeObserver__updateSelf_closure0(this, scope, symbol));
      }
    }, "call$1", "get$_updateSelf", 2, 0, null, 317],
    accept$1: [function(_, v) {
      return v.visitInvoke$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    $asExpressionObserver: function() {
      return [U.Invoke];
    },
    $isInvoke: true,
    $isExpression: true
  },
  InvokeObserver__updateSelf_closure: {
    "": "Closure:271;",
    call$1: [function(a) {
      return a.get$_eval$_value();
    }, "call$1", null, 2, 0, null, 133, "call"],
    $isFunction: true
  },
  InvokeObserver__updateSelf_closure0: {
    "": "Closure:597;this_0,scope_1,symbol_2",
    call$1: [function(changes) {
      if (J.any$1$ax(changes, new K.InvokeObserver__updateSelf__closure(this.symbol_2)) === true)
        this.this_0._invalidate$1(this.scope_1);
    }, "call$1", null, 2, 0, null, 637, "call"],
    $isFunction: true
  },
  InvokeObserver__updateSelf__closure: {
    "": "Closure:271;symbol_3",
    call$1: [function(c) {
      var t1 = J.getInterceptor(c);
      return typeof c === "object" && c !== null && !!t1.$isPropertyChangeRecord && J.$eq(c.name, this.symbol_3) === true;
    }, "call$1", null, 2, 0, null, 331, "call"],
    $isFunction: true
  },
  InObserver: {
    "": "ExpressionObserver;left>,right>,_eval$_expr,_parent,_eval$_subscription,_eval$_value,_eval$_controller",
    _updateSelf$1: [function(scope) {
      var identifier, iterable, t1, t2;
      identifier = this.left;
      iterable = this.right.get$_eval$_value();
      t1 = J.getInterceptor(iterable);
      if ((typeof iterable !== "object" || iterable === null || iterable.constructor !== Array && !t1.$isIterable) && iterable != null)
        throw H.wrapException(K.EvalException$("right side of 'in' is not an iterator"));
      if (typeof iterable === "object" && iterable !== null && !!t1.$isObservableList)
        this._eval$_subscription = iterable.get$listChanges().listen$1(new K.InObserver__updateSelf_closure(this, scope));
      t1 = J.get$value$x(identifier);
      t2 = iterable != null ? iterable : C.List_empty;
      this._eval$_value = new K.Comprehension(t1, t2);
    }, "call$1", "get$_updateSelf", 2, 0, null, 317],
    accept$1: [function(_, v) {
      return v.visitInExpression$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    $asExpressionObserver: function() {
      return [U.InExpression];
    },
    $isInExpression: true,
    $isExpression: true
  },
  InObserver__updateSelf_closure: {
    "": "Closure:271;this_0,scope_1",
    call$1: [function(_) {
      return this.this_0._invalidate$1(this.scope_1);
    }, "call$1", null, 2, 0, null, 335, "call"],
    $isFunction: true
  },
  Comprehension: {
    "": "Object;identifier,iterable",
    $isComprehension: true
  },
  Method0: {
    "": "Object:271;mirror,symbol",
    call$1: [function(arg0) {
      return this.mirror.invoke$3(this.symbol, [arg0], null).reflectee;
    }, "call$1", "get$$call", 2, 0, null, 650],
    $isMethod0: true,
    $isFunction: true
  },
  "+Method": 0,
  EvalException: {
    "": "Object;message>",
    toString$0: [function(_) {
      return "EvalException: " + this.message;
    }, "call$0", "get$toString", 0, 0, null],
    $isEvalException: true,
    static: {EvalException$: function(message) {
        return new K.EvalException(message);
      }}
  }
}],
["polymer_expressions.expression", "package:polymer_expressions/expression.dart", , U, {
  "": "",
  _listEquals0: [function(a, b) {
    var t1, i, t2;
    t1 = J.getInterceptor(a);
    if (t1.$eq(a, b))
      return true;
    if (a == null || b == null)
      return false;
    if (J.$eq(t1.get$length(a), b.length) !== true)
      return false;
    i = 0;
    while (true) {
      t2 = t1.get$length(a);
      if (typeof t2 !== "number")
        return H.iae(t2);
      if (!(i < t2))
        break;
      t2 = t1.$index(a, i);
      if (i >= b.length)
        return H.ioore(b, i);
      if (J.$eq(t2, b[i]) !== true)
        return false;
      ++i;
    }
    return true;
  }, "call$2", "_listEquals0$closure", 4, 0, null, 133, 134],
  _hashList: [function(l) {
    l.toString;
    return U._JenkinsSmiHash_finish0(H.IterableMixinWorkaround_fold(l, 0, new U._hashList_closure()));
  }, "call$1", "_hashList$closure", 2, 0, null, 328],
  _JenkinsSmiHash_combine1: [function(hash, value) {
    var t1 = J.$add$ns(hash, value);
    if (typeof t1 !== "number")
      return H.iae(t1);
    hash = 536870911 & t1;
    hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
    return hash ^ hash >>> 6;
  }, "call$2", "_JenkinsSmiHash_combine1$closure", 4, 0, null, 266, 23],
  _JenkinsSmiHash_finish0: [function(hash) {
    if (typeof hash !== "number")
      return H.iae(hash);
    hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash = (hash ^ hash >>> 11) >>> 0;
    return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
  }, "call$1", "_JenkinsSmiHash_finish0$closure", 2, 0, null, 266],
  AstFactory: {
    "": "Object;",
    getter$2: [function(_, g, n) {
      return new U.Getter(g, n);
    }, "call$2", "get$getter", 4, 0, 651, 433, 347],
    index$2: [function(_, e, a) {
      return new U.Index(e, a);
    }, "call$2", "get$index", 4, 0, 652, 18, 133],
    invoke$3: [function(e, m, a) {
      return new U.Invoke(e, m, a);
    }, "call$3", "get$invoke", 6, 0, null, 18, 226, 133]
  },
  Expression: {
    "": "Object;",
    $isExpression: true
  },
  EmptyExpression: {
    "": "Expression;",
    accept$1: [function(_, v) {
      return v.visitEmptyExpression$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    $isEmptyExpression: true
  },
  Literal: {
    "": "Expression;value>",
    accept$1: [function(_, v) {
      return v.visitLiteral$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    toString$0: [function(_) {
      var t1 = this.value;
      return typeof t1 === "string" ? "\"" + H.S(t1) + "\"" : H.S(t1);
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(_, o) {
      var t1;
      if (o == null)
        return false;
      t1 = H.checkSubtype(o, "$isLiteral", [H.getTypeArgumentByIndex(this, 0)], "$asLiteral");
      return t1 && J.$eq(J.get$value$x(o), this.value) === true;
    }, "call$1", "get$==", 2, 0, null, 91],
    get$hashCode: function(_) {
      return J.get$hashCode$(this.value);
    },
    $isLiteral: true
  },
  MapLiteral: {
    "": "Expression;entries>",
    accept$1: [function(_, v) {
      return v.visitMapLiteral$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    toString$0: [function(_) {
      return "{" + H.S(this.entries) + "}";
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(_, o) {
      var t1;
      if (o == null)
        return false;
      t1 = J.getInterceptor$x(o);
      return typeof o === "object" && o !== null && !!t1.$isMapLiteral && U._listEquals0(t1.get$entries(o), this.entries);
    }, "call$1", "get$==", 2, 0, null, 91],
    get$hashCode: function(_) {
      return U._hashList(this.entries);
    },
    $isMapLiteral: true
  },
  MapLiteralEntry: {
    "": "Expression;key>,entryValue<",
    accept$1: [function(_, v) {
      return v.visitMapLiteralEntry$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    toString$0: [function(_) {
      return H.S(this.key) + ": " + H.S(this.entryValue);
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(_, o) {
      var t1;
      if (o == null)
        return false;
      t1 = J.getInterceptor$x(o);
      return typeof o === "object" && o !== null && !!t1.$isMapLiteralEntry && J.$eq(t1.get$key(o), this.key) === true && J.$eq(o.get$entryValue(), this.entryValue) === true;
    }, "call$1", "get$==", 2, 0, null, 91],
    get$hashCode: function(_) {
      var t1, t2;
      t1 = J.get$hashCode$(this.key.value);
      t2 = J.get$hashCode$(this.entryValue);
      return U._JenkinsSmiHash_finish0(U._JenkinsSmiHash_combine1(U._JenkinsSmiHash_combine1(0, t1), t2));
    },
    $isMapLiteralEntry: true
  },
  ParenthesizedExpression: {
    "": "Expression;child",
    accept$1: [function(_, v) {
      return v.visitParenthesizedExpression$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    toString$0: [function(_) {
      return "(" + H.S(this.child) + ")";
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(_, o) {
      var t1;
      if (o == null)
        return false;
      t1 = J.getInterceptor(o);
      return typeof o === "object" && o !== null && !!t1.$isParenthesizedExpression && J.$eq(o.child, this.child);
    }, "call$1", "get$==", 2, 0, null, 91],
    get$hashCode: function(_) {
      return J.get$hashCode$(this.child);
    },
    $isParenthesizedExpression: true
  },
  Identifier: {
    "": "Expression;value>",
    accept$1: [function(_, v) {
      return v.visitIdentifier$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    toString$0: [function(_) {
      return this.value;
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(_, o) {
      var t1;
      if (o == null)
        return false;
      t1 = J.getInterceptor$x(o);
      return typeof o === "object" && o !== null && !!t1.$isIdentifier && J.$eq(t1.get$value(o), this.value) === true;
    }, "call$1", "get$==", 2, 0, null, 91],
    get$hashCode: function(_) {
      return J.get$hashCode$(this.value);
    },
    $isIdentifier: true
  },
  UnaryOperator: {
    "": "Expression;operator>,child<",
    accept$1: [function(_, v) {
      return v.visitUnaryOperator$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    toString$0: [function(_) {
      return H.S(this.operator) + " " + H.S(this.child);
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(_, o) {
      var t1;
      if (o == null)
        return false;
      t1 = J.getInterceptor$x(o);
      return typeof o === "object" && o !== null && !!t1.$isUnaryOperator && J.$eq(t1.get$operator(o), this.operator) === true && J.$eq(o.get$child(), this.child) === true;
    }, "call$1", "get$==", 2, 0, null, 91],
    get$hashCode: function(_) {
      var t1, t2;
      t1 = J.get$hashCode$(this.operator);
      t2 = J.get$hashCode$(this.child);
      return U._JenkinsSmiHash_finish0(U._JenkinsSmiHash_combine1(U._JenkinsSmiHash_combine1(0, t1), t2));
    },
    $isUnaryOperator: true
  },
  BinaryOperator: {
    "": "Expression;operator>,left>,right>",
    accept$1: [function(_, v) {
      return v.visitBinaryOperator$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    toString$0: [function(_) {
      return "(" + H.S(this.left) + " " + H.S(this.operator) + " " + H.S(this.right) + ")";
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(_, o) {
      var t1;
      if (o == null)
        return false;
      t1 = J.getInterceptor$x(o);
      return typeof o === "object" && o !== null && !!t1.$isBinaryOperator && J.$eq(t1.get$operator(o), this.operator) === true && J.$eq(t1.get$left(o), this.left) === true && J.$eq(t1.get$right(o), this.right) === true;
    }, "call$1", "get$==", 2, 0, null, 91],
    get$hashCode: function(_) {
      var t1, t2, t3;
      t1 = J.get$hashCode$(this.operator);
      t2 = J.get$hashCode$(this.left);
      t3 = J.get$hashCode$(this.right);
      return U._JenkinsSmiHash_finish0(U._JenkinsSmiHash_combine1(U._JenkinsSmiHash_combine1(U._JenkinsSmiHash_combine1(0, t1), t2), t3));
    },
    $isBinaryOperator: true
  },
  InExpression: {
    "": "Expression;left>,right>",
    accept$1: [function(_, v) {
      return v.visitInExpression$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    toString$0: [function(_) {
      return "(" + H.S(this.left) + " in " + H.S(this.right) + ")";
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(_, o) {
      var t1;
      if (o == null)
        return false;
      t1 = J.getInterceptor$x(o);
      return typeof o === "object" && o !== null && !!t1.$isInExpression && J.$eq(t1.get$left(o), this.left) === true && J.$eq(t1.get$right(o), this.right) === true;
    }, "call$1", "get$==", 2, 0, null, 91],
    get$hashCode: function(_) {
      var t1, t2;
      t1 = this.left;
      t1 = t1.get$hashCode(t1);
      t2 = J.get$hashCode$(this.right);
      return U._JenkinsSmiHash_finish0(U._JenkinsSmiHash_combine1(U._JenkinsSmiHash_combine1(0, t1), t2));
    },
    $isInExpression: true
  },
  Index: {
    "": "Expression;receiver<,argument<",
    accept$1: [function(_, v) {
      return v.visitIndex$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    toString$0: [function(_) {
      return H.S(this.receiver) + "[" + H.S(this.argument) + "]";
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(_, o) {
      var t1;
      if (o == null)
        return false;
      t1 = J.getInterceptor(o);
      return typeof o === "object" && o !== null && !!t1.$isIndex && J.$eq(o.get$receiver(), this.receiver) === true && J.$eq(o.get$argument(), this.argument) === true;
    }, "call$1", "get$==", 2, 0, null, 91],
    get$hashCode: function(_) {
      var t1, t2;
      t1 = J.get$hashCode$(this.receiver);
      t2 = J.get$hashCode$(this.argument);
      return U._JenkinsSmiHash_finish0(U._JenkinsSmiHash_combine1(U._JenkinsSmiHash_combine1(0, t1), t2));
    },
    $isIndex: true
  },
  Getter: {
    "": "Expression;receiver<,name>",
    accept$1: [function(_, v) {
      return v.visitGetter$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    toString$0: [function(_) {
      return H.S(this.receiver) + "." + H.S(this.name);
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(_, o) {
      var t1;
      if (o == null)
        return false;
      t1 = J.getInterceptor$x(o);
      return typeof o === "object" && o !== null && !!t1.$isGetter && J.$eq(o.get$receiver(), this.receiver) === true && J.$eq(t1.get$name(o), this.name) === true;
    }, "call$1", "get$==", 2, 0, null, 91],
    get$hashCode: function(_) {
      var t1, t2;
      t1 = J.get$hashCode$(this.receiver);
      t2 = J.get$hashCode$(this.name);
      return U._JenkinsSmiHash_finish0(U._JenkinsSmiHash_combine1(U._JenkinsSmiHash_combine1(0, t1), t2));
    },
    $isGetter: true
  },
  Invoke: {
    "": "Expression;receiver<,method>,arguments<",
    accept$1: [function(_, v) {
      return v.visitInvoke$1(this);
    }, "call$1", "get$accept", 2, 0, null, 326],
    toString$0: [function(_) {
      return H.S(this.receiver) + "." + H.S(this.method) + "(" + H.S(this.arguments) + ")";
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(_, o) {
      var t1;
      if (o == null)
        return false;
      t1 = J.getInterceptor$x(o);
      return typeof o === "object" && o !== null && !!t1.$isInvoke && J.$eq(o.get$receiver(), this.receiver) === true && J.$eq(t1.get$method(o), this.method) === true && U._listEquals0(o.get$arguments(), this.arguments);
    }, "call$1", "get$==", 2, 0, null, 91],
    get$hashCode: function(_) {
      var t1, t2, t3;
      t1 = J.get$hashCode$(this.receiver);
      t2 = J.get$hashCode$(this.method);
      t3 = U._hashList(this.arguments);
      return U._JenkinsSmiHash_finish0(U._JenkinsSmiHash_combine1(U._JenkinsSmiHash_combine1(U._JenkinsSmiHash_combine1(0, t1), t2), t3));
    },
    $isInvoke: true
  },
  _hashList_closure: {
    "": "Closure:426;",
    call$2: [function(h, item) {
      return U._JenkinsSmiHash_combine1(h, J.get$hashCode$(item));
    }, "call$2", null, 4, 0, null, 653, 446, "call"],
    $isFunction: true
  }
}],
["polymer_expressions.parser", "package:polymer_expressions/parser.dart", , T, {
  "": "",
  Parser0: {
    "": "Object;_astFactory,_tokenizer,_tokens,_parser0$_iterator",
    _advance$2: [function(kind, value) {
      var t1;
      if (kind != null) {
        t1 = J.get$kind$x(this._parser0$_iterator._current);
        t1 = t1 == null ? kind != null : t1 !== kind;
      } else
        t1 = false;
      if (!t1)
        t1 = value != null && J.$eq(J.get$value$x(this._parser0$_iterator._current), value) !== true;
      else
        t1 = true;
      if (t1)
        throw H.wrapException(Y.ParseException$("Expected " + value + ": " + H.S(this._parser0$_iterator._current)));
      this._parser0$_iterator.moveNext$0();
    }, function() {
      return this._advance$2(null, null);
    }, "_advance$0", "call$2", null, "get$_advance", 0, 4, null, 77, 77, 654, 23],
    _parseExpression$0: [function() {
      if (this._parser0$_iterator._current == null) {
        this._astFactory.toString;
        return C.C_EmptyExpression;
      }
      var expr = this._parseUnary$0();
      return expr == null ? null : this._parsePrecedence$2(expr, 0);
    }, "call$0", "get$_parseExpression", 0, 0, null],
    _parsePrecedence$2: [function(left, precedence) {
      var t1, t2, args, indexExpr, right;
      for (t1 = this._astFactory; t2 = this._parser0$_iterator._current, t2 != null;)
        if (J.get$kind$x(t2) === 9)
          if (J.$eq(J.get$value$x(this._parser0$_iterator._current), "(") === true) {
            args = this._parseArguments$0();
            t1.toString;
            left = new U.Invoke(left, null, args);
          } else if (J.$eq(J.get$value$x(this._parser0$_iterator._current), "[") === true) {
            indexExpr = this._parseIndex$0();
            t1.toString;
            left = new U.Index(left, indexExpr);
          } else
            break;
        else if (J.get$kind$x(this._parser0$_iterator._current) === 3) {
          this._advance$0();
          left = this._makeInvokeOrGetter$2(left, this._parseUnary$0());
        } else if (J.get$kind$x(this._parser0$_iterator._current) === 10 && J.$eq(J.get$value$x(this._parser0$_iterator._current), "in") === true) {
          t2 = J.getInterceptor(left);
          if (typeof left !== "object" || left === null || !t2.$isIdentifier)
            H.throwExpression(Y.ParseException$("in... statements must start with an identifier"));
          this._advance$0();
          right = this._parseExpression$0();
          t1.toString;
          left = new U.InExpression(left, right);
        } else if (J.get$kind$x(this._parser0$_iterator._current) === 8 && J.$ge$n(this._parser0$_iterator._current.get$precedence(), precedence))
          left = this._parseBinary$1(left);
        else
          break;
      return left;
    }, "call$2", "get$_parsePrecedence", 4, 0, null, 171, 655],
    _makeInvokeOrGetter$2: [function(left, right) {
      var t1, t2;
      if (typeof right === "object" && right !== null && !!right.$isIdentifier) {
        t1 = right.get$value(right);
        this._astFactory.toString;
        return new U.Getter(left, t1);
      } else {
        if (typeof right === "object" && right !== null && !!right.$isInvoke) {
          t1 = right.get$receiver();
          t2 = J.getInterceptor(t1);
          t2 = typeof t1 === "object" && t1 !== null && !!t2.$isIdentifier;
          t1 = t2;
        } else
          t1 = false;
        if (t1) {
          t1 = J.get$value$x(right.get$receiver());
          t2 = right.get$arguments();
          this._astFactory.toString;
          return new U.Invoke(left, t1, t2);
        } else
          throw H.wrapException(Y.ParseException$("expected identifier: " + H.S(right)));
      }
    }, "call$2", "get$_makeInvokeOrGetter", 4, 0, null, 171, 172],
    _parseBinary$1: [function(left) {
      var op, right, t1;
      op = this._parser0$_iterator._current;
      this._advance$0();
      right = this._parseUnary$0();
      while (true) {
        t1 = this._parser0$_iterator._current;
        if (t1 != null)
          t1 = (J.get$kind$x(t1) === 8 || J.get$kind$x(this._parser0$_iterator._current) === 3 || J.get$kind$x(this._parser0$_iterator._current) === 9) && J.$gt$n(this._parser0$_iterator._current.get$precedence(), op.get$precedence());
        else
          t1 = false;
        if (!t1)
          break;
        right = this._parsePrecedence$2(right, this._parser0$_iterator._current.get$precedence());
      }
      t1 = J.get$value$x(op);
      this._astFactory.toString;
      return new U.BinaryOperator(t1, left, right);
    }, "call$1", "get$_parseBinary", 2, 0, null, 171],
    _parseUnary$0: [function() {
      var value, t1, t2, expr;
      if (J.get$kind$x(this._parser0$_iterator._current) === 8) {
        value = J.get$value$x(this._parser0$_iterator._current);
        t1 = J.getInterceptor(value);
        if (t1.$eq(value, "+") === true || t1.$eq(value, "-") === true) {
          this._advance$0();
          if (J.get$kind$x(this._parser0$_iterator._current) === 6) {
            t1 = H.Primitives_parseInt(H.S(value) + H.S(J.get$value$x(this._parser0$_iterator._current)), null, null);
            this._astFactory.toString;
            value = new U.Literal(t1);
            value.$builtinTypeInfo = [null];
            this._advance$0();
            return value;
          } else {
            t1 = this._astFactory;
            if (J.get$kind$x(this._parser0$_iterator._current) === 7) {
              t2 = H.Primitives_parseDouble(H.S(value) + H.S(J.get$value$x(this._parser0$_iterator._current)), null);
              t1.toString;
              value = new U.Literal(t2);
              value.$builtinTypeInfo = [null];
              this._advance$0();
              return value;
            } else {
              expr = this._parsePrecedence$2(this._parsePrimary$0(), 11);
              t1.toString;
              return new U.UnaryOperator(value, expr);
            }
          }
        } else if (t1.$eq(value, "!") === true) {
          this._advance$0();
          expr = this._parsePrecedence$2(this._parsePrimary$0(), 11);
          this._astFactory.toString;
          return new U.UnaryOperator(value, expr);
        }
      }
      return this._parsePrimary$0();
    }, "call$0", "get$_parseUnary", 0, 0, null],
    _parsePrimary$0: [function() {
      var keyword, t1, expr;
      switch (J.get$kind$x(this._parser0$_iterator._current)) {
        case 10:
          keyword = J.get$value$x(this._parser0$_iterator._current);
          t1 = J.getInterceptor(keyword);
          if (t1.$eq(keyword, "this") === true) {
            this._advance$0();
            this._astFactory.toString;
            return new U.Identifier("this");
          } else if (t1.$eq(keyword, "in") === true)
            return;
          throw H.wrapException(new P.ArgumentError("unrecognized keyword: " + H.S(keyword)));
        case 2:
          return this._parseInvokeOrIdentifier$0();
        case 1:
          return this._parseString$0();
        case 6:
          return this._parseInteger$0();
        case 7:
          return this._parseDecimal$0();
        case 9:
          if (J.$eq(J.get$value$x(this._parser0$_iterator._current), "(") === true) {
            this._advance$0();
            expr = this._parseExpression$0();
            this._advance$2(9, ")");
            this._astFactory.toString;
            return new U.ParenthesizedExpression(expr);
          } else if (J.$eq(J.get$value$x(this._parser0$_iterator._current), "{") === true)
            return this._parseMapLiteral$0();
          return;
        default:
          return;
      }
    }, "call$0", "get$_parsePrimary", 0, 0, null],
    _parseMapLiteral$0: [function() {
      var entries, t1, t2, value;
      entries = [];
      t1 = this._astFactory;
      do {
        this._advance$0();
        if (J.get$kind$x(this._parser0$_iterator._current) === 9 && J.$eq(J.get$value$x(this._parser0$_iterator._current), "}") === true)
          break;
        t2 = J.get$value$x(this._parser0$_iterator._current);
        t1.toString;
        value = new U.Literal(t2);
        value.$builtinTypeInfo = [null];
        this._advance$0();
        this._advance$2(5, ":");
        entries.push(new U.MapLiteralEntry(value, this._parseExpression$0()));
        t2 = this._parser0$_iterator._current;
      } while (t2 != null && J.$eq(J.get$value$x(t2), ",") === true);
      this._advance$2(9, "}");
      return new U.MapLiteral(entries);
    }, "call$0", "get$_parseMapLiteral", 0, 0, null],
    _parseInvokeOrIdentifier$0: [function() {
      var value, identifier, args;
      if (J.$eq(J.get$value$x(this._parser0$_iterator._current), "true") === true) {
        this._advance$0();
        this._astFactory.toString;
        return H.setRuntimeTypeInfo(new U.Literal(true), [null]);
      }
      if (J.$eq(J.get$value$x(this._parser0$_iterator._current), "false") === true) {
        this._advance$0();
        this._astFactory.toString;
        return H.setRuntimeTypeInfo(new U.Literal(false), [null]);
      }
      if (J.$eq(J.get$value$x(this._parser0$_iterator._current), "null") === true) {
        this._advance$0();
        this._astFactory.toString;
        return H.setRuntimeTypeInfo(new U.Literal(null), [null]);
      }
      if (J.get$kind$x(this._parser0$_iterator._current) !== 2)
        H.throwExpression(Y.ParseException$("expected identifier: " + H.S(this._parser0$_iterator._current) + ".value"));
      value = J.get$value$x(this._parser0$_iterator._current);
      this._advance$0();
      this._astFactory.toString;
      identifier = new U.Identifier(value);
      args = this._parseArguments$0();
      if (args == null)
        return identifier;
      else
        return new U.Invoke(identifier, null, args);
    }, "call$0", "get$_parseInvokeOrIdentifier", 0, 0, null],
    _parseArguments$0: [function() {
      var t1, args;
      t1 = this._parser0$_iterator._current;
      if (t1 != null && J.get$kind$x(t1) === 9 && J.$eq(J.get$value$x(this._parser0$_iterator._current), "(") === true) {
        args = [];
        do {
          this._advance$0();
          if (J.get$kind$x(this._parser0$_iterator._current) === 9 && J.$eq(J.get$value$x(this._parser0$_iterator._current), ")") === true)
            break;
          args.push(this._parseExpression$0());
          t1 = this._parser0$_iterator._current;
        } while (t1 != null && J.$eq(J.get$value$x(t1), ",") === true);
        this._advance$2(9, ")");
        return args;
      }
      return;
    }, "call$0", "get$_parseArguments", 0, 0, null],
    _parseIndex$0: [function() {
      var t1, expr;
      t1 = this._parser0$_iterator._current;
      if (t1 != null && J.get$kind$x(t1) === 9 && J.$eq(J.get$value$x(this._parser0$_iterator._current), "[") === true) {
        this._advance$0();
        expr = this._parseExpression$0();
        this._advance$2(9, "]");
        return expr;
      }
      return;
    }, "call$0", "get$_parseIndex", 0, 0, null],
    _parseString$0: [function() {
      var t1, value;
      t1 = J.get$value$x(this._parser0$_iterator._current);
      this._astFactory.toString;
      value = H.setRuntimeTypeInfo(new U.Literal(t1), [null]);
      this._advance$0();
      return value;
    }, "call$0", "get$_parseString", 0, 0, null],
    _parseInteger$1: [function(prefix) {
      var t1, value;
      t1 = H.Primitives_parseInt(H.S(prefix) + H.S(J.get$value$x(this._parser0$_iterator._current)), null, null);
      this._astFactory.toString;
      value = H.setRuntimeTypeInfo(new U.Literal(t1), [null]);
      this._advance$0();
      return value;
    }, function() {
      return this._parseInteger$1("");
    }, "_parseInteger$0", "call$1", null, "get$_parseInteger", 0, 2, null, 122, 656],
    _parseDecimal$1: [function(prefix) {
      var t1, value;
      t1 = H.Primitives_parseDouble(H.S(prefix) + H.S(J.get$value$x(this._parser0$_iterator._current)), null);
      this._astFactory.toString;
      value = H.setRuntimeTypeInfo(new U.Literal(t1), [null]);
      this._advance$0();
      return value;
    }, function() {
      return this._parseDecimal$1("");
    }, "_parseDecimal$0", "call$1", null, "get$_parseDecimal", 0, 2, null, 122, 656]
  }
}],
["polymer_expressions.src.globals", "package:polymer_expressions/src/globals.dart", , K, {
  "": "",
  enumerate: [function(iterable) {
    return H.setRuntimeTypeInfo(new K.EnumerateIterable(iterable), [null]);
  }, "call$1", "enumerate$closure", 2, 0, 329, 153],
  IndexedValue: {
    "": "Object;index>-441,value>-657",
    $eq: [function(_, o) {
      var t1;
      if (o == null)
        return false;
      t1 = J.getInterceptor(o);
      return typeof o === "object" && o !== null && !!t1.$isIndexedValue && J.$eq(o.index, this.index) === true && J.$eq(o.value, this.value) === true;
    }, "call$1", "get$==", 2, 0, 271, 91, "=="],
    get$hashCode: [function(_) {
      return J.get$hashCode$(this.value);
    }, null, null, 1, 0, 594, "hashCode"],
    toString$0: [function(_) {
      return "(" + H.S(this.index) + ", " + H.S(this.value) + ")";
    }, "call$0", "get$toString", 0, 0, 435, "toString"],
    $isIndexedValue: true,
    "@": function() {
      return [C.C_Reflectable];
    },
    "<>": [4],
    static: {IndexedValue$: [function(index, value, $V) {
        return H.setRuntimeTypeInfo(new K.IndexedValue(index, value), [$V]);
      }, null, null, 4, 0, function() {
        return H.computeSignature(function(V) {
          return {func: "dynamic__int_V", args: [J.JSInt, V]};
        }, this.$receiver, "IndexedValue");
      }, 47, 23, "new IndexedValue" /* new IndexedValue:2:0 */]}
  },
  "+IndexedValue": [0],
  EnumerateIterable: {
    "": "IterableBase;_globals$_iterable",
    get$iterator: function(_) {
      var t1 = new K.EnumerateIterator(J.get$iterator$ax(this._globals$_iterable), 0, null);
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    },
    get$length: function(_) {
      return J.get$length$asx(this._globals$_iterable);
    },
    get$isEmpty: function(_) {
      return J.get$isEmpty$asx(this._globals$_iterable);
    },
    get$first: function(_) {
      var t1 = new K.IndexedValue(0, J.get$first$ax(this._globals$_iterable));
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    },
    get$last: function(_) {
      var t1, t2;
      t1 = this._globals$_iterable;
      t2 = J.getInterceptor$asx(t1);
      t1 = new K.IndexedValue(J.$sub$n(t2.get$length(t1), 1), t2.get$last(t1));
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    },
    elementAt$1: [function(_, index) {
      var t1 = new K.IndexedValue(index, J.elementAt$1$ax(this._globals$_iterable, index));
      t1.$builtinTypeInfo = this.$builtinTypeInfo;
      return t1;
    }, "call$1", "get$elementAt", 2, 0, null, 47],
    $asIterableBase: function($V) {
      return [[K.IndexedValue, $V]];
    },
    $asIterable: function($V) {
      return [[K.IndexedValue, $V]];
    }
  },
  EnumerateIterator: {
    "": "Iterator;_globals$_iterator,_globals$_index,_globals$_current",
    get$current: function() {
      return this._globals$_current;
    },
    moveNext$0: [function() {
      var t1, t2;
      t1 = this._globals$_iterator;
      if (t1.moveNext$0()) {
        t2 = this._globals$_index;
        this._globals$_index = t2 + 1;
        this._globals$_current = H.setRuntimeTypeInfo(new K.IndexedValue(t2, t1.get$current()), [null]);
        return true;
      }
      this._globals$_current = null;
      return false;
    }, "call$0", "get$moveNext", 0, 0, null],
    $asIterator: function($V) {
      return [[K.IndexedValue, $V]];
    }
  }
}],
["polymer_expressions.src.mirrors", "package:polymer_expressions/src/mirrors.dart", , Z, {
  "": "",
  getMemberMirror: [function(classMirror, $name) {
    var superclass, mirror, t1;
    if (classMirror.get$declarations().__js_mirrors$_source.containsKey$1($name))
      return classMirror.get$declarations().__js_mirrors$_source.$index(0, $name);
    superclass = classMirror.get$superclass();
    if (superclass != null && J.$eq(superclass.get$qualifiedName(), C.Symbol_46c) !== true) {
      mirror = Z.getMemberMirror(classMirror.get$superclass(), $name);
      if (mirror != null)
        return mirror;
    }
    for (t1 = J.get$iterator$ax(classMirror.get$superinterfaces()); t1.moveNext$0();) {
      mirror = Z.getMemberMirror(t1._current, $name);
      if (mirror != null)
        return mirror;
    }
    return;
  }, "call$2", "getMemberMirror$closure", 4, 0, null, 330, 12]
}],
["polymer_expressions.tokenizer", "package:polymer_expressions/tokenizer.dart", , Y, {
  "": "",
  escape: [function(c) {
    switch (c) {
      case 102:
        return 12;
      case 110:
        return 10;
      case 114:
        return 13;
      case 116:
        return 9;
      case 118:
        return 11;
      default:
        return c;
    }
  }, "call$1", "escape$closure", 2, 0, null, 331],
  Token: {
    "": "Object;kind>,value>,precedence<",
    toString$0: [function(_) {
      return "(" + this.kind + ", '" + this.value + "')";
    }, "call$0", "get$toString", 0, 0, null],
    $isToken: true
  },
  Tokenizer: {
    "": "Object;_tokenizer$_tokens,_sb,_tokenizer$_iterator,_tokenizer$_next",
    tokenize$0: [function() {
      var t1, t2, t3, t4, startChar, op2, op, charCodes, value;
      t1 = this._tokenizer$_iterator;
      this._tokenizer$_next = t1.moveNext$0() ? t1._currentCodePoint : null;
      for (t2 = this._tokenizer$_tokens; t3 = this._tokenizer$_next, t3 != null;)
        if (t3 === 32 || t3 === 9 || t3 === 160)
          this._tokenizer$_next = t1.moveNext$0() ? t1._currentCodePoint : null;
        else if (t3 === 34 || t3 === 39)
          this.tokenizeString$0();
        else {
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (!(97 <= t3 && t3 <= 122))
            t4 = 65 <= t3 && t3 <= 90 || t3 === 95 || t3 === 36 || t3 > 127;
          else
            t4 = true;
          if (t4)
            this.tokenizeIdentifierOrKeyword$0();
          else if (48 <= t3 && t3 <= 57)
            this.tokenizeNumber$0();
          else if (t3 === 46) {
            t3 = t1.moveNext$0() ? t1._currentCodePoint : null;
            this._tokenizer$_next = t3;
            if (typeof t3 !== "number")
              return H.iae(t3);
            if (48 <= t3 && t3 <= 57)
              this.tokenizeFraction$0();
            else
              t2.push(new Y.Token(3, ".", 11));
          } else if (t3 === 44) {
            this._tokenizer$_next = t1.moveNext$0() ? t1._currentCodePoint : null;
            t2.push(new Y.Token(4, ",", 0));
          } else if (t3 === 58) {
            this._tokenizer$_next = t1.moveNext$0() ? t1._currentCodePoint : null;
            t2.push(new Y.Token(5, ":", 0));
          } else if (C.JSArray_methods.contains$1(C.List_UiL, t3)) {
            startChar = this._tokenizer$_next;
            t3 = t1.moveNext$0() ? t1._currentCodePoint : null;
            this._tokenizer$_next = t3;
            if (C.JSArray_methods.contains$1(C.List_UiL, t3)) {
              t3 = this._tokenizer$_next;
              op2 = H.Primitives_stringFromCharCodes([startChar, t3]);
              if (C.JSArray_methods.contains$1(C.List_Ynd, op2)) {
                this._tokenizer$_next = t1.moveNext$0() ? t1._currentCodePoint : null;
                op = op2;
              } else {
                charCodes = P.List_List$filled(1, startChar, J.JSInt);
                op = H.Primitives_stringFromCharCodes(charCodes);
              }
            } else {
              charCodes = P.List_List$filled(1, startChar, J.JSInt);
              op = H.Primitives_stringFromCharCodes(charCodes);
            }
            t2.push(new Y.Token(8, op, C.Map_FKtZ4.$index(0, op)));
          } else if (C.JSArray_methods.contains$1(C.List_ww8, this._tokenizer$_next)) {
            charCodes = P.List_List$filled(1, this._tokenizer$_next, J.JSInt);
            value = H.Primitives_stringFromCharCodes(charCodes);
            t2.push(new Y.Token(9, value, C.Map_FKtZ4.$index(0, value)));
            this._tokenizer$_next = t1.moveNext$0() ? t1._currentCodePoint : null;
          } else
            this._tokenizer$_next = t1.moveNext$0() ? t1._currentCodePoint : null;
        }
      return t2;
    }, "call$0", "get$tokenize", 0, 0, null],
    tokenizeString$0: [function() {
      var quoteChar, t1, t2, t3, charCodes;
      quoteChar = this._tokenizer$_next;
      t1 = this._tokenizer$_iterator;
      t2 = t1.moveNext$0() ? t1._currentCodePoint : null;
      this._tokenizer$_next = t2;
      for (t3 = this._sb; t2 == null ? quoteChar != null : t2 !== quoteChar;) {
        if (t2 == null)
          throw H.wrapException(Y.ParseException$("unterminated string"));
        if (t2 === 92) {
          t2 = t1.moveNext$0() ? t1._currentCodePoint : null;
          this._tokenizer$_next = t2;
          if (t2 == null)
            throw H.wrapException(Y.ParseException$("unterminated string"));
          charCodes = P.List_List$filled(1, Y.escape(t2), J.JSInt);
          t2 = H.Primitives_stringFromCharCodes(charCodes);
          t3._contents = t3._contents + t2;
        } else {
          charCodes = P.List_List$filled(1, t2, J.JSInt);
          t2 = H.Primitives_stringFromCharCodes(charCodes);
          t3._contents = t3._contents + t2;
        }
        t2 = t1.moveNext$0() ? t1._currentCodePoint : null;
        this._tokenizer$_next = t2;
      }
      this._tokenizer$_tokens.push(new Y.Token(1, t3._contents, 0));
      t3._contents = "";
      this._tokenizer$_next = t1.moveNext$0() ? t1._currentCodePoint : null;
    }, "call$0", "get$tokenizeString", 0, 0, null],
    tokenizeIdentifierOrKeyword$0: [function() {
      var t1, t2, t3, t4, charCodes, value;
      t1 = this._tokenizer$_iterator;
      t2 = this._sb;
      while (true) {
        t3 = this._tokenizer$_next;
        if (t3 != null) {
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (!(97 <= t3 && t3 <= 122))
            if (!(65 <= t3 && t3 <= 90))
              t4 = 48 <= t3 && t3 <= 57 || t3 === 95 || t3 === 36 || t3 > 127;
            else
              t4 = true;
          else
            t4 = true;
        } else
          t4 = false;
        if (!t4)
          break;
        charCodes = P.List_List$filled(1, t3, J.JSInt);
        t3 = H.Primitives_stringFromCharCodes(charCodes);
        t2._contents = t2._contents + t3;
        this._tokenizer$_next = t1.moveNext$0() ? t1._currentCodePoint : null;
      }
      value = t2._contents;
      t1 = this._tokenizer$_tokens;
      if (C.JSArray_methods.contains$1(C.List_in_this, value))
        t1.push(new Y.Token(10, value, 0));
      else
        t1.push(new Y.Token(2, value, 0));
      t2._contents = "";
    }, "call$0", "get$tokenizeIdentifierOrKeyword", 0, 0, null],
    tokenizeNumber$0: [function() {
      var t1, t2, t3, t4, charCodes;
      t1 = this._tokenizer$_iterator;
      t2 = this._sb;
      while (true) {
        t3 = this._tokenizer$_next;
        if (t3 != null) {
          if (typeof t3 !== "number")
            return H.iae(t3);
          t4 = 48 <= t3 && t3 <= 57;
        } else
          t4 = false;
        if (!t4)
          break;
        charCodes = P.List_List$filled(1, t3, J.JSInt);
        t3 = H.Primitives_stringFromCharCodes(charCodes);
        t2._contents = t2._contents + t3;
        this._tokenizer$_next = t1.moveNext$0() ? t1._currentCodePoint : null;
      }
      if (t3 === 46) {
        t1 = t1.moveNext$0() ? t1._currentCodePoint : null;
        this._tokenizer$_next = t1;
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (48 <= t1 && t1 <= 57)
          this.tokenizeFraction$0();
        else
          this._tokenizer$_tokens.push(new Y.Token(3, ".", 11));
      } else {
        this._tokenizer$_tokens.push(new Y.Token(6, t2._contents, 0));
        t2._contents = "";
      }
    }, "call$0", "get$tokenizeNumber", 0, 0, null],
    tokenizeFraction$0: [function() {
      var t1, t2, t3, t4, charCodes;
      t1 = this._sb;
      t1.write$1(P.String_String$fromCharCode(46));
      t2 = this._tokenizer$_iterator;
      while (true) {
        t3 = this._tokenizer$_next;
        if (t3 != null) {
          if (typeof t3 !== "number")
            return H.iae(t3);
          t4 = 48 <= t3 && t3 <= 57;
        } else
          t4 = false;
        if (!t4)
          break;
        charCodes = P.List_List$filled(1, t3, J.JSInt);
        t3 = H.Primitives_stringFromCharCodes(charCodes);
        t1._contents = t1._contents + t3;
        this._tokenizer$_next = t2.moveNext$0() ? t2._currentCodePoint : null;
      }
      this._tokenizer$_tokens.push(new Y.Token(7, t1._contents, 0));
      t1._contents = "";
    }, "call$0", "get$tokenizeFraction", 0, 0, null]
  },
  ParseException: {
    "": "Object;message>",
    toString$0: [function(_) {
      return "ParseException: " + this.message;
    }, "call$0", "get$toString", 0, 0, null],
    static: {ParseException$: function(message) {
        return new Y.ParseException(message);
      }}
  }
}],
["polymer_expressions.visitor", "package:polymer_expressions/visitor.dart", , S, {
  "": "",
  Visitor0: {
    "": "Object;",
    visit$1: [function(s) {
      return J.accept$1$x(s, this);
    }, "call$1", "get$visit", 2, 0, 658, 86]
  },
  RecursiveVisitor: {
    "": "Visitor0;",
    visitEmptyExpression$1: [function(e) {
      return this.visitExpression$1(e);
    }, "call$1", "get$visitEmptyExpression", 2, 0, null, 18],
    visitParenthesizedExpression$1: [function(e) {
      e.child.accept$1(0, this);
      this.visitExpression$1(e);
    }, "call$1", "get$visitParenthesizedExpression", 2, 0, null, 18],
    visitGetter$1: [function(i) {
      J.accept$1$x(i.get$receiver(), this);
      this.visitExpression$1(i);
    }, "call$1", "get$visitGetter", 2, 0, null, 418],
    visitIndex$1: [function(i) {
      J.accept$1$x(i.get$receiver(), this);
      J.accept$1$x(i.get$argument(), this);
      this.visitExpression$1(i);
    }, "call$1", "get$visitIndex", 2, 0, null, 418],
    visitInvoke$1: [function(i) {
      var t1;
      J.accept$1$x(i.get$receiver(), this);
      t1 = i.get$arguments();
      if (t1 != null)
        for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();)
          J.accept$1$x(t1._current, this);
      this.visitExpression$1(i);
    }, "call$1", "get$visitInvoke", 2, 0, null, 418],
    visitLiteral$1: [function(l) {
      return this.visitExpression$1(l);
    }, "call$1", "get$visitLiteral", 2, 0, null, 328],
    visitMapLiteral$1: [function(l) {
      var t1;
      for (t1 = l.get$entries(l), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();)
        J.accept$1$x(t1._current, this);
      this.visitExpression$1(l);
    }, "call$1", "get$visitMapLiteral", 2, 0, null, 328],
    visitMapLiteralEntry$1: [function(e) {
      J.accept$1$x(e.get$key(e), this);
      J.accept$1$x(e.get$entryValue(), this);
      this.visitExpression$1(e);
    }, "call$1", "get$visitMapLiteralEntry", 2, 0, null, 18],
    visitIdentifier$1: [function(i) {
      return this.visitExpression$1(i);
    }, "call$1", "get$visitIdentifier", 2, 0, null, 418],
    visitBinaryOperator$1: [function(o) {
      J.accept$1$x(o.get$left(o), this);
      J.accept$1$x(o.get$right(o), this);
      this.visitExpression$1(o);
    }, "call$1", "get$visitBinaryOperator", 2, 0, null, 91],
    visitUnaryOperator$1: [function(o) {
      J.accept$1$x(o.get$child(), this);
      this.visitExpression$1(o);
    }, "call$1", "get$visitUnaryOperator", 2, 0, null, 91],
    visitInExpression$1: [function(c) {
      J.accept$1$x(c.get$left(c), this);
      J.accept$1$x(c.get$right(c), this);
      this.visitExpression$1(c);
    }, "call$1", "get$visitInExpression", 2, 0, null, 331]
  }
}],
["search", "package:dartdoc_viewer/search.dart", , B, {
  "": "",
  _nullFilter: [function(_) {
    return true;
  }, "call$1", "_nullFilter$closure", 2, 0, 334, 335],
  _splitQueryTerms: [function(query) {
    var queryList, splitDots, t1, split, t2;
    queryList = H.setRuntimeTypeInfo(new H.MappedListIterable(J.trim$0$s(query).toLowerCase().split(" "), new B._splitQueryTerms_closure()), [null, null]).toList$0(0);
    splitDots = H.setRuntimeTypeInfo(new H.MappedListIterable(queryList, new B._splitQueryTerms_closure0()), [null, null]).toList$0(0);
    for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(splitDots, splitDots.length, 0, null), [H.getTypeArgumentByIndex(splitDots, 0)]); t1.moveNext$0();) {
      split = t1._current;
      t2 = J.getInterceptor$asx(split);
      if (J.$gt$n(t2.get$length(split), 1)) {
        C.JSArray_methods.addAll$1(queryList, t2.where$1(split, new B._splitQueryTerms_closure1()));
        C.JSArray_methods.add$1(queryList, t2.join$1(split, "-"));
      }
    }
    return queryList;
  }, "call$1", "_splitQueryTerms$closure", 2, 0, null, 239],
  lookupSearchResults: [function(index, query, maxResults, filter) {
    var t1, stopwatch, scoredResults, resultSet, queryList, t2, key, lower, withoutDom, r, t3, $location, t4, qualifiedNameParts, compare;
    t1 = J.getInterceptor(query);
    if (t1.$eq(query, "") === true)
      return [];
    stopwatch = new P.Stopwatch(null, null);
    stopwatch.start$0(0);
    scoredResults = H.setRuntimeTypeInfo([], [B.SearchResult]);
    resultSet = H.setRuntimeTypeInfo([], [B.Hit]);
    queryList = B._splitQueryTerms(query);
    for (t2 = J.get$iterator$ax(index._search$_map.get$keys()); t2.moveNext$0();) {
      key = t2.get$current();
      lower = J.toLowerCase$0$s(key);
      if (H.IterableMixinWorkaround_any(queryList, new B.lookupSearchResults_closure(lower))) {
        if (H.stringContainsUnchecked(lower, ".dom.", 0))
          withoutDom = H.stringReplaceFirstUnchecked(lower, ".dom", "");
        else
          withoutDom = lower;
        resultSet.push(new B.Hit(key, withoutDom, J.$index$asx(index._search$_map, key)));
      }
    }
    for (t1 = J.get$iterator$ax(J.$gt$n(t1.get$length(query), 4) ? resultSet : H.SubListIterable$(resultSet, 0, 1000, null)); t1.moveNext$0();) {
      t2 = {};
      r = t1._current;
      if (C.JSNumber_methods._tdivFast$1(stopwatch.get$elapsedTicks() * 1000, 1000000) > 500)
        break;
      t2.score_0 = 0;
      t2.splitDotQueries_1 = [];
      H.IterableMixinWorkaround_forEach(queryList, new B.lookupSearchResults_closure0(t2, r));
      C.JSArray_methods.addAll$1(queryList, t2.splitDotQueries_1);
      t3 = J.getInterceptor$x(r);
      $location = new Y.DocsLocation(null, null, null, null, null);
      $location._extractPieces$1(t3.get$lower(r));
      t4 = new H.SubListIterable($location.get$componentNames(), 1, null);
      t4.$builtinTypeInfo = [null];
      qualifiedNameParts = t4.toList$0(0);
      if (filter.call$1($location) !== true)
        t2.score_0 = t2.score_0 - 500;
      if (J.$eq(t3.get$name(r), query) === true)
        t2.score_0 = t2.score_0 + 1000;
      if (J.$eq(t3.get$name(r), t3.get$lower(r)) !== true && J.contains$1$asx(t3.get$name(r), query) === true)
        t2.score_0 = t2.score_0 + 150;
      H.IterableMixinWorkaround_forEach(queryList, new B.lookupSearchResults_closure1(t2, r, $location, qualifiedNameParts));
      scoredResults.push(new B.SearchResult(t3.get$name(r), t3.get$type(r), t2.score_0, null));
    }
    compare = P.Comparable_compare$closure();
    H.Sort__doSort(scoredResults, 0, scoredResults.length - 1, compare);
    if (scoredResults.length > maxResults)
      scoredResults = H.SubListIterable$(scoredResults, 0, maxResults, null).toList$0(0);
    B._updatePositions(scoredResults);
    return scoredResults;
  }, "call$4", "lookupSearchResults$closure", 6, 2, null, 336, 47, 239, 337, 338],
  _updatePositions: [function(list) {
    var i;
    for (i = 0; i < list.length; ++i)
      J.set$position$x(list[i], i);
  }, "call$1", "_updatePositions$closure", 2, 0, null, 68],
  SearchResult: {
    "": "Object;element@-434,type*-434,score@-441,position*-441",
    get$url: [function(_) {
      var $location, sub, t1, t2, t3, t4, newLocation;
      if (!C.JSArray_methods.contains$1(C.List_Ss1, this.type))
        return this.element;
      $location = new Y.DocsLocation(null, null, null, null, null);
      $location._extractPieces$1(this.element);
      sub = $location.subMemberName;
      if (sub == null)
        sub = $location.memberName;
      if (sub == null)
        return this.element;
      t1 = $location.get$componentNames();
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1.pop();
      t1 = Y.DocsLocation$fromList(t1);
      t2 = t1.get$packagePlus();
      t3 = t1.libraryName;
      if (t3 == null)
        t3 = "";
      t4 = t1.memberName;
      t4 = t4 == null ? "" : "." + H.S(t4);
      t1 = t1.subMemberName;
      newLocation = new Y.DocsLocation(null, null, null, null, null);
      newLocation._extractPieces$1(C.JSArray_methods.join$1([t2, t3, t4, t1 == null ? "" : "." + H.S(t1)], ""));
      newLocation.anchor = C.JSString_methods.$add("id_", sub);
      t1 = newLocation.get$packagePlus();
      t2 = newLocation.libraryName;
      if (t2 == null)
        t2 = "";
      t3 = newLocation.memberName;
      t3 = t3 == null ? "" : "." + H.S(t3);
      t4 = newLocation.subMemberName;
      t1 = C.JSArray_methods.join$1([t1, t2, t3, t4 == null ? "" : "." + H.S(t4)], "");
      t2 = newLocation.anchor;
      return t1 + (t2 == null ? "" : "@" + H.S(t2));
    }, null, null, 1, 0, 435, "url"],
    score$1: function(arg0) {
      return this.score.call$1(arg0);
    },
    compareTo$1: [function(_, other) {
      return J.compareTo$1$ns(other.get$score(), this.score);
    }, "call$1", "get$compareTo", 2, 0, 659, 104, "compareTo"],
    toString$0: [function(_) {
      return "SearchResult(" + H.S(this.element) + ", " + H.S(this.type) + ", " + H.S(this.score) + ")";
    }, "call$0", "get$toString", 0, 0, 108, "toString"],
    $isSearchResult: true,
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {"": "SearchResult_typesThatLinkWithinAParentPage<-77", SearchResult$: [function(element, type, score) {
        return new B.SearchResult(element, type, score, null);
      }, null, null, 6, 0, 332, 169, 11, 333, "new SearchResult" /* new SearchResult:3:0 */]}
  },
  "+SearchResult": [0, 660],
  Hit: {
    "": "Object;name>,lower>,type>",
    toString$0: [function(_) {
      return "Hit(" + H.S(this.name) + ")";
    }, "call$0", "get$toString", 0, 0, null],
    score$1: [function(increase) {
      return J.$tdiv$n(increase, C.Map_ggES6.$index(0, this.type));
    }, "call$1", "get$score", 2, 0, 661, 662],
    $isHit: true
  },
  _splitQueryTerms_closure: {
    "": "Closure:271;",
    call$1: [function(x) {
      return J.replaceAll$2$s(x, ":", "-");
    }, "call$1", null, 2, 0, null, 21, "call"],
    $isFunction: true
  },
  _splitQueryTerms_closure0: {
    "": "Closure:271;",
    call$1: [function(x) {
      return J.split$1$s(x, ".");
    }, "call$1", null, 2, 0, null, 21, "call"],
    $isFunction: true
  },
  _splitQueryTerms_closure1: {
    "": "Closure:271;",
    call$1: [function(x) {
      return J.$gt$n(J.get$length$asx(x), 2);
    }, "call$1", null, 2, 0, null, 21, "call"],
    $isFunction: true
  },
  lookupSearchResults_closure: {
    "": "Closure:271;lower_1",
    call$1: [function(q) {
      return C.JSString_methods.contains$1(this.lower_1, q);
    }, "call$1", null, 2, 0, null, 663, "call"],
    $isFunction: true
  },
  lookupSearchResults_closure0: {
    "": "Closure:271;box_0,r_2",
    call$1: [function(q) {
      var t1, t2;
      t1 = J.getInterceptor$asx(q);
      if (t1.contains$1(q, ".") === true && J.endsWith$1$s(J.get$lower$x(this.r_2), q) === true) {
        t2 = this.box_0;
        t2.score_0 = t2.score_0 + 100;
        t2.splitDotQueries_1 = t1.split$1(q, ".");
      }
    }, "call$1", null, 2, 0, null, 663, "call"],
    $isFunction: true
  },
  lookupSearchResults_closure1: {
    "": "Closure:271;box_0,r_3,location_4,qualifiedNameParts_5",
    call$1: [function(q) {
      var t1, t2, t3, t4, segment, t5, t6, percent;
      t1 = this.qualifiedNameParts_5;
      if (J.$eq(C.JSArray_methods.get$last(t1), q) === true) {
        t2 = this.box_0;
        t3 = t2.score_0;
        t4 = this.r_3.score$1(1000);
        if (typeof t4 !== "number")
          return H.iae(t4);
        t2.score_0 = t3 + t4;
      } else if (J.startsWith$1$s(C.JSArray_methods.get$last(t1), q)) {
        t2 = this.box_0;
        t3 = t2.score_0;
        t4 = this.r_3.score$1(750);
        if (typeof t4 !== "number")
          return H.iae(t4);
        t2.score_0 = t3 + t4;
      } else if (J.contains$1$asx(C.JSArray_methods.get$last(t1), q) === true) {
        t2 = this.box_0;
        t3 = t2.score_0;
        t4 = this.r_3.score$1(500);
        if (typeof t4 !== "number")
          return H.iae(t4);
        t2.score_0 = t3 + t4;
      }
      for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]), t2 = J.getInterceptor$asx(q), t3 = this.box_0, t4 = this.r_3; t1.moveNext$0();) {
        segment = t1._current;
        t5 = J.getInterceptor(segment);
        if (t5.$eq(segment, q) === true) {
          t5 = t3.score_0;
          t6 = t4.score$1(300);
          if (typeof t6 !== "number")
            return H.iae(t6);
          t3.score_0 = t5 + t6;
        } else if (t5.startsWith$1(segment, q)) {
          percent = J.$div$n(t2.get$length(q), t5.get$length(segment));
          t5 = t3.score_0;
          t6 = t4.score$1(300 * percent);
          if (typeof t6 !== "number")
            return H.iae(t6);
          t3.score_0 = t5 + t6;
        } else if (t5.contains$1(segment, q) === true) {
          percent = J.$div$n(t2.get$length(q), t5.get$length(segment));
          t5 = t3.score_0;
          t6 = t4.score$1(150 * percent);
          if (typeof t6 !== "number")
            return H.iae(t6);
          t3.score_0 = t5 + t6;
        }
      }
      if (J.startsWith$1$s(this.location_4.libraryName, "dart"))
        t3.score_0 = t3.score_0 + 50;
    }, "call$1", null, 2, 0, null, 663, "call"],
    $isFunction: true
  },
  SearchIndex: {
    "": "Object;_search$_map,_onLoad",
    get$map: function(_) {
      return this._search$_map;
    },
    map$1: function($receiver, arg0) {
      return this.get$map($receiver).call$1(arg0);
    },
    set$map: function(_, value) {
      var t1 = this._onLoad;
      if (t1 == null)
        throw H.wrapException(new P.StateError("cannot initialize SearchIndex twice."));
      this._search$_map = value;
      for (t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();)
        t1._current.call$0();
      this._onLoad = null;
    },
    onLoad$1: [function(_, callback) {
      var t1 = this._onLoad;
      if (t1 == null)
        return;
      t1.push(callback);
    }, "call$1", "get$onLoad", 2, 0, null, 194]
  }
}],
["template_binding", "package:template_binding/template_binding.dart", , M, {
  "": "",
  _InputBinding__getStreamForInputType: [function(element) {
    var t1 = J.getInterceptor$x(element);
    if (typeof element === "object" && element !== null && !!t1.$isOptionElement)
      return C.EventStreamProvider_input.forElement$1(element);
    switch (t1.get$type(element)) {
      case "checkbox":
        return $.get$_InputBinding__checkboxEventType().forTarget$1(element);
      case "radio":
      case "select-multiple":
      case "select-one":
        return t1.get$onChange(element);
      default:
        return t1.get$onInput(element);
    }
  }, "call$1", "_InputBinding__getStreamForInputType$closure", 2, 0, null, 169],
  _createInstanceBindingMap: [function(node, delegate) {
    var bindings, t1, t2, templateRef, c, children, i, childMap;
    bindings = M._getBindings(node, delegate);
    t1 = J.getInterceptor(node);
    if (typeof node === "object" && node !== null && !!t1.$isElement)
      if (t1.get$localName(node) !== "template")
        t2 = t1.get$attributes(node)._element.hasAttribute("template") === true && C.Map_05eTF.containsKey$1(t1.get$localName(node)) === true;
      else
        t2 = true;
    else
      t2 = false;
    templateRef = t2 ? node : null;
    for (c = t1.get$firstChild(node), children = null, i = 0; c != null; c = c.nextSibling, ++i) {
      childMap = M._createInstanceBindingMap(c, delegate);
      if (childMap == null)
        continue;
      if (children == null)
        children = P.HashMap_HashMap(null, null, null, null, null);
      children.$indexSet(0, i, childMap);
    }
    if (bindings == null && children == null && templateRef == null)
      return;
    return new M._InstanceBindingMap(bindings, children, templateRef, i);
  }, "call$2", "_createInstanceBindingMap$closure", 4, 0, null, 312, 339],
  _addMapBindings: [function(node, map, model, delegate, bound) {
    var t1, i, c;
    if (map == null)
      return;
    if (map.get$templateRef() != null) {
      t1 = map.get$templateRef();
      M.nodeBindFallback(node)._decorate$1(t1);
      if (delegate != null)
        M.nodeBindFallback(node).set$_bindingDelegate(delegate);
    }
    t1 = J.getInterceptor$x(map);
    if (t1.get$bindings(map) != null)
      M._processBindings(t1.get$bindings(map), node, model, bound);
    if (t1.get$children(map) == null)
      return;
    i = map.get$numChildren() - node.childNodes.length;
    for (c = node.firstChild; c != null; c = c.nextSibling, ++i) {
      if (i < 0)
        continue;
      M._addMapBindings(c, J.$index$asx(t1.get$children(map), i), model, delegate, bound);
    }
  }, "call$5", "_addMapBindings$closure", 10, 0, null, 312, 140, 340, 339, 341],
  _getTreeScope: [function(node) {
    var t1;
    for (; t1 = J.getInterceptor$x(node), t1.get$parentNode(node) != null;)
      node = t1.get$parentNode(node);
    if (typeof node === "object" && node !== null && !!t1.$isDocument || typeof node === "object" && node !== null && !!t1.$isShadowRoot || typeof node === "object" && node !== null && !!t1.$isSvgSvgElement)
      return node;
    return;
  }, "call$1", "_getTreeScope$closure", 2, 0, null, 312],
  _getBindings: [function(node, delegate) {
    var t1, tokens;
    t1 = J.getInterceptor(node);
    if (typeof node === "object" && node !== null && !!t1.$isElement)
      return M._parseAttributeBindings(node, delegate);
    if (typeof node === "object" && node !== null && !!t1.$isText) {
      tokens = M._parseMustaches(node.textContent, "text", node, delegate);
      if (tokens != null)
        return ["text", tokens];
    }
    return;
  }, "call$2", "_getBindings$closure", 4, 0, null, 312, 339],
  _parseAttributeBindings: [function(element, delegate) {
    var t1, t2, bindings;
    t1 = {};
    t1.bindings_0 = null;
    t1.ifFound_1 = false;
    t1.bindFound_2 = false;
    new W._ElementAttributeMap(element).forEach$1(0, new M._parseAttributeBindings_closure(t1, element, delegate, M.isSemanticTemplate(element)));
    if (t1.ifFound_1 && !t1.bindFound_2) {
      t2 = t1.bindings_0;
      if (t2 == null) {
        bindings = [];
        t1.bindings_0 = bindings;
        t2 = bindings;
      }
      t2.push("bind");
      t2.push(M._parseMustaches("{{}}", "bind", element, delegate));
    }
    return t1.bindings_0;
  }, "call$2", "_parseAttributeBindings$closure", 4, 0, null, 169, 339],
  _processBindings: [function(bindings, node, model, bound) {
    var t1, t2, t3, i, $name, tokens, t4, bindingPath, delegateFn, delegateBinding, bindingModel, observer, j, t5, subPath, t6, subModel, binding;
    for (t1 = J.getInterceptor$asx(bindings), t2 = bound != null, t3 = J.getInterceptor(node), t3 = typeof node === "object" && node !== null && !!t3.$isNodeBindExtension, i = 0; i < t1.get$length(bindings); i += 2) {
      $name = t1.$index(bindings, i);
      tokens = t1.$index(bindings, i + 1);
      t4 = tokens.get$tokens();
      if (1 >= t4.length)
        return H.ioore(t4, 1);
      bindingPath = t4[1];
      if (tokens.get$hasOnePath()) {
        t4 = tokens.get$tokens();
        if (2 >= t4.length)
          return H.ioore(t4, 2);
        delegateFn = t4[2];
        if (delegateFn != null) {
          delegateBinding = delegateFn.call$2(model, node);
          if (delegateBinding != null) {
            bindingModel = delegateBinding;
            bindingPath = "value";
          } else
            bindingModel = model;
        } else
          bindingModel = model;
        if (!tokens.get$isSimplePath()) {
          bindingModel = L.PathObserver$(bindingModel, bindingPath, tokens.get$combinator());
          bindingPath = "value";
        }
      } else {
        t4 = [];
        observer = new Y.CompoundPathObserver(t4, [], null, tokens.get$combinator(), false, false, null, null);
        for (j = 1; j < tokens.get$tokens().length; j += 3) {
          t5 = tokens.get$tokens();
          if (j >= t5.length)
            return H.ioore(t5, j);
          subPath = t5[j];
          t5 = tokens.get$tokens();
          t6 = j + 1;
          if (t6 >= t5.length)
            return H.ioore(t5, t6);
          delegateFn = t5[t6];
          delegateBinding = delegateFn != null ? delegateFn.call$2(model, node) : null;
          if (delegateBinding != null) {
            subModel = delegateBinding;
            subPath = "value";
          } else
            subModel = model;
          if (observer._started)
            H.throwExpression(new P.StateError("Cannot add more paths once started."));
          t4.push(L.PathObserver$(subModel, subPath, null));
        }
        observer.start$0(0);
        bindingModel = observer;
        bindingPath = "value";
      }
      binding = J.bind$3$x(t3 ? node : M.nodeBindFallback(node), $name, bindingModel, bindingPath);
      if (t2)
        bound.push(binding);
    }
  }, "call$4", "_processBindings$closure", 6, 2, null, 77, 346, 312, 340, 341],
  _parseMustaches: [function(s, $name, node, delegate) {
    var t1, t2, t3, tokens, lastIndex, startIndex, endIndex, pathString;
    t1 = s.length;
    if (t1 === 0)
      return;
    for (t2 = delegate == null, t3 = J.getInterceptor$asx(s), tokens = null, lastIndex = 0; lastIndex < t1;) {
      startIndex = t3.indexOf$2(s, "{{", lastIndex);
      endIndex = startIndex < 0 ? -1 : C.JSString_methods.indexOf$2(s, "}}", startIndex + 2);
      if (endIndex < 0) {
        if (tokens == null)
          return;
        tokens.push(C.JSString_methods.substring$1(s, lastIndex));
        break;
      }
      if (tokens == null)
        tokens = [];
      tokens.push(C.JSString_methods.substring$2(s, lastIndex, startIndex));
      pathString = C.JSString_methods.trim$0(C.JSString_methods.substring$2(s, startIndex + 2, endIndex));
      tokens.push(pathString);
      tokens.push(t2 ? null : delegate.prepareBinding$3(pathString, $name, node));
      lastIndex = endIndex + 2;
    }
    if (lastIndex === t1)
      tokens.push("");
    t1 = new M._MustacheTokens(tokens, null);
    t1._MustacheTokens$1(tokens);
    return t1;
  }, "call$4", "_parseMustaches$closure", 8, 0, null, 86, 12, 312, 339],
  _addTemplateInstanceRecord: [function(fragment, model) {
    var node, instanceRecord;
    node = fragment.firstChild;
    if (node == null)
      return;
    instanceRecord = new M.TemplateInstance(node, fragment.lastChild, model);
    for (; node != null;) {
      M.nodeBindFallback(node).set$_templateInstance(instanceRecord);
      node = node.nextSibling;
    }
  }, "call$2", "_addTemplateInstanceRecord$closure", 4, 0, null, 241, 340],
  nodeBindFallback: [function(node) {
    var t1, values, extension, t2;
    t1 = $.get$_expando();
    t1.toString;
    values = H.Primitives_getProperty(node, "expando$values");
    extension = values == null ? null : H.Primitives_getProperty(values, t1._getKey$0());
    if (extension != null)
      return extension;
    t2 = J.getInterceptor$x(node);
    if (typeof node === "object" && node !== null && !!t2.$isInputElement)
      extension = new M._InputElementExtension(node, null, null);
    else if (typeof node === "object" && node !== null && !!t2.$isSelectElement)
      extension = new M._SelectElementExtension(node, null, null);
    else if (typeof node === "object" && node !== null && !!t2.$isTextAreaElement)
      extension = new M._TextAreaElementExtension(node, null, null);
    else if (typeof node === "object" && node !== null && !!t2.$isElement) {
      if (t2.get$localName(node) !== "template")
        t2 = t2.get$attributes(node)._element.hasAttribute("template") === true && C.Map_05eTF.containsKey$1(t2.get$localName(node)) === true;
      else
        t2 = true;
      extension = t2 ? new M.TemplateBindExtension(null, null, null, false, null, null, null, null, null, node, null, null) : new M._ElementExtension(node, null, null);
    } else
      extension = typeof node === "object" && node !== null && !!t2.$isText ? new M._TextExtension(node, null, null) : new M.NodeBindExtension(node, null, null);
    t1.$indexSet(0, node, extension);
    return extension;
  }, "call$1", "nodeBindFallback$closure", 2, 0, null, 312],
  isSemanticTemplate: [function(n) {
    var t1 = J.getInterceptor$x(n);
    if (typeof n === "object" && n !== null && !!t1.$isElement)
      if (t1.get$localName(n) !== "template")
        t1 = t1.get$attributes(n)._element.hasAttribute("template") === true && C.Map_05eTF.containsKey$1(t1.get$localName(n)) === true;
      else
        t1 = true;
    else
      t1 = false;
    return t1;
  }, "call$1", "isSemanticTemplate$closure", 2, 0, null, 347],
  _ElementExtension: {
    "": "NodeBindExtension;_node,_bindings,_templateInstance",
    bind$3: [function(_, $name, model, path) {
      var t1, t2, binding, conditional, name0;
      J.unbind$1$x(this.get$_template_binding$_self(), $name);
      t1 = this.get$_node();
      t2 = J.getInterceptor(t1);
      t1 = typeof t1 === "object" && t1 !== null && !!t2.$isOptionElement && J.$eq($name, "value") === true;
      t2 = this.get$_node();
      if (t1) {
        H.interceptedTypeCast(t2, "$isOptionElement");
        t2.toString;
        new W._ElementAttributeMap(t2).remove$1(0, $name);
        t1 = this.get$_node();
        t2 = path != null ? path : "";
        binding = new M._OptionValueBinding(null, t1, model, null, null, "value", t2);
        binding.NodeBinding$4(t1, "value", model, path);
        binding._eventSub = M._InputBinding__getStreamForInputType(t1).listen$1(binding.get$nodeValueChanged());
      } else {
        t1 = J.getInterceptor$s($name);
        conditional = t1.endsWith$1($name, "?");
        if (conditional === true) {
          J.get$attributes$x(t2).remove$1(0, $name);
          name0 = t1.substring$2($name, 0, J.$sub$n(t1.get$length($name), 1));
        } else
          name0 = $name;
        t1 = path != null ? path : "";
        binding = new M._AttributeBinding(conditional, t2, model, null, null, name0, t1);
        binding.NodeBinding$4(t2, name0, model, path);
      }
      this.get$bindings(this).$indexSet(0, $name, binding);
      return binding;
    }, "call$3", "get$bind", 4, 2, null, 77, 12, 340, 313]
  },
  _AttributeBinding: {
    "": "NodeBinding;conditional,_node_binding$_node,_model,_observer,_pathSub,property,path",
    valueChanged$1: [function(value) {
      var t1, t2;
      if (this.conditional === true) {
        t1 = null != value && false !== value;
        t2 = this.property;
        if (t1)
          J.get$attributes$x(X.NodeBinding.prototype.get$node.call(this))._element.setAttribute(t2, "");
        else
          J.get$attributes$x(X.NodeBinding.prototype.get$node.call(this)).remove$1(0, t2);
      } else {
        t1 = J.get$attributes$x(X.NodeBinding.prototype.get$node.call(this));
        t2 = value == null ? "" : H.S(value);
        t1._element.setAttribute(this.property, t2);
      }
    }, "call$1", "get$valueChanged", 2, 0, null, 23]
  },
  _OptionValueBinding: {
    "": "_ValueBinding;_eventSub,_node_binding$_node,_model,_observer,_pathSub,property,path",
    get$node: function() {
      return M._ValueBinding.prototype.get$node.call(this);
    },
    valueChanged$1: [function(newValue) {
      var select, t1, valueBinding, t2, oldValue, selectBinding;
      select = J.get$parent$x(M._ValueBinding.prototype.get$node.call(this));
      t1 = J.getInterceptor$x(select);
      if (typeof select === "object" && select !== null && !!t1.$isSelectElement) {
        valueBinding = J.$index$asx(J.get$bindings$x(M.nodeBindFallback(select)), "value");
        t2 = J.getInterceptor(valueBinding);
        if (typeof valueBinding === "object" && valueBinding !== null && !!t2.$is_SelectBinding) {
          oldValue = select.value;
          selectBinding = valueBinding;
        } else {
          oldValue = null;
          selectBinding = null;
        }
      } else {
        oldValue = null;
        selectBinding = null;
      }
      M._ValueBinding.prototype.valueChanged$1.call(this, newValue);
      if (selectBinding != null && selectBinding.get$_node_binding$_node() != null && J.$eq(t1.get$value(select), oldValue) !== true)
        selectBinding.nodeValueChanged$1(null);
    }, "call$1", "get$valueChanged", 2, 0, null, 274]
  },
  _InputBinding: {
    "": "NodeBinding;",
    close$0: [function(_) {
      if (this._node_binding$_node == null)
        return;
      this._eventSub.cancel$0();
      X.NodeBinding.prototype.close$0.call(this, this);
    }, "call$0", "get$close", 0, 0, null]
  },
  closure2: {
    "": "Closure:108;",
    call$0: [function() {
      var checkbox, t1, fired, t2, $event;
      checkbox = document.createElement("div", null).appendChild(W.InputElement_InputElement(null));
      t1 = J.getInterceptor$x(checkbox);
      t1.set$type(checkbox, "checkbox");
      fired = [];
      t2 = t1.get$onClick(checkbox);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t2._target, t2._eventType, W._wrapZone(new M._closure5(fired)), t2._useCapture), [H.getTypeArgumentByIndex(t2, 0)])._tryResume$0();
      t1 = t1.get$onChange(checkbox);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(new M._closure6(fired)), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
      t1 = window;
      $event = document.createEvent("MouseEvent");
      J._initMouseEvent$15$x($event, "click", true, true, t1, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
      checkbox.dispatchEvent($event);
      return fired.length === 1 ? C.EventStreamProvider_change : C.JSArray_methods.get$first(fired);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  _closure5: {
    "": "Closure:271;fired_0",
    call$1: [function(e) {
      this.fired_0.push(C.EventStreamProvider_click);
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  _closure6: {
    "": "Closure:271;fired_1",
    call$1: [function(e) {
      this.fired_1.push(C.EventStreamProvider_change);
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  },
  _ValueBinding: {
    "": "_InputBinding;_eventSub,_node_binding$_node,_model,_observer,_pathSub,property,path",
    get$node: function() {
      return X.NodeBinding.prototype.get$node.call(this);
    },
    valueChanged$1: [function(newValue) {
      var t1 = this.get$node();
      J.set$value$x(t1, newValue == null ? "" : H.S(newValue));
    }, "call$1", "get$valueChanged", 2, 0, null, 274],
    nodeValueChanged$1: [function(e) {
      var t1 = J.get$value$x(this.get$node());
      J.set$value$x(this._observer, t1);
      O.dirtyCheckObservables();
    }, "call$1", "get$nodeValueChanged", 2, 0, 196, 18]
  },
  _CheckedBinding: {
    "": "_InputBinding;_eventSub,_node_binding$_node,_model,_observer,_pathSub,property,path",
    valueChanged$1: [function(newValue) {
      var t1 = X.NodeBinding.prototype.get$node.call(this);
      J.set$checked$x(t1, null != newValue && false !== newValue);
    }, "call$1", "get$valueChanged", 2, 0, null, 274],
    nodeValueChanged$1: [function(e) {
      var t1, t2, r, checkedBinding;
      t1 = J.get$checked$x(X.NodeBinding.prototype.get$node.call(this));
      J.set$value$x(this._observer, t1);
      t1 = X.NodeBinding.prototype.get$node.call(this);
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isInputElement && J.$eq(J.get$type$x(X.NodeBinding.prototype.get$node.call(this)), "radio") === true)
        for (t1 = J.get$iterator$ax(M._CheckedBinding__getAssociatedRadioButtons(X.NodeBinding.prototype.get$node.call(this))); t1.moveNext$0();) {
          r = t1.get$current();
          t2 = J.getInterceptor(r);
          checkedBinding = J.$index$asx(J.get$bindings$x(typeof r === "object" && r !== null && !!t2.$isNodeBindExtension ? r : M.nodeBindFallback(r)), "checked");
          if (checkedBinding != null)
            J.set$value$x(checkedBinding, false);
        }
      O.dirtyCheckObservables();
    }, "call$1", "get$nodeValueChanged", 2, 0, 196, 18],
    static: {_CheckedBinding__getAssociatedRadioButtons: [function(element) {
        var t1, treeScope, radios;
        t1 = J.getInterceptor$x(element);
        if (t1.get$form(element) != null) {
          t1 = t1.get$form(element);
          t1.toString;
          t1 = new W._ChildNodeListLazy(t1);
          return t1.where$1(t1, new M._CheckedBinding__getAssociatedRadioButtons_closure(element));
        } else {
          treeScope = M._getTreeScope(element);
          if (treeScope == null)
            return C.List_empty;
          radios = J.querySelectorAll$1$x(treeScope, "input[type=\"radio\"][name=\"" + H.S(t1.get$name(element)) + "\"]");
          return radios.where$1(radios, new M._CheckedBinding__getAssociatedRadioButtons_closure0(element));
        }
      }, "call$1", "_CheckedBinding__getAssociatedRadioButtons$closure", 2, 0, null, 169]}
  },
  _CheckedBinding__getAssociatedRadioButtons_closure: {
    "": "Closure:271;element_0",
    call$1: [function(el) {
      var t1, t2;
      t1 = this.element_0;
      t2 = J.getInterceptor(el);
      if (t2.$eq(el, t1) !== true)
        if (typeof el === "object" && el !== null && !!t2.$isInputElement)
          if (el.type === "radio") {
            t2 = el.name;
            t1 = J.get$name$x(t1);
            t1 = t2 == null ? t1 == null : t2 === t1;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    }, "call$1", null, 2, 0, null, 343, "call"],
    $isFunction: true
  },
  _CheckedBinding__getAssociatedRadioButtons_closure0: {
    "": "Closure:271;element_1",
    call$1: [function(el) {
      var t1 = J.getInterceptor(el);
      return t1.$eq(el, this.element_1) !== true && t1.get$form(el) == null;
    }, "call$1", null, 2, 0, null, 343, "call"],
    $isFunction: true
  },
  _SelectBinding: {
    "": "_InputBinding;_onMutation,_eventSub,_node_binding$_node,_model,_observer,_pathSub,property,path",
    valueChanged$1: [function(newValue) {
      var t1;
      this._cancelMutationObserver$0();
      if (this._tryUpdateValue$1(newValue) === true)
        return;
      t1 = W.MutationObserver_MutationObserver(new M._SelectBinding_valueChanged_closure(this));
      C.MutationObserver_methods.observe$3$childList$subtree(t1, X.NodeBinding.prototype.get$node.call(this), true, true);
      this._onMutation = t1;
    }, "call$1", "get$valueChanged", 2, 0, null, 274],
    _tryUpdateValue$1: [function(newValue) {
      var t1, t2, intValue;
      t1 = this.property;
      t2 = J.getInterceptor(t1);
      if (t2.$eq(t1, "selectedIndex") === true) {
        intValue = M._SelectBinding__toInt(newValue);
        J.set$selectedIndex$x(X.NodeBinding.prototype.get$node.call(this), intValue);
        t1 = J.get$selectedIndex$x(X.NodeBinding.prototype.get$node.call(this));
        return t1 == null ? intValue == null : t1 === intValue;
      } else if (t2.$eq(t1, "value") === true) {
        t1 = X.NodeBinding.prototype.get$node.call(this);
        J.set$value$x(t1, newValue == null ? "" : H.S(newValue));
        return J.$eq(J.get$value$x(X.NodeBinding.prototype.get$node.call(this)), newValue);
      }
    }, "call$1", "get$_tryUpdateValue", 2, 0, null, 274],
    _cancelMutationObserver$0: [function() {
      var t1 = this._onMutation;
      if (t1 != null) {
        t1.disconnect();
        this._onMutation = null;
      }
    }, "call$0", "get$_cancelMutationObserver", 0, 0, null],
    nodeValueChanged$1: [function(e) {
      var t1, t2;
      this._cancelMutationObserver$0();
      t1 = this.property;
      t2 = J.getInterceptor(t1);
      if (t2.$eq(t1, "selectedIndex") === true) {
        t1 = J.get$selectedIndex$x(X.NodeBinding.prototype.get$node.call(this));
        J.set$value$x(this._observer, t1);
      } else if (t2.$eq(t1, "value") === true) {
        t1 = J.get$value$x(X.NodeBinding.prototype.get$node.call(this));
        J.set$value$x(this._observer, t1);
      }
    }, "call$1", "get$nodeValueChanged", 2, 0, 196, 18],
    $is_SelectBinding: true,
    static: {_SelectBinding__toInt: [function(value) {
        if (typeof value === "string")
          return H.Primitives_parseInt(value, null, new M._SelectBinding__toInt_closure());
        return typeof value === "number" && Math.floor(value) === value ? value : 0;
      }, "call$1", "_SelectBinding__toInt$closure", 2, 0, null, 23]}
  },
  _SelectBinding_valueChanged_closure: {
    "": "Closure:426;this_0",
    call$2: [function(x, y) {
      var t1 = this.this_0;
      if (t1._tryUpdateValue$1(J.get$value$x(t1._observer)) === true)
        t1._cancelMutationObserver$0();
    }, "call$2", null, 4, 0, null, 21, 664, "call"],
    $isFunction: true
  },
  _SelectBinding__toInt_closure: {
    "": "Closure:271;",
    call$1: [function(_) {
      return 0;
    }, "call$1", null, 2, 0, null, 335, "call"],
    $isFunction: true
  },
  _InputElementExtension: {
    "": "_ElementExtension;_node,_bindings,_templateInstance",
    get$_node: function() {
      return this._node;
    },
    bind$3: [function(_, $name, model, path) {
      var t1, t2, t3;
      t1 = J.getInterceptor($name);
      if (t1.$eq($name, "value") !== true && t1.$eq($name, "checked") !== true)
        return M._ElementExtension.prototype.bind$3.call(this, this, $name, model, path);
      t2 = this.get$_node();
      t3 = J.getInterceptor(t2);
      J.unbind$1$x(typeof t2 === "object" && t2 !== null && !!t3.$isNodeBindExtension ? t2 : this, $name);
      J.get$attributes$x(this._node).remove$1(0, $name);
      t2 = this.get$bindings(this);
      if (t1.$eq($name, "value") === true) {
        t1 = this._node;
        t3 = path != null ? path : "";
        t3 = new M._ValueBinding(null, t1, model, null, null, "value", t3);
        t3.NodeBinding$4(t1, "value", model, path);
        t3._eventSub = M._InputBinding__getStreamForInputType(t1).listen$1(t3.get$nodeValueChanged());
        t1 = t3;
      } else {
        t1 = this._node;
        t3 = path != null ? path : "";
        t3 = new M._CheckedBinding(null, t1, model, null, null, "checked", t3);
        t3.NodeBinding$4(t1, "checked", model, path);
        t3._eventSub = M._InputBinding__getStreamForInputType(t1).listen$1(t3.get$nodeValueChanged());
        t1 = t3;
      }
      t2.$indexSet(0, $name, t1);
      return t1;
    }, "call$3", "get$bind", 4, 2, null, 77, 12, 340, 313]
  },
  _InstanceBindingMap: {
    "": "Object;bindings>,children>,templateRef<,numChildren<"
  },
  NodeBindExtension: {
    "": "Object;_node<,_bindings,_templateInstance?",
    bind$3: [function(_, $name, model, path) {
      var t1, t2;
      window;
      t1 = $.get$Console__safeConsole();
      t2 = "Unhandled binding to Node: " + H.S(this) + " " + H.S($name) + " " + H.S(model) + " " + H.S(path);
      t1.toString;
      if (typeof console != "undefined")
        console.error(t2);
    }, "call$3", "get$bind", 4, 2, null, 77, 12, 340, 313],
    unbind$1: [function(_, $name) {
      var binding;
      if (this._bindings == null)
        return;
      binding = this.get$bindings(this).remove$1(0, $name);
      if (binding != null)
        J.close$0$x(binding);
    }, "call$1", "get$unbind", 2, 0, null, 12],
    unbindAll$0: [function(_) {
      var t1, binding;
      if (this._bindings == null)
        return;
      for (t1 = this.get$bindings(this), t1 = t1.get$values(t1), t1 = P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "IterableBase", 0)), t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, t1.length, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();) {
        binding = t1._current;
        if (binding != null)
          J.close$0$x(binding);
      }
      this._bindings = null;
    }, "call$0", "get$unbindAll", 0, 0, null],
    get$bindings: function(_) {
      var t1 = this._bindings;
      if (t1 == null) {
        t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, X.NodeBinding);
        this._bindings = t1;
      }
      return t1;
    },
    get$_template_binding$_self: function() {
      var t1, t2;
      t1 = this.get$_node();
      t2 = J.getInterceptor(t1);
      return typeof t1 === "object" && t1 !== null && !!t2.$isNodeBindExtension ? t1 : this;
    },
    $isNodeBindExtension: true
  },
  TemplateInstance: {
    "": "Object;firstNode,lastNode,model"
  },
  _SelectElementExtension: {
    "": "_ElementExtension;_node,_bindings,_templateInstance",
    get$_node: function() {
      return this._node;
    },
    bind$3: [function(_, $name, model, path) {
      var t1, t2, t3;
      if (J.$eq($name, "selectedindex") === true)
        $name = "selectedIndex";
      t1 = J.getInterceptor($name);
      if (t1.$eq($name, "selectedIndex") !== true && t1.$eq($name, "value") !== true)
        return M._ElementExtension.prototype.bind$3.call(this, this, $name, model, path);
      t1 = this.get$_node();
      t2 = J.getInterceptor(t1);
      J.unbind$1$x(typeof t1 === "object" && t1 !== null && !!t2.$isNodeBindExtension ? t1 : this, $name);
      J.get$attributes$x(this._node).remove$1(0, $name);
      t1 = this.get$bindings(this);
      t3 = this._node;
      t2 = path != null ? path : "";
      t2 = new M._SelectBinding(null, null, t3, model, null, null, $name, t2);
      t2.NodeBinding$4(t3, $name, model, path);
      t2._eventSub = M._InputBinding__getStreamForInputType(t3).listen$1(t2.get$nodeValueChanged());
      t1.$indexSet(0, $name, t2);
      return t2;
    }, "call$3", "get$bind", 4, 2, null, 77, 12, 340, 313]
  },
  TemplateBindExtension: {
    "": "_ElementExtension;_template_binding$_model,_bindingDelegate?,_template_binding$_iterator<,_template_binding$_scheduled,_templateInstanceRef?,_content?,_templateIsDecorated?,_stagingDocument,_bindingMap@,_node,_bindings,_templateInstance",
    get$_node: function() {
      return this._node;
    },
    get$_template_binding$_self: function() {
      var t1, t2;
      t1 = this._node;
      t2 = J.getInterceptor(t1);
      return typeof t1 === "object" && t1 !== null && !!t2.$isTemplateBindExtension ? this._node : this;
    },
    bind$3: [function(_, $name, model, path) {
      var t1;
      path = path != null ? path : "";
      t1 = this._template_binding$_iterator;
      if (t1 == null) {
        t1 = new M._TemplateIterator(this, [], null, false, false, false, false, false, null, null, null, null, null, null, null, null, false, null, null);
        this._template_binding$_iterator = t1;
      }
      switch ($name) {
        case "bind":
          t1.hasBind = true;
          t1.bindModel = model;
          t1.bindPath = path;
          this._scheduleIterator$0();
          t1 = new M._TemplateBinding(this, model, $name, path);
          this.get$bindings(this).$indexSet(0, $name, t1);
          return t1;
        case "repeat":
          t1.hasRepeat = true;
          t1.repeatModel = model;
          t1.repeatPath = path;
          this._scheduleIterator$0();
          t1 = new M._TemplateBinding(this, model, $name, path);
          this.get$bindings(this).$indexSet(0, $name, t1);
          return t1;
        case "if":
          t1.hasIf = true;
          t1.ifModel = model;
          t1.ifPath = path;
          this._scheduleIterator$0();
          t1 = new M._TemplateBinding(this, model, $name, path);
          this.get$bindings(this).$indexSet(0, $name, t1);
          return t1;
        default:
          return M._ElementExtension.prototype.bind$3.call(this, this, $name, model, path);
      }
    }, "call$3", "get$bind", 4, 2, null, 77, 12, 340, 313],
    unbind$1: [function(_, $name) {
      var t1;
      switch ($name) {
        case "bind":
          t1 = this._template_binding$_iterator;
          if (t1 == null)
            return;
          t1.hasBind = false;
          t1.bindModel = null;
          t1.bindPath = null;
          this._scheduleIterator$0();
          this.get$bindings(this).remove$1(0, $name);
          return;
        case "repeat":
          t1 = this._template_binding$_iterator;
          if (t1 == null)
            return;
          t1.hasRepeat = false;
          t1.repeatModel = null;
          t1.repeatPath = null;
          this._scheduleIterator$0();
          this.get$bindings(this).remove$1(0, $name);
          return;
        case "if":
          t1 = this._template_binding$_iterator;
          if (t1 == null)
            return;
          t1.hasIf = false;
          t1.ifModel = null;
          t1.ifPath = null;
          this._scheduleIterator$0();
          this.get$bindings(this).remove$1(0, $name);
          return;
        default:
          M.NodeBindExtension.prototype.unbind$1.call(this, this, $name);
          return;
      }
    }, "call$1", "get$unbind", 2, 0, null, 12],
    _scheduleIterator$0: [function() {
      var t1 = this._template_binding$_iterator;
      if (!t1.depsChanging) {
        t1.depsChanging = true;
        P.scheduleMicrotask(t1.get$resolve());
      }
    }, "call$0", "get$_scheduleIterator", 0, 0, null],
    createInstance$3: [function(model, delegate, bound) {
      var ref, t1, $content, map, owner, doc, instance;
      ref = this.get$ref();
      t1 = J.getInterceptor(ref);
      ref = typeof ref === "object" && ref !== null && !!t1.$isNodeBindExtension ? ref : M.nodeBindFallback(ref);
      $content = J.get$content$x(ref);
      map = ref.get$_bindingMap();
      if (map == null) {
        map = M._createInstanceBindingMap($content, delegate);
        ref.set$_bindingMap(map);
      }
      t1 = this._stagingDocument;
      if (t1 == null) {
        owner = J.get$ownerDocument$x(this._node);
        t1 = $.get$TemplateBindExtension__ownerStagingDocument();
        doc = t1.$index(0, owner);
        if (doc == null) {
          doc = owner.implementation.createHTMLDocument("");
          t1.$indexSet(0, owner, doc);
        }
        this._stagingDocument = doc;
        t1 = doc;
      }
      instance = M.TemplateBindExtension__deepCloneIgnoreTemplateContent($content, t1);
      M._addMapBindings(instance, map, model, delegate, bound);
      M._addTemplateInstanceRecord(instance, model);
      return instance;
    }, function(model, delegate) {
      return this.createInstance$3(model, delegate, null);
    }, "createInstance$2", "call$3", null, "get$createInstance", 0, 6, null, 77, 77, 77, 340, 339, 341],
    get$bindingDelegate: function() {
      return this._bindingDelegate;
    },
    get$ref: function() {
      var refId, treeScope, result, t1, nextRef;
      this._decorate$0();
      refId = J.get$attributes$x(this._node)._element.getAttribute("ref");
      if (refId != null) {
        treeScope = M._getTreeScope(this._node);
        result = treeScope != null ? J.getElementById$1$x(treeScope, refId) : null;
      } else
        result = null;
      if (result == null) {
        result = this._templateInstanceRef;
        if (result == null)
          return this._node;
      }
      t1 = J.getInterceptor(result);
      nextRef = (typeof result === "object" && result !== null && !!t1.$isNodeBindExtension ? result : M.nodeBindFallback(result)).get$ref();
      return nextRef != null ? nextRef : result;
    },
    get$content: function(_) {
      var t1;
      this._decorate$0();
      t1 = this._content;
      return t1 != null ? t1 : H.interceptedTypeCast(this._node, "$isTemplateElement").content;
    },
    _decorate$1: [function(instanceRef) {
      var t1, t2, isNative, liftContents, templateElementExt, liftRoot;
      if (this._templateIsDecorated === true)
        return false;
      M.TemplateBindExtension__injectStylesheet();
      this._templateIsDecorated = true;
      t1 = this._node;
      t2 = J.getInterceptor(t1);
      isNative = typeof t1 === "object" && t1 !== null && !!t2.$isTemplateElement;
      liftContents = !isNative;
      if (liftContents) {
        t1 = this._node;
        t2 = J.getInterceptor$x(t1);
        t1 = t2.get$attributes(t1)._element.hasAttribute("template") === true && C.Map_05eTF.containsKey$1(t2.get$localName(t1)) === true;
      } else
        t1 = false;
      if (t1) {
        if (instanceRef != null)
          throw H.wrapException(new P.ArgumentError("instanceRef should not be supplied for attribute templates."));
        templateElementExt = M.TemplateBindExtension__extractTemplateFromAttributeTemplate(this._node);
        t1 = J.getInterceptor(templateElementExt);
        templateElementExt = typeof templateElementExt === "object" && templateElementExt !== null && !!t1.$isNodeBindExtension ? templateElementExt : M.nodeBindFallback(templateElementExt);
        templateElementExt.set$_templateIsDecorated(true);
        t1 = templateElementExt.get$_node();
        t2 = J.getInterceptor(t1);
        isNative = typeof t1 === "object" && t1 !== null && !!t2.$isTemplateElement;
        liftRoot = true;
      } else {
        templateElementExt = this;
        liftRoot = false;
      }
      if (!isNative)
        templateElementExt.set$_content(J.createDocumentFragment$0$x(M.TemplateBindExtension__getOrCreateTemplateContentsOwner(templateElementExt.get$_node())));
      if (instanceRef != null)
        templateElementExt.set$_templateInstanceRef(instanceRef);
      else if (liftContents)
        M.TemplateBindExtension__liftNonNativeChildrenIntoContent(templateElementExt, this._node, liftRoot);
      else
        M.TemplateBindExtension_bootstrap(J.get$content$x(templateElementExt));
      return true;
    }, function() {
      return this._decorate$1(null);
    }, "_decorate$0", "call$1", null, "get$_decorate", 0, 2, null, 77, 665],
    $isTemplateBindExtension: true,
    static: {"": "TemplateBindExtension__contentsOwner,TemplateBindExtension__ownerStagingDocument,TemplateBindExtension__allTemplatesSelectors,TemplateBindExtension__initStyles", TemplateBindExtension__deepCloneIgnoreTemplateContent: [function(node, stagingDocument) {
        var clone, t1, c;
        clone = J.importNode$2$x(stagingDocument, node, false);
        t1 = J.getInterceptor$x(clone);
        if (typeof clone === "object" && clone !== null && !!t1.$isElement)
          if (t1.get$localName(clone) !== "template")
            t1 = t1.get$attributes(clone)._element.hasAttribute("template") === true && C.Map_05eTF.containsKey$1(t1.get$localName(clone)) === true;
          else
            t1 = true;
        else
          t1 = false;
        if (t1)
          return clone;
        for (c = J.get$firstChild$x(node); c != null; c = c.nextSibling)
          clone.appendChild(M.TemplateBindExtension__deepCloneIgnoreTemplateContent(c, stagingDocument));
        return clone;
      }, "call$2", "TemplateBindExtension__deepCloneIgnoreTemplateContent$closure", 4, 0, null, 312, 342], TemplateBindExtension__getOrCreateTemplateContentsOwner: [function(template) {
        var doc, d, t1, t2;
        doc = J.get$ownerDocument$x(template);
        if (W._convertNativeToDart_Window(doc.defaultView) == null)
          return doc;
        d = $.get$TemplateBindExtension__contentsOwner().$index(0, doc);
        if (d == null) {
          d = doc.implementation.createHTMLDocument("");
          for (; t1 = d.lastChild, t1 != null;) {
            t2 = t1.parentNode;
            if (t2 != null)
              t2.removeChild(t1);
          }
          $.get$TemplateBindExtension__contentsOwner().$indexSet(0, doc, d);
        }
        return d;
      }, "call$1", "TemplateBindExtension__getOrCreateTemplateContentsOwner$closure", 2, 0, null, 309], TemplateBindExtension__extractTemplateFromAttributeTemplate: [function(el) {
        var t1, template, t2, $name, t3, value;
        t1 = J.getInterceptor$x(el);
        template = t1.get$ownerDocument(el).createElement("template", null);
        t1.get$parentNode(el).insertBefore(template, el);
        for (t2 = C.JSArray_methods.toList$0(t1.get$attributes(el).get$keys()), t2 = H.setRuntimeTypeInfo(new H.ListIterator(t2, t2.length, 0, null), [H.getTypeArgumentByIndex(t2, 0)]); t2.moveNext$0();) {
          $name = t2._current;
          switch ($name) {
            case "template":
              t3 = t1.get$attributes(el)._element;
              t3.getAttribute($name);
              t3.removeAttribute($name);
              break;
            case "repeat":
            case "bind":
            case "ref":
              template.toString;
              t3 = t1.get$attributes(el)._element;
              value = t3.getAttribute($name);
              t3.removeAttribute($name);
              template.setAttribute($name, value);
              break;
            default:
          }
        }
        return template;
      }, "call$1", "TemplateBindExtension__extractTemplateFromAttributeTemplate$closure", 2, 0, null, 343], TemplateBindExtension__liftNonNativeChildrenIntoContent: [function(template, el, useRoot) {
        var $content, t1, t2, child;
        $content = J.get$content$x(template);
        if (useRoot) {
          J.append$1$x($content, el);
          return;
        }
        for (t1 = J.getInterceptor$x(el), t2 = J.getInterceptor$x($content); child = t1.get$firstChild(el), child != null;)
          t2.append$1($content, child);
      }, "call$3", "TemplateBindExtension__liftNonNativeChildrenIntoContent$closure", 6, 0, null, 309, 343, 344], TemplateBindExtension_bootstrap: [function($content) {
        var t1, descendents;
        t1 = new M.TemplateBindExtension_bootstrap__bootstrap();
        descendents = J.querySelectorAll$1$x($content, $.get$TemplateBindExtension__allTemplatesSelectors());
        if (M.isSemanticTemplate($content))
          t1.call$1($content);
        descendents.forEach$1(descendents, t1);
      }, "call$1", "TemplateBindExtension_bootstrap$closure", 2, 0, null, 345], TemplateBindExtension__injectStylesheet: [function() {
        if ($.TemplateBindExtension__initStyles === true)
          return;
        $.TemplateBindExtension__initStyles = true;
        var style = document.createElement("style", null);
        style.textContent = $.get$TemplateBindExtension__allTemplatesSelectors() + " { display: none; }";
        document.head.appendChild(style);
      }, "call$0", "TemplateBindExtension__injectStylesheet$closure", 0, 0, null]}
  },
  TemplateBindExtension_bootstrap__bootstrap: {
    "": "Closure:196;",
    call$1: [function(template) {
      var t1;
      if (!M.nodeBindFallback(template)._decorate$1(null)) {
        t1 = J.getInterceptor(template);
        M.TemplateBindExtension_bootstrap(J.get$content$x(typeof template === "object" && template !== null && !!t1.$isNodeBindExtension ? template : M.nodeBindFallback(template)));
      }
    }, "call$1", null, 2, 0, null, 309, "call"],
    $isFunction: true
  },
  closure3: {
    "": "Closure:271;",
    call$1: [function(k) {
      return H.S(k) + "[template]";
    }, "call$1", null, 2, 0, null, 501, "call"],
    $isFunction: true
  },
  _TemplateBinding: {
    "": "Object;_ext,_template_binding$_model,property,path>",
    get$value: function(_) {
      return J.get$value$x(this.get$_template_binding$_observer());
    },
    set$value: function(_, newValue) {
      J.set$value$x(this.get$_template_binding$_observer(), newValue);
    },
    get$_template_binding$_observer: function() {
      var t1, t2;
      t1 = this._template_binding$_model;
      t2 = J.getInterceptor(t1);
      if ((typeof t1 === "object" && t1 !== null && !!t2.$isPathObserver || typeof t1 === "object" && t1 !== null && !!t2.$isCompoundPathObserver) && J.$eq(this.path, "value") === true)
        return this._template_binding$_model;
      return L.PathObserver$(this._template_binding$_model, this.path, null);
    },
    close$0: [function(_) {
      var t1 = this._ext;
      if (t1 == null)
        return;
      t1.unbind$1(0, this.property);
      this._template_binding$_model = null;
      this._ext = null;
    }, "call$0", "get$close", 0, 0, null],
    $isNodeBinding: true
  },
  _parseAttributeBindings_closure: {
    "": "Closure:426;box_0,element_1,delegate_2,isTemplateNode_3",
    call$2: [function($name, value) {
      var t1, tokens, t2, bindings;
      for (; t1 = J.getInterceptor$asx($name), J.$eq(t1.$index($name, 0), "_") === true;)
        $name = t1.substring$1($name, 1);
      if (this.isTemplateNode_3)
        if (t1.$eq($name, "if") === true) {
          this.box_0.ifFound_1 = true;
          if (value === "")
            value = "{{}}";
        } else if (t1.$eq($name, "bind") === true || t1.$eq($name, "repeat") === true) {
          this.box_0.bindFound_2 = true;
          if (value === "")
            value = "{{}}";
        }
      tokens = M._parseMustaches(value, $name, this.element_1, this.delegate_2);
      if (tokens != null) {
        t1 = this.box_0;
        t2 = t1.bindings_0;
        if (t2 == null) {
          bindings = [];
          t1.bindings_0 = bindings;
          t1 = bindings;
        } else
          t1 = t2;
        t1.push($name);
        t1.push(tokens);
      }
    }, "call$2", null, 4, 0, null, 12, 23, "call"],
    $isFunction: true
  },
  _MustacheTokens: {
    "": "Object;tokens<,_combinator",
    get$hasOnePath: function() {
      return this.tokens.length === 4;
    },
    get$isSimplePath: function() {
      var t1, t2;
      t1 = this.tokens;
      t2 = t1.length;
      if (t2 === 4) {
        if (0 >= t2)
          return H.ioore(t1, 0);
        if (J.$eq(t1[0], "") === true) {
          if (3 >= t1.length)
            return H.ioore(t1, 3);
          t1 = J.$eq(t1[3], "") === true;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    get$combinator: function() {
      return this._combinator;
    },
    _singleCombinator$1: [function(value) {
      var t1, t2;
      if (value == null)
        value = "";
      t1 = this.tokens;
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t2 = H.S(t1[0]) + H.S(value);
      if (3 >= t1.length)
        return H.ioore(t1, 3);
      return t2 + H.S(t1[3]);
    }, "call$1", "get$_singleCombinator", 2, 0, 666, 23],
    _listCombinator$1: [function(values) {
      var t1, newValue, t2, i, value, str, t3;
      t1 = this.tokens;
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      newValue = P.StringBuffer$(t1[0]);
      for (t2 = J.getInterceptor$asx(values), i = 1; i < t1.length; i += 3) {
        value = t2.$index(values, C.JSInt_methods._tdivFast$1(i - 1, 3));
        if (value != null) {
          str = typeof value === "string" ? value : H.S(value);
          newValue._contents = newValue._contents + str;
        }
        t3 = i + 2;
        if (t3 >= t1.length)
          return H.ioore(t1, t3);
        str = t1[t3];
        str = typeof str === "string" ? str : H.S(str);
        newValue._contents = newValue._contents + str;
      }
      return newValue._contents;
    }, "call$1", "get$_listCombinator", 2, 0, 667, 668],
    _MustacheTokens$1: function(tokens) {
      this._combinator = this.tokens.length === 4 ? this.get$_singleCombinator() : this.get$_listCombinator();
    }
  },
  _TemplateIterator: {
    "": "Object;_templateExt,terminators,iteratedValue,closed,depsChanging,hasRepeat,hasBind,hasIf,repeatModel,bindModel,ifModel,repeatPath,bindPath,ifPath,_valueSub,_listSub,_initPrepareFunctions,_instanceModelFn,_instancePositionChangedFn",
    _instanceModelFn$1: function(arg0) {
      return this._instanceModelFn.call$1(arg0);
    },
    resolve$0: [function() {
      var t1, model, path, valueObserver, t2, t3;
      this.depsChanging = false;
      t1 = this._valueSub;
      if (t1 != null) {
        t1.cancel$0();
        this._valueSub = null;
      }
      t1 = this.hasRepeat;
      if (!t1 && !this.hasBind) {
        this._valueChanged$1(null);
        return;
      }
      model = t1 ? this.repeatModel : this.bindModel;
      path = t1 ? this.repeatPath : this.bindPath;
      if (!this.hasIf)
        valueObserver = L.PathObserver$(model, path, t1 ? null : new M._TemplateIterator_resolve_closure());
      else {
        t2 = [];
        valueObserver = new Y.CompoundPathObserver(t2, [], null, new M._TemplateIterator_resolve_valueFn(t1), false, false, null, null);
        t2.push(L.PathObserver$(model, path, null));
        t1 = this.ifModel;
        t3 = this.ifPath;
        t2.push(L.PathObserver$(t1, t3, null));
        valueObserver.start$0(0);
      }
      this._valueSub = valueObserver.get$changes(valueObserver).listen$1(new M._TemplateIterator_resolve_closure0(this));
      this._valueChanged$1(valueObserver.get$value(valueObserver));
    }, "call$0", "get$resolve", 0, 0, 108],
    _valueChanged$1: [function(newValue) {
      var oldValue, t1, t2, splices;
      oldValue = this.iteratedValue;
      this.unobserve$0();
      t1 = J.getInterceptor$ax(newValue);
      if (typeof newValue === "object" && newValue !== null && (newValue.constructor === Array || !!t1.$isList)) {
        this.iteratedValue = newValue;
        t2 = newValue;
      } else if (typeof newValue === "object" && newValue !== null && (newValue.constructor === Array || !!t1.$isIterable)) {
        t2 = t1.toList$0(newValue);
        this.iteratedValue = t2;
      } else {
        this.iteratedValue = null;
        t2 = null;
      }
      if (t2 != null && typeof newValue === "object" && newValue !== null && !!t1.$isObservableList)
        this._listSub = newValue.get$listChanges().listen$1(this.get$_handleSplices());
      t1 = oldValue != null ? oldValue : [];
      t2 = this.iteratedValue;
      t2 = t2 != null ? t2 : [];
      splices = G.calcSplices(t2, 0, J.get$length$asx(t2), t1, 0, J.get$length$asx(t1));
      if (splices.length !== 0)
        this._handleSplices$1(splices);
    }, "call$1", "get$_valueChanged", 2, 0, null, 274],
    getTerminatorAt$1: [function(index) {
      var t1, t2, terminator, subIter;
      t1 = J.getInterceptor(index);
      if (t1.$eq(index, -1) === true)
        return this._templateExt._node;
      t2 = this.terminators;
      t1 = t1.$mul(index, 2);
      if (t1 >>> 0 !== t1 || t1 >= t2.length)
        return H.ioore(t2, t1);
      terminator = t2[t1];
      if (M.isSemanticTemplate(terminator)) {
        t1 = this._templateExt._node;
        t1 = terminator == null ? t1 == null : terminator === t1;
      } else
        t1 = true;
      if (t1)
        return terminator;
      subIter = M.nodeBindFallback(terminator).get$_template_binding$_iterator();
      if (subIter == null)
        return terminator;
      return subIter.getTerminatorAt$1(C.JSInt_methods._tdivFast$1(subIter.terminators.length, 2) - 1);
    }, "call$1", "get$getTerminatorAt", 2, 0, null, 47],
    insertInstanceAt$4: [function(index, fragment, instanceNodes, bound) {
      var t1, previousTerminator, t2, terminator, $parent, insertBeforeNode;
      t1 = J.getInterceptor$n(index);
      previousTerminator = this.getTerminatorAt$1(t1.$sub(index, 1));
      t2 = fragment != null;
      if (t2)
        terminator = fragment.lastChild;
      else
        terminator = instanceNodes != null && J.get$isNotEmpty$asx(instanceNodes) ? J.get$last$ax(instanceNodes) : null;
      if (terminator == null)
        terminator = previousTerminator;
      t1 = t1.$mul(index, 2);
      H.IterableMixinWorkaround_insertAllList(this.terminators, t1, [terminator, bound]);
      $parent = J.get$parentNode$x(this._templateExt._node);
      insertBeforeNode = J.get$nextNode$x(previousTerminator);
      if (t2)
        $parent.insertBefore(fragment, insertBeforeNode);
      else if (instanceNodes != null)
        for (t1 = J.get$iterator$ax(instanceNodes); t1.moveNext$0();)
          $parent.insertBefore(t1.get$current(), insertBeforeNode);
    }, "call$4", "get$insertInstanceAt", 8, 0, null, 47, 241, 669, 341],
    extractInstanceAt$1: [function(index) {
      var instanceNodes, t1, previousTerminator, terminator, t2, t3, bound, node;
      instanceNodes = [];
      instanceNodes.$builtinTypeInfo = [W.Node];
      t1 = J.getInterceptor$n(index);
      previousTerminator = this.getTerminatorAt$1(t1.$sub(index, 1));
      terminator = this.getTerminatorAt$1(index);
      t2 = this.terminators;
      t3 = J.$add$ns(t1.$mul(index, 2), 1);
      if (t3 >>> 0 !== t3 || t3 >= t2.length)
        return H.ioore(t2, t3);
      bound = t2[t3];
      C.JSArray_methods.removeRange$2(t2, t1.$mul(index, 2), J.$add$ns(t1.$mul(index, 2), 2));
      J.get$parentNode$x(this._templateExt._node);
      for (t1 = J.getInterceptor$x(previousTerminator); J.$eq(terminator, previousTerminator) !== true;) {
        node = t1.get$nextNode(previousTerminator);
        if (node == null ? terminator == null : node === terminator)
          terminator = previousTerminator;
        t2 = node.parentNode;
        if (t2 != null)
          t2.removeChild(node);
        instanceNodes.push(node);
      }
      return new M._BoundNodes(instanceNodes, bound);
    }, "call$1", "get$extractInstanceAt", 2, 0, null, 47],
    _handleSplices$1: [function(splices) {
      var t1, template, t2, t3, delegate, instanceCache, removeDelta, splice, t4, t5, addIndex, model, instance, bound, instanceNodes, fragment;
      if (this.closed)
        return;
      t1 = this._templateExt;
      template = t1._node;
      t2 = t1._node;
      t3 = J.getInterceptor(t2);
      delegate = (typeof t2 === "object" && t2 !== null && !!t3.$isTemplateBindExtension ? t1._node : t1).get$bindingDelegate();
      t2 = J.getInterceptor$x(template);
      if (t2.get$parentNode(template) == null || W._convertNativeToDart_Window(t2.get$ownerDocument(template).defaultView) == null) {
        this.close$0(0);
        return;
      }
      if (!this._initPrepareFunctions) {
        this._initPrepareFunctions = true;
        if (delegate != null) {
          this._instanceModelFn = delegate.prepareInstanceModel$1(template);
          this._instancePositionChangedFn = null;
        }
      }
      instanceCache = P.HashMap_HashMap(P.identical$closure(), null, null, P.Object, M._BoundNodes);
      for (t2 = J.getInterceptor$ax(splices), t3 = t2.get$iterator(splices), removeDelta = 0; t3.moveNext$0();) {
        splice = t3.get$current();
        for (t4 = splice.get$removed(), t4 = t4.get$iterator(t4), t5 = J.getInterceptor$x(splice); t4.moveNext$0();)
          instanceCache.$indexSet(0, t4._current, this.extractInstanceAt$1(J.$add$ns(t5.get$index(splice), removeDelta)));
        t4 = splice.get$addedCount();
        if (typeof t4 !== "number")
          return H.iae(t4);
        removeDelta -= t4;
      }
      for (t2 = t2.get$iterator(splices); t2.moveNext$0();) {
        splice = t2.get$current();
        for (t3 = J.getInterceptor$x(splice), addIndex = t3.get$index(splice); t4 = J.getInterceptor$n(addIndex), t4.$lt(addIndex, J.$add$ns(t3.get$index(splice), splice.get$addedCount())); addIndex = t4.$add(addIndex, 1)) {
          model = J.$index$asx(this.iteratedValue, addIndex);
          instance = instanceCache.remove$1(0, model);
          if (instance != null && J.get$isNotEmpty$asx(J.get$nodes$x(instance))) {
            t5 = J.getInterceptor$x(instance);
            bound = t5.get$bound(instance);
            instanceNodes = t5.get$nodes(instance);
            fragment = null;
          } else {
            bound = [];
            if (this._instanceModelFn != null)
              model = this._instanceModelFn$1(model);
            fragment = model != null ? t1.createInstance$3(model, delegate, bound) : null;
            instanceNodes = null;
          }
          this.insertInstanceAt$4(addIndex, fragment, instanceNodes, bound);
        }
      }
      for (t1 = instanceCache.get$values(instanceCache), t1 = H.setRuntimeTypeInfo(new H.MappedIterator(null, J.get$iterator$ax(t1._iterable), t1._f), [H.getTypeArgumentByIndex(t1, 0), H.getTypeArgumentByIndex(t1, 1)]); t1.moveNext$0();)
        this.closeInstanceBindings$1(J.get$bound$x(t1._current));
    }, "call$1", "get$_handleSplices", 2, 0, 670, 302],
    closeInstanceBindings$1: [function(bound) {
      var t1;
      for (t1 = J.get$iterator$ax(bound); t1.moveNext$0();)
        J.close$0$x(t1.get$current());
    }, "call$1", "get$closeInstanceBindings", 2, 0, null, 341],
    unobserve$0: [function() {
      var t1 = this._listSub;
      if (t1 == null)
        return;
      t1.cancel$0();
      this._listSub = null;
    }, "call$0", "get$unobserve", 0, 0, null],
    close$0: [function(_) {
      var t1, i;
      if (this.closed)
        return;
      this.unobserve$0();
      for (t1 = this.terminators, i = 1; i < t1.length; i += 2)
        this.closeInstanceBindings$1(t1[i]);
      C.JSArray_methods.set$length(t1, 0);
      t1 = this._valueSub;
      if (t1 != null) {
        t1.cancel$0();
        this._valueSub = null;
      }
      this._templateExt._template_binding$_iterator = null;
      this.closed = true;
    }, "call$0", "get$close", 0, 0, null]
  },
  _TemplateIterator_resolve_closure: {
    "": "Closure:271;",
    call$1: [function(x) {
      return [x];
    }, "call$1", null, 2, 0, null, 21, "call"],
    $isFunction: true
  },
  _TemplateIterator_resolve_valueFn: {
    "": "Closure:143;isRepeat_0",
    call$1: [function(values) {
      var t1, modelValue, ifValue;
      t1 = J.getInterceptor$asx(values);
      modelValue = t1.$index(values, 0);
      ifValue = t1.$index(values, 1);
      if (!(null != ifValue && false !== ifValue))
        return;
      return this.isRepeat_0 ? modelValue : [modelValue];
    }, "call$1", null, 2, 0, null, 668, "call"],
    $isFunction: true
  },
  _TemplateIterator_resolve_closure0: {
    "": "Closure:271;this_1",
    call$1: [function(r) {
      return this.this_1._valueChanged$1(J.get$newValue$x(J.get$last$ax(r)));
    }, "call$1", null, 2, 0, null, 671, "call"],
    $isFunction: true
  },
  _BoundNodes: {
    "": "Object;nodes>,bound>",
    $is_BoundNodes: true
  },
  _TextExtension: {
    "": "NodeBindExtension;_node,_bindings,_templateInstance",
    bind$3: [function(_, $name, model, path) {
      var t1, t2, t3;
      if (J.$eq($name, "text") !== true)
        return M.NodeBindExtension.prototype.bind$3.call(this, this, $name, model, path);
      this.unbind$1(0, $name);
      t1 = this.get$bindings(this);
      t2 = this._node;
      t3 = path != null ? path : "";
      t3 = new M._TextBinding(t2, model, null, null, "text", t3);
      t3.NodeBinding$4(t2, "text", model, path);
      t1.$indexSet(0, $name, t3);
      return t3;
    }, "call$3", "get$bind", 4, 2, null, 77, 12, 340, 313]
  },
  _TextBinding: {
    "": "NodeBinding;_node_binding$_node,_model,_observer,_pathSub,property,path",
    valueChanged$1: [function(newValue) {
      var t1 = this._node_binding$_node;
      J.set$text$x(t1, newValue == null ? "" : H.S(newValue));
    }, "call$1", "get$valueChanged", 2, 0, null, 274]
  },
  _TextAreaElementExtension: {
    "": "_ElementExtension;_node,_bindings,_templateInstance",
    get$_node: function() {
      return this._node;
    },
    bind$3: [function(_, $name, model, path) {
      var t1, t2, t3;
      if (J.$eq($name, "value") !== true)
        return M._ElementExtension.prototype.bind$3.call(this, this, $name, model, path);
      t1 = this.get$_node();
      t2 = J.getInterceptor(t1);
      J.unbind$1$x(typeof t1 === "object" && t1 !== null && !!t2.$isNodeBindExtension ? t1 : this, $name);
      J.get$attributes$x(this._node).remove$1(0, $name);
      t1 = this.get$bindings(this);
      t3 = this._node;
      t2 = path != null ? path : "";
      t2 = new M._ValueBinding(null, t3, model, null, null, "value", t2);
      t2.NodeBinding$4(t3, "value", model, path);
      t2._eventSub = M._InputBinding__getStreamForInputType(t3).listen$1(t2.get$nodeValueChanged());
      t1.$indexSet(0, $name, t2);
      return t2;
    }, "call$3", "get$bind", 4, 2, null, 77, 12, 340, 313]
  }
}],
["template_binding.src.binding_delegate", "package:template_binding/src/binding_delegate.dart", , O, {
  "": "",
  BindingDelegate: {
    "": "Object;",
    prepareBinding$3: [function(path, $name, node) {
      return;
    }, "call$3", "get$prepareBinding", 6, 0, 672, 313, 12, 312],
    prepareInstanceModel$1: [function(template) {
      return;
    }, "call$1", "get$prepareInstanceModel", 2, 0, null, 309]
  }
}],
["template_binding.src.node_binding", "package:template_binding/src/node_binding.dart", , X, {
  "": "",
  NodeBinding: {
    "": "Object;_node_binding$_node<,path>",
    get$node: function() {
      return this._node_binding$_node;
    },
    get$value: function(_) {
      return J.get$value$x(this._observer);
    },
    set$value: function(_, newValue) {
      J.set$value$x(this._observer, newValue);
    },
    close$0: [function(_) {
      var t1;
      if (this._node_binding$_node == null)
        return;
      t1 = this._pathSub;
      if (t1 != null)
        t1.cancel$0();
      this._pathSub = null;
      this._observer = null;
      this._node_binding$_node = null;
      this._model = null;
    }, "call$0", "get$close", 0, 0, null],
    NodeBinding$4: function(_node, property, _model, path) {
      var t1, t2;
      t1 = this._model;
      t2 = J.getInterceptor(t1);
      t1 = (typeof t1 === "object" && t1 !== null && !!t2.$isPathObserver || typeof t1 === "object" && t1 !== null && !!t2.$isCompoundPathObserver) && J.$eq(path, "value") === true;
      t2 = this._model;
      if (t1) {
        this._observer = t2;
        t1 = t2;
      } else {
        t1 = L.PathObserver$(t2, this.path, null);
        this._observer = t1;
      }
      this._pathSub = J.get$changes$x(t1).listen$1(new X.NodeBinding_closure(this));
      this.valueChanged$1(J.get$value$x(this._observer));
    },
    $isNodeBinding: true
  },
  NodeBinding_closure: {
    "": "Closure:271;this_0",
    call$1: [function(r) {
      var t1 = this.this_0;
      return t1.valueChanged$1(J.get$value$x(t1._observer));
    }, "call$1", null, 2, 0, null, 671, "call"],
    $isFunction: true
  }
}],
["utils", "package:yaml/src/utils.dart", , N, {
  "": "",
  hashCodeFor: [function(obj, parents) {
    var hash, e, t1, t2;
    if (parents == null)
      parents = [];
    else {
      t1 = parents;
      t1.toString;
      if (H.IterableMixinWorkaround_any(t1, new N.hashCodeFor_closure(obj)))
        return -1;
    }
    J.add$1$ax(parents, obj);
    try {
      if (obj == null)
        return 0;
      if (J.$eq(obj, true) === true)
        return 1;
      if (J.$eq(obj, false) === true)
        return 2;
      t1 = obj;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && !!t2.$isMap) {
        t1 = J.$xor$n(N.hashCodeFor(obj.get$keys(), parents), N.hashCodeFor(J.get$values$x(obj), parents));
        return t1;
      }
      t1 = obj;
      t2 = J.getInterceptor(t1);
      if (typeof t1 === "object" && t1 !== null && (t1.constructor === Array || !!t2.$isIterable)) {
        hash = 0;
        for (t1 = J.get$iterator$ax(obj); t1.moveNext$0();) {
          e = t1.get$current();
          hash = J.$xor$n(hash, N.hashCodeFor(e, parents));
        }
        return hash;
      }
      t1 = J.get$hashCode$(obj);
      return t1;
    } finally {
      J.removeLast$0$ax(parents);
    }
  }, "call$2", "hashCodeFor$closure", 2, 2, null, 77, 93, 348],
  hashCodeFor_closure: {
    "": "Closure:271;obj_0",
    call$1: [function(p) {
      var t1 = this.obj_0;
      return p == null ? t1 == null : p === t1;
    }, "call$1", null, 2, 0, null, 645, "call"],
    $isFunction: true
  }
}],
["visitor", "package:yaml/src/visitor.dart", , O, {
  "": "",
  Visitor: {
    "": "Object;",
    visitAlias$1: [function(alias) {
      return alias;
    }, "call$1", "get$visitAlias", 2, 0, null, 496],
    visitScalar$1: [function(scalar) {
      return scalar;
    }, "call$1", "get$visitScalar", 2, 0, null, 497],
    visitSequence$1: [function(seq) {
      return J.map$1$ax(seq.content, new O.Visitor_visitSequence_closure(this)).toList$0(0);
    }, "call$1", "get$visitSequence", 2, 0, null, 498],
    visitMapping$1: [function(map) {
      var t1, out, t2, key, t3, t4;
      t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      out = new L.YamlMap(t1);
      for (t2 = J.get$iterator$ax(map.content.get$keys()); t2.moveNext$0();) {
        key = t2.get$current();
        t3 = key.visit$1(this);
        t4 = J.$index$asx(map.content, key).visit$1(this);
        t1.$indexSet(0, out._wrapKey$1(t3), t4);
      }
      return out;
    }, "call$1", "get$visitMapping", 2, 0, null, 140]
  },
  Visitor_visitSequence_closure: {
    "": "Closure:271;this_0",
    call$1: [function(e) {
      return e.visit$1(this.this_0);
    }, "call$1", null, 2, 0, null, 18, "call"],
    $isFunction: true
  }
}],
["web.annotations", "annotations.dart", , Y, {
  "": "",
  AnnotationElement: {
    "": ["PolymerElement_ChangeNotifier;_annotations$__$annotations%-475,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$annotations: [function(receiver) {
      return receiver._annotations$__$annotations;
    }, null, null, 1, 0, 673, "annotations", 132, 674],
    set$annotations: [function(receiver, value) {
      receiver._annotations$__$annotations = this.notifyPropertyChange$3(receiver, C.Symbol_annotations, receiver._annotations$__$annotations, value);
    }, null, null, 3, 0, 675, 23, "annotations", 132],
    annotationsChanged$0: [function(receiver) {
      var t1, out, annotation, t2, str, hasParams, t3;
      receiver.textContent = "";
      t1 = receiver._annotations$__$annotations;
      if (t1 == null || J.get$isEmpty$asx(J.get$annotations$x(t1)) === true)
        return;
      out = P.StringBuffer$("");
      for (t1 = J.get$iterator$ax(J.get$annotations$x(receiver._annotations$__$annotations)); t1.moveNext$0();) {
        annotation = t1.get$current();
        if (annotation.get$link().get$isDocumented() === true) {
          t2 = "<a href=\"#" + H.S(J.get$location$x(annotation.get$link())) + "\">" + H.S(annotation.get$link().get$simpleType()) + "</a>";
          out._contents = out._contents + t2;
        } else {
          str = annotation.get$link().get$simpleType();
          str = typeof str === "string" ? str : H.S(str);
          out._contents = out._contents + str;
        }
        t2 = J.getInterceptor$x(annotation);
        hasParams = J.get$isNotEmpty$asx(t2.get$parameters(annotation));
        if (hasParams)
          out._contents = out._contents + "(";
        str = J.join$1$ax(t2.get$parameters(annotation), ", ");
        str = typeof str === "string" ? str : H.S(str);
        t3 = out._contents + str;
        out._contents = t3;
        if (hasParams)
          out._contents = t3 + ")";
        if (t2.$eq(annotation, J.get$last$ax(J.get$annotations$x(receiver._annotations$__$annotations))) !== true)
          out._contents = out._contents + ", ";
      }
      if (J.get$isNotEmpty$asx(receiver._annotations$__$annotations.get$supportedBrowsers())) {
        out.write$1("<br>Supported on: ");
        out.write$1(J.join$1$ax(receiver._annotations$__$annotations.get$supportedBrowsers(), ", "));
      }
      t1 = out._contents;
      t2 = $.get$nullSanitizer();
      receiver.textContent = null;
      receiver.appendChild(this.createFragment$3$treeSanitizer$validator(receiver, t1, t2, null));
    }, "call$0", "get$annotationsChanged", 0, 0, 107, "annotationsChanged"],
    "@": function() {
      return [C.CustomTag_8h9];
    },
    static: {AnnotationElement$created: [function(receiver) {
        var t1, t2, t3, t4;
        t1 = $.get$Polymer__polymerSyntax();
        t2 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t3 = J.JSString;
        t4 = W.Element;
        t4 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t3, t4), null, null), [t3, t4]);
        receiver.polymer$Polymer$syntax = t1;
        receiver.polymer$Polymer$_shadowRoots = t2;
        receiver.polymer$Polymer$$ = t4;
        C.AnnotationElement_methods.Element$created$0(receiver);
        C.AnnotationElement_methods.PolymerElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new AnnotationElement$created" /* new AnnotationElement$created:0:0 */]}
  },
  "+AnnotationElement": [676],
  PolymerElement_ChangeNotifier: {
    "": "PolymerElement+ChangeNotifier;",
    $isObservable: true
  }
}],
["web.app", "app.dart", , V, {
  "": "",
  findLocation: [function() {
    var hash, query, t1;
    hash = J.get$hash$x(C.Window_methods.get$location(window));
    query = J.get$search$x(C.Window_methods.get$location(window));
    t1 = J.getInterceptor$s(query);
    if (t1.startsWith$1(query, "?_escaped_fragment_="))
      return t1.substring$2(query, 20, t1.get$length(query));
    else {
      t1 = J.getInterceptor$asx(hash);
      return J.$gt$n(t1.get$length(hash), 0) && t1.startsWith$1(hash, "#!") ? t1.substring$2(hash, 2, t1.get$length(hash)) : hash;
    }
  }, "call$0", "findLocation$closure", 0, 0, null],
  navigate: [function($event) {
    var newLocation, t1;
    newLocation = V.findLocation();
    t1 = $.get$viewer();
    if (t1._app$__$homePage != null)
      t1.handleLink$1(newLocation);
  }, "call$1", "navigate$closure", 2, 0, 196, 349],
  _init: [function() {
    var t1 = C.EventStreamProvider_resize.forTarget$1(window);
    H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(new V._init_closure()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
    $.get$Polymer__ready().future.then$1(new V._init_closure0());
    $.location = V.findLocation();
    t1 = $.get$windowLocation();
    t1.get$changes(t1).listen$1(V.navigate$closure());
    $.get$viewer().finished.then$1(new V._init_closure1());
  }, "call$0", "_init$closure", 0, 0, 108, "_init", 350],
  concat: [function(list1, list2) {
    return H.setRuntimeTypeInfo(new H.ExpandIterable([list1, list2], new V.concat_closure()), [null, null]);
  }, "call$2", "concat$closure", 4, 0, null, 285, 286],
  Viewer: {
    "": "ChangeNotifier;_app$__$isDesktop,finished,_app$__$homePage,_showPkgLibraries,_app$__$libraries,_currentPage,_app$__$isPanel,_isPanel,_app$__$isMinimap,_isMinimap,_app$__$isInherited,_app$__$showObjectMembers,_hash,_loadIndicator,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records",
    get$isDesktop: [function() {
      return this._app$__$isDesktop;
    }, null, null, 1, 0, 437, "isDesktop", 132, 436],
    set$isDesktop: [function(value) {
      this._app$__$isDesktop = F.notifyPropertyChangeHelper(this, C.Symbol_isDesktop, this._app$__$isDesktop, value);
    }, null, null, 3, 0, 525, 23, "isDesktop", 132],
    get$homePage: [function() {
      return this._app$__$homePage;
    }, null, null, 1, 0, 464, "homePage", 132, 436],
    set$homePage: [function(value) {
      this._app$__$homePage = F.notifyPropertyChangeHelper(this, C.Symbol_homePage, this._app$__$homePage, value);
    }, null, null, 3, 0, 677, 23, "homePage", 132],
    get$showPkgLibraries: [function() {
      return this._showPkgLibraries;
    }, null, null, 1, 0, 437, "showPkgLibraries", 436],
    set$showPkgLibraries: [function(newValue) {
      if (J.$eq(this._showPkgLibraries, newValue) === true)
        return;
      this._showPkgLibraries = F.notifyPropertyChangeHelper(this, C.Symbol_showPkgLibraries, this._showPkgLibraries, newValue);
      this._updateLibraries$0();
    }, null, null, 3, 0, 525, 274, "showPkgLibraries", 436],
    get$libraries: [function() {
      return this._app$__$libraries;
    }, null, null, 1, 0, 678, "libraries", 132, 436],
    set$libraries: [function(value) {
      this._app$__$libraries = F.notifyPropertyChangeHelper(this, C.Symbol_libraries, this._app$__$libraries, value);
    }, null, null, 3, 0, 143, 23, "libraries", 132],
    _updateLibraries$0: [function() {
      var t1 = this._currentPage;
      if (t1 == null)
        this._app$__$libraries = F.notifyPropertyChangeHelper(this, C.Symbol_libraries, this._app$__$libraries, []);
      else {
        t1 = t1.get$home().get$libraries();
        t1 = F.notifyPropertyChangeHelper(this, C.Symbol_libraries, this._app$__$libraries, t1);
        this._app$__$libraries = t1;
        if (this._showPkgLibraries !== true) {
          t1 = J.where$1$ax(t1, new V.Viewer__updateLibraries_closure()).toList$0(0);
          this._app$__$libraries = F.notifyPropertyChangeHelper(this, C.Symbol_libraries, this._app$__$libraries, t1);
        }
      }
    }, "call$0", "get$_updateLibraries", 0, 0, null],
    get$currentPage: [function() {
      return this._currentPage;
    }, null, null, 1, 0, 461, "currentPage", 436],
    set$currentPage: [function(newPage) {
      if (J.$eq(this._currentPage, newPage) === true)
        return;
      this._currentPage = F.notifyPropertyChangeHelper(this, C.Symbol_currentPage, this._currentPage, newPage);
      this._updateLibraries$0();
    }, null, null, 3, 0, 679, 680, "currentPage", 436],
    get$isPanel: [function() {
      return this._app$__$isPanel;
    }, null, null, 1, 0, 437, "isPanel", 132, 436],
    set$isPanel: [function(value) {
      this._app$__$isPanel = F.notifyPropertyChangeHelper(this, C.Symbol_isPanel, this._app$__$isPanel, value);
    }, null, null, 3, 0, 525, 23, "isPanel", 132],
    get$isMinimap: [function() {
      return this._app$__$isMinimap;
    }, null, null, 1, 0, 437, "isMinimap", 132, 436],
    set$isMinimap: [function(value) {
      this._app$__$isMinimap = F.notifyPropertyChangeHelper(this, C.Symbol_isMinimap, this._app$__$isMinimap, value);
    }, null, null, 3, 0, 525, 23, "isMinimap", 132],
    get$isInherited: [function(_) {
      return this._app$__$isInherited;
    }, null, null, 1, 0, 437, "isInherited", 132, 436],
    set$isInherited: [function(_, value) {
      this._app$__$isInherited = F.notifyPropertyChangeHelper(this, C.Symbol_isInherited, this._app$__$isInherited, value);
    }, null, null, 3, 0, 525, 23, "isInherited", 132],
    get$showObjectMembers: [function() {
      return this._app$__$showObjectMembers;
    }, null, null, 1, 0, 437, "showObjectMembers", 132, 436],
    set$showObjectMembers: [function(value) {
      this._app$__$showObjectMembers = F.notifyPropertyChangeHelper(this, C.Symbol_showObjectMembers, this._app$__$showObjectMembers, value);
    }, null, null, 3, 0, 525, 23, "showObjectMembers", 132],
    get$filter: function(_) {
      var t1 = new E.Filter(true, false);
      t1.showInherited = this._app$__$isInherited;
      t1.showObjectMembers = this._app$__$showObjectMembers;
      return t1;
    },
    _updateDesktopMode$1: [function(_) {
      var t1 = window.innerWidth;
      if (typeof t1 !== "number")
        return t1.$gt();
      t1 = F.notifyPropertyChangeHelper(this, C.Symbol_isDesktop, this._app$__$isDesktop, t1 > 1006);
      this._app$__$isDesktop = t1;
      t1 = t1 === true && this._isMinimap;
      this._app$__$isMinimap = F.notifyPropertyChangeHelper(this, C.Symbol_isMinimap, this._app$__$isMinimap, t1);
      t1 = this._app$__$isDesktop === true && this._isPanel;
      this._app$__$isPanel = F.notifyPropertyChangeHelper(this, C.Symbol_isPanel, this._app$__$isPanel, t1);
    }, "call$1", "get$_updateDesktopMode", 2, 0, 271, 335],
    get$title: function(_) {
      var t1 = this._currentPage;
      return t1 == null ? "" : t1.get$decoratedName();
    },
    _scrollScreen$1: [function(hash) {
      var t1 = {};
      t1.hash_0 = hash;
      if (hash === "")
        P.Timer_Timer(C.Duration_0, new V.Viewer__scrollScreen_closure());
      else
        P.Timer_Timer(C.Duration_0, new V.Viewer__scrollScreen_closure0(t1, this));
    }, "call$1", "get$_scrollScreen", 2, 0, null, 266],
    queryEverywhere$2: [function($parent, id) {
      var t1, t2, t3, shadowChildren, allChildren, found;
      t1 = J.getInterceptor$x($parent);
      if (t1.get$id($parent) === id)
        return $parent;
      if (t1.get$shadowRoot($parent) != null) {
        t2 = t1.get$shadowRoot($parent);
        if (t2._children == null) {
          t3 = new P.FilteredElementList(t2, new W._ChildNodeListLazy(t2));
          t3.$builtinTypeInfo = [null];
          t2._children = t3;
        }
        shadowChildren = t2._children;
      } else
        shadowChildren = C.List_empty;
      t1 = [t1.get$children($parent), shadowChildren];
      t2 = new V.Viewer_queryEverywhere_closure();
      allChildren = new H.ExpandIterable(t1, t2);
      allChildren.$builtinTypeInfo = [null, null];
      t1 = new H.ExpandIterator(C.JSArray_methods.get$iterator(t1), t2, C.C_EmptyIterator, null);
      t1.$builtinTypeInfo = [H.getTypeArgumentByIndex(allChildren, 0), H.getTypeArgumentByIndex(allChildren, 1)];
      for (; t1.moveNext$0();) {
        found = this.queryEverywhere$2(t1._current, id);
        if (found != null)
          return found;
      }
      return;
    }, "call$2", "get$queryEverywhere", 4, 0, null, 206, 681],
    _pageAndLocationFor$2: [function(page, $location) {
      var t1, usablePage, canonicalLocation, matchingItem, myItem, validParent;
      if ($location.get$isEmpty($location) || $location.$eq(0, J.get$location$x(this._app$__$homePage))) {
        t1 = this._app$__$homePage;
        return [t1, J.get$location$x(t1)];
      }
      usablePage = page.get$firstItemUsableAsPage();
      canonicalLocation = $location.get$asMemberOrSubMemberNotAnchor();
      matchingItem = canonicalLocation.exactItem$1(this._app$__$homePage);
      if (J.$eq(usablePage, matchingItem) === true)
        return [usablePage, $location];
      if (matchingItem == null) {
        t1 = canonicalLocation.get$componentNames();
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        t1.pop();
        return this._pageAndLocationFor$2(usablePage, Y.DocsLocation$fromList(t1));
      }
      if (matchingItem.isOwnedBy$1(usablePage))
        return [usablePage, matchingItem.get$anchorHrefLocation()];
      t1 = this._app$__$homePage;
      myItem = $location.item$1(0, t1);
      validParent = myItem == null ? J.get$location$x(t1) : J.get$location$x(myItem);
      return [validParent.exactItem$1(this._app$__$homePage), $location];
    }, "call$2", "get$_pageAndLocationFor", 4, 0, null, 136, 142],
    _updatePage$2: [function(page, $location) {
      var replacement, newPage, newLocation, t1;
      replacement = this._pageAndLocationFor$2(page, $location);
      newPage = C.JSArray_methods.get$first(replacement);
      newLocation = C.JSArray_methods.get$last(replacement);
      t1 = J.getInterceptor(page);
      if (t1.$eq(page, newPage) !== true || !$location.$eq(0, newLocation))
        return this.handleLink$1(this._replaceLocation$1(newLocation));
      if (page != null && t1.$eq(page, this._currentPage) !== true) {
        J.hideOrShowNavigation$1$hide$x(window.document.querySelector("#dartdoc-main"), true);
        this.set$currentPage(page);
      }
      t1 = $location.anchor;
      this._hash = t1 == null ? "" : "@" + H.S(t1);
      t1 = $location.anchor;
      this._scrollScreen$1(t1 == null ? "" : "@" + H.S(t1));
      return P._Future$immediate(true, null);
    }, "call$2", "get$_updatePage", 4, 0, null, 136, 142],
    _rewriteLocation$1: [function($location) {
      var t1, t2, t3, t4, newLocation;
      if ($location.subMemberName == null)
        return $location;
      t1 = $location.get$componentNames();
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1.pop();
      t1 = Y.DocsLocation$fromList(t1);
      t2 = t1.get$packagePlus();
      t3 = t1.libraryName;
      if (t3 == null)
        t3 = "";
      t4 = t1.memberName;
      t4 = t4 == null ? "" : "." + H.S(t4);
      t1 = t1.subMemberName;
      newLocation = new Y.DocsLocation(null, null, null, null, null);
      newLocation._extractPieces$1(C.JSArray_methods.join$1([t2, t3, t4, t1 == null ? "" : "." + H.S(t1)], ""));
      newLocation.anchor = C.JSString_methods.$add("id_", $location.subMemberName);
      return newLocation;
    }, "call$1", "get$_rewriteLocation", 2, 0, null, 142],
    _replaceLocation$1: [function($location) {
      var encoded = P.Uri__uriEncode(C.List_CVk, $location.get$withAnchor(), C.Utf8Codec_false, false);
      J.replace$1$x(C.Window_methods.get$location(window), "#!" + encoded);
      return encoded;
    }, "call$1", "get$_replaceLocation", 2, 0, null, 142],
    _loadAndUpdatePage$1: [function($location) {
      var t1, t2, t3, t4, t5, destination, newLocation;
      t1 = $.get$pageIndex();
      t2 = $location.get$packagePlus();
      t3 = $location.libraryName;
      if (t3 == null)
        t3 = "";
      t4 = $location.memberName;
      t4 = t4 == null ? "" : "." + H.S(t4);
      t5 = $location.subMemberName;
      destination = t1.$index(0, C.JSArray_methods.join$1([t2, t3, t4, t5 == null ? "" : "." + H.S(t5)], ""));
      if (destination == null) {
        newLocation = this._rewriteLocation$1($location);
        if (!newLocation.$eq(0, $location))
          return this.handleLink$1(this._replaceLocation$1(newLocation));
        else
          return this.getItem$1($location).then$1(new V.Viewer__loadAndUpdatePage_closure(this, $location));
      } else
        return J.load$0$x(destination).then$1(new V.Viewer__loadAndUpdatePage_closure0(this, $location, destination));
    }, "call$1", "get$_loadAndUpdatePage", 2, 0, null, 142],
    getItem$1: [function($location) {
      return this.getLibrary$1($location).then$1(new V.Viewer_getItem_closure(this, $location)).then$1(new V.Viewer_getItem_closure0(this, $location));
    }, "call$1", "get$getItem", 2, 0, null, 142],
    getLibrary$1: [function($location) {
      var t1, t2, t3, lib;
      t1 = $.get$pageIndex();
      t2 = H.S($location.get$packagePlus());
      t3 = $location.libraryName;
      lib = t1.$index(0, t2 + H.S(t3 == null ? "" : t3));
      if (lib == null)
        lib = $.get$viewer()._app$__$homePage.memberNamed$1($location.libraryName);
      if (lib == null)
        return P._Future$immediate(this._app$__$homePage, null);
      return J.load$0$x(lib);
    }, "call$1", "get$getLibrary", 2, 0, null, 142],
    getMember$2: [function(lib, $location) {
      var t1, member, t2, result;
      if (lib == null) {
        t1 = new P._Future(0, $.Zone__current, null, null, null, null, null, null);
        t1.$builtinTypeInfo = [null];
        t1._asyncComplete$1(null);
        return t1;
      }
      member = lib.memberNamed$1($location.get$memberName());
      if (member == null) {
        t1 = new P._Future(0, $.Zone__current, null, null, null, null, null, null);
        t1.$builtinTypeInfo = [null];
        t1._asyncComplete$1([lib, null]);
        return t1;
      }
      t1 = J.getInterceptor(member);
      if (typeof member === "object" && member !== null && !!t1.$isClass) {
        t1 = t1.load$0(member);
        t2 = $.Zone__current;
        result = new P._Future(0, t2, null, null, t2.registerUnaryCallback$1(new V.Viewer_getMember_closure(this, lib, member)), null, P._registerErrorHandler(null, $.Zone__current), null);
        result.$builtinTypeInfo = [null];
        t1._addListener$1(result);
        return result;
      } else {
        t1 = t1.load$0(member);
        t1.toString;
        t2 = $.Zone__current;
        result = new P._Future(0, t2, null, null, t2.registerUnaryCallback$1(new V.Viewer_getMember_closure0(lib, member)), null, P._registerErrorHandler(null, $.Zone__current), null);
        result.$builtinTypeInfo = [null];
        t1._addListener$1(result);
        return result;
      }
    }, "call$2", "get$getMember", 4, 0, null, 682, 142],
    getSubMember$2: [function(libWithMember, $location) {
      var t1;
      if (libWithMember == null)
        return P._Future$immediate([], null);
      t1 = J.getInterceptor$ax(libWithMember);
      if (t1.get$last(libWithMember) == null)
        return P._Future$immediate([t1.get$first(libWithMember)], null);
      return P._Future$immediate(V.concat(libWithMember, [t1.get$last(libWithMember).memberNamed$1($location.subMemberName)]), null);
    }, "call$2", "get$getSubMember", 4, 0, null, 683, 142],
    handleLink$1: [function(uri) {
      var $location, t1;
      $location = new Y.DocsLocation(null, null, null, null, null);
      $location._extractPieces$1(P.Uri__uriDecode(uri, C.Utf8Codec_false, false));
      if (J.$eq($location.libraryName, "home") === true) {
        this._updatePage$2($.get$viewer()._app$__$homePage, $location);
        return P._Future$immediate(true, null);
      }
      J.set$display$x(this.get$loadIndicator().style, "");
      t1 = this._loadAndUpdatePage$1($location);
      t1.whenComplete$1(this.get$hideLoadIndicator());
      return t1;
    }, "call$1", "get$handleLink", 2, 0, null, 585],
    togglePanel$0: [function(_) {
      var t1 = !this._isPanel;
      this._isPanel = t1;
      t1 = this._app$__$isDesktop === true && t1;
      this._app$__$isPanel = F.notifyPropertyChangeHelper(this, C.Symbol_isPanel, this._app$__$isPanel, t1);
    }, "call$0", "get$togglePanel", 0, 0, null],
    toggleMinimap$0: [function(_) {
      var t1 = !this._isMinimap;
      this._isMinimap = t1;
      t1 = this._app$__$isDesktop === true && t1;
      this._app$__$isMinimap = F.notifyPropertyChangeHelper(this, C.Symbol_isMinimap, this._app$__$isMinimap, t1);
    }, "call$0", "get$toggleMinimap", 0, 0, null],
    togglePkg$0: [function(_) {
      this.set$showPkgLibraries(this._showPkgLibraries !== true);
    }, "call$0", "get$togglePkg", 0, 0, null],
    toggleInherited$0: [function(_) {
      var t1 = this._app$__$isInherited;
      this._app$__$isInherited = F.notifyPropertyChangeHelper(this, C.Symbol_isInherited, t1, t1 !== true);
    }, "call$0", "get$toggleInherited", 0, 0, null],
    toggleObjectMembers$0: [function(_) {
      var t1 = this._app$__$showObjectMembers;
      this._app$__$showObjectMembers = F.notifyPropertyChangeHelper(this, C.Symbol_showObjectMembers, t1, t1 !== true);
    }, "call$0", "get$toggleObjectMembers", 0, 0, null],
    get$loadIndicator: function() {
      var t1 = this._loadIndicator;
      if (t1 == null) {
        t1 = $._dartdocMain;
        if (t1 == null) {
          t1 = document.querySelector("#dartdoc-main");
          $._dartdocMain = t1;
        }
        t1.toString;
        t1 = (t1.shadowRoot || t1.webkitShadowRoot).querySelector("#loading-indicator");
        this._loadIndicator = t1;
      }
      return t1;
    },
    hideLoadIndicator$0: [function() {
      J.set$display$x(this.get$loadIndicator().style, "none");
      return "none";
    }, "call$0", "get$hideLoadIndicator", 0, 0, 108],
    Viewer$_$0: function() {
      this.finished = P.Future_wait([W.HttpRequest_getString(P.Uri__uriEncode(C.List_CVk, $.sourcePath, C.Utf8Codec_false, false), null, null).then$1(new V.Viewer$__closure(this)), W.HttpRequest_getString(P.Uri__uriEncode(C.List_CVk, "docs/index.json", C.Utf8Codec_false, false), null, null).then$1(new V.Viewer$__closure0())], false);
      this._updateDesktopMode$1(null);
      var t1 = C.EventStreamProvider_resize.forTarget$1(window);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$_updateDesktopMode()), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
    },
    static: {Viewer$_: function() {
        var t1 = new V.Viewer(null, null, null, false, null, null, true, true, true, true, true, false, null, null, null, null);
        t1.Viewer$_$0();
        return t1;
      }}
  },
  Viewer__updateLibraries_closure: {
    "": "Closure:271;",
    call$1: [function(x) {
      var t1 = J.getInterceptor(x);
      return typeof x === "object" && x !== null && !!t1.$isLibrary;
    }, "call$1", null, 2, 0, null, 21, "call"],
    $isFunction: true
  },
  Viewer$__closure: {
    "": "Closure:271;this_0",
    call$1: [function(response) {
      var libraries, t1, t2;
      libraries = C.C_JsonCodec.decode$1(response);
      $.isYaml = J.$eq(J.$index$asx(libraries, "filetype"), "yaml");
      t1 = this.this_0;
      t2 = E.Home$(libraries);
      t1._app$__$homePage = F.notifyPropertyChangeHelper(t1, C.Symbol_homePage, t1._app$__$homePage, t2);
    }, "call$1", null, 2, 0, null, 470, "call"],
    $isFunction: true
  },
  Viewer$__closure0: {
    "": "Closure:25;",
    call$1: [function(json) {
      $.get$searchIndex().set$map(0, C.C_JsonCodec.decode$1(json));
    }, "call$1", null, 2, 0, null, 228, "call"],
    $isFunction: true
  },
  Viewer__scrollScreen_closure: {
    "": "Closure:108;",
    call$0: [function() {
      window.scrollTo(0, 0);
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Viewer__scrollScreen_closure0: {
    "": "Closure:108;box_0,this_1",
    call$0: [function() {
      var t1, t2, e;
      t1 = this.box_0;
      t2 = t1.hash_0;
      t1.hash_0 = C.JSString_methods.substring$2(t2, 1, t2.length);
      t2 = $._dartdocMain;
      if (t2 == null) {
        t2 = document.querySelector("#dartdoc-main");
        $._dartdocMain = t2;
      }
      e = this.this_1.queryEverywhere$2(t2, t1.hash_0);
      if (e != null) {
        t1 = J.getInterceptor$x(e);
        t1.scrollIntoView$0(e);
        window.scrollBy(0, -80);
        t1.focus$0(e);
      }
    }, "call$0", null, 0, 0, null, "call"],
    $isFunction: true
  },
  Viewer_queryEverywhere_closure: {
    "": "Closure:271;",
    call$1: [function(x) {
      return x;
    }, "call$1", null, 2, 0, null, 21, "call"],
    $isFunction: true
  },
  Viewer__loadAndUpdatePage_closure: {
    "": "Closure:271;this_0,location_1",
    call$1: [function(items) {
      var t1 = this.location_1;
      return this.this_0._updatePage$2(t1.itemFromList$1(J.toList$0$ax(items)), t1);
    }, "call$1", null, 2, 0, null, 131, "call"],
    $isFunction: true
  },
  Viewer__loadAndUpdatePage_closure0: {
    "": "Closure:271;this_2,location_3,destination_4",
    call$1: [function(_) {
      return this.this_2._updatePage$2(this.destination_4, this.location_3);
    }, "call$1", null, 2, 0, null, 335, "call"],
    $isFunction: true
  },
  Viewer_getItem_closure: {
    "": "Closure:271;this_0,location_1",
    call$1: [function(lib) {
      return this.this_0.getMember$2(lib, this.location_1);
    }, "call$1", null, 2, 0, null, 682, "call"],
    $isFunction: true
  },
  Viewer_getItem_closure0: {
    "": "Closure:271;this_2,location_3",
    call$1: [function(libWithMember) {
      return this.this_2.getSubMember$2(libWithMember, this.location_3);
    }, "call$1", null, 2, 0, null, 683, "call"],
    $isFunction: true
  },
  Viewer_getMember_closure: {
    "": "Closure:685;this_0,lib_1,member_2",
    call$1: [function(mem) {
      var interfaces, t1, t2, t3;
      interfaces = [];
      for (t1 = J.get$iterator$ax(mem.get$interfaces()), t2 = this.this_0, t3 = this.lib_1; t1.moveNext$0();)
        interfaces.push(t2.getMember$2(t3, t1.get$current().get$loc()));
      return P.Future_wait(interfaces, false).then$1(new V.Viewer_getMember__closure(t2, t3, this.member_2, mem));
    }, "call$1", null, 2, 0, null, 684, "call"],
    $isFunction: true
  },
  Viewer_getMember__closure: {
    "": "Closure:271;this_3,lib_4,member_5,mem_6",
    call$1: [function(loaded) {
      var t1, t2, t3;
      t1 = this.mem_6;
      t2 = this.lib_4;
      t3 = this.member_5;
      if (J.$eq(t1.get$superClass().get$loc().get$memberName(), "Object") !== true)
        return this.this_3.getMember$2(t2, t1.get$superClass().get$loc()).then$1(new V.Viewer_getMember___closure(t2, t3));
      else
        return P._Future$immediate([t2, t3], null);
    }, "call$1", null, 2, 0, null, 686, "call"],
    $isFunction: true
  },
  Viewer_getMember___closure: {
    "": "Closure:271;lib_7,member_8",
    call$1: [function(_) {
      return [this.lib_7, this.member_8];
    }, "call$1", null, 2, 0, null, 335, "call"],
    $isFunction: true
  },
  Viewer_getMember_closure0: {
    "": "Closure:271;lib_9,member_10",
    call$1: [function(mem) {
      return P._Future$immediate([this.lib_9, this.member_10], null);
    }, "call$1", null, 2, 0, null, 684, "call"],
    $isFunction: true
  },
  _init_closure: {
    "": "Closure:271;",
    call$1: [function($event) {
      var t1, t2;
      t1 = $.get$viewer();
      t2 = window.innerWidth;
      if (typeof t2 !== "number")
        return t2.$gt();
      t1._app$__$isDesktop = F.notifyPropertyChangeHelper(t1, C.Symbol_isDesktop, t1._app$__$isDesktop, t2 > 1006);
      t1 = $._dartdocMain;
      if (t1 == null) {
        t1 = document.querySelector("#dartdoc-main");
        $._dartdocMain = t1;
      }
      J.collapseSearchAndOptionsIfNeeded$0$x(t1);
      t1 = $._dartdocMain;
      if (t1 == null) {
        t1 = document.querySelector("#dartdoc-main");
        $._dartdocMain = t1;
      }
      J.hideOrShowNavigation$0$x(t1);
    }, "call$1", null, 2, 0, 271, 349, "call"],
    $isFunction: true
  },
  "+_init_closure": [449],
  _init_closure0: {
    "": "Closure:271;",
    call$1: [function(_) {
      var t1 = $._dartdocMain;
      if (t1 == null) {
        t1 = document.querySelector("#dartdoc-main");
        $._dartdocMain = t1;
      }
      J.hideOrShowNavigation$0$x(t1);
    }, "call$1", null, 2, 0, 271, 335, "call"],
    $isFunction: true
  },
  "+_init_closure": [449],
  _init_closure1: {
    "": "Closure:271;",
    call$1: [function(_) {
      var t1 = $.location;
      if (t1 != null && J.$eq(t1, "") !== true)
        $.get$viewer().handleLink$1($.location);
      else {
        t1 = $.get$viewer();
        t1.set$currentPage(t1._app$__$homePage);
      }
    }, "call$1", null, 2, 0, 271, 335, "call"],
    $isFunction: true
  },
  "+_init_closure": [449],
  concat_closure: {
    "": "Closure:271;",
    call$1: [function(x) {
      return x;
    }, "call$1", null, 2, 0, null, 21, "call"],
    $isFunction: true
  },
  _DefaultSyntaxWithEvents: {
    "": "BindingDelegate;",
    prepareBinding$3: [function(path, $name, node) {
      return A.Polymer_prepareBinding(path, $name, node, O.BindingDelegate.prototype.get$prepareBinding.call(this));
    }, "call$3", "get$prepareBinding", 6, 0, null, 313, 12, 312]
  },
  "": "location<,viewer<"
}],
["web.breadcrumbs", "breadcrumbs.dart", , U, {
  "": "",
  Breadcrumbs: {
    "": ["PolymerElement_ChangeNotifier0;_breadcrumbs$__$breadcrumbs%-456,_breadcrumbs$__$lastCrumb%-453,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$breadcrumbs: [function(receiver) {
      return receiver._breadcrumbs$__$breadcrumbs;
    }, null, null, 1, 0, 687, "breadcrumbs", 132, 436],
    set$breadcrumbs: [function(receiver, value) {
      receiver._breadcrumbs$__$breadcrumbs = this.notifyPropertyChange$3(receiver, C.Symbol_breadcrumbs, receiver._breadcrumbs$__$breadcrumbs, value);
    }, null, null, 3, 0, 688, 23, "breadcrumbs", 132],
    get$lastCrumb: [function(receiver) {
      return receiver._breadcrumbs$__$lastCrumb;
    }, null, null, 1, 0, 461, "lastCrumb", 132, 436],
    set$lastCrumb: [function(receiver, value) {
      receiver._breadcrumbs$__$lastCrumb = this.notifyPropertyChange$3(receiver, C.Symbol_lastCrumb, receiver._breadcrumbs$__$lastCrumb, value);
    }, null, null, 3, 0, 679, 23, "lastCrumb", 132],
    get$syntax: [function(receiver) {
      return $.get$defaultSyntax();
    }, null, null, 1, 0, 108, "syntax"],
    get$applyAuthorStyles: [function(receiver) {
      return true;
    }, null, null, 1, 0, 108, "applyAuthorStyles"],
    enteredView$0: [function(receiver) {
      var t1;
      A.Polymer.prototype.enteredView$0.call(this, receiver);
      t1 = $.get$viewer();
      this.registerObserver$2(receiver, "viewer", t1.get$changes(t1).listen$1(new U.Breadcrumbs_enteredView_closure(receiver)));
      this._updateBreadcrumbs$0(receiver);
    }, "call$0", "get$enteredView", 0, 0, 108, "enteredView"],
    _updateBreadcrumbs$0: [function(receiver) {
      var t1, p, t2, t3;
      receiver._breadcrumbs$__$breadcrumbs = this.notifyPropertyChange$3(receiver, C.Symbol_breadcrumbs, receiver._breadcrumbs$__$breadcrumbs, []);
      receiver._breadcrumbs$__$lastCrumb = this.notifyPropertyChange$3(receiver, C.Symbol_lastCrumb, receiver._breadcrumbs$__$lastCrumb, null);
      t1 = $.get$viewer();
      if (t1._app$__$homePage != null && t1._currentPage != null) {
        for (p = t1._currentPage; t2 = J.$eq(p, t1._app$__$homePage), t3 = receiver._breadcrumbs$__$breadcrumbs, t2 !== true; p = p.get$owner())
          J.add$1$ax(t3, p);
        t1 = J.toList$0$ax(J.get$reversed$ax(t3));
        t1 = this.notifyPropertyChange$3(receiver, C.Symbol_breadcrumbs, receiver._breadcrumbs$__$breadcrumbs, t1);
        receiver._breadcrumbs$__$breadcrumbs = t1;
        if (J.get$isNotEmpty$asx(t1)) {
          t1 = J.removeLast$0$ax(receiver._breadcrumbs$__$breadcrumbs);
          receiver._breadcrumbs$__$lastCrumb = this.notifyPropertyChange$3(receiver, C.Symbol_lastCrumb, receiver._breadcrumbs$__$lastCrumb, t1);
        }
      }
      this.fire$1(receiver, "update");
    }, "call$0", "get$_updateBreadcrumbs", 0, 0, 108, "_updateBreadcrumbs"],
    "@": function() {
      return [C.CustomTag_6L0];
    },
    static: {Breadcrumbs$created: [function(receiver) {
        var t1, t2, t3, t4;
        t1 = $.get$Polymer__polymerSyntax();
        t2 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t3 = J.JSString;
        t4 = W.Element;
        t4 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t3, t4), null, null), [t3, t4]);
        receiver.polymer$Polymer$syntax = t1;
        receiver.polymer$Polymer$_shadowRoots = t2;
        receiver.polymer$Polymer$$ = t4;
        C.Breadcrumbs_methods.Element$created$0(receiver);
        C.Breadcrumbs_methods.PolymerElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new Breadcrumbs$created" /* new Breadcrumbs$created:0:0 */]}
  },
  "+Breadcrumbs": [689],
  PolymerElement_ChangeNotifier0: {
    "": "PolymerElement+ChangeNotifier;",
    $isObservable: true
  },
  Breadcrumbs_enteredView_closure: {
    "": "Closure:271;this_0-77",
    call$1: [function(changes) {
      var t1, change, t2;
      for (t1 = J.get$iterator$ax(changes); t1.moveNext$0();) {
        change = t1.get$current();
        t2 = J.getInterceptor$x(change);
        if (J.$eq(t2.get$name(change), C.Symbol_currentPage) === true || J.$eq(t2.get$name(change), C.Symbol_homePage) === true) {
          J._updateBreadcrumbs$0$x(this.this_0);
          return;
        }
      }
    }, "call$1", null, 2, 0, 271, 637, "call"],
    $isFunction: true
  },
  "+Breadcrumbs_enteredView_closure": [449]
}],
["web.category", "category.dart", , O, {
  "": "",
  CategoryElement: {
    "": ["DartdocElement_ChangeNotifier;_category$__$category%-471,_category$__$items%-690,_category$__$variables%-691,_category$__$methods%-692,_category$__$hasItems%-451,_category$__$title%-434,_category$__$stylizedName%-434,_category$__$accordionStyle%-434,_category$__$divClass%-434,_category$__$caretStyle%-434,_category$__$lineHeight%-434,__isExpanded%-451,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_pathname-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$category: [function(receiver) {
      return receiver._category$__$category;
    }, null, null, 1, 0, 478, "category", 132, 674],
    set$category: [function(receiver, value) {
      receiver._category$__$category = this.notifyPropertyChange$3(receiver, C.Symbol_category, receiver._category$__$category, value);
    }, null, null, 3, 0, 693, 23, "category", 132],
    get$items: [function(receiver) {
      return receiver._category$__$items;
    }, null, null, 1, 0, 694, "items", 132, 674],
    items$2$includeAllItems: function($receiver, arg0, arg1) {
      return this.get$items($receiver).call$2$includeAllItems(arg0, arg1);
    },
    set$items: [function(receiver, value) {
      receiver._category$__$items = this.notifyPropertyChange$3(receiver, C.Symbol_items, receiver._category$__$items, value);
    }, null, null, 3, 0, 695, 23, "items", 132],
    get$variables: [function(receiver) {
      return receiver._category$__$variables;
    }, null, null, 1, 0, 696, "variables", 132, 674],
    set$variables: [function(receiver, value) {
      receiver._category$__$variables = this.notifyPropertyChange$3(receiver, C.Symbol_variables, receiver._category$__$variables, value);
    }, null, null, 3, 0, 697, 23, "variables", 132],
    get$methods: [function(receiver) {
      return receiver._category$__$methods;
    }, null, null, 1, 0, 698, "methods", 132, 674],
    set$methods: [function(receiver, value) {
      receiver._category$__$methods = this.notifyPropertyChange$3(receiver, C.Symbol_methods, receiver._category$__$methods, value);
    }, null, null, 3, 0, 699, 23, "methods", 132],
    get$hasItems: [function(receiver) {
      return receiver._category$__$hasItems;
    }, null, null, 1, 0, 437, "hasItems", 132, 436],
    set$hasItems: [function(receiver, value) {
      receiver._category$__$hasItems = this.notifyPropertyChange$3(receiver, C.Symbol_hasItems, receiver._category$__$hasItems, value);
    }, null, null, 3, 0, 525, 23, "hasItems", 132],
    get$title: [function(receiver) {
      return receiver._category$__$title;
    }, null, null, 1, 0, 435, "title", 132, 436],
    set$title: [function(receiver, value) {
      receiver._category$__$title = this.notifyPropertyChange$3(receiver, C.Symbol_title, receiver._category$__$title, value);
    }, null, null, 3, 0, 25, 23, "title", 132],
    get$stylizedName: [function(receiver) {
      return receiver._category$__$stylizedName;
    }, null, null, 1, 0, 435, "stylizedName", 132, 436],
    set$stylizedName: [function(receiver, value) {
      receiver._category$__$stylizedName = this.notifyPropertyChange$3(receiver, C.Symbol_stylizedName, receiver._category$__$stylizedName, value);
    }, null, null, 3, 0, 25, 23, "stylizedName", 132],
    get$accordionStyle: [function(receiver) {
      return receiver._category$__$accordionStyle;
    }, null, null, 1, 0, 435, "accordionStyle", 132, 436],
    set$accordionStyle: [function(receiver, value) {
      receiver._category$__$accordionStyle = this.notifyPropertyChange$3(receiver, C.Symbol_accordionStyle, receiver._category$__$accordionStyle, value);
    }, null, null, 3, 0, 25, 23, "accordionStyle", 132],
    get$divClass: [function(receiver) {
      return receiver._category$__$divClass;
    }, null, null, 1, 0, 435, "divClass", 132, 436],
    set$divClass: [function(receiver, value) {
      receiver._category$__$divClass = this.notifyPropertyChange$3(receiver, C.Symbol_divClass, receiver._category$__$divClass, value);
    }, null, null, 3, 0, 25, 23, "divClass", 132],
    get$caretStyle: [function(receiver) {
      return receiver._category$__$caretStyle;
    }, null, null, 1, 0, 435, "caretStyle", 132, 436],
    set$caretStyle: [function(receiver, value) {
      receiver._category$__$caretStyle = this.notifyPropertyChange$3(receiver, C.Symbol_caretStyle, receiver._category$__$caretStyle, value);
    }, null, null, 3, 0, 25, 23, "caretStyle", 132],
    get$lineHeight: [function(receiver) {
      return receiver._category$__$lineHeight;
    }, null, null, 1, 0, 435, "lineHeight", 132, 436],
    set$lineHeight: [function(receiver, value) {
      receiver._category$__$lineHeight = this.notifyPropertyChange$3(receiver, C.Symbol_lineHeight, receiver._category$__$lineHeight, value);
    }, null, null, 3, 0, 25, 23, "lineHeight", 132],
    get$_isExpanded: [function(receiver) {
      return receiver.__isExpanded;
    }, null, null, 1, 0, 437, "_isExpanded"],
    set$_isExpanded: [function(receiver, expanded) {
      var t1, t2;
      receiver.__isExpanded = expanded;
      t1 = expanded === true;
      t2 = t1 ? "" : "collapsed";
      receiver._category$__$accordionStyle = this.notifyPropertyChange$3(receiver, C.Symbol_accordionStyle, receiver._category$__$accordionStyle, t2);
      t2 = t1 ? "collapse in" : "collapse";
      receiver._category$__$divClass = this.notifyPropertyChange$3(receiver, C.Symbol_divClass, receiver._category$__$divClass, t2);
      t2 = t1 ? "" : "caret";
      receiver._category$__$caretStyle = this.notifyPropertyChange$3(receiver, C.Symbol_caretStyle, receiver._category$__$caretStyle, t2);
      t1 = t1 ? "auto" : "0px";
      receiver._category$__$lineHeight = this.notifyPropertyChange$3(receiver, C.Symbol_lineHeight, receiver._category$__$lineHeight, t1);
    }, null, null, 3, 0, 525, 700, "_isExpanded"],
    categoryChanged$0: [function(receiver) {
      var t1 = receiver._category$__$category;
      t1 = t1 == null ? "" : J.get$name$x(t1);
      receiver._category$__$title = this.notifyPropertyChange$3(receiver, C.Symbol_title, receiver._category$__$title, t1);
      t1 = receiver._category$__$category;
      t1 = t1 == null ? "" : J.replaceAll$2$s(J.get$name$x(t1), " ", "-");
      receiver._category$__$stylizedName = this.notifyPropertyChange$3(receiver, C.Symbol_stylizedName, receiver._category$__$stylizedName, t1);
    }, "call$0", "get$categoryChanged", 0, 0, 107, "categoryChanged"],
    itemsChanged$0: [function(receiver) {
      return this._updateHasItems$0(receiver);
    }, "call$0", "get$itemsChanged", 0, 0, 107, "itemsChanged"],
    variablesChanged$0: [function(receiver) {
      return this._updateHasItems$0(receiver);
    }, "call$0", "get$variablesChanged", 0, 0, 107, "variablesChanged"],
    methodsChanged$0: [function(receiver) {
      return this._updateHasItems$0(receiver);
    }, "call$0", "get$methodsChanged", 0, 0, 107, "methodsChanged"],
    _updateHasItems$0: [function(receiver) {
      var t1 = receiver._category$__$items;
      if (!(t1 != null && J.get$isNotEmpty$asx(t1))) {
        t1 = receiver._category$__$variables;
        if (!(t1 != null && J.get$isNotEmpty$asx(t1))) {
          t1 = receiver._category$__$methods;
          t1 = t1 != null && J.get$isNotEmpty$asx(t1);
        } else
          t1 = true;
      } else
        t1 = true;
      receiver._category$__$hasItems = this.notifyPropertyChange$3(receiver, C.Symbol_hasItems, receiver._category$__$hasItems, t1);
    }, "call$0", "get$_updateHasItems", 0, 0, 108, "_updateHasItems"],
    hideShow$3: [function(receiver, $event, detail, target) {
      this.set$_isExpanded(receiver, receiver.__isExpanded !== true);
    }, "call$3", "get$hideShow", 6, 0, 701, 349, 382, 74, "hideShow"],
    CategoryElement$created$0: [function(receiver) {
      var t1 = $.get$viewer();
      this.registerObserver$2(receiver, "viewer", t1.get$changes(t1).listen$1(new O.CategoryElement$created_closure(receiver)));
      this.set$_isExpanded(receiver, t1._app$__$isDesktop);
    }, null, null, 0, 0, 108, "created"],
    "@": function() {
      return [C.CustomTag_Why];
    },
    static: {CategoryElement$created: [function(receiver) {
        var t1, t2, t3, t4, t5;
        t1 = J.get$pathname$x(C.Window_methods.get$location(window));
        t2 = $.get$Polymer__polymerSyntax();
        t3 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t4 = J.JSString;
        t5 = W.Element;
        t5 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t4, t5), null, null), [t4, t5]);
        receiver._category$__$hasItems = false;
        receiver._pathname = t1;
        receiver.polymer$Polymer$syntax = t2;
        receiver.polymer$Polymer$_shadowRoots = t3;
        receiver.polymer$Polymer$$ = t5;
        C.CategoryElement_methods.Element$created$0(receiver);
        C.CategoryElement_methods.PolymerElement$created$0(receiver);
        C.CategoryElement_methods.CategoryElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new CategoryElement$created" /* new CategoryElement$created:0:0 */]}
  },
  "+CategoryElement": [702],
  DartdocElement_ChangeNotifier: {
    "": "DartdocElement+ChangeNotifier;",
    $isObservable: true
  },
  CategoryElement$created_closure: {
    "": "Closure:271;this_0-77",
    call$1: [function(changes) {
      if (J.any$1$ax(changes, new O.CategoryElement$created__closure()) === true)
        J.set$_isExpanded$x(this.this_0, $.get$viewer()._app$__$isDesktop);
    }, "call$1", null, 2, 0, 271, 637, "call"],
    $isFunction: true
  },
  "+CategoryElement$created_closure": [449],
  CategoryElement$created__closure: {
    "": "Closure:271;",
    call$1: [function(c) {
      return J.$eq(J.get$name$x(c), C.Symbol_isDesktop);
    }, "call$1", null, 2, 0, 271, 331, "call"],
    $isFunction: true
  },
  "+CategoryElement$created__closure": [449]
}],
["web.class_", "class.dart", , T, {
  "": "",
  ClassElement: {
    "": ["MemberElement;lazyConstructors=-703,lazyOperators=-703,lazyInstanceFunctions=-703,lazyStaticFunctions=-703,lazyInstanceVariables=-703,lazyStaticVariables=-703,_loader%-704,_item-448,_member$__$idName-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_pathname-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$defaultItem: [function(receiver) {
      return $.get$ClassElement__defaultItem();
    }, null, null, 1, 0, 108, "defaultItem"],
    wrongClass$1: [function(receiver, newItem) {
      var t1 = J.getInterceptor(newItem);
      return typeof newItem !== "object" || newItem === null || !t1.$isClass;
    }, "call$1", "get$wrongClass", 2, 0, 334, 705, "wrongClass"],
    showSubclass$3: [function(receiver, $event, detail, target) {
      var t1;
      for (t1 = W._FrozenElementList$_wrap((receiver.shadowRoot || receiver.webkitShadowRoot).querySelectorAll(".hidden"), null), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        J.remove$1$ax(J.get$classes$x(t1._current), "hidden");
      J.get$classes$x((receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#subclass-button")).add$1(0, "hidden");
    }, "call$3", "get$showSubclass", 6, 0, 706, 349, 382, 74, "showSubclass"],
    leftView$0: [function(receiver) {
      var t1;
      A.Polymer.prototype.leftView$0.call(this, receiver);
      t1 = receiver._loader;
      if (t1 != null) {
        t1.cancel$0();
        receiver._loader = null;
      }
    }, "call$0", "get$leftView", 0, 0, 108, "leftView"],
    _loadCategories$0: [function(receiver) {
      var t1, categories;
      t1 = receiver._loader;
      if (t1 != null)
        t1.cancel$0();
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      }
      t1 = X._LazyListCopier$(H.setRuntimeTypeInfo(new H.MappedListIterable(t1.get$categories(), new T.ClassElement__loadCategories_closure()), [null, null]).toList$0(0), [receiver.lazyConstructors, receiver.lazyOperators, receiver.lazyInstanceFunctions, receiver.lazyStaticFunctions, receiver.lazyInstanceVariables, receiver.lazyStaticVariables]);
      categories = new X.LazyListLoader(t1, 25, false);
      if ($.get$viewer()._hash !== "")
        t1.loadAll$0();
      else
        categories._loadItems$1(null);
      receiver._loader = categories;
    }, "call$0", "get$_loadCategories", 0, 0, 108, "_loadCategories"],
    itemChanged$0: [function(receiver) {
      U.MemberElement.prototype.itemChanged$0.call(this, receiver);
      this._loadCategories$0(receiver);
      if ((receiver.shadowRoot || receiver.webkitShadowRoot) != null) {
        this.addInterfaces$0(receiver);
        this.addSubclasses$0(receiver);
      }
    }, "call$0", "get$itemChanged", 0, 0, 108, "itemChanged"],
    addInterfaces$0: [function(receiver) {
      var p, t1, t2;
      p = (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#interfaces");
      if (p == null)
        return;
      t1 = J.getInterceptor$x(p);
      t1.get$children(p).clear$0(0);
      t2 = receiver._item;
      if (t2 == null) {
        t2 = this.get$defaultItem(receiver);
        receiver._item = t2;
      }
      if (J.get$isNotEmpty$asx(t2.get$interfaces())) {
        t1.insertAdjacentText$2(p, "beforeend", "Implements: ");
        t2 = receiver._item;
        if (t2 == null) {
          t2 = this.get$defaultItem(receiver);
          receiver._item = t2;
        }
        J.forEach$1$ax(this.makeLinks$1(receiver, t2.get$interfaces()), t1.get$append(p));
        t1.insertAdjacentText$2(p, "beforeend", " ");
      }
      t2 = receiver._item;
      if (t2 == null) {
        t2 = this.get$defaultItem(receiver);
        receiver._item = t2;
      }
      if (t2.get$superClass() != null) {
        t1.insertAdjacentText$2(p, "beforeend", "Extends: ");
        t2 = receiver._item;
        if (t2 == null) {
          t2 = this.get$defaultItem(receiver);
          receiver._item = t2;
        }
        J.forEach$1$ax(this.makeLinks$1(receiver, [t2.get$superClass()]), t1.get$append(p));
      }
    }, "call$0", "get$addInterfaces", 0, 0, 108, "addInterfaces"],
    addSubclasses$0: [function(receiver) {
      var t1, p, t2, subclasses, links, ellipsis, t3;
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      }
      if (J.$eq(t1.get$qualifiedName(), "dart.core.Object") === true)
        return;
      p = (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#subclasses");
      t1 = J.getInterceptor$x(p);
      t1.get$children(p).clear$0(0);
      t2 = receiver._item;
      if (t2 == null) {
        t2 = this.get$defaultItem(receiver);
        receiver._item = t2;
      }
      subclasses = t2.get$subclasses();
      t2 = J.getInterceptor$ax(subclasses);
      links = this.makeLinks$1(receiver, t2.take$1(subclasses, 3));
      if (t2.get$isNotEmpty(subclasses)) {
        t1.insertAdjacentText$2(p, "beforeend", "Subclasses: ");
        J.forEach$1$ax(links, t1.get$append(p));
      }
      if (J.$le$n(t2.get$length(subclasses), 3))
        return;
      ellipsis = W.AnchorElement_AnchorElement(null);
      t3 = J.getInterceptor$x(ellipsis);
      t3.set$classes(ellipsis, ["btn", "btn-link", "btn-xs"]);
      ellipsis.id = "subclass-button";
      ellipsis.textContent = "...";
      t3 = t3.get$onClick(ellipsis);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t3._target, t3._eventType, W._wrapZone(new T.ClassElement_addSubclasses_closure(receiver)), t3._useCapture), [H.getTypeArgumentByIndex(t3, 0)])._tryResume$0();
      p.appendChild(ellipsis);
      J.forEach$1$ax(this.makeLinks$2$hidden(receiver, t2.skip$1(subclasses, 3), true), t1.get$append(p));
    }, "call$0", "get$addSubclasses", 0, 0, 108, "addSubclasses"],
    makeLinks$2$hidden: [function(receiver, classes, hidden) {
      var t1 = {};
      t1.first_0 = hidden !== true;
      return J.fold$2$ax(J.map$1$ax(classes, new T.ClassElement_makeLinks_closure(receiver, hidden)), [], new T.ClassElement_makeLinks_closure0(t1, hidden));
    }, function($receiver, classes) {
      return this.makeLinks$2$hidden($receiver, classes, false);
    }, "makeLinks$1", "call$2$hidden", null, "get$makeLinks", 2, 3, 707, 112, 113, 708, "makeLinks"],
    makeLink$2$hidden: [function(receiver, cls, hidden) {
      var t1, t2;
      t1 = W.AnchorElement_AnchorElement(null);
      t2 = J.getInterceptor$x(t1);
      t2.set$href(t1, "#" + H.S(J.get$location$x(cls)));
      t1.id = "subclass-hidden";
      t2.set$classes(t1, hidden === true ? ["hidden"] : []);
      t1.textContent = cls.get$simpleType();
      return t1;
    }, "call$2$hidden", "get$makeLink", 2, 3, 709, 112, 306, 708, "makeLink"],
    ClassElement$created$0: [function(receiver) {
      var t1 = $.get$viewer();
      this.registerObserver$2(receiver, "viewer", t1.get$changes(t1).listen$1(new T.ClassElement$created_closure(receiver)));
    }, null, null, 0, 0, 108, "created"],
    "@": function() {
      return [C.CustomTag_qRH];
    },
    static: {"": "ClassElement_MAX_SUBCLASSES_TO_SHOW<-77,ClassElement__defaultItem<-77", ClassElement$created: [function(receiver) {
        var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
        t1 = Q.ObservableList$(null, null);
        t2 = Q.ObservableList$(null, null);
        t3 = Q.ObservableList$(null, null);
        t4 = Q.ObservableList$(null, null);
        t5 = Q.ObservableList$(null, null);
        t6 = Q.ObservableList$(null, null);
        t7 = J.get$pathname$x(C.Window_methods.get$location(window));
        t8 = $.get$Polymer__polymerSyntax();
        t9 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t10 = J.JSString;
        t11 = W.Element;
        t11 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t10, t11), null, null), [t10, t11]);
        receiver.lazyConstructors = t1;
        receiver.lazyOperators = t2;
        receiver.lazyInstanceFunctions = t3;
        receiver.lazyStaticFunctions = t4;
        receiver.lazyInstanceVariables = t5;
        receiver.lazyStaticVariables = t6;
        receiver._pathname = t7;
        receiver.polymer$Polymer$syntax = t8;
        receiver.polymer$Polymer$_shadowRoots = t9;
        receiver.polymer$Polymer$$ = t11;
        C.ClassElement_methods.Element$created$0(receiver);
        C.ClassElement_methods.PolymerElement$created$0(receiver);
        C.ClassElement_methods.MemberElement$created$0(receiver);
        C.ClassElement_methods.ClassElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new ClassElement$created" /* new ClassElement$created:0:0 */]}
  },
  "+ClassElement": [710],
  ClassElement$created_closure: {
    "": "Closure:271;this_0-77",
    call$1: [function(changes) {
      if (J.any$1$ax(changes, new T.ClassElement$created__closure()) === true)
        J._loadCategories$0$x(this.this_0);
    }, "call$1", null, 2, 0, 271, 637, "call"],
    $isFunction: true
  },
  "+ClassElement$created_closure": [449],
  ClassElement$created__closure: {
    "": "Closure:271;",
    call$1: [function(c) {
      var t1 = J.getInterceptor$x(c);
      return J.$eq(t1.get$name(c), C.Symbol_isInherited) === true || J.$eq(t1.get$name(c), C.Symbol_showObjectMembers) === true;
    }, "call$1", null, 2, 0, 271, 331, "call"],
    $isFunction: true
  },
  "+ClassElement$created__closure": [449],
  ClassElement__loadCategories_closure: {
    "": "Closure:271;",
    call$1: [function(x) {
      var t1 = $.get$viewer();
      return x.filteredContent$1(t1.get$filter(t1));
    }, "call$1", null, 2, 0, 271, 21, "call"],
    $isFunction: true
  },
  "+ClassElement__loadCategories_closure": [449],
  ClassElement_addSubclasses_closure: {
    "": "Closure:271;this_0-77",
    call$1: [function($event) {
      return J.showSubclass$3$x(this.this_0, null, null, null);
    }, "call$1", null, 2, 0, 271, 349, "call"],
    $isFunction: true
  },
  "+ClassElement_addSubclasses_closure": [449],
  ClassElement_makeLinks_closure: {
    "": "Closure:271;this_1-77,hidden_2-77",
    call$1: [function(cls) {
      var t1, t2;
      t1 = W.AnchorElement_AnchorElement(null);
      t2 = J.getInterceptor$x(t1);
      t2.set$href(t1, "#" + H.S(J.get$location$x(cls)));
      t1.id = "subclass-hidden";
      t2.set$classes(t1, this.hidden_2 === true ? ["hidden"] : []);
      t1.textContent = cls.get$simpleType();
      return t1;
    }, "call$1", null, 2, 0, 271, 306, "call"],
    $isFunction: true
  },
  "+ClassElement_makeLinks_closure": [449],
  ClassElement_makeLinks_closure0: {
    "": "Closure:426;box_0-77,hidden_3-77",
    call$2: [function(list, classLink) {
      var t1 = this.box_0;
      if (t1.first_0 === true)
        t1.first_0 = false;
      else {
        t1 = document.createElement("span", null);
        t1.textContent = ", ";
        t1.id = "subclass-hidden";
        J.set$classes$x(t1, this.hidden_3 === true ? ["hidden"] : []);
        J.add$1$ax(list, t1);
      }
      J.add$1$ax(list, classLink);
      return list;
    }, "call$2", null, 4, 0, 426, 68, 711, "call"],
    $isFunction: true
  },
  "+ClassElement_makeLinks_closure": [449]
}],
["web.comment", "comment.dart", , S, {
  "": "",
  CommentElement: {
    "": ["DivElement_Polymer_ChangeNotifier;_comment$__$item%-448,_comment$__$preview%-451,_commentElement%-712,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$item: [function(receiver) {
      return receiver._comment$__$item;
    }, null, null, 1, 0, 713, "item", 132, 674],
    item$1: function($receiver, arg0) {
      return this.get$item($receiver).call$1(arg0);
    },
    set$item: [function(receiver, value) {
      receiver._comment$__$item = this.notifyPropertyChange$3(receiver, C.Symbol_item, receiver._comment$__$item, value);
    }, null, null, 3, 0, 714, 23, "item", 132],
    get$preview: [function(receiver) {
      return receiver._comment$__$preview;
    }, null, null, 1, 0, 437, "preview", 132, 674],
    set$preview: [function(receiver, value) {
      receiver._comment$__$preview = this.notifyPropertyChange$3(receiver, C.Symbol_preview, receiver._comment$__$preview, value);
    }, null, null, 3, 0, 525, 23, "preview", 132],
    itemChanged$0: [function(receiver) {
      return this._updateComment$0(receiver);
    }, "call$0", "get$itemChanged", 0, 0, 108, "itemChanged"],
    previewChanged$0: [function(receiver) {
      return this._updateComment$0(receiver);
    }, "call$0", "get$previewChanged", 0, 0, 108, "previewChanged"],
    enteredView$0: [function(receiver) {
      A.Polymer.prototype.enteredView$0.call(this, receiver);
      $.get$searchIndex().onLoad$1(0, this.get$_updateComment(receiver));
    }, "call$0", "get$enteredView", 0, 0, 108, "enteredView"],
    _updateComment$0: [function(receiver) {
      var t1, comment, t2, firstParagraph, links, codeBlocks, e;
      t1 = receiver._commentElement;
      if (t1 != null) {
        J.remove$0$ax(t1);
        receiver._commentElement = null;
      }
      t1 = receiver._comment$__$item;
      if (t1 == null)
        return;
      comment = t1.get$comment();
      if (receiver._comment$__$preview === true) {
        t1 = receiver._comment$__$item;
        t2 = J.getInterceptor(t1);
        t1 = typeof t1 === "object" && t1 !== null && !!t2.$isClass || typeof t1 === "object" && t1 !== null && !!t2.$isLibrary;
      } else
        t1 = false;
      if (t1)
        comment = H.interceptedTypeCast(receiver._comment$__$item, "$isLazyItem").previewComment;
      if (J.$eq(comment, "") !== true && comment != null) {
        firstParagraph = W.Element_Element$html(comment, $.get$nullSanitizer(), null);
        receiver._commentElement = firstParagraph;
        t1 = J.getInterceptor$x(firstParagraph);
        firstParagraph = typeof firstParagraph === "object" && firstParagraph !== null && !!t1.$isParagraphElement ? firstParagraph : t1.querySelector$1(firstParagraph, "p");
        if (firstParagraph != null)
          J.add$1$ax(J.get$classes$x(firstParagraph), "firstParagraph");
        links = J.querySelectorAll$1$x(receiver._commentElement, "a");
        for (t1 = links.get$iterator(links); t1.moveNext$0();)
          this._resolveLink$1(receiver, t1._current);
        codeBlocks = J.querySelectorAll$1$x(receiver._commentElement, "code");
        for (t1 = codeBlocks.get$iterator(codeBlocks); t1.moveNext$0();) {
          e = t1._current;
          t2 = J.getInterceptor$x(e);
          t2.setInnerHtml$2$treeSanitizer(e, $.get$context().callMethod$2("prettyPrintOne", [t2.get$innerHtml(e), "dart"]), $.get$nullSanitizer());
        }
        receiver.appendChild(receiver._commentElement);
      }
    }, "call$0", "get$_updateComment", 0, 0, 107, "_updateComment"],
    _replaceWithParameterReference$2: [function(receiver, link, loc) {
      var item, t1, newAnchor;
      item = J.item$1$x(loc, $.get$viewer()._app$__$homePage);
      t1 = J.getInterceptor(item);
      if (typeof item !== "object" || item === null || !t1.$isParameter)
        return false;
      newAnchor = W.AnchorElement_AnchorElement(null);
      J.set$href$x(newAnchor, "#!" + item.get$anchorHref());
      newAnchor.textContent = loc.get$lastName();
      J.replaceWith$1$x(link, newAnchor);
      return true;
    }, "call$2", "get$_replaceWithParameterReference", 4, 0, 715, 716, 717, "_replaceWithParameterReference"],
    _resolveLink$1: [function(receiver, link) {
      var t1, loc, t2, t3, t4, t5, t6, t7;
      t1 = J.getInterceptor$x(link);
      if (J.$eq(t1.get$href(link), "") !== true)
        return;
      loc = new Y.DocsLocation(null, null, null, null, null);
      loc._extractPieces$1(t1.get$text(link));
      if (this._replaceWithParameterReference$2(receiver, link, loc))
        return;
      t2 = $.get$searchIndex();
      if (t2._search$_map.containsKey$1(t1.get$text(link)) === true) {
        t2 = new Y.DocsLocation(null, null, null, null, null);
        t2._extractPieces$1(loc.get$withAnchor());
        new E.LinkableType(null).loc = t2;
        t1.set$href(link, "#!" + t2.get$withoutAnchor());
        t2 = t2.get$locationWithoutAnchor();
        t1.set$text(link, t2.get$name(t2));
        return;
      }
      t3 = t2._search$_map;
      t4 = loc.get$componentNames();
      if (0 >= t4.length)
        return H.ioore(t4, 0);
      t4.pop();
      t4 = Y.DocsLocation$fromList(t4);
      t5 = t4.packageName;
      if (t5 == null)
        t5 = "";
      else
        t5 = t4.libraryName == null ? t5 : H.S(t5) + "/";
      t6 = t4.libraryName;
      if (t6 == null)
        t6 = "";
      t7 = t4.memberName;
      t7 = t7 == null ? "" : "." + H.S(t7);
      t4 = t4.subMemberName;
      if (t3.containsKey$1(C.JSArray_methods.join$1([t5, t6, t7, t4 == null ? "" : "." + H.S(t4)], "")) === true) {
        t2 = new Y.DocsLocation(null, null, null, null, null);
        t2._extractPieces$1(loc.get$withAnchor());
        new E.LinkableType(null).loc = t2;
        t1.set$href(link, "#!" + t2.get$withoutAnchor());
        t2 = t2.get$locationWithoutAnchor();
        t1.set$text(link, t2.get$name(t2));
        return;
      }
      loc.packageName = null;
      t2 = t2._search$_map;
      t3 = loc.libraryName;
      if (t3 == null)
        t3 = "";
      t4 = loc.memberName;
      t4 = t4 == null ? "" : "." + H.S(t4);
      t5 = loc.subMemberName;
      t3 = C.JSArray_methods.join$1(["", t3, t4, t5 == null ? "" : "." + H.S(t5)], "");
      t4 = loc.anchor;
      if (t2.containsKey$1(t3 + (t4 == null ? "" : "@" + H.S(t4))) === true) {
        t2 = new Y.DocsLocation(null, null, null, null, null);
        t2._extractPieces$1(loc.get$withAnchor());
        new E.LinkableType(null).loc = t2;
        t1.set$href(link, "#!" + t2.get$withoutAnchor());
        t2 = t2.get$locationWithoutAnchor();
        t1.set$text(link, t2.get$name(t2));
        return;
      }
      t2 = W._ElementFactoryProvider_createElement_tag("i", null);
      J.set$text$x(t2, t1.get$text(link));
      t1.replaceWith$1(link, t2);
    }, "call$1", "get$_resolveLink", 2, 0, 718, 716, "_resolveLink"],
    _setLinkReference$2: [function(receiver, link, loc) {
      var t1, t2;
      t1 = new Y.DocsLocation(null, null, null, null, null);
      t1._extractPieces$1(loc.get$withAnchor());
      new E.LinkableType(null).loc = t1;
      t2 = J.getInterceptor$x(link);
      t2.set$href(link, "#!" + t1.get$withoutAnchor());
      t1 = t1.get$locationWithoutAnchor();
      t2.set$text(link, t1.get$name(t1));
    }, "call$2", "get$_setLinkReference", 4, 0, 719, 716, 717, "_setLinkReference"],
    CommentElement$created$0: [function(receiver) {
      this.polymerCreated$0(receiver);
      new W._ElementCssClassSet(receiver).add$1(0, "description");
    }, null, null, 0, 0, 108, "created"],
    "@": function() {
      return [C.CustomTag_46y];
    },
    static: {CommentElement_CommentElement: [function() {
        return W._ElementFactoryProvider_createElement_tag("div", "dartdoc-comment");
      }, "call$0", null, 0, 0, 351, "new CommentElement" /* new CommentElement:0:0 */], CommentElement$created: [function(receiver) {
        var t1, t2, t3, t4;
        t1 = $.get$Polymer__polymerSyntax();
        t2 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t3 = J.JSString;
        t4 = W.Element;
        t4 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t3, t4), null, null), [t3, t4]);
        receiver._comment$__$preview = false;
        receiver.polymer$Polymer$syntax = t1;
        receiver.polymer$Polymer$_shadowRoots = t2;
        receiver.polymer$Polymer$$ = t4;
        C.CommentElement_methods.Element$created$0(receiver);
        C.CommentElement_methods.CommentElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new CommentElement$created" /* new CommentElement$created:0:0 */]}
  },
  "+CommentElement": [720],
  DivElement_Polymer: {
    "": ["DivElement+Polymer;syntax:polymer$Polymer$syntax=,$$:polymer$Polymer$$=-631", null, function() {
      return [C.C_Reflectable];
    }],
    $isPolymer: true,
    $isNodeBindExtension: true,
    $isObservable: true,
    $isElement: true,
    $isInterceptor: true,
    $isEventTarget: true,
    $isNode: true
  },
  DivElement_Polymer_ChangeNotifier: {
    "": "DivElement_Polymer+ChangeNotifier;",
    $isObservable: true
  }
}],
["web.homepage", "homepage.dart", , Z, {
  "": "",
  HomeElement: {
    "": ["MemberElement;_item-448,_member$__$idName-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_pathname-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$defaultItem: [function(receiver) {
      return;
    }, null, null, 1, 0, 108, "defaultItem"],
    wrongClass$1: [function(receiver, newItem) {
      var t1 = J.getInterceptor(newItem);
      return typeof newItem !== "object" || newItem === null || !t1.$isHome;
    }, "call$1", "get$wrongClass", 2, 0, 271, 705, "wrongClass"],
    "@": function() {
      return [C.CustomTag_VO9];
    },
    static: {HomeElement$created: [function(receiver) {
        var t1, t2, t3, t4, t5;
        t1 = J.get$pathname$x(C.Window_methods.get$location(window));
        t2 = $.get$Polymer__polymerSyntax();
        t3 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t4 = J.JSString;
        t5 = W.Element;
        t5 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t4, t5), null, null), [t4, t5]);
        receiver._pathname = t1;
        receiver.polymer$Polymer$syntax = t2;
        receiver.polymer$Polymer$_shadowRoots = t3;
        receiver.polymer$Polymer$$ = t5;
        C.HomeElement_methods.Element$created$0(receiver);
        C.HomeElement_methods.PolymerElement$created$0(receiver);
        C.HomeElement_methods.MemberElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new HomeElement$created" /* new HomeElement$created:0:0 */]}
  },
  "+HomeElement": [710]
}],
["web.item", "item.dart", , M, {
  "": "",
  ItemElement: {
    "": ["MemberElement;_item-448,_member$__$idName-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_pathname-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    wrongClass$1: [function(receiver, newItem) {
      var t1 = J.getInterceptor(newItem);
      return typeof newItem !== "object" || newItem === null || !t1.$isItem;
    }, "call$1", "get$wrongClass", 2, 0, 271, 705, "wrongClass"],
    get$defaultItem: [function(receiver) {
      return $.get$ItemElement__defaultItem();
    }, null, null, 1, 0, 108, "defaultItem"],
    "@": function() {
      return [C.CustomTag_h3l];
    },
    static: {"": "ItemElement__defaultItem<-77", ItemElement$created: [function(receiver) {
        var t1, t2, t3, t4, t5;
        t1 = J.get$pathname$x(C.Window_methods.get$location(window));
        t2 = $.get$Polymer__polymerSyntax();
        t3 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t4 = J.JSString;
        t5 = W.Element;
        t5 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t4, t5), null, null), [t4, t5]);
        receiver._pathname = t1;
        receiver.polymer$Polymer$syntax = t2;
        receiver.polymer$Polymer$_shadowRoots = t3;
        receiver.polymer$Polymer$$ = t5;
        C.ItemElement_methods.Element$created$0(receiver);
        C.ItemElement_methods.PolymerElement$created$0(receiver);
        C.ItemElement_methods.MemberElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new ItemElement$created" /* new ItemElement$created:0:0 */]}
  },
  "+ItemElement": [710]
}],
["web.lazy_load", "lazy_load.dart", , X, {
  "": "",
  LazyListLoader: {
    "": "Object;_copier,_itemsPerFrame,_canceled",
    cancel$0: [function() {
      this._canceled = true;
    }, "call$0", "get$cancel", 0, 0, null],
    _loadItems$1: [function(_) {
      var t1;
      if (this._canceled)
        return;
      t1 = this._copier;
      t1.load$1(0, this._itemsPerFrame);
      if (t1.list < t1.src.length)
        C.Window_methods.get$animationFrame(window).then$1(this.get$_loadItems());
    }, "call$1", "get$_loadItems", 2, 0, 196, 335]
  },
  _LazyListCopier: {
    "": "Object;list,offset,src>,dest",
    next$0: [function() {
      var t1, t2, t3, t4;
      t1 = this.list;
      t2 = this.src;
      t3 = t2.length;
      if (t1 >= t3)
        return;
      t4 = this.dest;
      if (t1 >= 6)
        return H.ioore(t4, t1);
      t4 = t4[t1];
      if (t1 >= t3)
        return H.ioore(t2, t1);
      t1 = t2[t1];
      t2 = this.offset;
      this.offset = t2 + 1;
      J.add$1$ax(t4, J.$index$asx(t1, t2));
      this._maybeMoveToNextList$0();
    }, "call$0", "get$next", 0, 0, 107],
    _maybeMoveToNextList$0: [function() {
      var t1, t2, t3;
      t1 = this.src;
      while (true) {
        t2 = this.list;
        if (t2 < t1.length) {
          t3 = this.offset;
          t2 = J.get$length$asx(t1[t2]);
          if (typeof t2 !== "number")
            return H.iae(t2);
          t2 = t3 >= t2;
        } else
          t2 = false;
        if (!t2)
          break;
        this.list = this.list + 1;
        this.offset = 0;
      }
    }, "call$0", "get$_maybeMoveToNextList", 0, 0, null],
    loadAll$0: [function() {
      var t1, t2, i, t3, t4;
      for (t1 = this.src, t2 = this.dest, i = 0; t3 = t1.length, i < t3; ++i) {
        if (i >= 6)
          return H.ioore(t2, i);
        t4 = t2[i];
        if (i >= t3)
          return H.ioore(t1, i);
        J.addAll$1$ax(t4, t1[i]);
      }
    }, "call$0", "get$loadAll", 0, 0, null],
    load$1: [function(_, count) {
      var t1, i;
      t1 = this.src;
      i = 0;
      while (true) {
        if (!(i < count && this.list < t1.length))
          break;
        this.next$0();
        ++i;
      }
    }, "call$1", "get$load", 2, 0, null, 168],
    _LazyListCopier$2: function(src, dest) {
      var t1;
      for (t1 = this.dest, t1 = H.setRuntimeTypeInfo(new H.ListIterator(t1, 6, 0, null), [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();)
        J.clear$0$ax(t1._current);
      this._maybeMoveToNextList$0();
    },
    static: {_LazyListCopier$: function(src, dest) {
        var t1 = new X._LazyListCopier(0, 0, src, dest);
        t1._LazyListCopier$2(src, dest);
        return t1;
      }}
  }
}],
["web.library", "library.dart", , G, {
  "": "",
  LibraryElement: {
    "": ["MemberElement;lazyOperators=-703,lazyVariables=-703,lazyFunctions=-703,lazyClasses=-703,lazyTypedefs=-703,lazyErrors=-703,_library$_loader%-704,_item-448,_member$__$idName-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_pathname-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    wrongClass$1: [function(receiver, newItem) {
      var t1 = J.getInterceptor(newItem);
      return typeof newItem !== "object" || newItem === null || !t1.$isLibrary;
    }, "call$1", "get$wrongClass", 2, 0, 271, 705, "wrongClass"],
    get$defaultItem: [function(receiver) {
      return $.get$LibraryElement__defaultItem();
    }, null, null, 1, 0, 108, "defaultItem"],
    leftView$0: [function(receiver) {
      var t1;
      A.Polymer.prototype.leftView$0.call(this, receiver);
      t1 = receiver._library$_loader;
      if (t1 != null) {
        t1.cancel$0();
        receiver._library$_loader = null;
      }
    }, "call$0", "get$leftView", 0, 0, 108, "leftView"],
    itemChanged$0: [function(receiver) {
      var t1, t2, t3, t4, t5, t6;
      U.MemberElement.prototype.itemChanged$0.call(this, receiver);
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      }
      if (t1 == null)
        return;
      t1 = receiver._library$_loader;
      if (t1 != null)
        t1.cancel$0();
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      }
      t1 = J.get$content$x(t1.get$operators());
      t2 = receiver._item;
      if (t2 == null) {
        t2 = this.get$defaultItem(receiver);
        receiver._item = t2;
      }
      t2 = J.get$content$x(J.get$variables$x(t2));
      t3 = receiver._item;
      if (t3 == null) {
        t3 = this.get$defaultItem(receiver);
        receiver._item = t3;
      }
      t3 = J.get$content$x(t3.get$functions());
      t4 = receiver._item;
      if (t4 == null) {
        t4 = this.get$defaultItem(receiver);
        receiver._item = t4;
      }
      t4 = J.get$content$x(J.get$classes$x(t4));
      t5 = receiver._item;
      if (t5 == null) {
        t5 = this.get$defaultItem(receiver);
        receiver._item = t5;
      }
      t5 = J.get$content$x(t5.get$typedefs());
      t6 = receiver._item;
      if (t6 == null) {
        t6 = this.get$defaultItem(receiver);
        receiver._item = t6;
      }
      t6 = X._LazyListCopier$([t1, t2, t3, t4, t5, J.get$content$x(t6.get$errors())], [receiver.lazyOperators, receiver.lazyVariables, receiver.lazyFunctions, receiver.lazyClasses, receiver.lazyTypedefs, receiver.lazyErrors]);
      t5 = new X.LazyListLoader(t6, 25, false);
      if ($.get$viewer()._hash !== "")
        t6.loadAll$0();
      else
        t5._loadItems$1(null);
      receiver._library$_loader = t5;
    }, "call$0", "get$itemChanged", 0, 0, 108, "itemChanged"],
    "@": function() {
      return [C.CustomTag_KD4];
    },
    static: {"": "LibraryElement__defaultItem<-77", LibraryElement$created: [function(receiver) {
        var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
        t1 = Q.ObservableList$(null, null);
        t2 = Q.ObservableList$(null, null);
        t3 = Q.ObservableList$(null, null);
        t4 = Q.ObservableList$(null, null);
        t5 = Q.ObservableList$(null, null);
        t6 = Q.ObservableList$(null, null);
        t7 = J.get$pathname$x(C.Window_methods.get$location(window));
        t8 = $.get$Polymer__polymerSyntax();
        t9 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t10 = J.JSString;
        t11 = W.Element;
        t11 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t10, t11), null, null), [t10, t11]);
        receiver.lazyOperators = t1;
        receiver.lazyVariables = t2;
        receiver.lazyFunctions = t3;
        receiver.lazyClasses = t4;
        receiver.lazyTypedefs = t5;
        receiver.lazyErrors = t6;
        receiver._pathname = t7;
        receiver.polymer$Polymer$syntax = t8;
        receiver.polymer$Polymer$_shadowRoots = t9;
        receiver.polymer$Polymer$$ = t11;
        C.LibraryElement_methods.Element$created$0(receiver);
        C.LibraryElement_methods.PolymerElement$created$0(receiver);
        C.LibraryElement_methods.MemberElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new LibraryElement$created" /* new LibraryElement$created:0:0 */]}
  },
  "+LibraryElement": [710]
}],
["web.library_panel", "library-panel.dart", , E, {
  "": "",
  LibraryPanel: {
    "": ["DartdocElement;_pathname-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    shadowRootReady$2: [function(receiver, root, template) {
      var t1;
      A.Polymer.prototype.shadowRootReady$2.call(this, receiver, root, template);
      t1 = $.get$viewer();
      this.registerObserver$2(receiver, "viewer", t1.get$changes(t1).listen$1(new E.LibraryPanel_shadowRootReady_closure(receiver)));
      this.onMutation$1(receiver, receiver.shadowRoot || receiver.webkitShadowRoot).then$1(this.get$_updateActiveLibrary(receiver));
    }, "call$2", "get$shadowRootReady", 4, 0, 426, 588, 309, "shadowRootReady"],
    _updateActiveLibrary$1: [function(receiver, _) {
      var t1, a, t2, t3, t4;
      for (t1 = W._FrozenElementList$_wrap((receiver.shadowRoot || receiver.webkitShadowRoot).querySelectorAll("a"), null), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        a = t1._current;
        t2 = J.getInterceptor$x(a);
        t3 = t2.get$classes(a);
        t2 = t2.get$text(a);
        t4 = $.get$viewer()._currentPage.get$decoratedName();
        t3.toggle$2("active", t2 == null ? t4 == null : t2 === t4);
      }
    }, "call$1", "get$_updateActiveLibrary", 2, 0, 196, 335, "_updateActiveLibrary"],
    "@": function() {
      return [C.CustomTag_QKd];
    },
    static: {LibraryPanel$created: [function(receiver) {
        var t1, t2, t3, t4, t5;
        t1 = J.get$pathname$x(C.Window_methods.get$location(window));
        t2 = $.get$Polymer__polymerSyntax();
        t3 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t4 = J.JSString;
        t5 = W.Element;
        t5 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t4, t5), null, null), [t4, t5]);
        receiver._pathname = t1;
        receiver.polymer$Polymer$syntax = t2;
        receiver.polymer$Polymer$_shadowRoots = t3;
        receiver.polymer$Polymer$$ = t5;
        C.LibraryPanel_methods.Element$created$0(receiver);
        C.LibraryPanel_methods.PolymerElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new LibraryPanel$created" /* new LibraryPanel$created:0:0 */]}
  },
  "+LibraryPanel": [721],
  LibraryPanel_shadowRootReady_closure: {
    "": "Closure:271;this_0-77",
    call$1: [function(changes) {
      var t1;
      for (t1 = J.get$iterator$ax(changes); t1.moveNext$0();)
        if (J.$eq(J.get$name$x(t1.get$current()), C.Symbol_currentPage) === true) {
          J._updateActiveLibrary$1$x(this.this_0, null);
          return;
        }
    }, "call$1", null, 2, 0, 271, 637, "call"],
    $isFunction: true
  },
  "+LibraryPanel_shadowRootReady_closure": [449]
}],
["web.link", "link.dart", , Q, {
  "": "",
  LinkElement0: {
    "": ["PolymerElement_ChangeNotifier1;_link$__$type%-474,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$type: [function(receiver) {
      return receiver._link$__$type;
    }, null, null, 1, 0, 722, "type", 132, 674],
    set$type: [function(receiver, value) {
      receiver._link$__$type = this.notifyPropertyChange$3(receiver, C.Symbol_type, receiver._link$__$type, value);
    }, null, null, 3, 0, 723, 23, "type", 132],
    enteredView$0: [function(receiver) {
      A.Polymer.prototype.enteredView$0.call(this, receiver);
      $.get$searchIndex().onLoad$1(0, this.get$typeChanged(receiver));
    }, "call$0", "get$enteredView", 0, 0, 108, "enteredView"],
    typeChanged$0: [function(receiver) {
      var t1, $location, child;
      receiver.textContent = "";
      t1 = receiver._link$__$type;
      if (t1 == null)
        return;
      $location = t1.get$loc().get$withoutAnchor();
      if ($.get$searchIndex()._search$_map.containsKey$1($location) === true) {
        child = W.AnchorElement_AnchorElement(null);
        J.set$href$x(child, "#!" + receiver._link$__$type.get$loc().get$withAnchor());
      } else
        child = W._ElementFactoryProvider_createElement_tag("i", null);
      J.set$text$x(child, receiver._link$__$type.get$simpleType());
      receiver.appendChild(child);
    }, "call$0", "get$typeChanged", 0, 0, 107, "typeChanged"],
    "@": function() {
      return [C.CustomTag_kaS];
    },
    static: {LinkElement$created: [function(receiver) {
        var t1, t2, t3, t4;
        t1 = $.get$Polymer__polymerSyntax();
        t2 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t3 = J.JSString;
        t4 = W.Element;
        t4 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t3, t4), null, null), [t3, t4]);
        receiver.polymer$Polymer$syntax = t1;
        receiver.polymer$Polymer$_shadowRoots = t2;
        receiver.polymer$Polymer$$ = t4;
        C.LinkElement_methods.Element$created$0(receiver);
        C.LinkElement_methods.PolymerElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new LinkElement$created" /* new LinkElement$created:0:0 */]}
  },
  "+LinkElement": [724],
  PolymerElement_ChangeNotifier1: {
    "": "PolymerElement+ChangeNotifier;",
    $isObservable: true
  }
}],
["web.main", "main.dart", , A, {
  "": "",
  MainElement: {
    "": ["DartdocElement_ChangeNotifier1;_main$__$pageContentClass%-434,_main$__$shouldShowLibraryPanel%-451,_main$__$shouldShowLibraryMinimap%-451,_main$__$shouldShowClassMinimap%-451,_main$__$showOrHideLibraries%-434,_main$__$showOrHideMinimap%-434,_main$__$showOrHideInherited%-434,_main$__$showOrHideObjectMembers%-434,_main$__$showOrHidePackages%-434,_openedAt%-77,originalPadding%-434,_buildIdentifier%-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_pathname-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$pageContentClass: [function(receiver) {
      return receiver._main$__$pageContentClass;
    }, null, null, 1, 0, 435, "pageContentClass", 132, 436],
    set$pageContentClass: [function(receiver, value) {
      receiver._main$__$pageContentClass = this.notifyPropertyChange$3(receiver, C.Symbol_pageContentClass, receiver._main$__$pageContentClass, value);
    }, null, null, 3, 0, 25, 23, "pageContentClass", 132],
    get$shouldShowLibraryPanel: [function(receiver) {
      return receiver._main$__$shouldShowLibraryPanel;
    }, null, null, 1, 0, 437, "shouldShowLibraryPanel", 132, 436],
    set$shouldShowLibraryPanel: [function(receiver, value) {
      receiver._main$__$shouldShowLibraryPanel = this.notifyPropertyChange$3(receiver, C.Symbol_shouldShowLibraryPanel, receiver._main$__$shouldShowLibraryPanel, value);
    }, null, null, 3, 0, 525, 23, "shouldShowLibraryPanel", 132],
    get$shouldShowLibraryMinimap: [function(receiver) {
      return receiver._main$__$shouldShowLibraryMinimap;
    }, null, null, 1, 0, 437, "shouldShowLibraryMinimap", 132, 436],
    set$shouldShowLibraryMinimap: [function(receiver, value) {
      receiver._main$__$shouldShowLibraryMinimap = this.notifyPropertyChange$3(receiver, C.Symbol_shouldShowLibraryMinimap, receiver._main$__$shouldShowLibraryMinimap, value);
    }, null, null, 3, 0, 525, 23, "shouldShowLibraryMinimap", 132],
    get$shouldShowClassMinimap: [function(receiver) {
      return receiver._main$__$shouldShowClassMinimap;
    }, null, null, 1, 0, 437, "shouldShowClassMinimap", 132, 436],
    set$shouldShowClassMinimap: [function(receiver, value) {
      receiver._main$__$shouldShowClassMinimap = this.notifyPropertyChange$3(receiver, C.Symbol_shouldShowClassMinimap, receiver._main$__$shouldShowClassMinimap, value);
    }, null, null, 3, 0, 525, 23, "shouldShowClassMinimap", 132],
    get$showOrHideLibraries: [function(receiver) {
      return receiver._main$__$showOrHideLibraries;
    }, null, null, 1, 0, 435, "showOrHideLibraries", 132, 436],
    set$showOrHideLibraries: [function(receiver, value) {
      receiver._main$__$showOrHideLibraries = this.notifyPropertyChange$3(receiver, C.Symbol_showOrHideLibraries, receiver._main$__$showOrHideLibraries, value);
    }, null, null, 3, 0, 25, 23, "showOrHideLibraries", 132],
    get$showOrHideMinimap: [function(receiver) {
      return receiver._main$__$showOrHideMinimap;
    }, null, null, 1, 0, 435, "showOrHideMinimap", 132, 436],
    set$showOrHideMinimap: [function(receiver, value) {
      receiver._main$__$showOrHideMinimap = this.notifyPropertyChange$3(receiver, C.Symbol_showOrHideMinimap, receiver._main$__$showOrHideMinimap, value);
    }, null, null, 3, 0, 25, 23, "showOrHideMinimap", 132],
    get$showOrHideInherited: [function(receiver) {
      return receiver._main$__$showOrHideInherited;
    }, null, null, 1, 0, 435, "showOrHideInherited", 132, 436],
    set$showOrHideInherited: [function(receiver, value) {
      receiver._main$__$showOrHideInherited = this.notifyPropertyChange$3(receiver, C.Symbol_showOrHideInherited, receiver._main$__$showOrHideInherited, value);
    }, null, null, 3, 0, 25, 23, "showOrHideInherited", 132],
    get$showOrHideObjectMembers: [function(receiver) {
      return receiver._main$__$showOrHideObjectMembers;
    }, null, null, 1, 0, 435, "showOrHideObjectMembers", 132, 436],
    set$showOrHideObjectMembers: [function(receiver, value) {
      receiver._main$__$showOrHideObjectMembers = this.notifyPropertyChange$3(receiver, C.Symbol_showOrHideObjectMembers, receiver._main$__$showOrHideObjectMembers, value);
    }, null, null, 3, 0, 25, 23, "showOrHideObjectMembers", 132],
    get$showOrHidePackages: [function(receiver) {
      return receiver._main$__$showOrHidePackages;
    }, null, null, 1, 0, 435, "showOrHidePackages", 132, 436],
    set$showOrHidePackages: [function(receiver, value) {
      receiver._main$__$showOrHidePackages = this.notifyPropertyChange$3(receiver, C.Symbol_showOrHidePackages, receiver._main$__$showOrHidePackages, value);
    }, null, null, 3, 0, 25, 23, "showOrHidePackages", 132],
    enteredView$0: [function(receiver) {
      var t1;
      U.DartdocElement.prototype.enteredView$0.call(this, receiver);
      t1 = $.get$viewer();
      this.registerObserver$2(receiver, "viewer", t1.get$changes(t1).listen$1(this.get$_onViewerChange(receiver)));
      t1 = C.EventStreamProvider_click.forElement$1(receiver);
      t1 = H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$hideOptionsMenuWhenClickedOutside(receiver)), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)]);
      t1._tryResume$0();
      this.registerObserver$2(receiver, "onclick", t1);
      this._onViewerChange$1(receiver, null);
    }, "call$0", "get$enteredView", 0, 0, 108, "enteredView"],
    _onViewerChange$1: [function(receiver, changes) {
      var t1, left, t2, t3;
      t1 = $.get$viewer();
      if (t1._app$__$isDesktop !== true)
        receiver._main$__$pageContentClass = this.notifyPropertyChange$3(receiver, C.Symbol_pageContentClass, receiver._main$__$pageContentClass, "");
      else {
        left = t1._app$__$isPanel === true ? "margin-left " : "";
        t2 = left + (t1._app$__$isMinimap === true ? "margin-right" : "");
        receiver._main$__$pageContentClass = this.notifyPropertyChange$3(receiver, C.Symbol_pageContentClass, receiver._main$__$pageContentClass, t2);
      }
      t2 = t1._currentPage != null && t1._app$__$isPanel === true;
      receiver._main$__$shouldShowLibraryPanel = this.notifyPropertyChange$3(receiver, C.Symbol_shouldShowLibraryPanel, receiver._main$__$shouldShowLibraryPanel, t2);
      t2 = t1._currentPage;
      t3 = J.getInterceptor(t2);
      t2 = typeof t2 === "object" && t2 !== null && !!t3.$isClass && t1._app$__$isMinimap === true;
      receiver._main$__$shouldShowClassMinimap = this.notifyPropertyChange$3(receiver, C.Symbol_shouldShowClassMinimap, receiver._main$__$shouldShowClassMinimap, t2);
      t2 = t1._currentPage;
      t3 = J.getInterceptor(t2);
      t2 = typeof t2 === "object" && t2 !== null && !!t3.$isLibrary && t1._app$__$isMinimap === true;
      receiver._main$__$shouldShowLibraryMinimap = this.notifyPropertyChange$3(receiver, C.Symbol_shouldShowLibraryMinimap, receiver._main$__$shouldShowLibraryMinimap, t2);
      t2 = t1._app$__$isPanel === true ? "Hide" : "Show";
      receiver._main$__$showOrHideLibraries = this.notifyPropertyChange$3(receiver, C.Symbol_showOrHideLibraries, receiver._main$__$showOrHideLibraries, t2);
      t2 = t1._app$__$isMinimap === true ? "Hide" : "Show";
      receiver._main$__$showOrHideMinimap = this.notifyPropertyChange$3(receiver, C.Symbol_showOrHideMinimap, receiver._main$__$showOrHideMinimap, t2);
      t2 = t1._app$__$isInherited === true ? "Hide" : "Show";
      receiver._main$__$showOrHideInherited = this.notifyPropertyChange$3(receiver, C.Symbol_showOrHideInherited, receiver._main$__$showOrHideInherited, t2);
      t2 = t1._app$__$showObjectMembers === true ? "Hide" : "Show";
      receiver._main$__$showOrHideObjectMembers = this.notifyPropertyChange$3(receiver, C.Symbol_showOrHideObjectMembers, receiver._main$__$showOrHideObjectMembers, t2);
      t1 = t1._showPkgLibraries === true ? "Hide" : "Show";
      receiver._main$__$showOrHidePackages = this.notifyPropertyChange$3(receiver, C.Symbol_showOrHidePackages, receiver._main$__$showOrHidePackages, t1);
    }, "call$1", "get$_onViewerChange", 2, 0, 196, 637, "_onViewerChange"],
    query$1: [function(receiver, selectors) {
      return (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector(selectors);
    }, "call$1", "get$query", 2, 0, 25, 363, "query"],
    togglePanel$0: [function(receiver) {
      var t1, t2;
      t1 = $.get$viewer();
      t2 = !t1._isPanel;
      t1._isPanel = t2;
      t2 = t1._app$__$isDesktop === true && t2;
      t1._app$__$isPanel = F.notifyPropertyChangeHelper(t1, C.Symbol_isPanel, t1._app$__$isPanel, t2);
      return;
    }, "call$0", "get$togglePanel", 0, 0, 108, "togglePanel"],
    toggleInherited$0: [function(receiver) {
      var t1, t2;
      t1 = $.get$viewer();
      t2 = t1._app$__$isInherited;
      t1._app$__$isInherited = F.notifyPropertyChangeHelper(t1, C.Symbol_isInherited, t2, t2 !== true);
      return;
    }, "call$0", "get$toggleInherited", 0, 0, 108, "toggleInherited"],
    toggleObjectMembers$0: [function(receiver) {
      var t1, t2;
      t1 = $.get$viewer();
      t2 = t1._app$__$showObjectMembers;
      t1._app$__$showObjectMembers = F.notifyPropertyChangeHelper(t1, C.Symbol_showObjectMembers, t2, t2 !== true);
      return;
    }, "call$0", "get$toggleObjectMembers", 0, 0, 108, "toggleObjectMembers"],
    toggleMinimap$0: [function(receiver) {
      var t1, t2;
      t1 = $.get$viewer();
      t2 = !t1._isMinimap;
      t1._isMinimap = t2;
      t2 = t1._app$__$isDesktop === true && t2;
      t1._app$__$isMinimap = F.notifyPropertyChangeHelper(t1, C.Symbol_isMinimap, t1._app$__$isMinimap, t2);
      return;
    }, "call$0", "get$toggleMinimap", 0, 0, 108, "toggleMinimap"],
    togglePkg$0: [function(receiver) {
      var t1 = $.get$viewer();
      t1.set$showPkgLibraries(t1._showPkgLibraries !== true);
      return;
    }, "call$0", "get$togglePkg", 0, 0, 108, "togglePkg"],
    collapseSearchAndOptionsIfNeeded$0: [function(receiver) {
      var permanentHeaders, searchAndOptions, wholeThing, navbar, collapsible, t1, allItems, $innerWidth, t2, t3, button, t4;
      permanentHeaders = W._FrozenElementList$_wrap((receiver.shadowRoot || receiver.webkitShadowRoot).querySelectorAll(".navbar-brand"), null);
      searchAndOptions = (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#searchAndOptions");
      if (J.get$isFocused$x((receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("search-box")) === true)
        return;
      wholeThing = (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector(".navbar-fixed-top");
      navbar = (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#navbar");
      collapsible = (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#nav-collapse-content");
      t1 = J.getInterceptor$x(collapsible);
      t1.get$classes(collapsible).add$1(0, "in");
      allItems = permanentHeaders.toList$0(permanentHeaders);
      C.JSArray_methods.add$1(allItems, searchAndOptions);
      C.JSArray_methods.add$1(allItems, navbar);
      $innerWidth = H.IterableMixinWorkaround_fold(allItems, 0, new A.MainElement_collapseSearchAndOptionsIfNeeded_closure());
      t2 = wholeThing.offsetWidth;
      t3 = new W._ContentCssRect(wholeThing, 0, 0, 0, 0)._addOrSubtractToBoxModel$2($.get$_WIDTH(), "content");
      if (typeof t2 !== "number")
        return t2.$add();
      button = (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#nav-collapse-button");
      if (typeof $innerWidth !== "number")
        return H.iae($innerWidth);
      t4 = J.getInterceptor$x(button);
      if (t2 + t3 <= $innerWidth) {
        t4.get$classes(button).add$1(0, "visible");
        t1.get$classes(collapsible).remove$1(0, "in");
      } else {
        t4.get$classes(button).remove$1(0, "visible");
        t1.get$classes(collapsible).add$1(0, "in");
      }
    }, "call$0", "get$collapseSearchAndOptionsIfNeeded", 0, 0, 107, "collapseSearchAndOptionsIfNeeded"],
    toggleOptionsMenu$3: [function(receiver, $event, detail, target) {
      var list, t1;
      list = (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector(".dropdown-menu").parentElement;
      t1 = J.getInterceptor$x(list);
      if (t1.get$classes(list).readClasses$0().contains$1(0, "open"))
        t1.get$classes(list).remove$1(0, "open");
      else {
        receiver._openedAt = J.get$timeStamp$x($event);
        t1.get$classes(list).add$1(0, "open");
      }
    }, "call$3", "get$toggleOptionsMenu", 6, 0, 725, 349, 382, 74, "toggleOptionsMenu"],
    hideOptionsMenuWhenClickedOutside$1: [function(receiver, e) {
      var t1 = receiver._openedAt;
      if (t1 != null && J.$eq(t1, J.get$timeStamp$x(e)) === true)
        return;
      J.get$classes$x((receiver.shadowRoot || receiver.webkitShadowRoot).querySelector(".dropdown-menu").parentElement).remove$1(0, "open");
    }, "call$1", "get$hideOptionsMenuWhenClickedOutside", 2, 0, 726, 18, "hideOptionsMenuWhenClickedOutside"],
    hideOptionsMenu$0: [function(receiver) {
      J.get$classes$x((receiver.shadowRoot || receiver.webkitShadowRoot).querySelector(".dropdown-menu").parentElement).remove$1(0, "open");
    }, "call$0", "get$hideOptionsMenu", 0, 0, 107, "hideOptionsMenu"],
    get$buildIdentifier: [function(receiver) {
      var t1, t2, t3;
      t1 = receiver._buildIdentifier;
      if (t1 != null)
        return t1;
      receiver._buildIdentifier = "";
      t1 = W.HttpRequest_getString(P.Uri__uriEncode(C.List_CVk, "docs/VERSION", C.Utf8Codec_false, false), null, null).then$1(new A.MainElement_buildIdentifier_closure(receiver));
      t2 = $.Zone__current;
      t3 = P._registerErrorHandler(new A.MainElement_buildIdentifier_closure0(), t2);
      t1._addListener$1(H.setRuntimeTypeInfo(new P._Future(0, t2, null, null, null, $.Zone__current.registerUnaryCallback$1(null), t3, null), [null]));
      return "";
    }, null, null, 1, 0, 108, "buildIdentifier", 436],
    navHideShow$3: [function(receiver, $event, detail, target) {
      var nav = (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#nav-collapse-content");
      this.hideOrShowNavigation$2$hide$nav(receiver, J.get$classes$x(nav).readClasses$0().contains$1(0, "in"), nav);
    }, "call$3", "get$navHideShow", 6, 0, 706, 349, 382, 74, "navHideShow"],
    hideOrShowNavigation$2$hide$nav: [function(receiver, hide, nav) {
      var button, t1, t2, navbar, body, positioning, t3;
      if (J.get$isFocused$x((receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("search-box")) === true)
        return;
      if (nav == null)
        nav = (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#nav-collapse-content");
      button = (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#nav-collapse-button");
      t1 = hide === true && J.get$display$x(J.getComputedStyle$0$x(button)) !== "none";
      t2 = J.getInterceptor$x(nav);
      if (t1)
        J.remove$1$ax(t2.get$classes(nav), "in");
      else
        J.add$1$ax(t2.get$classes(nav), "in");
      navbar = (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector(".navbar-fixed-top");
      body = (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector(".main-body");
      t1 = navbar.offsetHeight;
      t2 = new W._MarginCssRect(navbar, 0, 0, 0, 0)._addOrSubtractToBoxModel$2($.get$_HEIGHT(), "margin");
      if (typeof t1 !== "number")
        return t1.$add();
      positioning = J.get$position$x(J.getComputedStyle$0$x(navbar));
      t3 = body.style;
      if (positioning === "fixed")
        J.set$paddingTop$x(t3, C.JSNumber_methods.toString$0(t1 + t2) + "px");
      else
        t3.removeProperty("padding-top");
    }, function($receiver, hide) {
      return this.hideOrShowNavigation$2$hide$nav($receiver, hide, null);
    }, "hideOrShowNavigation$1$hide", function($receiver) {
      return this.hideOrShowNavigation$2$hide$nav($receiver, true, null);
    }, "hideOrShowNavigation$0", "call$2$hide$nav", null, null, "get$hideOrShowNavigation", 0, 5, 727, 414, 77, 728, 729, "hideOrShowNavigation"],
    "@": function() {
      return [C.CustomTag_qRa];
    },
    static: {MainElement$created: [function(receiver) {
        var t1, t2, t3, t4, t5;
        t1 = J.get$pathname$x(C.Window_methods.get$location(window));
        t2 = $.get$Polymer__polymerSyntax();
        t3 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t4 = J.JSString;
        t5 = W.Element;
        t5 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t4, t5), null, null), [t4, t5]);
        receiver._pathname = t1;
        receiver.polymer$Polymer$syntax = t2;
        receiver.polymer$Polymer$_shadowRoots = t3;
        receiver.polymer$Polymer$$ = t5;
        C.MainElement_methods.Element$created$0(receiver);
        C.MainElement_methods.PolymerElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new MainElement$created" /* new MainElement$created:0:0 */]}
  },
  "+MainElement": [730],
  DartdocElement_ChangeNotifier1: {
    "": "DartdocElement+ChangeNotifier;",
    $isObservable: true
  },
  MainElement_collapseSearchAndOptionsIfNeeded_closure: {
    "": "Closure:426;",
    call$2: [function(sum, element) {
      var t1, t2;
      t1 = J.get$marginEdge$x(element);
      t2 = J.get$offsetWidth$x(t1._element);
      t1 = t1._addOrSubtractToBoxModel$2($.get$_WIDTH(), "margin");
      if (typeof t2 !== "number")
        return t2.$add();
      return J.$add$ns(sum, t2 + t1);
    }, "call$2", null, 4, 0, 426, 731, 169, "call"],
    $isFunction: true
  },
  "+MainElement_collapseSearchAndOptionsIfNeeded_closure": [449],
  MainElement_buildIdentifier_closure: {
    "": "Closure:271;this_0-77",
    call$1: [function(version) {
      var t1, t2;
      t1 = this.this_0;
      t2 = J.getInterceptor$x(t1);
      t2.set$_buildIdentifier(t1, t2.notifyPropertyChange$3(t1, C.Symbol_buildIdentifier, t2.get$_buildIdentifier(t1), "r " + H.S(version)));
    }, "call$1", null, 2, 0, 271, 732, "call"],
    $isFunction: true
  },
  "+MainElement_buildIdentifier_closure": [449],
  MainElement_buildIdentifier_closure0: {
    "": "Closure:271;",
    call$1: [function(_) {
      return;
    }, "call$1", null, 2, 0, 271, 335, "call"],
    $isFunction: true
  },
  "+MainElement_buildIdentifier_closure": [449]
}],
["web.member", "member.dart", , U, {
  "": "",
  NullTreeSanitizer: {
    "": "Object;",
    sanitizeTree$1: [function(node) {
    }, "call$1", "get$sanitizeTree", 2, 0, null, 312]
  },
  DartdocElement: {
    "": ["PolymerElement;_pathname%-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$syntax: [function(receiver) {
      return $.get$defaultSyntax();
    }, null, null, 1, 0, 108, "syntax"],
    get$applyAuthorStyles: [function(receiver) {
      return true;
    }, null, null, 1, 0, 108, "applyAuthorStyles"],
    get$viewer: [function(receiver) {
      return $.get$viewer();
    }, null, null, 1, 0, 733, "viewer"],
    enteredView$0: [function(receiver) {
      var t1;
      A.Polymer.prototype.enteredView$0.call(this, receiver);
      t1 = C.EventStreamProvider_click.forElement$1(receiver);
      H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$handleClick(receiver)), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)])._tryResume$0();
    }, "call$0", "get$enteredView", 0, 0, 108, "enteredView"],
    handleClick$1: [function(receiver, e) {
      var t1, t2, t3, anchor, $location;
      t1 = J.getInterceptor$x(e);
      t2 = t1.get$target(e);
      t3 = J.getInterceptor(t2);
      if (typeof t2 === "object" && t2 !== null && !!t3.$isAnchorElement) {
        anchor = t1.get$target(e);
        t2 = J.getInterceptor$x(anchor);
        if (J.$eq(t2.get$host(anchor), J.get$host$x(C.Window_methods.get$location(window))) === true && J.$eq(t2.get$pathname(anchor), receiver._pathname) === true && H.interceptedTypeCast(e, "$isMouseEvent").ctrlKey !== true) {
          t1.preventDefault$0(e);
          $location = J.substring$2$s(t2.get$hash(anchor), 1, J.get$length$asx(t2.get$hash(anchor)));
          $.get$viewer().handleLink$1($location);
        }
      }
    }, "call$1", "get$handleClick", 2, 0, 640, 18, "handleClick"],
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {DartdocElement$created: [function(receiver) {
        var t1, t2, t3, t4, t5;
        t1 = J.get$pathname$x(C.Window_methods.get$location(window));
        t2 = $.get$Polymer__polymerSyntax();
        t3 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t4 = J.JSString;
        t5 = W.Element;
        t5 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t4, t5), null, null), [t4, t5]);
        receiver._pathname = t1;
        receiver.polymer$Polymer$syntax = t2;
        receiver.polymer$Polymer$_shadowRoots = t3;
        receiver.polymer$Polymer$$ = t5;
        C.DartdocElement_methods.Element$created$0(receiver);
        C.DartdocElement_methods.PolymerElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new DartdocElement$created" /* new DartdocElement$created:0:0 */]}
  },
  "+DartdocElement": [734],
  MemberElement: {
    "": ["DartdocElement_ChangeNotifier0;_item%-448,_member$__$idName%-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_pathname-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    set$item: [function(receiver, newItem) {
      if (newItem == null || this.wrongClass$1(receiver, newItem))
        return;
      receiver._item = this.notifyPropertyChange$3(receiver, C.Symbol_item, receiver._item, newItem);
    }, null, null, 3, 0, 271, 705, "item", 674],
    get$item: [function(receiver) {
      var t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      }
      return t1;
    }, null, null, 1, 0, 108, "item", 674],
    item$1: function($receiver, arg0) {
      return this.get$item($receiver).call$1(arg0);
    },
    get$idName: [function(receiver) {
      return receiver._member$__$idName;
    }, null, null, 1, 0, 435, "idName", 132, 436],
    set$idName: [function(receiver, value) {
      receiver._member$__$idName = this.notifyPropertyChange$3(receiver, C.Symbol_idName, receiver._member$__$idName, value);
    }, null, null, 3, 0, 25, 23, "idName", 132],
    itemChanged$0: [function(receiver) {
      var t1, t2;
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
        t2 = t1;
      } else
        t2 = t1;
      if (t1 == null)
        receiver._member$__$idName = this.notifyPropertyChange$3(receiver, C.Symbol_idName, receiver._member$__$idName, "");
      else {
        if (t2 == null) {
          t1 = this.get$defaultItem(receiver);
          receiver._item = t1;
        } else
          t1 = t2;
        t1 = t1.get$anchorHrefLocation().anchor;
        if (t1 == null)
          t1 = "";
        receiver._member$__$idName = this.notifyPropertyChange$3(receiver, C.Symbol_idName, receiver._member$__$idName, t1);
      }
    }, "call$0", "get$itemChanged", 0, 0, 108, "itemChanged"],
    MemberElement$created$0: [function(receiver) {
      receiver._item = this.get$defaultItem(receiver);
    }, null, null, 0, 0, 108, "created"],
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {MemberElement$created: [function(receiver) {
        var t1, t2, t3, t4, t5;
        t1 = J.get$pathname$x(C.Window_methods.get$location(window));
        t2 = $.get$Polymer__polymerSyntax();
        t3 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t4 = J.JSString;
        t5 = W.Element;
        t5 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t4, t5), null, null), [t4, t5]);
        receiver._pathname = t1;
        receiver.polymer$Polymer$syntax = t2;
        receiver.polymer$Polymer$_shadowRoots = t3;
        receiver.polymer$Polymer$$ = t5;
        C.MemberElement_methods.Element$created$0(receiver);
        C.MemberElement_methods.PolymerElement$created$0(receiver);
        C.MemberElement_methods.MemberElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new MemberElement$created" /* new MemberElement$created:0:0 */]}
  },
  "+MemberElement": [735],
  DartdocElement_ChangeNotifier0: {
    "": "DartdocElement+ChangeNotifier;",
    $isObservable: true
  },
  InheritedElement: {
    "": ["MemberElement_ChangeNotifier;_member$__$inheritedFrom%-474,_member$__$commentFrom%-474,_member$__$isInherited%-451,_member$__$hasInheritedComment%-451,_member$__$shouldShowComment%-451,_member$__$shouldShowCommentFrom%-451,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_item-448,_member$__$idName-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_pathname-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$inheritedFrom: [function(receiver) {
      return receiver._member$__$inheritedFrom;
    }, null, null, 1, 0, 722, "inheritedFrom", 132, 436],
    set$inheritedFrom: [function(receiver, value) {
      receiver._member$__$inheritedFrom = this.notifyPropertyChange$3(receiver, C.Symbol_inheritedFrom, receiver._member$__$inheritedFrom, value);
    }, null, null, 3, 0, 723, 23, "inheritedFrom", 132],
    get$commentFrom: [function(receiver) {
      return receiver._member$__$commentFrom;
    }, null, null, 1, 0, 722, "commentFrom", 132, 436],
    set$commentFrom: [function(receiver, value) {
      receiver._member$__$commentFrom = this.notifyPropertyChange$3(receiver, C.Symbol_commentFrom, receiver._member$__$commentFrom, value);
    }, null, null, 3, 0, 723, 23, "commentFrom", 132],
    get$isInherited: [function(receiver) {
      return receiver._member$__$isInherited;
    }, null, null, 1, 0, 437, "isInherited", 132, 436],
    set$isInherited: [function(receiver, value) {
      receiver._member$__$isInherited = this.notifyPropertyChange$3(receiver, C.Symbol_isInherited, receiver._member$__$isInherited, value);
    }, null, null, 3, 0, 525, 23, "isInherited", 132],
    get$hasInheritedComment: [function(receiver) {
      return receiver._member$__$hasInheritedComment;
    }, null, null, 1, 0, 437, "hasInheritedComment", 132, 436],
    set$hasInheritedComment: [function(receiver, value) {
      receiver._member$__$hasInheritedComment = this.notifyPropertyChange$3(receiver, C.Symbol_hasInheritedComment, receiver._member$__$hasInheritedComment, value);
    }, null, null, 3, 0, 525, 23, "hasInheritedComment", 132],
    get$shouldShowComment: [function(receiver) {
      return receiver._member$__$shouldShowComment;
    }, null, null, 1, 0, 437, "shouldShowComment", 132, 436],
    set$shouldShowComment: [function(receiver, value) {
      receiver._member$__$shouldShowComment = this.notifyPropertyChange$3(receiver, C.Symbol_shouldShowComment, receiver._member$__$shouldShowComment, value);
    }, null, null, 3, 0, 525, 23, "shouldShowComment", 132],
    get$shouldShowCommentFrom: [function(receiver) {
      return receiver._member$__$shouldShowCommentFrom;
    }, null, null, 1, 0, 437, "shouldShowCommentFrom", 132, 436],
    set$shouldShowCommentFrom: [function(receiver, value) {
      receiver._member$__$shouldShowCommentFrom = this.notifyPropertyChange$3(receiver, C.Symbol_shouldShowCommentFrom, receiver._member$__$shouldShowCommentFrom, value);
    }, null, null, 3, 0, 525, 23, "shouldShowCommentFrom", 132],
    itemChanged$0: [function(receiver) {
      U.MemberElement.prototype.itemChanged$0.call(this, receiver);
      this._update$0(receiver);
    }, "call$0", "get$itemChanged", 0, 0, 108, "itemChanged"],
    _update$0: [function(receiver) {
      var t1, t2, hash, t3, t4;
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
        t2 = t1;
      } else
        t2 = t1;
      if (t1 == null)
        return;
      if (t2 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      } else
        t1 = t2;
      if (J.$eq(J.get$inheritedFrom$x(t1), "") !== true) {
        t1 = receiver._item;
        if (t1 == null) {
          t1 = this.get$defaultItem(receiver);
          receiver._item = t1;
        }
        t1 = J.get$inheritedFrom$x(t1) != null;
      } else
        t1 = false;
      receiver._member$__$isInherited = this.notifyPropertyChange$3(receiver, C.Symbol_isInherited, receiver._member$__$isInherited, t1);
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      }
      t2 = new Y.DocsLocation(null, null, null, null, null);
      t2._extractPieces$1(J.get$inheritedFrom$x(t1));
      t1 = t2.get$componentNames();
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1.pop();
      hash = Y.DocsLocation$fromList(t1);
      hash.anchor = C.JSString_methods.$add("id_", t2.get$name(t2));
      t1 = hash.packageName;
      if (t1 == null)
        t1 = "";
      else
        t1 = hash.libraryName == null ? t1 : H.S(t1) + "/";
      t2 = hash.libraryName;
      if (t2 == null)
        t2 = "";
      t3 = hash.memberName;
      t3 = t3 == null ? "" : "." + H.S(t3);
      t4 = hash.subMemberName;
      t1 = C.JSArray_methods.join$1([t1, t2, t3, t4 == null ? "" : "." + H.S(t4)], "");
      t2 = hash.anchor;
      t3 = new E.LinkableType(null);
      t4 = new Y.DocsLocation(null, null, null, null, null);
      t4._extractPieces$1(t1 + (t2 == null ? "" : "@" + H.S(t2)));
      t3.loc = t4;
      receiver._member$__$inheritedFrom = this.notifyPropertyChange$3(receiver, C.Symbol_inheritedFrom, receiver._member$__$inheritedFrom, t3);
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      }
      if (J.$eq(J.get$commentFrom$x(t1), "") !== true) {
        t1 = receiver._item;
        if (t1 == null) {
          t1 = this.get$defaultItem(receiver);
          receiver._item = t1;
        }
        t1 = J.get$commentFrom$x(t1) != null;
      } else
        t1 = false;
      receiver._member$__$hasInheritedComment = this.notifyPropertyChange$3(receiver, C.Symbol_hasInheritedComment, receiver._member$__$hasInheritedComment, t1);
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      }
      t2 = new Y.DocsLocation(null, null, null, null, null);
      t2._extractPieces$1(J.get$commentFrom$x(t1));
      t1 = t2.get$componentNames();
      if (0 >= t1.length)
        return H.ioore(t1, 0);
      t1.pop();
      hash = Y.DocsLocation$fromList(t1);
      hash.anchor = C.JSString_methods.$add("id_", t2.get$name(t2));
      t1 = hash.packageName;
      if (t1 == null)
        t1 = "";
      else
        t1 = hash.libraryName == null ? t1 : H.S(t1) + "/";
      t2 = hash.libraryName;
      if (t2 == null)
        t2 = "";
      t3 = hash.memberName;
      t3 = t3 == null ? "" : "." + H.S(t3);
      t4 = hash.subMemberName;
      t1 = C.JSArray_methods.join$1([t1, t2, t3, t4 == null ? "" : "." + H.S(t4)], "");
      t2 = hash.anchor;
      t3 = new E.LinkableType(null);
      t4 = new Y.DocsLocation(null, null, null, null, null);
      t4._extractPieces$1(t1 + (t2 == null ? "" : "@" + H.S(t2)));
      t3.loc = t4;
      receiver._member$__$commentFrom = this.notifyPropertyChange$3(receiver, C.Symbol_commentFrom, receiver._member$__$commentFrom, t3);
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      }
      if (t1.get$hasComment())
        t1 = receiver._member$__$hasInheritedComment !== true || $.get$viewer()._app$__$isInherited === true;
      else
        t1 = false;
      receiver._member$__$shouldShowComment = this.notifyPropertyChange$3(receiver, C.Symbol_shouldShowComment, receiver._member$__$shouldShowComment, t1);
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      }
      t1 = t1.get$hasComment() && receiver._member$__$hasInheritedComment === true && $.get$viewer()._app$__$isInherited === true;
      receiver._member$__$shouldShowCommentFrom = this.notifyPropertyChange$3(receiver, C.Symbol_shouldShowCommentFrom, receiver._member$__$shouldShowCommentFrom, t1);
    }, "call$0", "get$_update", 0, 0, 108, "_update"],
    InheritedElement$created$0: [function(receiver) {
      var t1 = $.get$viewer();
      this.registerObserver$2(receiver, "isInherited", t1.get$changes(t1).listen$1(new U.InheritedElement$created_closure(receiver)));
    }, null, null, 0, 0, 108, "created"],
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {InheritedElement$created: [function(receiver) {
        var t1, t2, t3, t4, t5;
        t1 = J.get$pathname$x(C.Window_methods.get$location(window));
        t2 = $.get$Polymer__polymerSyntax();
        t3 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t4 = J.JSString;
        t5 = W.Element;
        t5 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t4, t5), null, null), [t4, t5]);
        receiver._pathname = t1;
        receiver.polymer$Polymer$syntax = t2;
        receiver.polymer$Polymer$_shadowRoots = t3;
        receiver.polymer$Polymer$$ = t5;
        C.InheritedElement_methods.Element$created$0(receiver);
        C.InheritedElement_methods.PolymerElement$created$0(receiver);
        C.InheritedElement_methods.MemberElement$created$0(receiver);
        C.InheritedElement_methods.InheritedElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new InheritedElement$created" /* new InheritedElement$created:0:0 */]}
  },
  "+InheritedElement": [736],
  MemberElement_ChangeNotifier: {
    "": "MemberElement+ChangeNotifier;",
    $isObservable: true
  },
  InheritedElement$created_closure: {
    "": "Closure:271;this_0-77",
    call$1: [function(changes) {
      var t1;
      for (t1 = J.get$iterator$ax(changes); t1.moveNext$0();)
        if (J.$eq(J.get$name$x(t1.get$current()), C.Symbol_isInherited) === true) {
          J._update$0$x(this.this_0);
          return;
        }
    }, "call$1", null, 2, 0, 271, 637, "call"],
    $isFunction: true
  },
  "+InheritedElement$created_closure": [449]
}],
["web.method", "method.dart", , X, {
  "": "",
  _init0: [function() {
    A.Polymer_register("method-panel", C.Type_ASc);
    A.Polymer_register("dartdoc-method", C.Type_ASc);
  }, "call$0", "_init0$closure", 0, 0, 108, "_init", 350],
  MethodElement: {
    "": ["InheritedElement_ChangeNotifier;_method$__$isNotConstructor%-451,_method$__$modifiers%-434,_method$__$constantModifier%-434,_method$__$staticModifier%-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_member$__$inheritedFrom-474,_member$__$commentFrom-474,_member$__$isInherited-451,_member$__$hasInheritedComment-451,_member$__$shouldShowComment-451,_member$__$shouldShowCommentFrom-451,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_item-448,_member$__$idName-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_pathname-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$isNotConstructor: [function(receiver) {
      return receiver._method$__$isNotConstructor;
    }, null, null, 1, 0, 437, "isNotConstructor", 132, 436],
    set$isNotConstructor: [function(receiver, value) {
      receiver._method$__$isNotConstructor = this.notifyPropertyChange$3(receiver, C.Symbol_isNotConstructor, receiver._method$__$isNotConstructor, value);
    }, null, null, 3, 0, 525, 23, "isNotConstructor", 132],
    get$modifiers: [function(receiver) {
      return receiver._method$__$modifiers;
    }, null, null, 1, 0, 435, "modifiers", 132, 436],
    set$modifiers: [function(receiver, value) {
      receiver._method$__$modifiers = this.notifyPropertyChange$3(receiver, C.Symbol_modifiers, receiver._method$__$modifiers, value);
    }, null, null, 3, 0, 25, 23, "modifiers", 132],
    get$constantModifier: [function(receiver) {
      return receiver._method$__$constantModifier;
    }, null, null, 1, 0, 435, "constantModifier", 132, 436],
    set$constantModifier: [function(receiver, value) {
      receiver._method$__$constantModifier = this.notifyPropertyChange$3(receiver, C.Symbol_constantModifier, receiver._method$__$constantModifier, value);
    }, null, null, 3, 0, 25, 23, "constantModifier", 132],
    get$staticModifier: [function(receiver) {
      return receiver._method$__$staticModifier;
    }, null, null, 1, 0, 435, "staticModifier", 132, 436],
    set$staticModifier: [function(receiver, value) {
      receiver._method$__$staticModifier = this.notifyPropertyChange$3(receiver, C.Symbol_staticModifier, receiver._method$__$staticModifier, value);
    }, null, null, 3, 0, 25, 23, "staticModifier", 132],
    wrongClass$1: [function(receiver, newItem) {
      var t1 = J.getInterceptor(newItem);
      return typeof newItem !== "object" || newItem === null || !t1.$isMethod;
    }, "call$1", "get$wrongClass", 2, 0, 271, 705, "wrongClass"],
    itemChanged$0: [function(receiver) {
      var t1, t2;
      U.InheritedElement.prototype.itemChanged$0.call(this, receiver);
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
        t2 = t1;
      } else
        t2 = t1;
      if (t1 == null)
        return;
      if (t2 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      } else
        t1 = t2;
      t1 = t1.get$isConstructor();
      receiver._method$__$isNotConstructor = this.notifyPropertyChange$3(receiver, C.Symbol_isNotConstructor, receiver._method$__$isNotConstructor, t1 !== true);
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      }
      t1 = t1.get$isConstant() === true ? "const" : "";
      receiver._method$__$constantModifier = this.notifyPropertyChange$3(receiver, C.Symbol_constantModifier, receiver._method$__$constantModifier, t1);
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      }
      t1 = t1.get$isStatic() === true ? "static" : "";
      t1 = this.notifyPropertyChange$3(receiver, C.Symbol_staticModifier, receiver._method$__$staticModifier, t1);
      receiver._method$__$staticModifier = t1;
      t1 = J.$add$ns(receiver._method$__$constantModifier, t1);
      receiver._method$__$modifiers = this.notifyPropertyChange$3(receiver, C.Symbol_modifiers, receiver._method$__$modifiers, t1);
    }, "call$0", "get$itemChanged", 0, 0, 108, "itemChanged"],
    get$defaultItem: [function(receiver) {
      return $.get$MethodElement__defaultItem();
    }, null, null, 1, 0, 108, "defaultItem"],
    "@": function() {
      return [C.C_Reflectable];
    },
    static: {"": "MethodElement__defaultItem<-77", MethodElement$created: [function(receiver) {
        var t1, t2, t3, t4, t5;
        t1 = J.get$pathname$x(C.Window_methods.get$location(window));
        t2 = $.get$Polymer__polymerSyntax();
        t3 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t4 = J.JSString;
        t5 = W.Element;
        t5 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t4, t5), null, null), [t4, t5]);
        receiver._pathname = t1;
        receiver.polymer$Polymer$syntax = t2;
        receiver.polymer$Polymer$_shadowRoots = t3;
        receiver.polymer$Polymer$$ = t5;
        C.MethodElement_methods.Element$created$0(receiver);
        C.MethodElement_methods.PolymerElement$created$0(receiver);
        C.MethodElement_methods.MemberElement$created$0(receiver);
        C.MethodElement_methods.InheritedElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new MethodElement$created" /* new MethodElement$created:0:0 */]}
  },
  "+MethodElement": [737],
  InheritedElement_ChangeNotifier: {
    "": "InheritedElement+ChangeNotifier;",
    $isObservable: true
  }
}],
["web.minimap_class", "minimap-class.dart", , Q, {
  "": "",
  MinimapElementClass: {
    "": ["MemberElement;_item-448,_member$__$idName-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_pathname-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    wrongClass$1: [function(receiver, newItem) {
      var t1 = J.getInterceptor(newItem);
      return typeof newItem !== "object" || newItem === null || !t1.$isClass;
    }, "call$1", "get$wrongClass", 2, 0, 271, 705, "wrongClass"],
    get$defaultItem: [function(receiver) {
      return $.get$MinimapElementClass__defaultItem();
    }, null, null, 1, 0, 108, "defaultItem"],
    "@": function() {
      return [C.CustomTag_bh5];
    },
    static: {"": "MinimapElementClass__defaultItem<-77", MinimapElementClass$created: [function(receiver) {
        var t1, t2, t3, t4, t5;
        t1 = J.get$pathname$x(C.Window_methods.get$location(window));
        t2 = $.get$Polymer__polymerSyntax();
        t3 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t4 = J.JSString;
        t5 = W.Element;
        t5 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t4, t5), null, null), [t4, t5]);
        receiver._pathname = t1;
        receiver.polymer$Polymer$syntax = t2;
        receiver.polymer$Polymer$_shadowRoots = t3;
        receiver.polymer$Polymer$$ = t5;
        C.MinimapElementClass_methods.Element$created$0(receiver);
        C.MinimapElementClass_methods.PolymerElement$created$0(receiver);
        C.MinimapElementClass_methods.MemberElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new MinimapElementClass$created" /* new MinimapElementClass$created:0:0 */]}
  },
  "+MinimapElementClass": [710]
}],
["web.minimap_element", "minimap-element.dart", , Z, {
  "": "",
  MinimapElement: {
    "": ["PolymerElement_ChangeNotifier2;_minimap_element$__$category%-471,_minimap_element$__$item%-453,_minimap_element$__$camelCaseName%-434,_minimap_element$__$categoryLink%-434,_minimap_element$__$itemsToShow%-690,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$category: [function(receiver) {
      return receiver._minimap_element$__$category;
    }, null, null, 1, 0, 478, "category", 132, 674],
    set$category: [function(receiver, value) {
      receiver._minimap_element$__$category = this.notifyPropertyChange$3(receiver, C.Symbol_category, receiver._minimap_element$__$category, value);
    }, null, null, 3, 0, 693, 23, "category", 132],
    get$item: [function(receiver) {
      return receiver._minimap_element$__$item;
    }, null, null, 1, 0, 461, "item", 132, 674],
    item$1: function($receiver, arg0) {
      return this.get$item($receiver).call$1(arg0);
    },
    set$item: [function(receiver, value) {
      receiver._minimap_element$__$item = this.notifyPropertyChange$3(receiver, C.Symbol_item, receiver._minimap_element$__$item, value);
    }, null, null, 3, 0, 679, 23, "item", 132],
    get$camelCaseName: [function(receiver) {
      return receiver._minimap_element$__$camelCaseName;
    }, null, null, 1, 0, 435, "camelCaseName", 132, 436],
    set$camelCaseName: [function(receiver, value) {
      receiver._minimap_element$__$camelCaseName = this.notifyPropertyChange$3(receiver, C.Symbol_camelCaseName, receiver._minimap_element$__$camelCaseName, value);
    }, null, null, 3, 0, 25, 23, "camelCaseName", 132],
    get$categoryLink: [function(receiver) {
      return receiver._minimap_element$__$categoryLink;
    }, null, null, 1, 0, 435, "categoryLink", 132, 436],
    set$categoryLink: [function(receiver, value) {
      receiver._minimap_element$__$categoryLink = this.notifyPropertyChange$3(receiver, C.Symbol_categoryLink, receiver._minimap_element$__$categoryLink, value);
    }, null, null, 3, 0, 25, 23, "categoryLink", 132],
    get$itemsToShow: [function(receiver) {
      return receiver._minimap_element$__$itemsToShow;
    }, null, null, 1, 0, 694, "itemsToShow", 132, 436],
    set$itemsToShow: [function(receiver, value) {
      receiver._minimap_element$__$itemsToShow = this.notifyPropertyChange$3(receiver, C.Symbol_itemsToShow, receiver._minimap_element$__$itemsToShow, value);
    }, null, null, 3, 0, 695, 23, "itemsToShow", 132],
    get$syntax: [function(receiver) {
      return $.get$defaultSyntax();
    }, null, null, 1, 0, 108, "syntax"],
    get$applyAuthorStyles: [function(receiver) {
      return true;
    }, null, null, 1, 0, 108, "applyAuthorStyles"],
    itemChanged$0: [function(receiver) {
      var t1;
      if (receiver._minimap_element$__$category == null || receiver._minimap_element$__$item == null)
        return;
      t1 = receiver._minimap_element$__$item.get$prefixedLinkHref() + "@" + J.replaceAll$2$s(J.get$name$x(receiver._minimap_element$__$category), " ", "-");
      receiver._minimap_element$__$categoryLink = this.notifyPropertyChange$3(receiver, C.Symbol_categoryLink, receiver._minimap_element$__$categoryLink, t1);
    }, "call$0", "get$itemChanged", 0, 0, 108, "itemChanged"],
    categoryChanged$0: [function(receiver) {
      var t1, t2, t3;
      if (receiver._minimap_element$__$category == null || receiver._minimap_element$__$item == null)
        return;
      this.itemChanged$0(receiver);
      t1 = G.toCamelCase(J.toLowerCase$0$s(J.get$name$x(receiver._minimap_element$__$category)), false);
      receiver._minimap_element$__$camelCaseName = this.notifyPropertyChange$3(receiver, C.Symbol_camelCaseName, receiver._minimap_element$__$camelCaseName, t1);
      t1 = receiver._minimap_element$__$category;
      t2 = $.get$viewer();
      t3 = new E.Filter(true, false);
      t3.showInherited = t2._app$__$isInherited;
      t3.showObjectMembers = t2._app$__$showObjectMembers;
      t3 = t1.filteredContent$1(t3);
      t1 = [];
      t1.$builtinTypeInfo = [null];
      t1 = new Q.ObservableList(null, null, t1, null, null);
      t1.$builtinTypeInfo = [null];
      t1.addAll$1(0, t3);
      receiver._minimap_element$__$itemsToShow = this.notifyPropertyChange$3(receiver, C.Symbol_itemsToShow, receiver._minimap_element$__$itemsToShow, t1);
    }, "call$0", "get$categoryChanged", 0, 0, 108, "categoryChanged"],
    MinimapElement$created$0: [function(receiver) {
      var t1 = $.get$viewer();
      this.registerObserver$2(receiver, "isInherited", t1.get$changes(t1).listen$1(new Z.MinimapElement$created_closure(receiver)));
    }, null, null, 0, 0, 108, "created"],
    "@": function() {
      return [C.CustomTag_UBp];
    },
    static: {MinimapElement$created: [function(receiver) {
        var t1, t2, t3, t4;
        t1 = $.get$Polymer__polymerSyntax();
        t2 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t3 = J.JSString;
        t4 = W.Element;
        t4 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t3, t4), null, null), [t3, t4]);
        receiver.polymer$Polymer$syntax = t1;
        receiver.polymer$Polymer$_shadowRoots = t2;
        receiver.polymer$Polymer$$ = t4;
        C.MinimapElement_methods.Element$created$0(receiver);
        C.MinimapElement_methods.PolymerElement$created$0(receiver);
        C.MinimapElement_methods.MinimapElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new MinimapElement$created" /* new MinimapElement$created:0:0 */]}
  },
  "+MinimapElement": [738],
  PolymerElement_ChangeNotifier2: {
    "": "PolymerElement+ChangeNotifier;",
    $isObservable: true
  },
  MinimapElement$created_closure: {
    "": "Closure:271;this_0-77",
    call$1: [function(changes) {
      var t1, change, t2;
      for (t1 = J.get$iterator$ax(changes); t1.moveNext$0();) {
        change = t1.get$current();
        t2 = J.getInterceptor$x(change);
        if (J.$eq(t2.get$name(change), C.Symbol_isInherited) === true || J.$eq(t2.get$name(change), C.Symbol_showObjectMembers) === true) {
          J.categoryChanged$0$x(this.this_0);
          return;
        }
      }
    }, "call$1", null, 2, 0, 271, 637, "call"],
    $isFunction: true
  },
  "+MinimapElement$created_closure": [449]
}],
["web.minimap_library", "minimap-library.dart", , N, {
  "": "",
  MinimapElementLibrary: {
    "": ["MemberElement;_item-448,_member$__$idName-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_pathname-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    wrongClass$1: [function(receiver, newItem) {
      var t1 = J.getInterceptor(newItem);
      return typeof newItem !== "object" || newItem === null || !t1.$isLibrary;
    }, "call$1", "get$wrongClass", 2, 0, 271, 705, "wrongClass"],
    get$defaultItem: [function(receiver) {
      return $.get$MinimapElementLibrary__defaultItem();
    }, null, null, 1, 0, 108, "defaultItem"],
    "@": function() {
      return [C.CustomTag_txY];
    },
    static: {"": "MinimapElementLibrary__defaultItem<-77", MinimapElementLibrary$created: [function(receiver) {
        var t1, t2, t3, t4, t5;
        t1 = J.get$pathname$x(C.Window_methods.get$location(window));
        t2 = $.get$Polymer__polymerSyntax();
        t3 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t4 = J.JSString;
        t5 = W.Element;
        t5 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t4, t5), null, null), [t4, t5]);
        receiver._pathname = t1;
        receiver.polymer$Polymer$syntax = t2;
        receiver.polymer$Polymer$_shadowRoots = t3;
        receiver.polymer$Polymer$$ = t5;
        C.MinimapElementLibrary_methods.Element$created$0(receiver);
        C.MinimapElementLibrary_methods.PolymerElement$created$0(receiver);
        C.MinimapElementLibrary_methods.MemberElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new MinimapElementLibrary$created" /* new MinimapElementLibrary$created:0:0 */]}
  },
  "+MinimapElementLibrary": [710]
}],
["web.page", "page.dart", , O, {
  "": "",
  PageElement: {
    "": ["DartdocElement_ChangeNotifier2;_page$__$item%-453,_page$__$isLibrary%-451,_page$__$isMethod%-451,_page$__$isClass%-451,_page$__$isTypedef%-451,_page$__$isHome%-451,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_pathname-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$item: [function(receiver) {
      return receiver._page$__$item;
    }, null, null, 1, 0, 461, "item", 132, 674],
    item$1: function($receiver, arg0) {
      return this.get$item($receiver).call$1(arg0);
    },
    set$item: [function(receiver, value) {
      receiver._page$__$item = this.notifyPropertyChange$3(receiver, C.Symbol_item, receiver._page$__$item, value);
    }, null, null, 3, 0, 679, 23, "item", 132],
    get$isLibrary: [function(receiver) {
      return receiver._page$__$isLibrary;
    }, null, null, 1, 0, 437, "isLibrary", 132, 436],
    set$isLibrary: [function(receiver, value) {
      receiver._page$__$isLibrary = this.notifyPropertyChange$3(receiver, C.Symbol_isLibrary, receiver._page$__$isLibrary, value);
    }, null, null, 3, 0, 525, 23, "isLibrary", 132],
    get$isMethod: [function(receiver) {
      return receiver._page$__$isMethod;
    }, null, null, 1, 0, 437, "isMethod", 132, 436],
    set$isMethod: [function(receiver, value) {
      receiver._page$__$isMethod = this.notifyPropertyChange$3(receiver, C.Symbol_isMethod, receiver._page$__$isMethod, value);
    }, null, null, 3, 0, 525, 23, "isMethod", 132],
    get$isClass: [function(receiver) {
      return receiver._page$__$isClass;
    }, null, null, 1, 0, 437, "isClass", 132, 436],
    set$isClass: [function(receiver, value) {
      receiver._page$__$isClass = this.notifyPropertyChange$3(receiver, C.Symbol_isClass, receiver._page$__$isClass, value);
    }, null, null, 3, 0, 525, 23, "isClass", 132],
    get$isTypedef: [function(receiver) {
      return receiver._page$__$isTypedef;
    }, null, null, 1, 0, 437, "isTypedef", 132, 436],
    set$isTypedef: [function(receiver, value) {
      receiver._page$__$isTypedef = this.notifyPropertyChange$3(receiver, C.Symbol_isTypedef, receiver._page$__$isTypedef, value);
    }, null, null, 3, 0, 525, 23, "isTypedef", 132],
    get$isHome: [function(receiver) {
      return receiver._page$__$isHome;
    }, null, null, 1, 0, 437, "isHome", 132, 436],
    set$isHome: [function(receiver, value) {
      receiver._page$__$isHome = this.notifyPropertyChange$3(receiver, C.Symbol_isHome, receiver._page$__$isHome, value);
    }, null, null, 3, 0, 525, 23, "isHome", 132],
    itemChanged$0: [function(receiver) {
      var t1, t2;
      t1 = receiver._page$__$item;
      t2 = J.getInterceptor(t1);
      receiver._page$__$isLibrary = this.notifyPropertyChange$3(receiver, C.Symbol_isLibrary, receiver._page$__$isLibrary, typeof t1 === "object" && t1 !== null && !!t2.$isLibrary);
      t2 = receiver._page$__$item;
      t1 = J.getInterceptor(t2);
      receiver._page$__$isMethod = this.notifyPropertyChange$3(receiver, C.Symbol_isMethod, receiver._page$__$isMethod, typeof t2 === "object" && t2 !== null && !!t1.$isMethod);
      t1 = receiver._page$__$item;
      t2 = J.getInterceptor(t1);
      receiver._page$__$isClass = this.notifyPropertyChange$3(receiver, C.Symbol_isClass, receiver._page$__$isClass, typeof t1 === "object" && t1 !== null && !!t2.$isClass);
      t2 = receiver._page$__$item;
      t1 = J.getInterceptor(t2);
      receiver._page$__$isTypedef = this.notifyPropertyChange$3(receiver, C.Symbol_isTypedef, receiver._page$__$isTypedef, typeof t2 === "object" && t2 !== null && !!t1.$isTypedef);
      t1 = receiver._page$__$item;
      t2 = J.getInterceptor(t1);
      receiver._page$__$isHome = this.notifyPropertyChange$3(receiver, C.Symbol_isHome, receiver._page$__$isHome, typeof t1 === "object" && t1 !== null && !!t2.$isHome);
    }, "call$0", "get$itemChanged", 0, 0, 108, "itemChanged"],
    "@": function() {
      return [C.CustomTag_W3i];
    },
    static: {PageElement$created: [function(receiver) {
        var t1, t2, t3, t4, t5;
        t1 = J.get$pathname$x(C.Window_methods.get$location(window));
        t2 = $.get$Polymer__polymerSyntax();
        t3 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t4 = J.JSString;
        t5 = W.Element;
        t5 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t4, t5), null, null), [t4, t5]);
        receiver._pathname = t1;
        receiver.polymer$Polymer$syntax = t2;
        receiver.polymer$Polymer$_shadowRoots = t3;
        receiver.polymer$Polymer$$ = t5;
        C.PageElement_methods.Element$created$0(receiver);
        C.PageElement_methods.PolymerElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new PageElement$created" /* new PageElement$created:0:0 */]}
  },
  "+PageElement": [739],
  DartdocElement_ChangeNotifier2: {
    "": "DartdocElement+ChangeNotifier;",
    $isObservable: true
  }
}],
["web.parameters", "parameters.dart", , X, {
  "": "",
  ParameterElement: {
    "": ["DartdocElement_ChangeNotifier3;_parameters$__$parameters%-487,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_pathname-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$parameters: [function(receiver) {
      return receiver._parameters$__$parameters;
    }, null, null, 1, 0, 740, "parameters", 132, 674],
    set$parameters: [function(receiver, value) {
      receiver._parameters$__$parameters = this.notifyPropertyChange$3(receiver, C.Symbol_parameters, receiver._parameters$__$parameters, value);
    }, null, null, 3, 0, 741, 23, "parameters", 132],
    parametersChanged$0: [function(receiver) {
      var required, optional, t1, p;
      required = [];
      optional = [];
      t1 = receiver._parameters$__$parameters;
      if (t1 != null)
        for (t1 = J.get$iterator$ax(t1); t1.moveNext$0();) {
          p = t1.get$current();
          (p.get$isOptional() === true ? optional : required).push(p);
        }
      receiver.textContent = "";
      this.insertAdjacentText$2(receiver, "beforeend", "(");
      this.addParameters$3(receiver, required, "required", optional);
      this.addParameters$3(receiver, optional, "optional", optional);
      this.insertAdjacentText$2(receiver, "beforeend", ")");
    }, "call$0", "get$parametersChanged", 0, 0, 107, "parametersChanged"],
    addParameters$3: [function(receiver, elements, className, optional) {
      var t1, outerSpan, t2, t3, optionalOpeningDelimiter, t4, t5, element, t6, t7, space, e, optionalClosingDelimiter;
      t1 = J.getInterceptor$asx(elements);
      if (t1.get$isEmpty(elements) === true)
        return;
      outerSpan = document.createElement("span", null);
      t2 = J.getInterceptor(className);
      if (t2.$eq(className, "optional") === true) {
        t3 = J.getInterceptor$asx(optional);
        if (t3.get$isEmpty(optional) === true)
          optionalOpeningDelimiter = "";
        else
          optionalOpeningDelimiter = t3.get$first(optional).get$isNamed() === true ? "{" : "[";
        J.insertAdjacentText$2$x(outerSpan, "beforeend", optionalOpeningDelimiter);
      }
      for (t3 = t1.get$iterator(elements), t4 = J.getInterceptor$x(outerSpan), t5 = J.getInterceptor$asx(optional); t3.moveNext$0();) {
        element = t3.get$current();
        t6 = J.getInterceptor$x(element);
        J.forEach$1$ax(J.get$annotations$x(t6.get$annotations(element)), new X.ParameterElement_addParameters_closure(outerSpan));
        if (t6.get$type(element).get$isDynamic() !== true) {
          t7 = W._ElementFactoryProvider_createElement_tag("dartdoc-type", null);
          J.set$type$x(t7, t6.get$type(element));
          outerSpan.appendChild(t7);
          space = " ";
        } else
          space = "";
        e = document.createElement("a", null);
        e.textContent = t6.get$name(element);
        J.set$href$x(e, element.get$prefixedAnchorHref());
        e.id = element.get$anchorHrefLocation().anchor;
        t4.insertAdjacentText$2(outerSpan, "beforeend", space);
        outerSpan.appendChild(e);
        t4.insertAdjacentText$2(outerSpan, "beforeend", element.get$decoration());
        if (t2.$eq(className, "required") === true && t5.get$isNotEmpty(optional) || t6.$eq(element, t1.get$last(elements)) !== true)
          t4.insertAdjacentText$2(outerSpan, "beforeend", ", ");
      }
      if (t2.$eq(className, "optional") === true) {
        if (t5.get$isEmpty(optional) === true)
          optionalClosingDelimiter = "";
        else
          optionalClosingDelimiter = t5.get$first(optional).get$isNamed() === true ? "}" : "]";
        t4.insertAdjacentText$2(outerSpan, "beforeend", optionalClosingDelimiter);
      }
      receiver.appendChild(outerSpan);
    }, "call$3", "get$addParameters", 6, 0, 742, 541, 45, 743, "addParameters"],
    "@": function() {
      return [C.CustomTag_dsQ];
    },
    static: {ParameterElement$created: [function(receiver) {
        var t1, t2, t3, t4, t5;
        t1 = J.get$pathname$x(C.Window_methods.get$location(window));
        t2 = $.get$Polymer__polymerSyntax();
        t3 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t4 = J.JSString;
        t5 = W.Element;
        t5 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t4, t5), null, null), [t4, t5]);
        receiver._parameters$__$parameters = C.List_empty;
        receiver._pathname = t1;
        receiver.polymer$Polymer$syntax = t2;
        receiver.polymer$Polymer$_shadowRoots = t3;
        receiver.polymer$Polymer$$ = t5;
        C.ParameterElement_methods.Element$created$0(receiver);
        C.ParameterElement_methods.PolymerElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new ParameterElement$created" /* new ParameterElement$created:0:0 */]}
  },
  "+ParameterElement": [744],
  DartdocElement_ChangeNotifier3: {
    "": "DartdocElement+ChangeNotifier;",
    $isObservable: true
  },
  ParameterElement_addParameters_closure: {
    "": "Closure:271;outerSpan_0-77",
    call$1: [function(annotation) {
      var anchor, t1, t2;
      anchor = W.AnchorElement_AnchorElement(null);
      anchor.textContent = "@" + H.S(annotation.get$simpleType());
      J.set$href$x(anchor, "#!" + H.S(J.get$location$x(annotation)));
      t1 = this.outerSpan_0;
      t2 = J.getInterceptor$x(t1);
      t2.append$1(t1, anchor);
      t2.insertAdjacentText$2(t1, "beforeend", " ");
    }, "call$1", null, 2, 0, 271, 485, "call"],
    $isFunction: true
  },
  "+ParameterElement_addParameters_closure": [449]
}],
["web.results", "results.dart", , G, {
  "": "",
  Result: {
    "": ["AnchorElement_Polymer_ChangeNotifier;_results$__$item%-745,_results$__$descriptiveName%-434,_results$__$descriptiveType%-434,_results$__$outerLibrary%-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$item: [function(receiver) {
      return receiver._results$__$item;
    }, null, null, 1, 0, 746, "item", 132, 674],
    item$1: function($receiver, arg0) {
      return this.get$item($receiver).call$1(arg0);
    },
    set$item: [function(receiver, value) {
      receiver._results$__$item = this.notifyPropertyChange$3(receiver, C.Symbol_item, receiver._results$__$item, value);
    }, null, null, 3, 0, 747, 23, "item", 132],
    get$descriptiveName: [function(receiver) {
      return receiver._results$__$descriptiveName;
    }, null, null, 1, 0, 435, "descriptiveName", 132, 436],
    set$descriptiveName: [function(receiver, value) {
      receiver._results$__$descriptiveName = this.notifyPropertyChange$3(receiver, C.Symbol_descriptiveName, receiver._results$__$descriptiveName, value);
    }, null, null, 3, 0, 25, 23, "descriptiveName", 132],
    get$descriptiveType: [function(receiver) {
      return receiver._results$__$descriptiveType;
    }, null, null, 1, 0, 435, "descriptiveType", 132, 436],
    set$descriptiveType: [function(receiver, value) {
      receiver._results$__$descriptiveType = this.notifyPropertyChange$3(receiver, C.Symbol_descriptiveType, receiver._results$__$descriptiveType, value);
    }, null, null, 3, 0, 25, 23, "descriptiveType", 132],
    get$outerLibrary: [function(receiver) {
      return receiver._results$__$outerLibrary;
    }, null, null, 1, 0, 435, "outerLibrary", 132, 436],
    set$outerLibrary: [function(receiver, value) {
      receiver._results$__$outerLibrary = this.notifyPropertyChange$3(receiver, C.Symbol_outerLibrary, receiver._results$__$outerLibrary, value);
    }, null, null, 3, 0, 25, 23, "outerLibrary", 132],
    itemChanged$0: [function(receiver) {
      var t1 = this._getDescriptiveName$0(receiver);
      receiver._results$__$descriptiveName = this.notifyPropertyChange$3(receiver, C.Symbol_descriptiveName, receiver._results$__$descriptiveName, t1);
      t1 = this._getDescriptiveType$0(receiver);
      receiver._results$__$descriptiveType = this.notifyPropertyChange$3(receiver, C.Symbol_descriptiveType, receiver._results$__$descriptiveType, t1);
      t1 = this._getOuterLibrary$0(receiver);
      receiver._results$__$outerLibrary = this.notifyPropertyChange$3(receiver, C.Symbol_outerLibrary, receiver._results$__$outerLibrary, t1);
    }, "call$0", "get$itemChanged", 0, 0, 108, "itemChanged"],
    get$applyAuthorStyles: [function(receiver) {
      return true;
    }, null, null, 1, 0, 108, "applyAuthorStyles"],
    get$membertype: [function(receiver) {
      var t1 = receiver._results$__$item;
      return t1 == null ? "none" : J.get$type$x(t1);
    }, null, null, 1, 0, 435, "membertype"],
    get$qualifiedname: [function(receiver) {
      var t1 = receiver._results$__$item;
      return t1 == null ? "none" : t1.get$element();
    }, null, null, 1, 0, 435, "qualifiedname"],
    _getDescriptiveName$0: [function(receiver) {
      var t1, $name, t2, lib;
      t1 = receiver._results$__$item;
      if ((t1 == null ? "none" : t1.get$element()) == null)
        return "";
      t1 = receiver._results$__$item;
      $name = J.split$1$s(t1 == null ? "none" : t1.get$element(), ".");
      t1 = receiver._results$__$item;
      if (J.$eq(t1 == null ? "none" : J.get$type$x(t1), "library") === true) {
        t1 = $.get$pageIndex();
        t2 = receiver._results$__$item;
        lib = t1.$index(0, t2 == null ? "none" : t2.get$element());
        if (lib == null)
          return "";
        return lib.get$decoratedName();
      } else {
        t1 = receiver._results$__$item;
        if (J.$eq(t1 == null ? "none" : J.get$type$x(t1), "constructor") === true) {
          if (J.$eq(C.JSArray_methods.get$last($name), "") === true) {
            t1 = $name.length;
            t2 = t1 - 2;
            if (t2 < 0)
              return H.ioore($name, t2);
            return $name[t2];
          }
          t1 = $name.length;
          t2 = t1 - 2;
          if (t2 < 0)
            return H.ioore($name, t2);
          return H.S($name[t2]) + "." + H.S(C.JSArray_methods.get$last($name));
        }
      }
      return C.JSArray_methods.get$last($name);
    }, "call$0", "get$_getDescriptiveName", 0, 0, 435, "_getDescriptiveName"],
    _getDescriptiveType$0: [function(receiver) {
      var t1, loc, t2, t3, t4, t5;
      t1 = receiver._results$__$item;
      if (t1 == null)
        return "";
      loc = new Y.DocsLocation(null, null, null, null, null);
      loc._extractPieces$1(t1.get$element());
      t1 = receiver._results$__$item;
      if (J.$eq(t1 == null ? "none" : J.get$type$x(t1), "class") === true)
        return "class";
      t1 = receiver._results$__$item;
      if (J.$eq(t1 == null ? "none" : J.get$type$x(t1), "library") === true) {
        t1 = loc.packageName;
        return t1 == null ? "library" : "library in " + H.S(t1);
      }
      t1 = $.get$searchIndex()._search$_map;
      t2 = loc.get$componentNames();
      if (0 >= t2.length)
        return H.ioore(t2, 0);
      t2.pop();
      t2 = Y.DocsLocation$fromList(t2);
      t3 = t2.get$packagePlus();
      t4 = t2.libraryName;
      if (t4 == null)
        t4 = "";
      t5 = t2.memberName;
      t5 = t5 == null ? "" : "." + H.S(t5);
      t2 = t2.subMemberName;
      if (J.$eq(J.$index$asx(t1, C.JSArray_methods.join$1([t3, t4, t5, t2 == null ? "" : "." + H.S(t2)], "")), "class") === true) {
        t1 = receiver._results$__$item;
        return H.S(t1 == null ? "none" : J.get$type$x(t1)) + " in " + H.S(loc.get$parentName());
      }
      t1 = receiver._results$__$item;
      return t1 == null ? "none" : J.get$type$x(t1);
    }, "call$0", "get$_getDescriptiveType", 0, 0, 435, "_getDescriptiveType"],
    _getOuterLibrary$0: [function(receiver) {
      var t1, loc, t2, libraryName, library, packageName;
      t1 = receiver._results$__$item;
      if (J.$eq(t1 == null ? "none" : J.get$type$x(t1), "library") === true)
        return "";
      t1 = receiver._results$__$item;
      t1 = t1 == null ? "none" : t1.get$element();
      loc = new Y.DocsLocation(null, null, null, null, null);
      loc._extractPieces$1(t1);
      t1 = H.S(loc.get$packagePlus());
      t2 = loc.libraryName;
      libraryName = t1 + H.S(t2 == null ? "" : t2);
      library = $.get$pageIndex().$index(0, libraryName);
      if (library == null)
        return "";
      packageName = loc.packageName;
      if (packageName == null)
        return "library " + H.S(library.get$decoratedName());
      else
        return "library " + H.S(library.get$decoratedName()) + " in " + H.S(packageName);
    }, "call$0", "get$_getOuterLibrary", 0, 0, 435, "_getOuterLibrary"],
    Result$created$0: [function(receiver) {
      this.polymerCreated$0(receiver);
    }, null, null, 0, 0, 108, "created"],
    "@": function() {
      return [C.CustomTag_o0y];
    },
    static: {Result$created: [function(receiver) {
        var t1, t2, t3, t4;
        t1 = $.get$Polymer__polymerSyntax();
        t2 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t3 = J.JSString;
        t4 = W.Element;
        t4 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t3, t4), null, null), [t3, t4]);
        receiver.polymer$Polymer$syntax = t1;
        receiver.polymer$Polymer$_shadowRoots = t2;
        receiver.polymer$Polymer$$ = t4;
        C.Result_methods.Element$created$0(receiver);
        C.Result_methods.Result$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new Result$created" /* new Result$created:0:0 */]}
  },
  "+Result": [748],
  AnchorElement_Polymer: {
    "": ["AnchorElement+Polymer;syntax:polymer$Polymer$syntax=,$$:polymer$Polymer$$=-631", null, function() {
      return [C.C_Reflectable];
    }],
    $isPolymer: true,
    $isNodeBindExtension: true,
    $isObservable: true,
    $isElement: true,
    $isInterceptor: true,
    $isEventTarget: true,
    $isNode: true
  },
  AnchorElement_Polymer_ChangeNotifier: {
    "": "AnchorElement_Polymer+ChangeNotifier;",
    $isObservable: true
  }
}],
["web.search", "search.dart", , M, {
  "": "",
  Search: {
    "": ["PolymerElement_ChangeNotifier3;_search0$__$searchQuery%-434,_search0$__$isFocused%-451,_search0$__$results%-749,_search0$__$dropdownOpen%-434,currentIndex%-441,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$searchQuery: [function(receiver) {
      return receiver._search0$__$searchQuery;
    }, null, null, 1, 0, 435, "searchQuery", 132, 674],
    set$searchQuery: [function(receiver, value) {
      receiver._search0$__$searchQuery = this.notifyPropertyChange$3(receiver, C.Symbol_searchQuery, receiver._search0$__$searchQuery, value);
    }, null, null, 3, 0, 25, 23, "searchQuery", 132],
    get$isFocused: [function(receiver) {
      return receiver._search0$__$isFocused;
    }, null, null, 1, 0, 437, "isFocused", 132, 436],
    set$isFocused: [function(receiver, value) {
      receiver._search0$__$isFocused = this.notifyPropertyChange$3(receiver, C.Symbol_isFocused, receiver._search0$__$isFocused, value);
    }, null, null, 3, 0, 525, 23, "isFocused", 132],
    get$results: [function(receiver) {
      return receiver._search0$__$results;
    }, null, null, 1, 0, 750, "results", 132, 436],
    set$results: [function(receiver, value) {
      receiver._search0$__$results = this.notifyPropertyChange$3(receiver, C.Symbol_results, receiver._search0$__$results, value);
    }, null, null, 3, 0, 751, 23, "results", 132],
    get$dropdownOpen: [function(receiver) {
      return receiver._search0$__$dropdownOpen;
    }, null, null, 1, 0, 435, "dropdownOpen", 132, 436],
    set$dropdownOpen: [function(receiver, value) {
      receiver._search0$__$dropdownOpen = this.notifyPropertyChange$3(receiver, C.Symbol_dropdownOpen, receiver._search0$__$dropdownOpen, value);
    }, null, null, 3, 0, 25, 23, "dropdownOpen", 132],
    get$syntax: [function(receiver) {
      return $.get$defaultSyntax();
    }, null, null, 1, 0, 108, "syntax"],
    get$applyAuthorStyles: [function(receiver) {
      return true;
    }, null, null, 1, 0, 108, "applyAuthorStyles"],
    searchQueryChanged$0: [function(receiver) {
      var t1, t2, t3, t4;
      receiver.currentIndex = -1;
      J.clear$0$ax(receiver._search0$__$results);
      t1 = receiver._search0$__$results;
      t2 = $.get$searchIndex();
      t3 = receiver._search0$__$searchQuery;
      t4 = $.get$viewer()._app$__$isDesktop === true ? 10 : 5;
      J.addAll$1$ax(t1, B.lookupSearchResults(t2, t3, t4, this.get$locationValidInContext(receiver)));
      this._updateDropdownOpen$0(receiver);
    }, "call$0", "get$searchQueryChanged", 0, 0, 107, "searchQueryChanged"],
    _updateDropdownOpen$0: [function(receiver) {
      var t1 = J.get$isEmpty$asx(receiver._search0$__$searchQuery) !== true && receiver._search0$__$isFocused === true ? "open" : "";
      receiver._search0$__$dropdownOpen = this.notifyPropertyChange$3(receiver, C.Symbol_dropdownOpen, receiver._search0$__$dropdownOpen, t1);
    }, "call$0", "get$_updateDropdownOpen", 0, 0, 107, "_updateDropdownOpen"],
    locationValidInContext$1: [function(receiver, $location) {
      var t1, currentContext, t2;
      t1 = $.get$viewer();
      currentContext = t1._currentPage.get$home();
      t2 = J.getInterceptor(currentContext);
      if (t2.$eq(currentContext, t1._app$__$homePage) === true)
        if (t1._showPkgLibraries === true)
          return true;
        else
          return $location.get$packageName() == null;
      else
        return J.$eq($location.get$packageName(), t2.get$name(currentContext));
    }, "call$1", "get$locationValidInContext", 2, 0, 752, 142, "locationValidInContext"],
    onBlurCallback$1: [function(receiver, _) {
      receiver._search0$__$isFocused = this.notifyPropertyChange$3(receiver, C.Symbol_isFocused, receiver._search0$__$isFocused, false);
      P._Future$immediate(null, null).then$1(new M.Search_onBlurCallback_closure(receiver));
    }, "call$1", "get$onBlurCallback", 2, 0, 196, 335, "onBlurCallback"],
    onFocusCallback$1: [function(receiver, _) {
      receiver._search0$__$isFocused = this.notifyPropertyChange$3(receiver, C.Symbol_isFocused, receiver._search0$__$isFocused, true);
    }, "call$1", "get$onFocusCallback", 2, 0, 196, 335, "onFocusCallback"],
    onSubmitCallback$3: [function(receiver, $event, detail, target) {
      var t1, t2, refId, parentRefId, encoded, t3;
      if (J.get$isEmpty$asx(receiver._search0$__$results) === true)
        return;
      if (target != null) {
        t1 = J.getInterceptor$x(target);
        t2 = t1.get$dataset(target);
        refId = t2._attributes._element.getAttribute("data-" + t2._toHyphenedName$1("ref-id"));
        t1 = J.get$dataset$x(t1.get$parent(target));
        parentRefId = t1._attributes._element.getAttribute("data-" + t1._toHyphenedName$1("ref-id"));
        if (refId == null)
          refId = parentRefId;
      } else
        refId = null;
      if (refId == null || refId.length === 0)
        refId = J.get$first$ax(receiver._search0$__$results).get$element();
      t1 = new Y.DocsLocation(null, null, null, null, null);
      t1._extractPieces$1(refId);
      new E.LinkableType(null).loc = t1;
      encoded = P.Uri__uriEncode(C.List_CVk, t1.get$withoutAnchor(), C.Utf8Codec_false, false);
      t1 = $.get$viewer();
      t1.handleLink$1(encoded);
      t2 = window.history;
      t3 = "#!" + encoded;
      t1 = t1._currentPage;
      t1 = t1 == null ? "" : t1.get$decoratedName();
      t2.pushState(t3, t1, "#!" + encoded);
      receiver._search0$__$searchQuery = this.notifyPropertyChange$3(receiver, C.Symbol_searchQuery, receiver._search0$__$searchQuery, "");
      J.clear$0$ax(receiver._search0$__$results);
    }, "call$3", "get$onSubmitCallback", 6, 0, 706, 349, 382, 74, "onSubmitCallback"],
    enteredView$0: [function(receiver) {
      var t1;
      A.Polymer.prototype.enteredView$0.call(this, receiver);
      t1 = C.EventStreamProvider_focus.forTarget$2$useCapture(receiver, true);
      t1 = H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$onFocusCallback(receiver)), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)]);
      t1._tryResume$0();
      this.registerObserver$2(receiver, "onfocus", t1);
      t1 = C.EventStreamProvider_blur.forTarget$2$useCapture(receiver, true);
      t1 = H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$onBlurCallback(receiver)), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)]);
      t1._tryResume$0();
      this.registerObserver$2(receiver, "onblur", t1);
      t1 = C.EventStreamProvider_keydown.forElement$1(receiver);
      t1 = H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$handleUpDown(receiver)), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)]);
      t1._tryResume$0();
      this.registerObserver$2(receiver, "onkeydown", t1);
      t1 = C.EventStreamProvider_keydown.forTarget$1(window);
      t1 = H.setRuntimeTypeInfo(new W._EventStreamSubscription(0, t1._target, t1._eventType, W._wrapZone(this.get$shortcutHandler(receiver)), t1._useCapture), [H.getTypeArgumentByIndex(t1, 0)]);
      t1._tryResume$0();
      this.registerObserver$2(receiver, "window.onkeydown", t1);
    }, "call$0", "get$enteredView", 0, 0, 107, "enteredView"],
    handleUpDown$1: [function(receiver, e) {
      var t1, t2;
      t1 = J.getInterceptor$x(e);
      if (t1.get$keyCode(e) === 38) {
        if (J.$gt$n(receiver.currentIndex, 0)) {
          t2 = J.$sub$n(receiver.currentIndex, 1);
          receiver.currentIndex = t2;
          (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#search" + H.S(t2)).parentElement.focus();
        } else if (J.$eq(receiver.currentIndex, 0) === true)
          (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#q").focus();
        t1.preventDefault$0(e);
      } else if (t1.get$keyCode(e) === 40) {
        if (J.$lt$n(receiver.currentIndex, J.$sub$n(J.get$length$asx(receiver._search0$__$results), 1))) {
          t2 = J.$add$ns(receiver.currentIndex, 1);
          receiver.currentIndex = t2;
          (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#search" + H.S(t2)).parentElement.focus();
        }
        t1.preventDefault$0(e);
      } else if (t1.get$keyCode(e) === 13) {
        this.onSubmitCallback$3(receiver, e, null, (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#search" + H.S(receiver.currentIndex)));
        t1.preventDefault$0(e);
      }
    }, "call$1", "get$handleUpDown", 2, 0, 753, 18, "handleUpDown"],
    shortcutHandler$1: [function(receiver, $event) {
      var t1, t2;
      t1 = J.getInterceptor$x($event);
      if (t1.get$keyCode($event) === 51 && t1.get$ctrlKey($event) === true) {
        (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#q").focus();
        t1.preventDefault$0($event);
      } else {
        if (receiver._search0$__$isFocused !== true)
          t2 = t1.get$keyCode($event) === 83 || t1.get$keyCode($event) === 191;
        else
          t2 = false;
        if (t2) {
          (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#q").focus();
          J.select$0$x((receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#q"));
          t1.preventDefault$0($event);
        } else if (t1.get$keyCode($event) === 27) {
          receiver._search0$__$searchQuery = this.notifyPropertyChange$3(receiver, C.Symbol_searchQuery, receiver._search0$__$searchQuery, "");
          J.set$value$x((receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#q"), "");
          t1.preventDefault$0($event);
        }
      }
    }, "call$1", "get$shortcutHandler", 2, 0, 753, 349, "shortcutHandler"],
    get$searchBox: [function(receiver) {
      return (receiver.shadowRoot || receiver.webkitShadowRoot).querySelector("#q");
    }, null, null, 1, 0, 108, "searchBox"],
    "@": function() {
      return [C.CustomTag_CbU];
    },
    static: {Search$created: [function(receiver) {
        var t1, t2, t3, t4, t5;
        t1 = R._toObservableDeep([]);
        t2 = $.get$Polymer__polymerSyntax();
        t3 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t4 = J.JSString;
        t5 = W.Element;
        t5 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t4, t5), null, null), [t4, t5]);
        receiver._search0$__$searchQuery = "";
        receiver._search0$__$isFocused = false;
        receiver._search0$__$results = t1;
        receiver.currentIndex = -1;
        receiver.polymer$Polymer$syntax = t2;
        receiver.polymer$Polymer$_shadowRoots = t3;
        receiver.polymer$Polymer$$ = t5;
        C.Search_methods.Element$created$0(receiver);
        C.Search_methods.PolymerElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new Search$created" /* new Search$created:0:0 */]}
  },
  "+Search": [754],
  PolymerElement_ChangeNotifier3: {
    "": "PolymerElement+ChangeNotifier;",
    $isObservable: true
  },
  Search_onBlurCallback_closure: {
    "": "Closure:271;this_0-77",
    call$1: [function(_) {
      return J._updateDropdownOpen$0$x(this.this_0);
    }, "call$1", null, 2, 0, 271, 335, "call"],
    $isFunction: true
  },
  "+Search_onBlurCallback_closure": [449]
}],
["web.type", "type.dart", , N, {
  "": "",
  TypeElement: {
    "": ["PolymerElement_ChangeNotifier4;_type$__$type%-492,_child%-712,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$type: [function(receiver) {
      return receiver._type$__$type;
    }, null, null, 1, 0, 755, "type", 132, 674],
    set$type: [function(receiver, value) {
      receiver._type$__$type = this.notifyPropertyChange$3(receiver, C.Symbol_type, receiver._type$__$type, value);
    }, null, null, 3, 0, 756, 23, "type", 132],
    enteredView$0: [function(receiver) {
      A.Polymer.prototype.enteredView$0.call(this, receiver);
      this.typeChanged$0(receiver);
      $.get$searchIndex().onLoad$1(0, this.get$typeChanged(receiver));
    }, "call$0", "get$enteredView", 0, 0, 108, "enteredView"],
    typeChanged$0: [function(receiver) {
      var t1 = receiver._child;
      if (t1 != null)
        J.remove$0$ax(t1);
      t1 = receiver._type$__$type;
      if (t1 == null || t1.get$isDynamic() === true)
        return;
      t1 = N.TypeElement_createInner(receiver._type$__$type);
      receiver._child = t1;
      receiver.appendChild(t1);
    }, "call$0", "get$typeChanged", 0, 0, 107, "typeChanged"],
    "@": function() {
      return [C.CustomTag_Lx8];
    },
    static: {TypeElement_TypeElement: [function() {
        return W._ElementFactoryProvider_createElement_tag("dartdoc-type", null);
      }, "call$0", null, 0, 0, 352, "new TypeElement" /* new TypeElement:0:0 */], TypeElement$created: [function(receiver) {
        var t1, t2, t3, t4;
        t1 = $.get$Polymer__polymerSyntax();
        t2 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t3 = J.JSString;
        t4 = W.Element;
        t4 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t3, t4), null, null), [t3, t4]);
        receiver.polymer$Polymer$syntax = t1;
        receiver.polymer$Polymer$_shadowRoots = t2;
        receiver.polymer$Polymer$$ = t4;
        C.TypeElement_methods.Element$created$0(receiver);
        C.TypeElement_methods.PolymerElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new TypeElement$created" /* new TypeElement$created:0:0 */], TypeElement_createInner: [function(type) {
        var span, t1, e, t2, element;
        span = document.createElement("span", null);
        t1 = J.getInterceptor$x(span);
        t1.get$classes(span).add$1(0, "type");
        if ($.get$searchIndex()._search$_map.containsKey$1(type.get$outer().get$qualifiedName()) === true) {
          e = document.createElement("a", null);
          e.textContent = type.get$outer().get$simpleType();
          J.set$href$x(e, "#!" + H.S(J.get$location$x(type.get$outer())));
          span.appendChild(e);
        } else
          t1.insertAdjacentText$2(span, "beforeend", type.get$outer().get$simpleType());
        if (J.get$isNotEmpty$asx(type.get$inner())) {
          t1.insertAdjacentText$2(span, "beforeend", "<");
          for (t2 = J.get$iterator$ax(type.get$inner()); t2.moveNext$0();) {
            element = t2.get$current();
            if (J.$eq(element, J.get$first$ax(type.get$inner())) !== true)
              t1.insertAdjacentText$2(span, "beforeend", ", ");
            span.appendChild(N.TypeElement_createInner(element));
          }
          t1.insertAdjacentText$2(span, "beforeend", ">");
        }
        return span;
      }, "call$1", "TypeElement_createInner$closure", 2, 0, 353, 11, "createInner"]}
  },
  "+TypeElement": [757],
  PolymerElement_ChangeNotifier4: {
    "": "PolymerElement+ChangeNotifier;",
    $isObservable: true
  }
}],
["web.typedef", "typedef.dart", , E, {
  "": "",
  TypedefElement: {
    "": ["MemberElement;_item-448,_member$__$idName-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_pathname-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    wrongClass$1: [function(receiver, newItem) {
      var t1 = J.getInterceptor(newItem);
      return typeof newItem !== "object" || newItem === null || !t1.$isTypedef;
    }, "call$1", "get$wrongClass", 2, 0, 271, 705, "wrongClass"],
    get$defaultItem: [function(receiver) {
      return $.get$TypedefElement__defaultItem();
    }, null, null, 1, 0, 108, "defaultItem"],
    get$prefixedLocation: [function(receiver) {
      var t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      }
      return "#!" + H.S(J.get$location$x(J.get$type$x(t1)));
    }, null, null, 1, 0, 435, "prefixedLocation"],
    "@": function() {
      return [C.CustomTag_mLm];
    },
    static: {"": "TypedefElement__defaultItem<-77", TypedefElement$created: [function(receiver) {
        var t1, t2, t3, t4, t5;
        t1 = J.get$pathname$x(C.Window_methods.get$location(window));
        t2 = $.get$Polymer__polymerSyntax();
        t3 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t4 = J.JSString;
        t5 = W.Element;
        t5 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t4, t5), null, null), [t4, t5]);
        receiver._pathname = t1;
        receiver.polymer$Polymer$syntax = t2;
        receiver.polymer$Polymer$_shadowRoots = t3;
        receiver.polymer$Polymer$$ = t5;
        C.TypedefElement_methods.Element$created$0(receiver);
        C.TypedefElement_methods.PolymerElement$created$0(receiver);
        C.TypedefElement_methods.MemberElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new TypedefElement$created" /* new TypedefElement$created:0:0 */]}
  },
  "+TypedefElement": [710]
}],
["web.variable", "variable.dart", , F, {
  "": "",
  VariableElement: {
    "": ["InheritedElement_ChangeNotifier0;_variable$__$annotations%-475,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_member$__$inheritedFrom-474,_member$__$commentFrom-474,_member$__$isInherited-451,_member$__$hasInheritedComment-451,_member$__$shouldShowComment-451,_member$__$shouldShowCommentFrom-451,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_item-448,_member$__$idName-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_pathname-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$annotations: [function(receiver) {
      return receiver._variable$__$annotations;
    }, null, null, 1, 0, 673, "annotations", 132, 436],
    set$annotations: [function(receiver, value) {
      receiver._variable$__$annotations = this.notifyPropertyChange$3(receiver, C.Symbol_annotations, receiver._variable$__$annotations, value);
    }, null, null, 3, 0, 675, 23, "annotations", 132],
    get$defaultItem: [function(receiver) {
      return $.get$VariableElement__defaultItem();
    }, null, null, 1, 0, 108, "defaultItem"],
    wrongClass$1: [function(receiver, newItem) {
      var t1 = J.getInterceptor(newItem);
      return typeof newItem !== "object" || newItem === null || !t1.$isVariable;
    }, "call$1", "get$wrongClass", 2, 0, 271, 705, "wrongClass"],
    "@": function() {
      return [C.CustomTag_9IG];
    },
    static: {"": "VariableElement__defaultItem<-77", VariableElement$created: [function(receiver) {
        var t1, t2, t3, t4, t5;
        t1 = J.get$pathname$x(C.Window_methods.get$location(window));
        t2 = $.get$Polymer__polymerSyntax();
        t3 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t4 = J.JSString;
        t5 = W.Element;
        t5 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t4, t5), null, null), [t4, t5]);
        receiver._pathname = t1;
        receiver.polymer$Polymer$syntax = t2;
        receiver.polymer$Polymer$_shadowRoots = t3;
        receiver.polymer$Polymer$$ = t5;
        C.VariableElement_methods.Element$created$0(receiver);
        C.VariableElement_methods.PolymerElement$created$0(receiver);
        C.VariableElement_methods.MemberElement$created$0(receiver);
        C.VariableElement_methods.InheritedElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new VariableElement$created" /* new VariableElement$created:0:0 */]}
  },
  "+VariableElement": [758],
  InheritedElement_ChangeNotifier0: {
    "": "InheritedElement+ChangeNotifier;",
    $isObservable: true
  }
}],
["web.variable_heading", "variable-heading.dart", , E, {
  "": "",
  VariableHeading: {
    "": ["MemberElement_ChangeNotifier0;_variable_heading$__$getter%-434,_variable_heading$__$name%-434,_variable_heading$__$isNotSetter%-451,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_item-448,_member$__$idName-434,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,_pathname-77,change_notifier$ChangeNotifier$_changes,change_notifier$ChangeNotifier$_records,polymer$Polymer$_declaration,polymer$Polymer$_observers,polymer$Polymer$_unbound,polymer$Polymer$_unbindAllJob,polymer$Polymer$_propertyObserver,polymer$Polymer$syntax,polymer$Polymer$_shadowRoots,polymer$Polymer$$-631", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, function() {
      return [C.C_Reflectable];
    }],
    get$getter: [function(receiver) {
      return receiver._variable_heading$__$getter;
    }, null, null, 1, 0, 435, "getter", 132, 436],
    set$getter: [function(receiver, value) {
      receiver._variable_heading$__$getter = this.notifyPropertyChange$3(receiver, C.Symbol_getter, receiver._variable_heading$__$getter, value);
    }, null, null, 3, 0, 25, 23, "getter", 132],
    get$name: [function(receiver) {
      return receiver._variable_heading$__$name;
    }, null, null, 1, 0, 435, "name", 132, 436],
    set$name: [function(receiver, value) {
      receiver._variable_heading$__$name = this.notifyPropertyChange$3(receiver, C.Symbol_name, receiver._variable_heading$__$name, value);
    }, null, null, 3, 0, 25, 23, "name", 132],
    get$isNotSetter: [function(receiver) {
      return receiver._variable_heading$__$isNotSetter;
    }, null, null, 1, 0, 437, "isNotSetter", 132, 436],
    set$isNotSetter: [function(receiver, value) {
      receiver._variable_heading$__$isNotSetter = this.notifyPropertyChange$3(receiver, C.Symbol_isNotSetter, receiver._variable_heading$__$isNotSetter, value);
    }, null, null, 3, 0, 525, 23, "isNotSetter", 132],
    get$defaultItem: [function(receiver) {
      return $.get$VariableHeading__defaultItem();
    }, null, null, 1, 0, 108, "defaultItem"],
    wrongClass$1: [function(receiver, newItem) {
      var t1 = J.getInterceptor(newItem);
      return typeof newItem !== "object" || newItem === null || !t1.$isVariable;
    }, "call$1", "get$wrongClass", 2, 0, 271, 705, "wrongClass"],
    itemChanged$0: [function(receiver) {
      var t1, t2, n;
      U.MemberElement.prototype.itemChanged$0.call(this, receiver);
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
        t2 = t1;
      } else
        t2 = t1;
      if (t1 == null)
        return;
      if (t2 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      } else
        t1 = t2;
      t1 = t1.get$isGetter() === true ? "get " : "";
      receiver._variable_heading$__$getter = this.notifyPropertyChange$3(receiver, C.Symbol_getter, receiver._variable_heading$__$getter, t1);
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      }
      t1 = t1.get$isSetter();
      receiver._variable_heading$__$isNotSetter = this.notifyPropertyChange$3(receiver, C.Symbol_isNotSetter, receiver._variable_heading$__$isNotSetter, t1 !== true);
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      }
      n = J.get$name$x(t1);
      t1 = receiver._item;
      if (t1 == null) {
        t1 = this.get$defaultItem(receiver);
        receiver._item = t1;
      }
      if (t1.get$isSetter() === true) {
        t1 = J.getInterceptor$asx(n);
        t1 = t1.substring$2(n, 0, J.$sub$n(t1.get$length(n), 1));
      } else
        t1 = n;
      receiver._variable_heading$__$name = this.notifyPropertyChange$3(receiver, C.Symbol_name, receiver._variable_heading$__$name, t1);
    }, "call$0", "get$itemChanged", 0, 0, 108, "itemChanged"],
    "@": function() {
      return [C.CustomTag_lnn];
    },
    static: {"": "VariableHeading__defaultItem<-77", VariableHeading$created: [function(receiver) {
        var t1, t2, t3, t4, t5;
        t1 = J.get$pathname$x(C.Window_methods.get$location(window));
        t2 = $.get$Polymer__polymerSyntax();
        t3 = P.HashMap_HashMap(null, null, null, J.JSString, W.ShadowRoot);
        t4 = J.JSString;
        t5 = W.Element;
        t5 = H.setRuntimeTypeInfo(new V.ObservableMap(P.HashMap_HashMap(null, null, null, t4, t5), null, null), [t4, t5]);
        receiver._pathname = t1;
        receiver.polymer$Polymer$syntax = t2;
        receiver.polymer$Polymer$_shadowRoots = t3;
        receiver.polymer$Polymer$$ = t5;
        C.VariableHeading_methods.Element$created$0(receiver);
        C.VariableHeading_methods.PolymerElement$created$0(receiver);
        C.VariableHeading_methods.MemberElement$created$0(receiver);
        return receiver;
      }, null, null, 0, 0, 108, "new VariableHeading$created" /* new VariableHeading$created:0:0 */]}
  },
  "+VariableHeading": [759],
  MemberElement_ChangeNotifier0: {
    "": "MemberElement+ChangeNotifier;",
    $isObservable: true
  }
}],
["yaml", "package:yaml/yaml.dart", , O, {
  "": "",
  loadYamlStream: [function(yaml) {
    return H.setRuntimeTypeInfo(new H.MappedListIterable(new V.Parser(yaml, 0, J.get$length$asx(yaml), 0, 0, false, 0, 0, 0, "document", H.setRuntimeTypeInfo(["document"], [J.JSString]), H.setRuntimeTypeInfo(new V._RangeMap(H.setRuntimeTypeInfo([], [[V._Pair, V._Range, null]])), [null]), null, null, false).l_yamlStream$0(), new O.loadYamlStream_closure()), [null, null]).toList$0(0);
  }, "call$1", "loadYamlStream$closure", 2, 0, null, 123],
  loadYamlStream_closure: {
    "": "Closure:271;",
    call$1: [function(doc) {
      var t1 = doc.visit$1(new T.Composer(doc, H.setRuntimeTypeInfo(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [J.JSString, R.Node0]), 0));
      return t1.visit$1(new T.Constructor(t1, H.setRuntimeTypeInfo(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [J.JSString, null])));
    }, "call$1", null, 2, 0, null, 318, "call"],
    $isFunction: true
  }
}],
["yaml_exception", "package:yaml/src/yaml_exception.dart", , K, {
  "": "",
  YamlException: {
    "": "Object;_msg",
    toString$0: [function(_) {
      return this._msg;
    }, "call$0", "get$toString", 0, 0, null],
    static: {YamlException$: function(_msg) {
        return new K.YamlException(_msg);
      }}
  }
}],
["yaml_map", "package:yaml/src/yaml_map.dart", , L, {
  "": "",
  YamlMap: {
    "": "Object;_yaml_map$_map",
    addAll$1: [function(_, other) {
      J.forEach$1$ax(other, new L.YamlMap_addAll_closure(this));
    }, "call$1", "get$addAll", 2, 0, null, 104],
    containsValue$1: [function(value) {
      return this._yaml_map$_map.containsValue$1(value);
    }, "call$1", "get$containsValue", 2, 0, null, 23],
    containsKey$1: [function(key) {
      return this._yaml_map$_map.containsKey$1(this._wrapKey$1(key));
    }, "call$1", "get$containsKey", 2, 0, null, 42],
    $index: [function(_, key) {
      return this._yaml_map$_map.$index(0, this._wrapKey$1(key));
    }, "call$1", "get$[]", 2, 0, null, 42],
    $indexSet: [function(_, key, value) {
      this._yaml_map$_map.$indexSet(0, this._wrapKey$1(key), value);
    }, "call$2", "get$[]=", 4, 0, null, 42, 23],
    putIfAbsent$2: [function(key, ifAbsent) {
      return this._yaml_map$_map.putIfAbsent$2(this._wrapKey$1(key), ifAbsent);
    }, "call$2", "get$putIfAbsent", 4, 0, null, 42, 427],
    remove$1: [function(_, key) {
      return this._yaml_map$_map.remove$1(0, this._wrapKey$1(key));
    }, "call$1", "get$remove", 2, 0, null, 42],
    clear$0: [function(_) {
      return this._yaml_map$_map.clear$0(0);
    }, "call$0", "get$clear", 0, 0, null],
    forEach$1: [function(_, f) {
      return this._yaml_map$_map.forEach$1(0, new L.YamlMap_forEach_closure(this, f));
    }, "call$1", "get$forEach", 2, 0, null, 154],
    get$keys: function() {
      return J.map$1$ax(this._yaml_map$_map.get$keys(), this.get$_unwrapKey());
    },
    get$values: function(_) {
      var t1 = this._yaml_map$_map;
      return t1.get$values(t1);
    },
    get$length: function(_) {
      var t1 = this._yaml_map$_map;
      return t1.get$length(t1);
    },
    get$isEmpty: function(_) {
      var t1 = this._yaml_map$_map;
      return t1.get$isEmpty(t1);
    },
    get$isNotEmpty: function(_) {
      var t1 = this._yaml_map$_map;
      return t1.get$isNotEmpty(t1);
    },
    toString$0: [function(_) {
      return this._yaml_map$_map.toString$0(0);
    }, "call$0", "get$toString", 0, 0, null],
    get$hashCode: function(_) {
      return N.hashCodeFor(this._yaml_map$_map, null);
    },
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$isYamlMap)
        return false;
      return G.deepEquals(this, other, null, null);
    }, "call$1", "get$==", 2, 0, null, 104],
    _wrapKey$1: [function(obj) {
      var t1;
      if (obj != null)
        if (typeof obj !== "boolean") {
          t1 = J.getInterceptor(obj);
          if (typeof obj !== "object" || obj === null || obj.constructor !== Array && !t1.$isList) {
            if (typeof obj === "number")
              obj.isNan$0();
            t1 = typeof obj !== "object" || obj === null || !t1.$isMap || typeof obj === "object" && obj !== null && !!t1.$isYamlMap;
          } else
            t1 = false;
        } else
          t1 = false;
      else
        t1 = false;
      if (t1)
        return obj;
      else {
        t1 = J.getInterceptor(obj);
        if (typeof obj === "object" && obj !== null && !!t1.$isMap)
          return new L.YamlMap(obj);
      }
      return new L._WrappedHashKey(obj);
    }, "call$1", "get$_wrapKey", 2, 0, null, 93],
    _unwrapKey$1: [function(obj) {
      var t1 = J.getInterceptor(obj);
      return typeof obj === "object" && obj !== null && !!t1.$is_WrappedHashKey ? obj.value : obj;
    }, "call$1", "get$_unwrapKey", 2, 0, 271, 93],
    $isYamlMap: true,
    $isMap: true,
    $asMap: function() {
      return [null, null];
    }
  },
  YamlMap_addAll_closure: {
    "": "Closure:426;this_0",
    call$2: [function(key, value) {
      var t1 = this.this_0;
      t1._yaml_map$_map.$indexSet(0, t1._wrapKey$1(key), value);
    }, "call$2", null, 4, 0, null, 42, 23, "call"],
    $isFunction: true
  },
  YamlMap_forEach_closure: {
    "": "Closure:426;this_0,f_1",
    call$2: [function(k, v) {
      var t1 = J.getInterceptor(k);
      t1 = typeof k === "object" && k !== null && !!t1.$is_WrappedHashKey ? k.value : k;
      return this.f_1.call$2(t1, v);
    }, "call$2", null, 4, 0, null, 501, 326, "call"],
    $isFunction: true
  },
  _WrappedHashKey: {
    "": "Object;value>",
    get$hashCode: function(_) {
      return N.hashCodeFor(this.value, null);
    },
    toString$0: [function(_) {
      return J.toString$0(this.value);
    }, "call$0", "get$toString", 0, 0, null],
    $eq: [function(_, other) {
      var t1;
      if (other == null)
        return false;
      t1 = J.getInterceptor(other);
      if (typeof other !== "object" || other === null || !t1.$is_WrappedHashKey)
        return false;
      return G.deepEquals(this.value, other.value, null, null);
    }, "call$1", "get$==", 2, 0, null, 104],
    $is_WrappedHashKey: true
  }
}],
]);
Isolate.$finishClasses($$, $, null);
$$ = null;

// Runtime type support
J.JSString.$isString = true;
J.JSString.$isComparable = true;
J.JSString.$asComparable = [J.JSString];
J.JSString.$isObject = true;
J.JSNumber.$isnum = true;
J.JSNumber.$isComparable = true;
J.JSNumber.$asComparable = [J.JSNumber];
J.JSNumber.$isObject = true;
J.JSInt.$isint = true;
J.JSInt.$isnum = true;
J.JSInt.$isComparable = true;
J.JSInt.$asComparable = [J.JSNumber];
J.JSInt.$isComparable = true;
J.JSInt.$asComparable = [J.JSNumber];
J.JSInt.$isComparable = true;
J.JSInt.$asComparable = [J.JSNumber];
J.JSInt.$isObject = true;
J.JSDouble.$isdouble = true;
J.JSDouble.$isnum = true;
J.JSDouble.$isComparable = true;
J.JSDouble.$asComparable = [J.JSNumber];
J.JSDouble.$isComparable = true;
J.JSDouble.$asComparable = [J.JSNumber];
J.JSDouble.$isObject = true;
W.Node.$isNode = true;
W.Node.$isEventTarget = true;
W.Node.$isObject = true;
W.Entry.$isObject = true;
W.SpeechInputResult.$isSpeechInputResult = true;
W.SpeechInputResult.$isObject = true;
W.SpeechRecognitionResult.$isSpeechRecognitionResult = true;
W.SpeechRecognitionResult.$isObject = true;
P.Duration.$isDuration = true;
P.Duration.$isComparable = true;
P.Duration.$asComparable = [P.Duration];
P.Duration.$isObject = true;
P.Match.$isObject = true;
J.JSArray.$isList = true;
J.JSArray.$isIterable = true;
J.JSArray.$isObject = true;
P.Object.$isObject = true;
N.Level.$isComparable = true;
N.Level.$asComparable = [N.Level];
N.Level.$isObject = true;
W.Element.$isElement = true;
W.Element.$isNode = true;
W.Element.$isEventTarget = true;
W.Element.$isEventTarget = true;
W.Element.$isObject = true;
K.IndexedValue.$isIndexedValue = true;
K.IndexedValue.$isObject = true;
P._SplayTreeNode.$isObject = true;
U.EmptyExpression.$isExpression = true;
U.EmptyExpression.$isObject = true;
U.Invoke.$isExpression = true;
U.Invoke.$isObject = true;
U.Index.$isIndex = true;
U.Index.$isExpression = true;
U.Index.$isObject = true;
U.InExpression.$isExpression = true;
U.InExpression.$isObject = true;
U.BinaryOperator.$isExpression = true;
U.BinaryOperator.$isObject = true;
U.Getter.$isGetter = true;
U.Getter.$isExpression = true;
U.Getter.$isObject = true;
U.Literal.$isExpression = true;
U.Literal.$isObject = true;
U.UnaryOperator.$isExpression = true;
U.UnaryOperator.$isObject = true;
U.Identifier.$isIdentifier = true;
U.Identifier.$isExpression = true;
U.Identifier.$isObject = true;
U.MapLiteralEntry.$isExpression = true;
U.MapLiteralEntry.$isObject = true;
U.MapLiteral.$isExpression = true;
U.MapLiteral.$isObject = true;
J.JSBool.$isbool = true;
J.JSBool.$isObject = true;
P.Symbol.$isSymbol = true;
P.Symbol.$isObject = true;
W.TransitionEvent.$isEvent = true;
W.TransitionEvent.$isObject = true;
A.PolymerDeclaration.$isPolymerDeclaration = true;
A.PolymerDeclaration.$isElement = true;
A.PolymerDeclaration.$isNode = true;
A.PolymerDeclaration.$isEventTarget = true;
A.PolymerDeclaration.$isEventTarget = true;
A.PolymerDeclaration.$isObject = true;
P.MethodMirror.$isMirror = true;
P.MethodMirror.$isObject = true;
H.JsMethodMirror.$isMirror = true;
H.JsMethodMirror.$isMirror = true;
H.JsMethodMirror.$isMirror = true;
H.JsMethodMirror.$isObject = true;
P.LibraryMirror.$isLibraryMirror = true;
P.LibraryMirror.$isMirror = true;
P.LibraryMirror.$isMirror = true;
P.LibraryMirror.$isObject = true;
P.InstanceMirror.$isInstanceMirror = true;
P.InstanceMirror.$isMirror = true;
P.InstanceMirror.$isObject = true;
P.DeclarationMirror.$isMirror = true;
P.DeclarationMirror.$isObject = true;
P.Mirror.$isMirror = true;
P.Mirror.$isObject = true;
P.VariableMirror.$isMirror = true;
P.VariableMirror.$isObject = true;
P.TypeVariableMirror.$isMirror = true;
P.TypeVariableMirror.$isObject = true;
P.TypeMirror.$isMirror = true;
P.TypeMirror.$isObject = true;
P.ClassMirror.$isClassMirror = true;
P.ClassMirror.$isMirror = true;
P.ClassMirror.$isMirror = true;
P.ClassMirror.$isObject = true;
P.ParameterMirror.$isMirror = true;
P.ParameterMirror.$isObject = true;
X.NodeBinding.$isObject = true;
N.Logger.$isObject = true;
W.Event.$isEvent = true;
W.Event.$isObject = true;
T.ChangeRecord.$isChangeRecord = true;
T.ChangeRecord.$isObject = true;
W.HttpRequest.$isEventTarget = true;
W.HttpRequest.$isObject = true;
W.ProgressEvent.$isEvent = true;
W.ProgressEvent.$isObject = true;
P.Uri.$isUri = true;
P.Uri.$isObject = true;
P.StreamSubscription.$isStreamSubscription = true;
P.StreamSubscription.$isObject = true;
F.Observable.$isObject = true;
P.Stream.$isStream = true;
P.Stream.$isObject = true;
W.MouseEvent.$isMouseEvent = true;
W.MouseEvent.$isEvent = true;
W.MouseEvent.$isObject = true;
G.ListChangeRecord.$isListChangeRecord = true;
G.ListChangeRecord.$isObject = true;
M._BoundNodes.$isObject = true;
A.Polymer.$isElement = true;
A.Polymer.$isNode = true;
A.Polymer.$isEventTarget = true;
A.Polymer.$isEventTarget = true;
A.Polymer.$isObject = true;
A._PropertyValue.$isObject = true;
V._Pair.$is_Pair = true;
V._Pair.$isObject = true;
V._Range.$is_Range = true;
V._Range.$isObject = true;
R.Node0.$isNode0 = true;
R.Node0.$isObject = true;
W.KeyboardEvent.$isKeyboardEvent = true;
W.KeyboardEvent.$isEvent = true;
W.KeyboardEvent.$isObject = true;
W.NodeValidator.$isNodeValidator = true;
W.NodeValidator.$isObject = true;
P.Type.$isObject = true;
W.Document.$isNode = true;
W.Document.$isEventTarget = true;
W.Document.$isObject = true;
H.RawReceivePortImpl.$isObject = true;
H._IsolateEvent.$isObject = true;
H._IsolateContext.$isObject = true;
W.ShadowRoot.$isNode = true;
W.ShadowRoot.$isEventTarget = true;
W.ShadowRoot.$isObject = true;
Y.Token.$isObject = true;
U.Expression.$isExpression = true;
U.Expression.$isObject = true;
B.SearchResult.$isComparable = true;
B.SearchResult.$asComparable = [null];
B.SearchResult.$isObject = true;
B.Hit.$isObject = true;
W.PopStateEvent.$isEvent = true;
W.PopStateEvent.$isObject = true;
P.StackTrace.$isStackTrace = true;
P.StackTrace.$isObject = true;
E.Item.$isItem = true;
E.Item.$isObject = true;
P._BufferingStreamSubscription.$is_BufferingStreamSubscription = true;
P._BufferingStreamSubscription.$is_EventSink = true;
P._BufferingStreamSubscription.$isStreamSubscription = true;
P._BufferingStreamSubscription.$isObject = true;
P._BroadcastSubscription.$is_BroadcastSubscription = true;
P._BroadcastSubscription.$is_BufferingStreamSubscription = true;
P._BroadcastSubscription.$is_EventSink = true;
P._BroadcastSubscription.$isStreamSubscription = true;
P._BroadcastSubscription.$isObject = true;
E.Class.$isClass = true;
E.Class.$isItem = true;
E.Class.$isObject = true;
H.JsLibraryMirror.$isJsLibraryMirror = true;
H.JsLibraryMirror.$isLibraryMirror = true;
H.JsLibraryMirror.$isMirror = true;
H.JsLibraryMirror.$isMirror = true;
H.JsLibraryMirror.$isMirror = true;
H.JsLibraryMirror.$isMirror = true;
H.JsLibraryMirror.$isMirror = true;
H.JsLibraryMirror.$isObject = true;
P.ZoneDelegate.$isZoneDelegate = true;
P.ZoneDelegate.$isObject = true;
P.Zone.$isZone = true;
P.Zone.$isObject = true;
P._SplayTreeMapNode.$is_SplayTreeMapNode = true;
P._SplayTreeMapNode.$isObject = true;
P.ZoneSpecification.$isZoneSpecification = true;
P.ZoneSpecification.$isObject = true;
P.Map.$isMap = true;
P.Map.$isObject = true;
W.EventTarget.$isEventTarget = true;
W.EventTarget.$isObject = true;
P.Timer.$isTimer = true;
P.Timer.$isObject = true;
P.Comparable.$isComparable = true;
P.Comparable.$isObject = true;
W._Html5NodeValidator.$is_Html5NodeValidator = true;
W._Html5NodeValidator.$isNodeValidator = true;
W._Html5NodeValidator.$isObject = true;
P.Iterable.$isIterable = true;
P.Iterable.$isObject = true;
P.Future.$isFuture = true;
P.Future.$isObject = true;
P._DelayedEvent.$is_DelayedEvent = true;
P._DelayedEvent.$isObject = true;
P._EventSink.$is_EventSink = true;
P._EventSink.$isObject = true;
P.DateTime.$isDateTime = true;
P.DateTime.$isComparable = true;
P.DateTime.$asComparable = [null];
P.DateTime.$isObject = true;
P.Function.$isFunction = true;
P.Function.$isObject = true;
W.SpeechRecognitionAlternative.$isSpeechRecognitionAlternative = true;
W.SpeechRecognitionAlternative.$isObject = true;
R.MappingNode.$isMappingNode = true;
R.MappingNode.$isNode0 = true;
R.MappingNode.$isObject = true;
R.ScalarNode.$isScalarNode = true;
R.ScalarNode.$isNode0 = true;
R.ScalarNode.$isObject = true;
O.Visitor.$isVisitor = true;
O.Visitor.$isObject = true;
Y.DocsLocation.$isDocsLocation = true;
Y.DocsLocation.$isObject = true;
$.$signature_void_ = {func: "void_", void: true};
$.$signature_args2 = {func: "args2", args: [null, null]};
$.$signature_args1 = {func: "args1", args: [null]};
$.$signature_Object__Object = {func: "Object__Object", ret: P.Object, args: [P.Object]};
// getInterceptor methods
J.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return J.JSInt.prototype;
    return J.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return J.JSNull.prototype;
  if (typeof receiver == "boolean")
    return J.JSBool.prototype;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$asx = function(receiver) {
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$ax = function(receiver) {
  if (receiver == null)
    return receiver;
  if (receiver.constructor == Array)
    return J.JSArray.prototype;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.getInterceptor$n = function(receiver) {
  if (typeof receiver == "number")
    return J.JSNumber.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$ns = function(receiver) {
  if (typeof receiver == "number")
    return J.JSNumber.prototype;
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$s = function(receiver) {
  if (typeof receiver == "string")
    return J.JSString.prototype;
  if (receiver == null)
    return receiver;
  if (!(receiver instanceof P.Object))
    return J.UnknownJavaScriptObject.prototype;
  return receiver;
};
J.getInterceptor$x = function(receiver) {
  if (receiver == null)
    return receiver;
  if (typeof receiver != "object")
    return receiver;
  if (receiver instanceof P.Object)
    return receiver;
  return J.getNativeInterceptor(receiver);
};
J.$add$ns = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver + a0;
  return J.getInterceptor$ns(receiver).$add(receiver, a0);
};
J.$and$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver & a0) >>> 0;
  return J.getInterceptor$n(receiver).$and(receiver, a0);
};
J.$div$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver / a0;
  return J.getInterceptor$n(receiver).$div(receiver, a0);
};
J.$eq = function(receiver, a0) {
  if (receiver == null)
    return a0 == null;
  if (typeof receiver != "object")
    return a0 != null && receiver === a0;
  return J.getInterceptor(receiver).$eq(receiver, a0);
};
J.$ge$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver >= a0;
  return J.getInterceptor$n(receiver).$ge(receiver, a0);
};
J.$gt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver > a0;
  return J.getInterceptor$n(receiver).$gt(receiver, a0);
};
J.$index$asx = function(receiver, a0) {
  if (receiver.constructor == Array || typeof receiver == "string" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
    if (a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0];
  return J.getInterceptor$asx(receiver).$index(receiver, a0);
};
J.$indexSet$ax = function(receiver, a0, a1) {
  if ((receiver.constructor == Array || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName])) && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
    return receiver[a0] = a1;
  return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
};
J.$le$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver <= a0;
  return J.getInterceptor$n(receiver).$le(receiver, a0);
};
J.$lt$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver < a0;
  return J.getInterceptor$n(receiver).$lt(receiver, a0);
};
J.$mul$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver * a0;
  return J.getInterceptor$n(receiver).$mul(receiver, a0);
};
J.$negate$n = function(receiver) {
  if (typeof receiver == "number")
    return -receiver;
  return J.getInterceptor$n(receiver).$negate(receiver);
};
J.$shl$n = function(receiver, a0) {
  return J.getInterceptor$n(receiver).$shl(receiver, a0);
};
J.$sub$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return receiver - a0;
  return J.getInterceptor$n(receiver).$sub(receiver, a0);
};
J.$tdiv$n = function(receiver, a0) {
  return J.getInterceptor$n(receiver).$tdiv(receiver, a0);
};
J.$xor$n = function(receiver, a0) {
  if (typeof receiver == "number" && typeof a0 == "number")
    return (receiver ^ a0) >>> 0;
  return J.getInterceptor$n(receiver).$xor(receiver, a0);
};
J.__isolate_helper$_add$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).__isolate_helper$_add$1(receiver, a0);
};
J._async$_add$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver)._async$_add$1(receiver, a0);
};
J._initCustomEvent$4$x = function(receiver, a0, a1, a2, a3) {
  return J.getInterceptor$x(receiver)._initCustomEvent$4(receiver, a0, a1, a2, a3);
};
J._initMouseEvent$15$x = function(receiver, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {
  return J.getInterceptor$x(receiver)._initMouseEvent$15(receiver, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
};
J._loadCategories$0$x = function(receiver) {
  return J.getInterceptor$x(receiver)._loadCategories$0(receiver);
};
J._logging$_publish$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver)._logging$_publish$1(receiver, a0);
};
J._replaceChild$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver)._replaceChild$2(receiver, a0, a1);
};
J._update$0$x = function(receiver) {
  return J.getInterceptor$x(receiver)._update$0(receiver);
};
J._updateActiveLibrary$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver)._updateActiveLibrary$1(receiver, a0);
};
J._updateBreadcrumbs$0$x = function(receiver) {
  return J.getInterceptor$x(receiver)._updateBreadcrumbs$0(receiver);
};
J._updateDropdownOpen$0$x = function(receiver) {
  return J.getInterceptor$x(receiver)._updateDropdownOpen$0(receiver);
};
J.accept$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).accept$1(receiver, a0);
};
J.add$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).add$1(receiver, a0);
};
J.addAll$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).addAll$1(receiver, a0);
};
J.addEventListener$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
};
J.any$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).any$1(receiver, a0);
};
J.append$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).append$1(receiver, a0);
};
J.attributeChanged$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).attributeChanged$3(receiver, a0, a1, a2);
};
J.bind$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).bind$3(receiver, a0, a1, a2);
};
J.categoryChanged$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).categoryChanged$0(receiver);
};
J.clear$0$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).clear$0(receiver);
};
J.close$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).close$0(receiver);
};
J.codeUnitAt$1$s = function(receiver, a0) {
  return J.getInterceptor$s(receiver).codeUnitAt$1(receiver, a0);
};
J.collapseSearchAndOptionsIfNeeded$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).collapseSearchAndOptionsIfNeeded$0(receiver);
};
J.compareTo$1$ns = function(receiver, a0) {
  return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
};
J.contains$1$asx = function(receiver, a0) {
  return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
};
J.contains$2$asx = function(receiver, a0, a1) {
  return J.getInterceptor$asx(receiver).contains$2(receiver, a0, a1);
};
J.createDocumentFragment$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).createDocumentFragment$0(receiver);
};
J.createFragment$2$treeSanitizer$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).createFragment$2$treeSanitizer(receiver, a0, a1);
};
J.createFragment$3$treeSanitizer$validator$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).createFragment$3$treeSanitizer$validator(receiver, a0, a1, a2);
};
J.disconnect$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).disconnect$0(receiver);
};
J.elementAt$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
};
J.endsWith$1$s = function(receiver, a0) {
  return J.getInterceptor$s(receiver).endsWith$1(receiver, a0);
};
J.enteredView$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).enteredView$0(receiver);
};
J.firstWhere$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).firstWhere$1(receiver, a0);
};
J.firstWhere$2$orElse$ax = function(receiver, a0, a1) {
  return J.getInterceptor$ax(receiver).firstWhere$2$orElse(receiver, a0, a1);
};
J.fold$2$ax = function(receiver, a0, a1) {
  return J.getInterceptor$ax(receiver).fold$2(receiver, a0, a1);
};
J.forEach$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
};
J.get$_children$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$_children(receiver);
};
J.get$_eventDelegates$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$_eventDelegates(receiver);
};
J.get$_instanceAttributes$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$_instanceAttributes(receiver);
};
J.get$_name$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$_name(receiver);
};
J.get$_observe$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$_observe(receiver);
};
J.get$_publish$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$_publish(receiver);
};
J.get$_publishLC$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$_publishLC(receiver);
};
J.get$annotations$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$annotations(receiver);
};
J.get$attributes$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$attributes(receiver);
};
J.get$bindings$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$bindings(receiver);
};
J.get$bound$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$bound(receiver);
};
J.get$changes$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$changes(receiver);
};
J.get$checked$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$checked(receiver);
};
J.get$children$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$children(receiver);
};
J.get$className$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$className(receiver);
};
J.get$classes$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$classes(receiver);
};
J.get$codeUnits$s = function(receiver) {
  return J.getInterceptor$s(receiver).get$codeUnits(receiver);
};
J.get$commentFrom$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$commentFrom(receiver);
};
J.get$content$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$content(receiver);
};
J.get$dataset$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$dataset(receiver);
};
J.get$display$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$display(receiver);
};
J.get$error$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$error(receiver);
};
J.get$first$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).get$first(receiver);
};
J.get$firstChild$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$firstChild(receiver);
};
J.get$hash$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$hash(receiver);
};
J.get$hashCode$ = function(receiver) {
  return J.getInterceptor(receiver).get$hashCode(receiver);
};
J.get$host$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$host(receiver);
};
J.get$href$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$href(receiver);
};
J.get$id$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$id(receiver);
};
J.get$index$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$index(receiver);
};
J.get$inheritedFrom$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$inheritedFrom(receiver);
};
J.get$isEmpty$asx = function(receiver) {
  return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
};
J.get$isFinal$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$isFinal(receiver);
};
J.get$isFocused$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$isFocused(receiver);
};
J.get$isNotEmpty$asx = function(receiver) {
  return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
};
J.get$iterator$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).get$iterator(receiver);
};
J.get$key$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$key(receiver);
};
J.get$kind$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$kind(receiver);
};
J.get$last$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).get$last(receiver);
};
J.get$left$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$left(receiver);
};
J.get$length$asx = function(receiver) {
  return J.getInterceptor$asx(receiver).get$length(receiver);
};
J.get$location$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$location(receiver);
};
J.get$lower$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$lower(receiver);
};
J.get$marginEdge$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$marginEdge(receiver);
};
J.get$message$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$message(receiver);
};
J.get$method$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$method(receiver);
};
J.get$name$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$name(receiver);
};
J.get$newValue$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$newValue(receiver);
};
J.get$nextNode$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$nextNode(receiver);
};
J.get$nodes$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$nodes(receiver);
};
J.get$offsetHeight$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$offsetHeight(receiver);
};
J.get$offsetWidth$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$offsetWidth(receiver);
};
J.get$on$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$on(receiver);
};
J.get$ownerDocument$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$ownerDocument(receiver);
};
J.get$parameters$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$parameters(receiver);
};
J.get$parent$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$parent(receiver);
};
J.get$parentNode$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$parentNode(receiver);
};
J.get$path$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$path(receiver);
};
J.get$pathname$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$pathname(receiver);
};
J.get$position$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$position(receiver);
};
J.get$responseText$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$responseText(receiver);
};
J.get$reversed$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).get$reversed(receiver);
};
J.get$runtimeType$ = function(receiver) {
  return J.getInterceptor(receiver).get$runtimeType(receiver);
};
J.get$search$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$search(receiver);
};
J.get$selectedIndex$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$selectedIndex(receiver);
};
J.get$superDeclaration$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$superDeclaration(receiver);
};
J.get$tagName$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$tagName(receiver);
};
J.get$target$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$target(receiver);
};
J.get$timeStamp$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$timeStamp(receiver);
};
J.get$top$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$top(receiver);
};
J.get$type$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$type(receiver);
};
J.get$value$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$value(receiver);
};
J.get$values$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$values(receiver);
};
J.get$variables$x = function(receiver) {
  return J.getInterceptor$x(receiver).get$variables(receiver);
};
J.getBoundingClientRect$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).getBoundingClientRect$0(receiver);
};
J.getComputedStyle$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).getComputedStyle$0(receiver);
};
J.getElementById$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).getElementById$1(receiver, a0);
};
J.hideOrShowNavigation$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).hideOrShowNavigation$0(receiver);
};
J.hideOrShowNavigation$1$hide$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).hideOrShowNavigation$1$hide(receiver, a0);
};
J.importNode$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).importNode$2(receiver, a0, a1);
};
J.indexOf$1$asx = function(receiver, a0) {
  return J.getInterceptor$asx(receiver).indexOf$1(receiver, a0);
};
J.insert$2$ax = function(receiver, a0, a1) {
  return J.getInterceptor$ax(receiver).insert$2(receiver, a0, a1);
};
J.insertAdjacentText$2$x = function(receiver, a0, a1) {
  return J.getInterceptor$x(receiver).insertAdjacentText$2(receiver, a0, a1);
};
J.item$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).item$1(receiver, a0);
};
J.join$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).join$1(receiver, a0);
};
J.leftView$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).leftView$0(receiver);
};
J.load$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).load$0(receiver);
};
J.map$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).map$1(receiver, a0);
};
J.matchAsPrefix$2$s = function(receiver, a0, a1) {
  return J.getInterceptor$s(receiver).matchAsPrefix$2(receiver, a0, a1);
};
J.matches$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).matches$1(receiver, a0);
};
J.matchesWithAncestors$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).matchesWithAncestors$1(receiver, a0);
};
J.noSuchMethod$1 = function(receiver, a0) {
  return J.getInterceptor(receiver).noSuchMethod$1(receiver, a0);
};
J.observeArrayValue$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).observeArrayValue$3(receiver, a0, a1, a2);
};
J.print$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).print$1(receiver, a0);
};
J.queryAll$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).queryAll$1(receiver, a0);
};
J.querySelectorAll$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).querySelectorAll$1(receiver, a0);
};
J.reflectPropertyToAttribute$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).reflectPropertyToAttribute$1(receiver, a0);
};
J.registerWhenReady$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).registerWhenReady$0(receiver);
};
J.remove$0$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).remove$0(receiver);
};
J.remove$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).remove$1(receiver, a0);
};
J.removeEventListener$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).removeEventListener$3(receiver, a0, a1, a2);
};
J.removeLast$0$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).removeLast$0(receiver);
};
J.replace$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).replace$1(receiver, a0);
};
J.replaceAll$2$s = function(receiver, a0, a1) {
  return J.getInterceptor$s(receiver).replaceAll$2(receiver, a0, a1);
};
J.replaceWith$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
};
J.round$0$n = function(receiver) {
  return J.getInterceptor$n(receiver).round$0(receiver);
};
J.select$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).select$0(receiver);
};
J.send$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).send$1(receiver, a0);
};
J.set$_dartDetail$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$_dartDetail(receiver, value);
};
J.set$_isExpanded$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$_isExpanded(receiver, value);
};
J.set$_selector$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$_selector(receiver, value);
};
J.set$checked$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$checked(receiver, value);
};
J.set$className$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$className(receiver, value);
};
J.set$classes$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$classes(receiver, value);
};
J.set$content$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$content(receiver, value);
};
J.set$display$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$display(receiver, value);
};
J.set$href$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$href(receiver, value);
};
J.set$length$asx = function(receiver, value) {
  return J.getInterceptor$asx(receiver).set$length(receiver, value);
};
J.set$newValue$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$newValue(receiver, value);
};
J.set$paddingTop$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$paddingTop(receiver, value);
};
J.set$position$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$position(receiver, value);
};
J.set$selectedIndex$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$selectedIndex(receiver, value);
};
J.set$tag$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$tag(receiver, value);
};
J.set$text$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$text(receiver, value);
};
J.set$type$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$type(receiver, value);
};
J.set$value$x = function(receiver, value) {
  return J.getInterceptor$x(receiver).set$value(receiver, value);
};
J.showSubclass$3$x = function(receiver, a0, a1, a2) {
  return J.getInterceptor$x(receiver).showSubclass$3(receiver, a0, a1, a2);
};
J.skip$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).skip$1(receiver, a0);
};
J.sort$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).sort$1(receiver, a0);
};
J.split$1$s = function(receiver, a0) {
  return J.getInterceptor$s(receiver).split$1(receiver, a0);
};
J.startsWith$1$s = function(receiver, a0) {
  return J.getInterceptor$s(receiver).startsWith$1(receiver, a0);
};
J.substring$1$s = function(receiver, a0) {
  return J.getInterceptor$s(receiver).substring$1(receiver, a0);
};
J.substring$2$s = function(receiver, a0, a1) {
  return J.getInterceptor$s(receiver).substring$2(receiver, a0, a1);
};
J.toList$0$ax = function(receiver) {
  return J.getInterceptor$ax(receiver).toList$0(receiver);
};
J.toList$1$growable$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).toList$1$growable(receiver, a0);
};
J.toLowerCase$0$s = function(receiver) {
  return J.getInterceptor$s(receiver).toLowerCase$0(receiver);
};
J.toString$0 = function(receiver) {
  return J.getInterceptor(receiver).toString$0(receiver);
};
J.toStringAsExponential$1$n = function(receiver, a0) {
  return J.getInterceptor$n(receiver).toStringAsExponential$1(receiver, a0);
};
J.toUpperCase$0$s = function(receiver) {
  return J.getInterceptor$s(receiver).toUpperCase$0(receiver);
};
J.trim$0$s = function(receiver) {
  return J.getInterceptor$s(receiver).trim$0(receiver);
};
J.unbind$1$x = function(receiver, a0) {
  return J.getInterceptor$x(receiver).unbind$1(receiver, a0);
};
J.unbindAll$0$x = function(receiver) {
  return J.getInterceptor$x(receiver).unbindAll$0(receiver);
};
J.where$1$ax = function(receiver, a0) {
  return J.getInterceptor$ax(receiver).where$1(receiver, a0);
};
C.AnnotationElement_methods = Y.AnnotationElement.prototype;
C.Breadcrumbs_methods = U.Breadcrumbs.prototype;
C.C_DynamicRuntimeType = new H.DynamicRuntimeType();
C.C_EmptyExpression = new U.EmptyExpression();
C.C_EmptyIterator = new H.EmptyIterator();
C.C_JSArray = new J.JSArray();
C.C_JSBool = new J.JSBool();
C.C_JSDouble = new J.JSDouble();
C.C_JSInt = new J.JSInt();
C.C_JSNumber = new J.JSNumber();
C.C_JSString = new J.JSString();
C.C_JsonCodec = new P.JsonCodec();
C.C_ObservableProperty = new K.ObservableProperty();
C.C_PublishedProperty = new A.PublishedProperty();
C.C_Reflectable = new K.Reflectable();
C.C__DelayedDone = new P._DelayedDone();
C.C__InitMethodAnnotation = new A._InitMethodAnnotation();
C.C__RootZone = new P._RootZone();
C.C__RootZoneSpecification = new P._RootZoneSpecification();
C.CategoryElement_methods = O.CategoryElement.prototype;
C.ClassElement_methods = T.ClassElement.prototype;
C.CommentElement_methods = S.CommentElement.prototype;
C.CustomTag_46y = new A.CustomTag("dartdoc-comment");
C.CustomTag_6L0 = new A.CustomTag("dartdoc-breadcrumbs");
C.CustomTag_8h9 = new A.CustomTag("dartdoc-annotation");
C.CustomTag_9IG = new A.CustomTag("dartdoc-variable");
C.CustomTag_CbU = new A.CustomTag("search-box");
C.CustomTag_KD4 = new A.CustomTag("dartdoc-library");
C.CustomTag_Lx8 = new A.CustomTag("dartdoc-type");
C.CustomTag_QKd = new A.CustomTag("dartdoc-library-panel");
C.CustomTag_UBp = new A.CustomTag("dartdoc-minimap");
C.CustomTag_VO9 = new A.CustomTag("dartdoc-homepage");
C.CustomTag_W3i = new A.CustomTag("dartdoc-page");
C.CustomTag_Why = new A.CustomTag("dartdoc-category");
C.CustomTag_bh5 = new A.CustomTag("dartdoc-minimap-class");
C.CustomTag_dsQ = new A.CustomTag("dartdoc-parameter");
C.CustomTag_h3l = new A.CustomTag("dartdoc-item");
C.CustomTag_kaS = new A.CustomTag("dartdoc-link");
C.CustomTag_lnn = new A.CustomTag("variable-heading");
C.CustomTag_mLm = new A.CustomTag("dartdoc-typedef");
C.CustomTag_o0y = new A.CustomTag("search-result");
C.CustomTag_qRH = new A.CustomTag("dartdoc-class");
C.CustomTag_qRa = new A.CustomTag("dartdoc-main");
C.CustomTag_txY = new A.CustomTag("dartdoc-minimap-library");
C.DartdocElement_methods = U.DartdocElement.prototype;
C.Duration_0 = new P.Duration(0);
C.EventStreamProvider_blur = H.setRuntimeTypeInfo(new W.EventStreamProvider("blur"), [W.Event]);
C.EventStreamProvider_change = H.setRuntimeTypeInfo(new W.EventStreamProvider("change"), [W.Event]);
C.EventStreamProvider_click = H.setRuntimeTypeInfo(new W.EventStreamProvider("click"), [W.MouseEvent]);
C.EventStreamProvider_error = H.setRuntimeTypeInfo(new W.EventStreamProvider("error"), [W.ProgressEvent]);
C.EventStreamProvider_focus = H.setRuntimeTypeInfo(new W.EventStreamProvider("focus"), [W.Event]);
C.EventStreamProvider_hashchange = H.setRuntimeTypeInfo(new W.EventStreamProvider("hashchange"), [W.Event]);
C.EventStreamProvider_input = H.setRuntimeTypeInfo(new W.EventStreamProvider("input"), [W.Event]);
C.EventStreamProvider_keydown = H.setRuntimeTypeInfo(new W.EventStreamProvider("keydown"), [W.KeyboardEvent]);
C.EventStreamProvider_load = H.setRuntimeTypeInfo(new W.EventStreamProvider("load"), [W.ProgressEvent]);
C.EventStreamProvider_popstate = H.setRuntimeTypeInfo(new W.EventStreamProvider("popstate"), [W.PopStateEvent]);
C.EventStreamProvider_resize = H.setRuntimeTypeInfo(new W.EventStreamProvider("resize"), [W.Event]);
C.HomeElement_methods = Z.HomeElement.prototype;
C.HttpRequest_methods = W.HttpRequest.prototype;
C.InheritedElement_methods = U.InheritedElement.prototype;
C.ItemElement_methods = M.ItemElement.prototype;
C.JSArray_methods = J.JSArray.prototype;
C.JSDouble_methods = J.JSDouble.prototype;
C.JSInt_methods = J.JSInt.prototype;
C.JSNull_methods = J.JSNull.prototype;
C.JSNumber_methods = J.JSNumber.prototype;
C.JSString_methods = J.JSString.prototype;
C.JS_CONST_0 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
C.JS_CONST_Fs4 = function(hooks) { return hooks; }
;
C.JS_CONST_IX5 = function getTagFallback(o) {
  var constructor = o.constructor;
  if (typeof constructor == "function") {
    var name = constructor.name;
    if (typeof name == "string"
        && name !== ""
        && name !== "Object"
        && name !== "Function.prototype") {
      return name;
    }
  }
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
C.JS_CONST_QJm = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
C.JS_CONST_U4w = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
C.JS_CONST_aQP = function() {
  function typeNameInChrome(o) {
    var name = o.constructor.name;
    if (name) return name;
    var s = Object.prototype.toString.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = Object.prototype.toString.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: typeNameInChrome,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
C.JS_CONST_gkc = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
C.JS_CONST_rr7 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
C.JsonDecoder_null = new P.JsonDecoder(null);
C.Level_FINER_400 = new N.Level("FINER", 400);
C.Level_FINE_500 = new N.Level("FINE", 500);
C.Level_INFO_800 = new N.Level("INFO", 800);
C.Level_WARNING_900 = new N.Level("WARNING", 900);
C.LibraryElement_methods = G.LibraryElement.prototype;
C.LibraryPanel_methods = E.LibraryPanel.prototype;
C.LinkElement_methods = Q.LinkElement0.prototype;
C.C_DefaultEquality = new Z.DefaultEquality();
C.ListEquality_DefaultEquality = new Z.ListEquality(C.C_DefaultEquality);
Isolate.makeConstantList = function(list) {
  list.immutable$list = init;
  list.fixed$length = init;
  return list;
};
C.List_127_2047_65535_1114111 = H.setRuntimeTypeInfo(Isolate.makeConstantList([127, 2047, 65535, 1114111]), [J.JSInt]);
C.List_1GN = H.setRuntimeTypeInfo(Isolate.makeConstantList(["*::class", "*::dir", "*::draggable", "*::hidden", "*::id", "*::inert", "*::itemprop", "*::itemref", "*::itemscope", "*::lang", "*::spellcheck", "*::title", "*::translate", "A::accesskey", "A::coords", "A::hreflang", "A::name", "A::shape", "A::tabindex", "A::target", "A::type", "AREA::accesskey", "AREA::alt", "AREA::coords", "AREA::nohref", "AREA::shape", "AREA::tabindex", "AREA::target", "AUDIO::controls", "AUDIO::loop", "AUDIO::mediagroup", "AUDIO::muted", "AUDIO::preload", "BDO::dir", "BODY::alink", "BODY::bgcolor", "BODY::link", "BODY::text", "BODY::vlink", "BR::clear", "BUTTON::accesskey", "BUTTON::disabled", "BUTTON::name", "BUTTON::tabindex", "BUTTON::type", "BUTTON::value", "CANVAS::height", "CANVAS::width", "CAPTION::align", "COL::align", "COL::char", "COL::charoff", "COL::span", "COL::valign", "COL::width", "COLGROUP::align", "COLGROUP::char", "COLGROUP::charoff", "COLGROUP::span", "COLGROUP::valign", "COLGROUP::width", "COMMAND::checked", "COMMAND::command", "COMMAND::disabled", "COMMAND::label", "COMMAND::radiogroup", "COMMAND::type", "DATA::value", "DEL::datetime", "DETAILS::open", "DIR::compact", "DIV::align", "DL::compact", "FIELDSET::disabled", "FONT::color", "FONT::face", "FONT::size", "FORM::accept", "FORM::autocomplete", "FORM::enctype", "FORM::method", "FORM::name", "FORM::novalidate", "FORM::target", "FRAME::name", "H1::align", "H2::align", "H3::align", "H4::align", "H5::align", "H6::align", "HR::align", "HR::noshade", "HR::size", "HR::width", "HTML::version", "IFRAME::align", "IFRAME::frameborder", "IFRAME::height", "IFRAME::marginheight", "IFRAME::marginwidth", "IFRAME::width", "IMG::align", "IMG::alt", "IMG::border", "IMG::height", "IMG::hspace", "IMG::ismap", "IMG::name", "IMG::usemap", "IMG::vspace", "IMG::width", "INPUT::accept", "INPUT::accesskey", "INPUT::align", "INPUT::alt", "INPUT::autocomplete", "INPUT::checked", "INPUT::disabled", "INPUT::inputmode", "INPUT::ismap", "INPUT::list", "INPUT::max", "INPUT::maxlength", "INPUT::min", "INPUT::multiple", "INPUT::name", "INPUT::placeholder", "INPUT::readonly", "INPUT::required", "INPUT::size", "INPUT::step", "INPUT::tabindex", "INPUT::type", "INPUT::usemap", "INPUT::value", "INS::datetime", "KEYGEN::disabled", "KEYGEN::keytype", "KEYGEN::name", "LABEL::accesskey", "LABEL::for", "LEGEND::accesskey", "LEGEND::align", "LI::type", "LI::value", "LINK::sizes", "MAP::name", "MENU::compact", "MENU::label", "MENU::type", "METER::high", "METER::low", "METER::max", "METER::min", "METER::value", "OBJECT::typemustmatch", "OL::compact", "OL::reversed", "OL::start", "OL::type", "OPTGROUP::disabled", "OPTGROUP::label", "OPTION::disabled", "OPTION::label", "OPTION::selected", "OPTION::value", "OUTPUT::for", "OUTPUT::name", "P::align", "PRE::width", "PROGRESS::max", "PROGRESS::min", "PROGRESS::value", "SELECT::autocomplete", "SELECT::disabled", "SELECT::multiple", "SELECT::name", "SELECT::required", "SELECT::size", "SELECT::tabindex", "SOURCE::type", "TABLE::align", "TABLE::bgcolor", "TABLE::border", "TABLE::cellpadding", "TABLE::cellspacing", "TABLE::frame", "TABLE::rules", "TABLE::summary", "TABLE::width", "TBODY::align", "TBODY::char", "TBODY::charoff", "TBODY::valign", "TD::abbr", "TD::align", "TD::axis", "TD::bgcolor", "TD::char", "TD::charoff", "TD::colspan", "TD::headers", "TD::height", "TD::nowrap", "TD::rowspan", "TD::scope", "TD::valign", "TD::width", "TEXTAREA::accesskey", "TEXTAREA::autocomplete", "TEXTAREA::cols", "TEXTAREA::disabled", "TEXTAREA::inputmode", "TEXTAREA::name", "TEXTAREA::placeholder", "TEXTAREA::readonly", "TEXTAREA::required", "TEXTAREA::rows", "TEXTAREA::tabindex", "TEXTAREA::wrap", "TFOOT::align", "TFOOT::char", "TFOOT::charoff", "TFOOT::valign", "TH::abbr", "TH::align", "TH::axis", "TH::bgcolor", "TH::char", "TH::charoff", "TH::colspan", "TH::headers", "TH::height", "TH::nowrap", "TH::rowspan", "TH::scope", "TH::valign", "TH::width", "THEAD::align", "THEAD::char", "THEAD::charoff", "THEAD::valign", "TR::align", "TR::bgcolor", "TR::char", "TR::charoff", "TR::valign", "TRACK::default", "TRACK::kind", "TRACK::label", "TRACK::srclang", "UL::compact", "UL::type", "VIDEO::controls", "VIDEO::height", "VIDEO::loop", "VIDEO::mediagroup", "VIDEO::muted", "VIDEO::preload", "VIDEO::width"]), [J.JSString]);
C.List_6Pr = Isolate.makeConstantList([0, 0, 26624, 1023, 0, 0, 65534, 2047]);
C.List_CVk = Isolate.makeConstantList([0, 0, 63450, 45055, 65535, 34815, 65534, 18431]);
C.List_JYB = Isolate.makeConstantList([0, 0, 26624, 1023, 65534, 2047, 65534, 2047]);
C.List_Ss1 = Isolate.makeConstantList(["method", "operator", "getter", "setter", "variable", "constructor", "property"]);
C.List_UiL = Isolate.makeConstantList([43, 45, 42, 47, 33, 38, 60, 61, 62, 63, 94, 124]);
C.List_Ynd = Isolate.makeConstantList(["==", "!=", "<=", ">=", "||", "&&"]);
C.List_empty = Isolate.makeConstantList([]);
C.List_empty0 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [P.TypeVariableMirror]);
C.List_empty1 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [P.TypeMirror]);
C.List_empty2 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [J.JSString]);
C.List_empty3 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [P.ClassMirror]);
C.List_in_this = Isolate.makeConstantList(["in", "this"]);
C.List_nxB = Isolate.makeConstantList([0, 0, 24576, 1023, 65534, 34815, 65534, 18431]);
C.List_qg4 = Isolate.makeConstantList([0, 0, 32722, 12287, 65535, 34815, 65534, 18431]);
C.List_wSV = H.setRuntimeTypeInfo(Isolate.makeConstantList(["bind", "if", "ref", "repeat", "syntax"]), [J.JSString]);
C.List_ww8 = Isolate.makeConstantList([40, 41, 91, 93, 123, 125]);
C.List_yrN = H.setRuntimeTypeInfo(Isolate.makeConstantList(["A::href", "AREA::href", "BLOCKQUOTE::cite", "BODY::background", "COMMAND::icon", "DEL::cite", "FORM::action", "IMG::src", "INPUT::src", "INS::cite", "Q::cite", "VIDEO::poster"]), [J.JSString]);
C.MainElement_methods = A.MainElement.prototype;
C.List_05B = Isolate.makeConstantList(["caption", "col", "colgroup", "option", "optgroup", "tbody", "td", "tfoot", "th", "thead", "tr"]);
C.Map_05eTF = new H.ConstantStringMap(11, {caption: null, col: null, colgroup: null, option: null, optgroup: null, tbody: null, td: null, tfoot: null, th: null, thead: null, tr: null}, C.List_05B);
C.List_48l = Isolate.makeConstantList(["webkitanimationstart", "webkitanimationend", "webkittransitionend", "domfocusout", "domfocusin", "animationend", "animationiteration", "animationstart", "doubleclick", "fullscreenchange", "fullscreenerror", "keyadded", "keyerror", "keymessage", "needkey", "speechchange"]);
C.Map_484CA = new H.ConstantStringMap(16, {webkitanimationstart: "webkitAnimationStart", webkitanimationend: "webkitAnimationEnd", webkittransitionend: "webkitTransitionEnd", domfocusout: "DOMFocusOut", domfocusin: "DOMFocusIn", animationend: "webkitAnimationEnd", animationiteration: "webkitAnimationIteration", animationstart: "webkitAnimationStart", doubleclick: "dblclick", fullscreenchange: "webkitfullscreenchange", fullscreenerror: "webkitfullscreenerror", keyadded: "webkitkeyadded", keyerror: "webkitkeyerror", keymessage: "webkitkeymessage", needkey: "webkitneedkey", speechchange: "webkitSpeechChange"}, C.List_48l);
C.List_FKi = Isolate.makeConstantList(["!", ":", ",", ")", "]", "}", "?", "||", "&&", "|", "^", "&", "!=", "==", ">=", ">", "<=", "<", "+", "-", "%", "/", "*", "(", "[", ".", "{"]);
C.Map_FKtZ4 = new H.ConstantStringMap(27, {"!": 0, ":": 0, ",": 0, ")": 0, "]": 0, "}": 0, "?": 1, "||": 2, "&&": 3, "|": 4, "^": 5, "&": 6, "!=": 7, "==": 7, ">=": 8, ">": 8, "<=": 8, "<": 8, "+": 9, "-": 9, "%": 10, "/": 10, "*": 10, "(": 11, "[": 11, ".": 11, "{": 11}, C.List_FKi);
C.List_c9P = Isolate.makeConstantList(["name", "extends", "constructor", "noscript", "attributes"]);
C.Map_c94aj = new H.ConstantStringMap(5, {name: 1, extends: 1, constructor: 1, noscript: 1, attributes: 1}, C.List_c9P);
C.List_gg9 = Isolate.makeConstantList(["library", "class", "typedef", "method", "getter", "setter", "operator", "property", "constructor"]);
C.Map_ggES6 = new H.ConstantStringMap(9, {library: 2, class: 2, typedef: 3, method: 4, getter: 4, setter: 4, operator: 4, property: 4, constructor: 4}, C.List_gg9);
C.List_enumerate = Isolate.makeConstantList(["enumerate"]);
C.Map_wgEsG = new H.ConstantStringMap(1, {enumerate: K.enumerate$closure()}, C.List_enumerate);
C.MemberElement_methods = U.MemberElement.prototype;
C.MethodElement_methods = X.MethodElement.prototype;
C.MinimapElementClass_methods = Q.MinimapElementClass.prototype;
C.MinimapElementLibrary_methods = N.MinimapElementLibrary.prototype;
C.MinimapElement_methods = Z.MinimapElement.prototype;
C.MutationObserver_methods = W.MutationObserver.prototype;
C.NodeList_methods = W.NodeList.prototype;
C.PageElement_methods = O.PageElement.prototype;
C.ParameterElement_methods = X.ParameterElement.prototype;
C.PolymerDeclaration_methods = A.PolymerDeclaration.prototype;
C.PolymerElement_methods = A.PolymerElement.prototype;
C.Result_methods = G.Result.prototype;
C.Search_methods = M.Search.prototype;
C.Symbol_46c = new H.Symbol0("dart.core.Object");
C.Symbol_4YB = new H.Symbol0("dart.core.DateTime");
C.Symbol_6TA = new H.Symbol0("dart.core.bool");
C.Symbol_Qyo = new H.Symbol0("[]");
C.Symbol_accordionStyle = new H.Symbol0("accordionStyle");
C.Symbol_annotations = new H.Symbol0("annotations");
C.Symbol_breadcrumbs = new H.Symbol0("breadcrumbs");
C.Symbol_buildIdentifier = new H.Symbol0("buildIdentifier");
C.Symbol_call = new H.Symbol0("call");
C.Symbol_camelCaseName = new H.Symbol0("camelCaseName");
C.Symbol_caretStyle = new H.Symbol0("caretStyle");
C.Symbol_category = new H.Symbol0("category");
C.Symbol_categoryLink = new H.Symbol0("categoryLink");
C.Symbol_comment = new H.Symbol0("comment");
C.Symbol_commentFrom = new H.Symbol0("commentFrom");
C.Symbol_constantModifier = new H.Symbol0("constantModifier");
C.Symbol_currentPage = new H.Symbol0("currentPage");
C.Symbol_descriptiveName = new H.Symbol0("descriptiveName");
C.Symbol_descriptiveType = new H.Symbol0("descriptiveType");
C.Symbol_divClass = new H.Symbol0("divClass");
C.Symbol_dropdownOpen = new H.Symbol0("dropdownOpen");
C.Symbol_dynamic = new H.Symbol0("dynamic");
C.Symbol_getter = new H.Symbol0("getter");
C.Symbol_hasInheritedComment = new H.Symbol0("hasInheritedComment");
C.Symbol_hasItems = new H.Symbol0("hasItems");
C.Symbol_hash = new H.Symbol0("hash");
C.Symbol_homePage = new H.Symbol0("homePage");
C.Symbol_iC9 = new H.Symbol0("dart.core.String");
C.Symbol_idName = new H.Symbol0("idName");
C.Symbol_inheritedFrom = new H.Symbol0("inheritedFrom");
C.Symbol_isClass = new H.Symbol0("isClass");
C.Symbol_isDesktop = new H.Symbol0("isDesktop");
C.Symbol_isEmpty = new H.Symbol0("isEmpty");
C.Symbol_isFocused = new H.Symbol0("isFocused");
C.Symbol_isHome = new H.Symbol0("isHome");
C.Symbol_isInherited = new H.Symbol0("isInherited");
C.Symbol_isLibrary = new H.Symbol0("isLibrary");
C.Symbol_isMethod = new H.Symbol0("isMethod");
C.Symbol_isMinimap = new H.Symbol0("isMinimap");
C.Symbol_isNotConstructor = new H.Symbol0("isNotConstructor");
C.Symbol_isNotEmpty = new H.Symbol0("isNotEmpty");
C.Symbol_isNotSetter = new H.Symbol0("isNotSetter");
C.Symbol_isPanel = new H.Symbol0("isPanel");
C.Symbol_isTypedef = new H.Symbol0("isTypedef");
C.Symbol_item = new H.Symbol0("item");
C.Symbol_items = new H.Symbol0("items");
C.Symbol_itemsToShow = new H.Symbol0("itemsToShow");
C.Symbol_lastCrumb = new H.Symbol0("lastCrumb");
C.Symbol_length = new H.Symbol0("length");
C.Symbol_libraries = new H.Symbol0("libraries");
C.Symbol_lineHeight = new H.Symbol0("lineHeight");
C.Symbol_mdn = new H.Symbol0("dart.core.int");
C.Symbol_methods = new H.Symbol0("methods");
C.Symbol_modifiers = new H.Symbol0("modifiers");
C.Symbol_name = new H.Symbol0("name");
C.Symbol_noSuchMethod = new H.Symbol0("noSuchMethod");
C.Symbol_outerLibrary = new H.Symbol0("outerLibrary");
C.Symbol_pageContentClass = new H.Symbol0("pageContentClass");
C.Symbol_parameters = new H.Symbol0("parameters");
C.Symbol_preview = new H.Symbol0("preview");
C.Symbol_registerCallback = new H.Symbol0("registerCallback");
C.Symbol_results = new H.Symbol0("results");
C.Symbol_s2s = new H.Symbol0("dart.core.Null");
C.Symbol_sMO = new H.Symbol0("dart.core.double");
C.Symbol_searchQuery = new H.Symbol0("searchQuery");
C.Symbol_sgp = new H.Symbol0("[]=");
C.Symbol_shouldShowClassMinimap = new H.Symbol0("shouldShowClassMinimap");
C.Symbol_shouldShowComment = new H.Symbol0("shouldShowComment");
C.Symbol_shouldShowCommentFrom = new H.Symbol0("shouldShowCommentFrom");
C.Symbol_shouldShowLibraryMinimap = new H.Symbol0("shouldShowLibraryMinimap");
C.Symbol_shouldShowLibraryPanel = new H.Symbol0("shouldShowLibraryPanel");
C.Symbol_showObjectMembers = new H.Symbol0("showObjectMembers");
C.Symbol_showOrHideInherited = new H.Symbol0("showOrHideInherited");
C.Symbol_showOrHideLibraries = new H.Symbol0("showOrHideLibraries");
C.Symbol_showOrHideMinimap = new H.Symbol0("showOrHideMinimap");
C.Symbol_showOrHideObjectMembers = new H.Symbol0("showOrHideObjectMembers");
C.Symbol_showOrHidePackages = new H.Symbol0("showOrHidePackages");
C.Symbol_showPkgLibraries = new H.Symbol0("showPkgLibraries");
C.Symbol_staticModifier = new H.Symbol0("staticModifier");
C.Symbol_stylizedName = new H.Symbol0("stylizedName");
C.Symbol_title = new H.Symbol0("title");
C.Symbol_type = new H.Symbol0("type");
C.Symbol_value = new H.Symbol0("value");
C.Symbol_variables = new H.Symbol0("variables");
C.Symbol_void = new H.Symbol0("void");
C.TypeElement_methods = N.TypeElement.prototype;
C.Type_pe4 = H.createRuntimeType('ObservableList');
C.TypeVariable_AuK = new H.TypeVariable(C.Type_pe4, "E", 0);
C.Type_2Vk = H.createRuntimeType('IndexedValue');
C.TypeVariable_bBG = new H.TypeVariable(C.Type_2Vk, "V", 0);
C.Type_ejQ = H.createRuntimeType('ObservableBox');
C.TypeVariable_mDP = new H.TypeVariable(C.Type_ejQ, "T", 0);
C.Type_caQ = H.createRuntimeType('ObservableMap');
C.TypeVariable_pea = new H.TypeVariable(C.Type_caQ, "V", 0);
C.TypeVariable_wAg = new H.TypeVariable(C.Type_caQ, "K", 0);
C.Type_0uu = H.createRuntimeType('MemberElement');
C.Type_6L0 = H.createRuntimeType('Uint8List');
C.Type_81T = H.createRuntimeType('MinimapElement');
C.Type_8TW = H.createRuntimeType('CategoryElement');
C.Type_8Wd = H.createRuntimeType('Search');
C.Type_AGr = H.createRuntimeType('JsTypeVariableMirror');
C.Type_AHF = H.createRuntimeType('NativeTypedArray');
C.Type_AHF0 = H.createRuntimeType('VariableElement');
C.Type_ASc = H.createRuntimeType('MethodElement');
C.Type_Art = H.createRuntimeType('Float32List');
C.Type_CAk = H.createRuntimeType('Uint16List');
C.Type_ECG = H.createRuntimeType('ParameterElement');
C.Type_EJ5 = H.createRuntimeType('LinkElement0');
C.Type_EOZ = H.createRuntimeType('TypedefElement');
C.Type_EQs = H.createRuntimeType('GlobalEventHandlers');
C.Type_EjN = H.createRuntimeType('Function');
C.Type_Ejg = H.createRuntimeType('String');
C.Type_EkK = H.createRuntimeType('AnnotationElement');
C.Type_EsU = H.createRuntimeType('bool');
C.Type_EsU0 = H.createRuntimeType('HomeElement');
C.Type_HqF = H.createRuntimeType('Object');
C.Type_I2I = H.createRuntimeType('PolymerElement');
C.Type_IFE = H.createRuntimeType('PageElement');
C.Type_IRg = H.createRuntimeType('MinimapElementLibrary');
C.Type_MhD = H.createRuntimeType('TypeElement');
C.Type_NlB = H.createRuntimeType('NativeTypedArrayOfDouble');
C.Type_QXN = H.createRuntimeType('LibraryPanel');
C.Type_QuW = H.createRuntimeType('Uint8ClampedList');
C.Type_QyU = H.createRuntimeType('WindowEventHandlers');
C.Type_SnA = H.createRuntimeType('int');
C.Type_UoK = H.createRuntimeType('Int16List');
C.Type_VEs = H.createRuntimeType('MinimapElementClass');
C.Type_XXD = H.createRuntimeType('JSObject');
C.Type_Y5Q = H.createRuntimeType('MainElement');
C.Type_Ybt = H.createRuntimeType('ClassElement');
C.Type_YnA = H.createRuntimeType('PolymerDeclaration');
C.Type_ZMt = H.createRuntimeType('VariableHeading');
C.Type_ckn = H.createRuntimeType('Float64List');
C.Type_dTZ = H.createRuntimeType('Int32List');
C.Type_dVs = H.createRuntimeType('DateTime');
C.Type_e5Z = H.createRuntimeType('dynamic');
C.Type_eZO = H.createRuntimeType('JSNull');
C.Type_fzi = H.createRuntimeType('CommentElement');
C.Type_irB = H.createRuntimeType('Uint32List');
C.Type_j7u = H.createRuntimeType('Result');
C.Type_mp3 = H.createRuntimeType('Int8List');
C.Type_nVD = H.createRuntimeType('DartdocElement');
C.Type_oGP = H.createRuntimeType('ByteData');
C.Type_q6V = H.createRuntimeType('Breadcrumbs');
C.Type_qq1 = H.createRuntimeType('double');
C.Type_rt6 = H.createRuntimeType('ItemElement');
C.Type_sBE = H.createRuntimeType('LibraryElement');
C.Type_wAg = H.createRuntimeType('ByteBuffer');
C.Type_wOW = H.createRuntimeType('NativeTypedArrayOfInt');
C.Type_wtN = H.createRuntimeType('InheritedElement');
C.TypedefElement_methods = E.TypedefElement.prototype;
C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
C.Utf8Codec_false = new P.Utf8Codec(false);
C.VariableElement_methods = F.VariableElement.prototype;
C.VariableHeading_methods = E.VariableHeading.prototype;
C.Window_methods = W.Window.prototype;
C._CustomEventStreamProvider__determineTransitionEventType = H.setRuntimeTypeInfo(new W._CustomEventStreamProvider(W.Element__determineTransitionEventType$closure()), [W.TransitionEvent]);
$.libraries_to_load = {};
$.controlPort = null;
$.RawReceivePortImpl__nextFreeId = 1;
$.Primitives_mirrorFunctionCacheName = "$cachedFunction";
$.Primitives_mirrorInvokeCacheName = "$cachedInvocation";
$.Closure_functionCounter = 0;
$.BoundClosure_selfFieldNameCache = null;
$.BoundClosure_receiverFieldNameCache = null;
$.RuntimeFunctionType_inAssert = false;
$.getTagFunction = null;
$.alternateTagFunction = null;
$.prototypeForTagFunction = null;
$.dispatchRecordsForInstanceTags = null;
$.interceptorsForUncacheableTags = null;
$.initNativeDispatchFlag = null;
$.printToZone = null;
$.classMirrors = null;
$._callbacksAreEnqueued = false;
$.Zone__current = C.C__RootZone;
$.Expando__keyCount = 0;
$.Element__parseDocument = null;
$.Element__parseRange = null;
$.Element__defaultValidator = null;
$.Element__defaultSanitizer = null;
$.isYaml = false;
$.Device__isOpera = null;
$.Device__isIE = null;
$.Device__isFirefox = null;
$.Device__isWebKit = null;
$.Device__cachedCssPrefix = null;
$.hierarchicalLoggingEnabled = false;
$._rootLevel = C.Level_INFO_800;
$.LogRecord__nextNumber = 0;
$._allObservablesCount = 0;
$._allObservables = null;
$._delivering = false;
$.Polymer__preparingElements = 0;
$._useDirtyChecking = true;
$.TemplateBindExtension__initStyles = null;
$.sourcePath = "docs/library_list.json";
$._dartdocMain = null;
$.location = null;
$.interceptedNames = ["$add", "$and", "$div", "$eq", "$ge", "$gt", "$index", "$indexSet", "$le", "$lt", "$mul", "$negate", "$shl", "$shr", "$sub", "$tdiv", "$xor", "CategoryElement$created$0", "ClassElement$created$0", "CommentElement$created$0", "Element$created$0", "InheritedElement$created$0", "MemberElement$created$0", "MinimapElement$created$0", "PolymerDeclaration$created$0", "PolymerElement$created$0", "Result$created$0", "__isolate_helper$_add$1", "_add$1", "_async$_add$1", "_checkIndex$2", "_checkSublistArguments$3", "_ensureRequestAnimationFrame$0", "_eval$_observe$1", "_getDescriptiveName$0", "_getDescriptiveType$0", "_getOuterLibrary$0", "_initCustomEvent$4", "_initMouseEvent$15", "_invalidIndex$2", "_loadCategories$0", "_logging$_publish$1", "_lowerCaseMap$1", "_onViewerChange$1", "_rangeCheck$2", "_replaceChild$2", "_replaceWithParameterReference$2", "_requestAnimationFrame$1", "_resolveLink$1", "_setLinkReference$2", "_setRangeFast$4", "_shlPositive$1", "_shrOtherPositive$1", "_tdivFast$1", "_update$0", "_updateActiveLibrary$1", "_updateBreadcrumbs$0", "_updateComment$0", "_updateDropdownOpen$0", "_updateHasItems$0", "accept$1", "accumulateInstanceAttributes$0", "add$1", "addAll$1", "addAttributeDelegates$1", "addEventListener$3", "addHostListeners$0", "addInterfaces$0", "addNodeListeners$3", "addParameters$3", "addSubclasses$0", "allMatches$1", "annotationsChanged$0", "any$1", "append$1", "asyncUnbindAll$0", "attributeChanged$3", "attributeToProperty$2", "bind$3", "cacheSheets$0", "cacheStyles$0", "cancelUnbindAll$0", "cancelUnbindAll$1$preventCascade", "categoryChanged$0", "clear$0", "clone$1", "close$0", "codeUnitAt$1", "collapseSearchAndOptionsIfNeeded$0", "compareTo$1", "complete$0", "complete$1", "contains$1", "contains$2", "copyInstanceAttributes$0", "createDocumentFragment$0", "createFragment$2$treeSanitizer", "createFragment$3$treeSanitizer$validator", "createShadowRoot$0", "cssTextForScope$1", "cssTextToScopeStyle$2", "defaultValue$1", "deliverChanges$0", "disconnect$0", "dispatchEvent$1", "dispatchMethod$3", "elementAt$1", "endsWith$1", "enteredView$0", "error$1", "findNodes$1", "findNodes$2", "fire$1", "fire$4$canBubble$detail$toNode", "firstWhere$1", "firstWhere$2$defaultValue", "firstWhere$2$orElse", "focus$0", "fold$2", "forEach$1", "get$$$", "get$MAX_SUBCLASSES_TO_SHOW", "get$__isExpanded", "get$__js_mirrors$_type", "get$_annotations$__$annotations", "get$_breadcrumbs$__$breadcrumbs", "get$_breadcrumbs$__$lastCrumb", "get$_buildIdentifier", "get$_category$__$accordionStyle", "get$_category$__$caretStyle", "get$_category$__$category", "get$_category$__$divClass", "get$_category$__$hasItems", "get$_category$__$items", "get$_category$__$lineHeight", "get$_category$__$methods", "get$_category$__$stylizedName", "get$_category$__$title", "get$_category$__$variables", "get$_child", "get$_children", "get$_comment$__$item", "get$_comment$__$preview", "get$_commentElement", "get$_dartDetail", "get$_defaultItem", "get$_eventDelegates", "get$_instanceAttributes", "get$_isExpanded", "get$_item", "get$_item$_defaultItem", "get$_library$_defaultItem", "get$_library$_loader", "get$_link$__$type", "get$_loader", "get$_main$__$pageContentClass", "get$_main$__$shouldShowClassMinimap", "get$_main$__$shouldShowLibraryMinimap", "get$_main$__$shouldShowLibraryPanel", "get$_main$__$showOrHideInherited", "get$_main$__$showOrHideLibraries", "get$_main$__$showOrHideMinimap", "get$_main$__$showOrHideObjectMembers", "get$_main$__$showOrHidePackages", "get$_member$__$commentFrom", "get$_member$__$hasInheritedComment", "get$_member$__$idName", "get$_member$__$inheritedFrom", "get$_member$__$isInherited", "get$_member$__$shouldShowComment", "get$_member$__$shouldShowCommentFrom", "get$_method$__$constantModifier", "get$_method$__$isNotConstructor", "get$_method$__$modifiers", "get$_method$__$staticModifier", "get$_method$_defaultItem", "get$_minimap_class$_defaultItem", "get$_minimap_element$__$camelCaseName", "get$_minimap_element$__$category", "get$_minimap_element$__$categoryLink", "get$_minimap_element$__$item", "get$_minimap_element$__$itemsToShow", "get$_minimap_library$_defaultItem", "get$_name", "get$_observe", "get$_openedAt", "get$_page$__$isClass", "get$_page$__$isHome", "get$_page$__$isLibrary", "get$_page$__$isMethod", "get$_page$__$isTypedef", "get$_page$__$item", "get$_parameters$__$parameters", "get$_pathname", "get$_publish", "get$_publishLC", "get$_results$__$descriptiveName", "get$_results$__$descriptiveType", "get$_results$__$item", "get$_results$__$outerLibrary", "get$_search0$__$dropdownOpen", "get$_search0$__$isFocused", "get$_search0$__$results", "get$_search0$__$searchQuery", "get$_selector", "get$_type$__$type", "get$_typedef$_defaultItem", "get$_variable$__$annotations", "get$_variable$_defaultItem", "get$_variable_heading$__$getter", "get$_variable_heading$__$isNotSetter", "get$_variable_heading$__$name", "get$_variable_heading$_defaultItem", "get$accordionStyle", "get$animationFrame", "get$annotations", "get$applyAuthorStyles", "get$attributes", "get$bindings", "get$bound", "get$breadcrumbs", "get$bubbles", "get$buildIdentifier", "get$camelCaseName", "get$caretStyle", "get$category", "get$categoryLink", "get$changes", "get$checked", "get$children", "get$className", "get$classes", "get$clear", "get$codeUnits", "get$commentFrom", "get$constantModifier", "get$content", "get$ctrlKey", "get$currentIndex", "get$dataset", "get$defaultItem", "get$defaultValue", "get$descriptiveName", "get$descriptiveType", "get$detail", "get$display", "get$divClass", "get$dropdownOpen", "get$entries", "get$error", "get$filter", "get$first", "get$firstChild", "get$form", "get$getter", "get$hasInheritedComment", "get$hasItems", "get$hasObservers", "get$hash", "get$hashCode", "get$height", "get$host", "get$hostname", "get$href", "get$id", "get$idName", "get$index", "get$inheritedFrom", "get$innerHtml", "get$isClass", "get$isEmpty", "get$isFinal", "get$isFocused", "get$isHome", "get$isInherited", "get$isLibrary", "get$isMethod", "get$isNaN", "get$isNegative", "get$isNotConstructor", "get$isNotEmpty", "get$isNotSetter", "get$isTypedef", "get$item", "get$items", "get$itemsToShow", "get$iterator", "get$key", "get$keyCode", "get$kind", "get$last", "get$lastCrumb", "get$lazyClasses", "get$lazyConstructors", "get$lazyErrors", "get$lazyFunctions", "get$lazyInstanceFunctions", "get$lazyInstanceVariables", "get$lazyOperators", "get$lazyStaticFunctions", "get$lazyStaticVariables", "get$lazyTypedefs", "get$lazyVariables", "get$left", "get$length", "get$lineHeight", "get$localName", "get$location", "get$lower", "get$map", "get$marginEdge", "get$membertype", "get$message", "get$method", "get$methods", "get$modifiers", "get$name", "get$newValue", "get$nextNode", "get$nodes", "get$offsetHeight", "get$offsetWidth", "get$oldValue", "get$on", "get$onChange", "get$onClick", "get$onInput", "get$operator", "get$originalPadding", "get$outerLibrary", "get$ownerDocument", "get$pageContentClass", "get$parameters", "get$parent", "get$parentNode", "get$path", "get$pathname", "get$port", "get$position", "get$prefixedLocation", "get$preview", "get$print", "get$protocol", "get$qualifiedname", "get$responseText", "get$results", "get$reversed", "get$right", "get$runtimeType", "get$search", "get$searchBox", "get$searchQuery", "get$selectedIndex", "get$shadowRoot", "get$shouldShowClassMinimap", "get$shouldShowComment", "get$shouldShowCommentFrom", "get$shouldShowLibraryMinimap", "get$shouldShowLibraryPanel", "get$showOrHideInherited", "get$showOrHideLibraries", "get$showOrHideMinimap", "get$showOrHideObjectMembers", "get$showOrHidePackages", "get$single", "get$src", "get$staticModifier", "get$stylizedName", "get$superDeclaration", "get$syntax", "get$tag", "get$tagName", "get$target", "get$templateContent", "get$text", "get$timeStamp", "get$title", "get$top", "get$type", "get$url", "get$value", "get$values", "get$variables", "get$viewer", "get$width", "getBoundingClientRect$0", "getComputedStyle$0", "getComputedStyle$1", "getElementById$1", "getPropertyValue$1", "getRange$2", "getter$2", "handleClick$1", "handleUpDown$1", "hash$1", "hideOptionsMenu$0", "hideOptionsMenuWhenClickedOutside$1", "hideOrShowNavigation$0", "hideOrShowNavigation$1$hide", "hideOrShowNavigation$2$hide$nav", "hideShow$3", "hostEventListener$1", "importNode$2", "index$2", "indexOf$1", "indexOf$2", "inferObservers$1", "insert$2", "insertAdjacentText$2", "insertBefore$2", "installLocalSheets$0", "item$1", "itemChanged$0", "items$1", "items$2$includeAllItems", "itemsChanged$0", "join$0", "join$1", "join$2", "join$8", "lastIndexOf$1", "lastIndexOf$2", "leftView$0", "lightFromTemplate$1", "load$0", "load$1", "locationValidInContext$1", "makeLink$2$hidden", "makeLinks$1", "makeLinks$2$hidden", "map$1", "marshalNodeReferences$1", "matchAsPrefix$1", "matchAsPrefix$2", "matches$1", "matchesWithAncestors$1", "methodsChanged$0", "navHideShow$3", "noSuchMethod$1", "notifyChange$1", "notifyPropertyChange$3", "notifyPropertyChanges$1", "observe$3$childList$subtree", "observe$8$attributeFilter$attributeOldValue$attributes$characterData$characterDataOldValue$childList$subtree", "observeArrayValue$3", "observeProperties$0", "observed$0", "onBlurCallback$1", "onError$1", "onFocusCallback$1", "onLoad$1", "onMutation$1", "onSubmitCallback$3", "open$3$async", "open$5$async$password$user", "parametersChanged$0", "parseDeclaration$1", "parseDeclarations$1", "pause$0", "pause$1", "polymerCreated$0", "prepareElement$0", "preventDefault$0", "previewChanged$0", "print$1", "print$2", "propertyForAttribute$1", "publishAttributes$2", "query$1", "queryAll$1", "querySelector$1", "querySelectorAll$1", "reflectPropertyToAttribute$1", "register$2", "registerObserver$2", "registerType$1", "registerWhenReady$0", "remainder$1", "remove$0", "remove$1", "removeEventListener$3", "removeLast$0", "removeRange$2", "replace$1", "replaceAll$2", "replaceWith$1", "reset$0", "round$0", "roundToDouble$0", "scrollIntoView$0", "scrollIntoView$1", "searchQueryChanged$0", "select$0", "send$1", "send$2", "serializeValue$1", "set$$$", "set$MAX_SUBCLASSES_TO_SHOW", "set$__isExpanded", "set$__js_mirrors$_type", "set$_annotations$__$annotations", "set$_breadcrumbs$__$breadcrumbs", "set$_breadcrumbs$__$lastCrumb", "set$_buildIdentifier", "set$_category$__$accordionStyle", "set$_category$__$caretStyle", "set$_category$__$category", "set$_category$__$divClass", "set$_category$__$hasItems", "set$_category$__$items", "set$_category$__$lineHeight", "set$_category$__$methods", "set$_category$__$stylizedName", "set$_category$__$title", "set$_category$__$variables", "set$_child", "set$_children", "set$_comment$__$item", "set$_comment$__$preview", "set$_commentElement", "set$_dartDetail", "set$_defaultItem", "set$_eventDelegates", "set$_instanceAttributes", "set$_isExpanded", "set$_item", "set$_item$_defaultItem", "set$_library$_defaultItem", "set$_library$_loader", "set$_link$__$type", "set$_loader", "set$_main$__$pageContentClass", "set$_main$__$shouldShowClassMinimap", "set$_main$__$shouldShowLibraryMinimap", "set$_main$__$shouldShowLibraryPanel", "set$_main$__$showOrHideInherited", "set$_main$__$showOrHideLibraries", "set$_main$__$showOrHideMinimap", "set$_main$__$showOrHideObjectMembers", "set$_main$__$showOrHidePackages", "set$_member$__$commentFrom", "set$_member$__$hasInheritedComment", "set$_member$__$idName", "set$_member$__$inheritedFrom", "set$_member$__$isInherited", "set$_member$__$shouldShowComment", "set$_member$__$shouldShowCommentFrom", "set$_method$__$constantModifier", "set$_method$__$isNotConstructor", "set$_method$__$modifiers", "set$_method$__$staticModifier", "set$_method$_defaultItem", "set$_minimap_class$_defaultItem", "set$_minimap_element$__$camelCaseName", "set$_minimap_element$__$category", "set$_minimap_element$__$categoryLink", "set$_minimap_element$__$item", "set$_minimap_element$__$itemsToShow", "set$_minimap_library$_defaultItem", "set$_name", "set$_observe", "set$_openedAt", "set$_page$__$isClass", "set$_page$__$isHome", "set$_page$__$isLibrary", "set$_page$__$isMethod", "set$_page$__$isTypedef", "set$_page$__$item", "set$_parameters$__$parameters", "set$_pathname", "set$_publish", "set$_publishLC", "set$_results$__$descriptiveName", "set$_results$__$descriptiveType", "set$_results$__$item", "set$_results$__$outerLibrary", "set$_search0$__$dropdownOpen", "set$_search0$__$isFocused", "set$_search0$__$results", "set$_search0$__$searchQuery", "set$_selector", "set$_type$__$type", "set$_typedef$_defaultItem", "set$_variable$__$annotations", "set$_variable$_defaultItem", "set$_variable_heading$__$getter", "set$_variable_heading$__$isNotSetter", "set$_variable_heading$__$name", "set$_variable_heading$_defaultItem", "set$accordionStyle", "set$annotations", "set$applyAuthorStyles", "set$bindings", "set$bound", "set$breadcrumbs", "set$bubbles", "set$camelCaseName", "set$caretStyle", "set$category", "set$categoryLink", "set$checked", "set$children", "set$className", "set$classes", "set$commentFrom", "set$constantModifier", "set$content", "set$ctrlKey", "set$currentIndex", "set$defaultValue", "set$descriptiveName", "set$descriptiveType", "set$display", "set$divClass", "set$dropdownOpen", "set$entries", "set$error", "set$first", "set$firstChild", "set$form", "set$getter", "set$hasInheritedComment", "set$hasItems", "set$hash", "set$height", "set$host", "set$hostname", "set$href", "set$id", "set$idName", "set$index", "set$inheritedFrom", "set$innerHtml", "set$isClass", "set$isFinal", "set$isFocused", "set$isHome", "set$isInherited", "set$isLibrary", "set$isMethod", "set$isNotConstructor", "set$isNotSetter", "set$isTypedef", "set$item", "set$items", "set$itemsToShow", "set$key", "set$kind", "set$last", "set$lastCrumb", "set$lazyClasses", "set$lazyConstructors", "set$lazyErrors", "set$lazyFunctions", "set$lazyInstanceFunctions", "set$lazyInstanceVariables", "set$lazyOperators", "set$lazyStaticFunctions", "set$lazyStaticVariables", "set$lazyTypedefs", "set$lazyVariables", "set$left", "set$length", "set$lineHeight", "set$location", "set$lower", "set$map", "set$message", "set$method", "set$methods", "set$modifiers", "set$name", "set$newValue", "set$nextNode", "set$nodes", "set$offsetHeight", "set$offsetWidth", "set$oldValue", "set$operator", "set$originalPadding", "set$outerLibrary", "set$ownerDocument", "set$paddingTop", "set$pageContentClass", "set$parameters", "set$parent", "set$parentNode", "set$path", "set$pathname", "set$port", "set$position", "set$preview", "set$print", "set$protocol", "set$responseText", "set$results", "set$reversed", "set$right", "set$search", "set$searchQuery", "set$selectedIndex", "set$shouldShowClassMinimap", "set$shouldShowComment", "set$shouldShowCommentFrom", "set$shouldShowLibraryMinimap", "set$shouldShowLibraryPanel", "set$showOrHideInherited", "set$showOrHideLibraries", "set$showOrHideMinimap", "set$showOrHideObjectMembers", "set$showOrHidePackages", "set$src", "set$staticModifier", "set$stylizedName", "set$syntax", "set$tag", "set$tagName", "set$target", "set$text", "set$timeStamp", "set$title", "set$top", "set$type", "set$url", "set$value", "set$values", "set$variables", "set$viewer", "set$width", "setInnerHtml$2$treeSanitizer", "setInnerHtml$3$treeSanitizer$validator", "setProperty$3", "setRange$4", "shadowFromTemplate$1", "shadowRootReady$2", "shortcutHandler$1", "showSubclass$3", "skip$1", "sort$1", "split$1", "start$0", "startsWith$1", "startsWith$2", "stop$0", "sublist$1", "sublist$2", "substring$1", "substring$2", "take$1", "takeAttributes$0", "timeStamp$1", "toInt$0", "toList$0", "toList$1$growable", "toLowerCase$0", "toRadixString$1", "toString$0", "toStringAsExponential$1", "toUpperCase$0", "toggleInherited$0", "toggleMinimap$0", "toggleObjectMembers$0", "toggleOptionsMenu$3", "togglePanel$0", "togglePkg$0", "trim$0", "typeChanged$0", "unbind$1", "unbindAll$0", "unobserved$0", "unregisterObserver$1", "unregisterObservers$0", "variablesChanged$0", "waitingForExtendee$1", "waitingForType$1", "where$1", "wrongClass$1"];
$.mapTypeToInterceptor = [C.Type_0uu, U.MemberElement, {created: U.MemberElement$created}, C.Type_81T, Z.MinimapElement, {created: Z.MinimapElement$created}, C.Type_8TW, O.CategoryElement, {created: O.CategoryElement$created}, C.Type_8Wd, M.Search, {created: M.Search$created}, C.Type_AHF, H.NativeTypedArray, {"": H.NativeTypedArray$}, C.Type_AHF0, F.VariableElement, {created: F.VariableElement$created}, C.Type_ASc, X.MethodElement, {created: X.MethodElement$created}, C.Type_ECG, X.ParameterElement, {created: X.ParameterElement$created}, C.Type_EJ5, Q.LinkElement0, {created: Q.LinkElement$created}, C.Type_EOZ, E.TypedefElement, {created: E.TypedefElement$created}, C.Type_EQs, W.GlobalEventHandlers, {}, C.Type_EkK, Y.AnnotationElement, {created: Y.AnnotationElement$created}, C.Type_EsU0, Z.HomeElement, {created: Z.HomeElement$created}, C.Type_I2I, A.PolymerElement, {created: A.PolymerElement$created}, C.Type_IFE, O.PageElement, {created: O.PageElement$created}, C.Type_IRg, N.MinimapElementLibrary, {created: N.MinimapElementLibrary$created}, C.Type_MhD, N.TypeElement, {created: N.TypeElement$created}, C.Type_NlB, H.NativeTypedArrayOfDouble, {"": H.NativeTypedArrayOfDouble$}, C.Type_QXN, E.LibraryPanel, {created: E.LibraryPanel$created}, C.Type_QyU, W.WindowEventHandlers, {}, C.Type_VEs, Q.MinimapElementClass, {created: Q.MinimapElementClass$created}, C.Type_Y5Q, A.MainElement, {created: A.MainElement$created}, C.Type_Ybt, T.ClassElement, {created: T.ClassElement$created}, C.Type_YnA, A.PolymerDeclaration, {created: A.PolymerDeclaration$created}, C.Type_ZMt, E.VariableHeading, {created: E.VariableHeading$created}, C.Type_fzi, S.CommentElement, {created: S.CommentElement$created}, C.Type_j7u, G.Result, {created: G.Result$created}, C.Type_nVD, U.DartdocElement, {created: U.DartdocElement$created}, C.Type_q6V, U.Breadcrumbs, {created: U.Breadcrumbs$created}, C.Type_rt6, M.ItemElement, {created: M.ItemElement$created}, C.Type_sBE, G.LibraryElement, {created: G.LibraryElement$created}, C.Type_wOW, H.NativeTypedArrayOfInt, {"": H.NativeTypedArrayOfInt$}, C.Type_wtN, U.InheritedElement, {created: U.InheritedElement$created}];
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return function() { return this; }();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== void 0;
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return H.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "workerIds", "IsolateNatives_workerIds", "get$IsolateNatives_workerIds", function() {
  return H.setRuntimeTypeInfo(new P.Expando(null), [J.JSInt]);
});
Isolate.$lazy($, "noSuchMethodPattern", "TypeErrorDecoder_noSuchMethodPattern", "get$TypeErrorDecoder_noSuchMethodPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({ toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "notClosurePattern", "TypeErrorDecoder_notClosurePattern", "get$TypeErrorDecoder_notClosurePattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({ $method$: null, toString: function() { return "$receiver$"; } }));
});
Isolate.$lazy($, "nullCallPattern", "TypeErrorDecoder_nullCallPattern", "get$TypeErrorDecoder_nullCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
});
Isolate.$lazy($, "nullLiteralCallPattern", "TypeErrorDecoder_nullLiteralCallPattern", "get$TypeErrorDecoder_nullLiteralCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    null.$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "undefinedCallPattern", "TypeErrorDecoder_undefinedCallPattern", "get$TypeErrorDecoder_undefinedCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralCallPattern", "TypeErrorDecoder_undefinedLiteralCallPattern", "get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  var $argumentsExpr$ = '$arguments$'
  try {
    (void 0).$method$($argumentsExpr$);
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "nullPropertyPattern", "TypeErrorDecoder_nullPropertyPattern", "get$TypeErrorDecoder_nullPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
});
Isolate.$lazy($, "nullLiteralPropertyPattern", "TypeErrorDecoder_nullLiteralPropertyPattern", "get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  try {
    null.$method$;
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "undefinedPropertyPattern", "TypeErrorDecoder_undefinedPropertyPattern", "get$TypeErrorDecoder_undefinedPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
});
Isolate.$lazy($, "undefinedLiteralPropertyPattern", "TypeErrorDecoder_undefinedLiteralPropertyPattern", "get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
  return H.TypeErrorDecoder_extractPattern(function() {
  try {
    (void 0).$method$;
  } catch (e) {
    return e.message;
  }
}());
});
Isolate.$lazy($, "customElementsReady", "customElementsReady", "get$customElementsReady", function() {
  return new B.closure().call$0();
});
Isolate.$lazy($, "_toStringList", "IterableMixinWorkaround__toStringList", "get$IterableMixinWorkaround__toStringList", function() {
  return [];
});
Isolate.$lazy($, "validationPattern", "Symbol_validationPattern", "get$Symbol_validationPattern", function() {
  return new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^(?:[a-zA-Z$][a-zA-Z$0-9_]*\\.)*(?:[a-zA-Z$][a-zA-Z$0-9_]*=?|-|unary-|\\[\\]=|~|==|\\[\\]|\\*|/|%|~/|\\+|<<|>>|>=|>|<=|<|&|\\^|\\|)$", false, true, false), null, null);
});
Isolate.$lazy($, "_dynamicType", "JsMirrorSystem__dynamicType", "get$JsMirrorSystem__dynamicType", function() {
  return new H.JsTypeMirror(C.Symbol_dynamic);
});
Isolate.$lazy($, "_voidType", "JsMirrorSystem__voidType", "get$JsMirrorSystem__voidType", function() {
  return new H.JsTypeMirror(C.Symbol_void);
});
Isolate.$lazy($, "librariesByName", "JsMirrorSystem_librariesByName", "get$JsMirrorSystem_librariesByName", function() {
  return H.JsMirrorSystem_computeLibrariesByName();
});
Isolate.$lazy($, "currentJsMirrorSystem", "currentJsMirrorSystem", "get$currentJsMirrorSystem", function() {
  return new H.JsMirrorSystem(null, new H.JsIsolateMirror(init.globalState.currentContext));
});
Isolate.$lazy($, "mangledNames", "mangledNames", "get$mangledNames", function() {
  return H.computeMangledNames(init.mangledNames, false);
});
Isolate.$lazy($, "reflectiveNames", "reflectiveNames", "get$reflectiveNames", function() {
  return H.computeReflectiveNames($.get$mangledNames());
});
Isolate.$lazy($, "mangledGlobalNames", "mangledGlobalNames", "get$mangledGlobalNames", function() {
  return H.computeMangledNames(init.mangledGlobalNames, true);
});
Isolate.$lazy($, "_asyncCallbacks", "_asyncCallbacks", "get$_asyncCallbacks", function() {
  var t1, t2;
  t1 = {func: "void_", void: true};
  t2 = H.setRuntimeTypeInfo(new P.ListQueue(null, 0, 0, 0), [t1]);
  t2.ListQueue$1(null, t1);
  return t2;
});
Isolate.$lazy($, "_toStringVisiting", "_toStringVisiting", "get$_toStringVisiting", function() {
  return P.HashSet_HashSet$identity(null);
});
Isolate.$lazy($, "_toStringList", "Maps__toStringList", "get$Maps__toStringList", function() {
  return [];
});
Isolate.$lazy($, "_splitRe", "Uri__splitRe", "get$Uri__splitRe", function() {
  return new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^(?:([^:/?#]+):)?(?://(?:([^/?#]*)@)?(?:([\\w\\d\\-\\u0100-\\uffff.%]*)|\\[([A-Fa-f0-9:.]*)\\])(?::([0-9]+))?)?([^?#[]+)?(?:\\?([^#]*))?(?:#(.*))?$", false, true, false), null, null);
});
Isolate.$lazy($, "_safeConsole", "Console__safeConsole", "get$Console__safeConsole", function() {
  return new W.Console();
});
Isolate.$lazy($, "webkitEvents", "ElementEvents_webkitEvents", "get$ElementEvents_webkitEvents", function() {
  return H.fillLiteralMap(["animationend", "webkitAnimationEnd", "animationiteration", "webkitAnimationIteration", "animationstart", "webkitAnimationStart", "fullscreenchange", "webkitfullscreenchange", "fullscreenerror", "webkitfullscreenerror", "keyadded", "webkitkeyadded", "keyerror", "webkitkeyerror", "keymessage", "webkitkeymessage", "needkey", "webkitneedkey", "pointerlockchange", "webkitpointerlockchange", "pointerlockerror", "webkitpointerlockerror", "resourcetimingbufferfull", "webkitresourcetimingbufferfull", "transitionend", "webkitTransitionEnd", "speechchange", "webkitSpeechChange"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
});
Isolate.$lazy($, "_HEIGHT", "_HEIGHT", "get$_HEIGHT", function() {
  return ["top", "bottom"];
});
Isolate.$lazy($, "_WIDTH", "_WIDTH", "get$_WIDTH", function() {
  return ["right", "left"];
});
Isolate.$lazy($, "_allowedElements", "_Html5NodeValidator__allowedElements", "get$_Html5NodeValidator__allowedElements", function() {
  var t1 = P.LinkedHashSet_LinkedHashSet(null, null, null, null);
  t1.addAll$1(0, ["A", "ABBR", "ACRONYM", "ADDRESS", "AREA", "ARTICLE", "ASIDE", "AUDIO", "B", "BDI", "BDO", "BIG", "BLOCKQUOTE", "BR", "BUTTON", "CANVAS", "CAPTION", "CENTER", "CITE", "CODE", "COL", "COLGROUP", "COMMAND", "DATA", "DATALIST", "DD", "DEL", "DETAILS", "DFN", "DIR", "DIV", "DL", "DT", "EM", "FIELDSET", "FIGCAPTION", "FIGURE", "FONT", "FOOTER", "FORM", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "HGROUP", "HR", "I", "IFRAME", "IMG", "INPUT", "INS", "KBD", "LABEL", "LEGEND", "LI", "MAP", "MARK", "MENU", "METER", "NAV", "NOBR", "OL", "OPTGROUP", "OPTION", "OUTPUT", "P", "PRE", "PROGRESS", "Q", "S", "SAMP", "SECTION", "SELECT", "SMALL", "SOURCE", "SPAN", "STRIKE", "STRONG", "SUB", "SUMMARY", "SUP", "TABLE", "TBODY", "TD", "TEXTAREA", "TFOOT", "TH", "THEAD", "TIME", "TR", "TRACK", "TT", "U", "UL", "VAR", "VIDEO", "WBR"]);
  return t1;
});
Isolate.$lazy($, "_attributeValidators", "_Html5NodeValidator__attributeValidators", "get$_Html5NodeValidator__attributeValidators", function() {
  return H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
});
Isolate.$lazy($, "context", "context", "get$context", function() {
  return P._wrapToDart(function() { return this; }());
});
Isolate.$lazy($, "pageIndex", "pageIndex", "get$pageIndex", function() {
  return H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
});
Isolate.$lazy($, "packageMatch", "packageMatch", "get$packageMatch", function() {
  return new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("(\\w+)/", false, true, false), null, null);
});
Isolate.$lazy($, "libraryMatch", "libraryMatch", "get$libraryMatch", function() {
  return new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("([\\w\\-\\:]+)", false, true, false), null, null);
});
Isolate.$lazy($, "memberMatch", "memberMatch", "get$memberMatch", function() {
  return new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("\\.(\\w+)", false, true, false), null, null);
});
Isolate.$lazy($, "subMemberMatch", "subMemberMatch", "get$subMemberMatch", function() {
  return new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("\\.([\\w\\<\\+\\|\\[\\]\\>\\/\\^\\=\\&\\~\\*\\-\\%]+)", false, true, false), null, null);
});
Isolate.$lazy($, "anchorMatch", "anchorMatch", "get$anchorMatch", function() {
  return new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("\\@([\\w\\<\\+\\|\\[\\]\\>\\/\\^\\=\\&\\~\\*\\-\\%\\.\\,]+)", false, true, false), null, null);
});
Isolate.$lazy($, "_loggers", "Logger__loggers", "get$Logger__loggers", function() {
  return H.setRuntimeTypeInfo(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), [J.JSString, N.Logger]);
});
Isolate.$lazy($, "windowLocation", "windowLocation", "get$windowLocation", function() {
  var t1 = new T.ObservableLocationHash(null, null, null);
  t1.ObservableLocationHash$_$0();
  return t1;
});
Isolate.$lazy($, "_logger", "_logger0", "get$_logger0", function() {
  return N.Logger_Logger("Observable.dirtyCheck");
});
Isolate.$lazy($, "objectType", "objectType", "get$objectType", function() {
  return P.reflectClass(C.Type_HqF);
});
Isolate.$lazy($, "_pathRegExp", "_pathRegExp", "get$_pathRegExp", function() {
  return new L.closure1().call$0();
});
Isolate.$lazy($, "_spacesRegExp", "_spacesRegExp", "get$_spacesRegExp", function() {
  return new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("\\s", false, true, false), null, null);
});
Isolate.$lazy($, "_logger", "_logger", "get$_logger", function() {
  return N.Logger_Logger("observe.PathObserver");
});
Isolate.$lazy($, "url", "url", "get$url", function() {
  return F.Context_Context(null, $.get$Style_url());
});
Isolate.$lazy($, "posix", "Style_posix", "get$Style_posix", function() {
  return new Z.PosixStyle("posix", "/", new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("/", false, true, false), null, null), new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("[^/]$", false, true, false), null, null), new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^/", false, true, false), null, null), null);
});
Isolate.$lazy($, "windows", "Style_windows", "get$Style_windows", function() {
  return new T.WindowsStyle("windows", "\\", new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("[/\\\\]", false, true, false), null, null), new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("[^/\\\\]$", false, true, false), null, null), new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^(\\\\\\\\[^\\\\]+\\\\[^\\\\/]+|[a-zA-Z]:[/\\\\])", false, true, false), null, null), new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^[/\\\\](?![/\\\\])", false, true, false), null, null), null);
});
Isolate.$lazy($, "url", "Style_url", "get$Style_url", function() {
  return new E.UrlStyle("url", "/", new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("/", false, true, false), null, null), new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("(^[a-zA-Z][-+.a-zA-Z\\d]*://|[^/])$", false, true, false), null, null), new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("[a-zA-Z][-+.a-zA-Z\\d]*://[^/]*", false, true, false), null, null), new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("^/", false, true, false), null, null), null);
});
Isolate.$lazy($, "platform", "Style_platform", "get$Style_platform", function() {
  return S.Style__getPlatformStyle();
});
Isolate.$lazy($, "_typesByName", "_typesByName", "get$_typesByName", function() {
  return P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, P.Type);
});
Isolate.$lazy($, "_waitType", "_waitType", "get$_waitType", function() {
  return P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, A.PolymerDeclaration);
});
Isolate.$lazy($, "_waitSuper", "_waitSuper", "get$_waitSuper", function() {
  return P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, [J.JSArray, A.PolymerDeclaration]);
});
Isolate.$lazy($, "_declarations", "_declarations", "get$_declarations", function() {
  return P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, A.PolymerDeclaration);
});
Isolate.$lazy($, "_objectType", "_objectType", "get$_objectType", function() {
  return P.reflectClass(C.Type_HqF);
});
Isolate.$lazy($, "_sheetLog", "_sheetLog", "get$_sheetLog", function() {
  return N.Logger_Logger("polymer.stylesheet");
});
Isolate.$lazy($, "_reverseEventTranslations", "_reverseEventTranslations", "get$_reverseEventTranslations", function() {
  return new A.closure4().call$0();
});
Isolate.$lazy($, "bindPattern", "Polymer_bindPattern", "get$Polymer_bindPattern", function() {
  return new H.JSSyntaxRegExp(H.JSSyntaxRegExp_makeNative("\\{\\{([^{}]*)}}", false, true, false), null, null);
});
Isolate.$lazy($, "_polymerSyntax", "Polymer__polymerSyntax", "get$Polymer__polymerSyntax", function() {
  var t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, J.JSString, P.Object);
  t1.addAll$1(0, C.Map_wgEsG);
  return new A._PolymerExpressionsWithEventDelegate(t1);
});
Isolate.$lazy($, "_ready", "Polymer__ready", "get$Polymer__ready", function() {
  return H.setRuntimeTypeInfo(new P._AsyncCompleter(P._Future$(null)), [null]);
});
Isolate.$lazy($, "veiledElements", "Polymer_veiledElements", "get$Polymer_veiledElements", function() {
  return ["body"];
});
Isolate.$lazy($, "_observeLog", "_observeLog", "get$_observeLog", function() {
  return N.Logger_Logger("polymer.observe");
});
Isolate.$lazy($, "_eventsLog", "_eventsLog", "get$_eventsLog", function() {
  return N.Logger_Logger("polymer.events");
});
Isolate.$lazy($, "_unbindLog", "_unbindLog", "get$_unbindLog", function() {
  return N.Logger_Logger("polymer.unbind");
});
Isolate.$lazy($, "_bindLog", "_bindLog", "get$_bindLog", function() {
  return N.Logger_Logger("polymer.bind");
});
Isolate.$lazy($, "_shadowHost", "_shadowHost", "get$_shadowHost", function() {
  return H.setRuntimeTypeInfo(new P.Expando(null), [A.Polymer]);
});
Isolate.$lazy($, "_librariesToLoad", "_librariesToLoad", "get$_librariesToLoad", function() {
  return A._discoverScripts(document, J.get$href$x(C.Window_methods.get$location(window)), null, null);
});
Isolate.$lazy($, "_libs", "_libs", "get$_libs", function() {
  return $.get$currentJsMirrorSystem().get$libraries();
});
Isolate.$lazy($, "_rootUri", "_rootUri", "get$_rootUri", function() {
  return $.get$currentJsMirrorSystem().isolate.get$rootLibrary().get$uri();
});
Isolate.$lazy($, "_packageRoot", "_packageRoot", "get$_packageRoot", function() {
  var t1, t2;
  t1 = $.get$url();
  t2 = J.get$href$x(C.Window_methods.get$location(window));
  return t1.join$2(0, t1.dirname$1(P.Uri$_fromMatch($.get$Uri__splitRe().firstMatch$1(t2))._path), "packages") + "/";
});
Isolate.$lazy($, "_loaderLog", "_loaderLog", "get$_loaderLog", function() {
  return N.Logger_Logger("polymer.loader");
});
Isolate.$lazy($, "_typeHandlers", "_typeHandlers", "get$_typeHandlers", function() {
  return new Z.closure0().call$0();
});
Isolate.$lazy($, "_logger", "_logger1", "get$_logger1", function() {
  return N.Logger_Logger("polymer_expressions");
});
Isolate.$lazy($, "_BINARY_OPERATORS", "_BINARY_OPERATORS", "get$_BINARY_OPERATORS", function() {
  return H.fillLiteralMap(["+", new K.closure5(), "-", new K.closure6(), "*", new K.closure7(), "/", new K.closure8(), "==", new K.closure9(), "!=", new K.closure10(), ">", new K.closure11(), ">=", new K.closure12(), "<", new K.closure13(), "<=", new K.closure14(), "||", new K.closure15(), "&&", new K.closure16(), "|", new K.closure17()], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
});
Isolate.$lazy($, "_UNARY_OPERATORS", "_UNARY_OPERATORS", "get$_UNARY_OPERATORS", function() {
  return H.fillLiteralMap(["+", new K.closure18(), "-", new K.closure19(), "!", new K.closure20()], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
});
Isolate.$lazy($, "searchIndex", "searchIndex", "get$searchIndex", function() {
  return new B.SearchIndex(H.fillLiteralMap([], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), []);
});
Isolate.$lazy($, "_checkboxEventType", "_InputBinding__checkboxEventType", "get$_InputBinding__checkboxEventType", function() {
  return new M.closure2().call$0();
});
Isolate.$lazy($, "_contentsOwner", "TemplateBindExtension__contentsOwner", "get$TemplateBindExtension__contentsOwner", function() {
  return H.setRuntimeTypeInfo(new P.Expando(null), [null]);
});
Isolate.$lazy($, "_ownerStagingDocument", "TemplateBindExtension__ownerStagingDocument", "get$TemplateBindExtension__ownerStagingDocument", function() {
  return H.setRuntimeTypeInfo(new P.Expando(null), [null]);
});
Isolate.$lazy($, "_allTemplatesSelectors", "TemplateBindExtension__allTemplatesSelectors", "get$TemplateBindExtension__allTemplatesSelectors", function() {
  return "template, " + J.map$1$ax(C.Map_05eTF.get$keys(), new M.closure3()).join$1(0, ", ");
});
Isolate.$lazy($, "_expando", "_expando", "get$_expando", function() {
  return H.setRuntimeTypeInfo(new P.Expando("template_binding"), [null]);
});
Isolate.$lazy($, "viewer", "viewer", "get$viewer", function() {
  return V.Viewer$_();
});
Isolate.$lazy($, "defaultSyntax", "defaultSyntax", "get$defaultSyntax", function() {
  return new V._DefaultSyntaxWithEvents();
});
Isolate.$lazy($, "_defaultItem", "ClassElement__defaultItem", "get$ClassElement__defaultItem", function() {
  return E.Class$forPlaceholder("loading.loading", "loading");
});
Isolate.$lazy($, "_defaultItem", "ItemElement__defaultItem", "get$ItemElement__defaultItem", function() {
  return E.Class$forPlaceholder("loading.loading", "loading");
});
Isolate.$lazy($, "_defaultItem", "LibraryElement__defaultItem", "get$LibraryElement__defaultItem", function() {
  return E.Library$forPlaceholder(H.fillLiteralMap(["name", "loading", "preview", "loading"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
});
Isolate.$lazy($, "nullSanitizer", "nullSanitizer", "get$nullSanitizer", function() {
  return new U.NullTreeSanitizer();
});
Isolate.$lazy($, "_defaultItem", "MethodElement__defaultItem", "get$MethodElement__defaultItem", function() {
  return E.Method$(H.fillLiteralMap(["name", "Loading", "qualifiedName", "Loading", "comment", "", "parameters", null, "return", [null]], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), "", "", "", true, false, null);
});
Isolate.$lazy($, "_defaultItem", "MinimapElementClass__defaultItem", "get$MinimapElementClass__defaultItem", function() {
  return E.Class$forPlaceholder("loading.loading", "loading");
});
Isolate.$lazy($, "_defaultItem", "MinimapElementLibrary__defaultItem", "get$MinimapElementLibrary__defaultItem", function() {
  return E.Library$forPlaceholder(H.fillLiteralMap(["name", "loading", "qualifiedName", "loading", "preview", "loading"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
});
Isolate.$lazy($, "_defaultItem", "TypedefElement__defaultItem", "get$TypedefElement__defaultItem", function() {
  return E.Typedef$(H.fillLiteralMap(["name", "loading", "qualifiedName", "loading"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)));
});
Isolate.$lazy($, "_defaultItem", "VariableElement__defaultItem", "get$VariableElement__defaultItem", function() {
  return E.Variable$(H.fillLiteralMap(["type", [null], "name", "loading"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), "", "", false, false, null);
});
Isolate.$lazy($, "_defaultItem", "VariableHeading__defaultItem", "get$VariableHeading__defaultItem", function() {
  return E.Variable$(H.fillLiteralMap(["type", [null], "name", "loading"], P.LinkedHashMap_LinkedHashMap(null, null, null, null, null)), "", "", false, false, null);
});
// Native classes

init.functionAliases = {};
;
init.metadata = [P.Object,
C.TypeVariable_mDP,
C.TypeVariable_wAg,
C.TypeVariable_pea,
C.TypeVariable_bBG,
C.TypeVariable_AuK,
"object",
"interceptor",
"proto",
"extension",
"indexability",
"type",
"name",
"codeUnit",
"isolate",
"function",
"entry",
"sender",
"e",
"msg",
"message",
"x",
"record",
"value",
"memberName",
{func: "dynamic__String", args: [J.JSString]},
"string",
"source",
"radix",
"handleError",
"array",
"codePoints",
"charCodes",
"years",
"month",
"day",
"hours",
"minutes",
"seconds",
"milliseconds",
"isUtc",
"receiver",
"key",
"positionalArguments",
"namedArguments",
"className",
"argument",
"index",
"ex",
"expression",
"keyValuePairs",
"result",
"closure",
"numberOfArguments",
"arg1",
"arg2",
"arg3",
"arg4",
"arity",
"functions",
"reflectionInfo",
"isStatic",
"jsArguments",
"propertyName",
"isIntercepted",
"fieldName",
"property",
"staticName",
"list",
"returnType",
"parameterTypes",
"optionalParameterTypes",
"rti",
"typeArguments",
"target",
"typeInfo",
"substitutionName",
,
"onTypeVariable",
"types",
"startIndex",
"substitution",
"arguments",
"isField",
"checks",
"asField",
"s",
"t",
"signature",
"context",
"contextName",
"o",
"allowShorter",
"obj",
"tag",
"interceptorClass",
"transformer",
"hooks",
"pattern",
"multiLine",
"caseSensitive",
"global",
"needle",
"haystack",
"other",
"from",
"to",
{func: "void_", void: true},
{func: "args0"},
{func: "dynamic__String__dynamic", args: [J.JSString], opt: [null]},
"comment",
{func: "dynamic__List_String__bool", args: [[J.JSArray, P.Map], J.JSString], named: {isAbstract: J.JSBool}},
false,
"classes",
"isAbstract",
{func: "dynamic__Map_Map_Map", args: [P.Map, P.Map, P.Map]},
"variables",
"getters",
"setters",
{func: "dynamic__List_dynamic", args: [J.JSArray, null]},
"members",
{func: "dynamic__Map_String__String_bool_bool_Class", args: [P.Map, J.JSString], named: {className: J.JSString, isConstructor: J.JSBool, isOperator: J.JSBool, owner: E.Class}},
"",
"yaml",
"isConstructor",
"isOperator",
"owner",
{func: "dynamic__Map", args: [P.Map]},
{func: "dynamic__String_String__String", args: [J.JSString, J.JSString], opt: [J.JSString]},
"qualifiedName",
{func: "void__List", void: true, args: [[J.JSArray, [J.JSArray, E.Item]]]},
"items",
C.C_Reflectable,
"a",
"b",
{func: "void__Item_Item", void: true, args: [E.Item, E.Item]},
"page",
"previous",
{func: "dynamic__String_String_dynamic__String", args: [J.JSString, J.JSString, null], opt: [J.JSString]},
"previewComment",
"map",
{func: "dynamic__String_String", args: [J.JSString, J.JSString]},
"location",
{func: "dynamic__List", args: [J.JSArray]},
"annotes",
{func: "dynamic__Map__String_String_String_bool_bool_dynamic", args: [P.Map], named: {className: J.JSString, commentFrom: J.JSString, inheritedFrom: J.JSString, isConstructor: J.JSBool, isOperator: J.JSBool, owner: null}},
"commentFrom",
"inheritedFrom",
{func: "dynamic__dynamic_Map__dynamic", args: [null, P.Map], opt: [null]},
{func: "dynamic__Map__String_String_bool_bool_dynamic", args: [P.Map], named: {commentFrom: J.JSString, inheritedFrom: J.JSString, isGetter: J.JSBool, isSetter: J.JSBool, owner: null}},
"isGetter",
"isSetter",
"input",
"iterable",
"f",
"initialValue",
"combine",
"test",
"orElse",
"leftDelimiter",
"rightDelimiter",
"start",
"end",
"skipCount",
"src",
"srcStart",
"dst",
"dstStart",
"count",
"element",
"endIndex",
"left",
"right",
"compare",
"symbol",
{func: "InstanceMirror__Object", ret: P.InstanceMirror, args: [P.Object]},
"reflectee",
"mangledName",
"methods",
"mixinNames",
"code",
"typeVariables",
"simpleName",
"victim",
"fieldSpecification",
"jsMangledNames",
"isGlobal",
"errorHandler",
"error",
"stackTrace",
"zone",
"futures",
"eagerError",
"listeners",
"callback",
"notificationHandler",
{func: "void__dynamic", void: true, args: [null]},
{func: "void__dynamic__StackTrace", void: true, args: [null], opt: [P.StackTrace]},
"userCode",
"onSuccess",
"onError",
"subscription",
"future",
"duration",
{func: "void__Zone_ZoneDelegate_Zone_dynamic_StackTrace", void: true, args: [P.Zone, P.ZoneDelegate, P.Zone, null, P.StackTrace]},
"self",
"parent",
{func: "dynamic__Zone_ZoneDelegate_Zone_args0", args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args0"}]},
{func: "dynamic__Zone_ZoneDelegate_Zone_args1_dynamic", args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args1", args: [null]}, null]},
"arg",
{func: "dynamic__Zone_ZoneDelegate_Zone_args2_dynamic_dynamic", args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args2", args: [null, null]}, null, null]},
{func: "ZoneCallback__Zone_ZoneDelegate_Zone_args0", ret: {func: "args0"}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args0"}]},
{func: "ZoneUnaryCallback__Zone_ZoneDelegate_Zone_args1", ret: {func: "args1", args: [null]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args1", args: [null]}]},
{func: "ZoneBinaryCallback__Zone_ZoneDelegate_Zone_args2", ret: {func: "args2", args: [null, null]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args2", args: [null, null]}]},
{func: "void__Zone_ZoneDelegate_Zone_args0", void: true, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args0"}]},
{func: "Timer__Zone_ZoneDelegate_Zone_Duration_void_", ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: "void_", void: true}]},
{func: "void__Zone_ZoneDelegate_Zone_String", void: true, args: [P.Zone, P.ZoneDelegate, P.Zone, J.JSString]},
"line",
{func: "void__String", void: true, args: [J.JSString]},
{func: "Zone__Zone_ZoneDelegate_Zone_ZoneSpecification_Map", ret: P.Zone, args: [P.Zone, P.ZoneDelegate, P.Zone, P.ZoneSpecification, [P.Map, P.Symbol, null]]},
"specification",
"zoneValues",
"table",
{func: "bool__dynamic_dynamic", ret: J.JSBool, args: [null, null]},
{func: "int__dynamic", ret: J.JSInt, args: [null]},
"parts",
"m",
"number",
"json",
"reviver",
{func: "int__Comparable_Comparable", ret: J.JSInt, args: [P.Comparable, P.Comparable]},
"formattedString",
{func: "bool__Object_Object", ret: J.JSBool, args: [P.Object, P.Object]},
{func: "int__Object", ret: J.JSInt, args: [P.Object]},
{func: "int__String__int__String_int", ret: J.JSInt, args: [J.JSString], named: {onError: {func: "int__String", ret: J.JSInt, args: [J.JSString]}, radix: J.JSInt}},
"segments",
"argumentError",
"host",
"scheme",
"query",
"queryParameters",
"fragment",
"component",
"val",
"val1",
"val2",
{func: "String__String", ret: J.JSString, args: [J.JSString]},
"encodedComponent",
C.Utf8Codec_false,
"canonicalTable",
"text",
"encoding",
"spaceToPlus",
"pos",
"plusToSpace",
{func: "String__EventTarget", ret: J.JSString, args: [W.EventTarget]},
"typeExtension",
"url",
"onProgress",
"withCredentials",
"method",
"mimeType",
"requestHeaders",
"responseType",
"sendData",
"thing",
"hash",
{func: "bool__Element_String_String__Html5NodeValidator", ret: J.JSBool, args: [W.Element, J.JSString, J.JSString, W._Html5NodeValidator]},
"attributeName",
"win",
"constructor",
{func: "args1", args: [null]},
{func: "args4", args: [null, null, null, null]},
"oldValue",
"newValue",
"document",
"extendsTagName",
"w",
"captureThis",
"createProxy",
{func: "Object__dynamic", ret: P.Object, args: [null]},
"obj1",
"obj2",
"parents1",
"parents2",
"list1",
"list2",
"map1",
"map2",
"d1",
"d2",
"mustCopy",
"current",
"currentStart",
"currentEnd",
"old",
"oldStart",
"oldEnd",
"distances",
"arr1",
"arr2",
"searchLength",
"splices",
"records",
"field",
"args",
"cls",
"props",
"getter",
"template",
"extendee",
"sheet",
"node",
"path",
"originalPrepareBinding",
"methodName",
"style",
"scope",
"doc",
"baseUri",
"seen",
"scripts",
"uriString",
"currentValue",
"hyphenedName",
"startUppercase",
"v",
"expr",
"l",
{func: "Iterable__Iterable", ret: [P.Iterable, K.IndexedValue], args: [P.Iterable]},
"classMirror",
"c",
{func: "dynamic__String_String_int", args: [J.JSString, J.JSString, J.JSInt]},
"score",
{func: "bool__dynamic", ret: J.JSBool, args: [null]},
"_",
B._nullFilter$closure(),
"maxResults",
"filter",
"delegate",
"model",
"bound",
"stagingDocument",
"el",
"useRoot",
"content",
"bindings",
"n",
"parents",
"event",
C.C__InitMethodAnnotation,
{func: "CommentElement_", ret: S.CommentElement},
{func: "TypeElement_", ret: N.TypeElement},
{func: "Element__NestedType", ret: W.Element, args: [E.NestedType]},
"priority",
{func: "String__int", ret: J.JSString, args: [J.JSInt]},
"typeArg",
"canBubbleArg",
"cancelableArg",
"detailArg",
"elementId",
"importedNode",
"deep",
"selectors",
"relativeSelectors",
"html",
"treeSanitizer",
"validator",
"pseudoElement",
"alignment",
"where",
"listener",
"useCapture",
{func: "Node__int", ret: W.Node, args: [J.JSInt]},
"async",
"password",
"user",
"data",
"timestamp",
"canBubble",
"cancelable",
"view",
"detail",
"screenX",
"screenY",
"clientX",
"clientY",
"ctrlKey",
"altKey",
"shiftKey",
"metaKey",
"button",
"relatedTarget",
"attributeFilter",
"attributeOldValue",
"attributes",
"characterData",
"characterDataOldValue",
"childList",
"subtree",
"otherNode",
{func: "Node__Node", ret: W.Node, args: [W.Node]},
"newChild",
"refChild",
"oldChild",
{func: "SpeechRecognitionAlternative__int", ret: W.SpeechRecognitionAlternative, args: [J.JSInt]},
{func: "SpeechInputResult__int", ret: W.SpeechInputResult, args: [J.JSInt]},
{func: "SpeechRecognitionResult__int", ret: W.SpeechRecognitionResult, args: [J.JSInt]},
"svg",
"length",
"invocation",
"collection",
"separator",
0,
true,
"growable",
"fractionDigits",
"str",
"i",
"portId",
"port",
"dataEvent",
"onData",
"cancelOnError",
"onDone",
"info",
{func: "args2", args: [null, null]},
"ifAbsent",
{func: "int__int", ret: J.JSInt, args: [J.JSInt]},
"parameter",
"jsConstructor",
{func: "dynamic__String_dynamic", args: [J.JSString, null]},
{func: "dynamic__dynamic_String", args: [null, J.JSString]},
"g",
J.JSString,
{func: "String_", ret: J.JSString},
C.C_ObservableProperty,
{func: "bool_", ret: J.JSBool},
O.ChangeNotifier,
[J.JSArray, E.Container],
[P.Set, J.JSString],
J.JSInt,
{func: "Item__String__dynamic", ret: E.Item, args: [J.JSString], named: {orElse: null}},
E.nothing$closure(),
{func: "void__Class_Item", void: true, args: [E.Class, E.Item]},
"clazz",
"item",
{func: "List__Filter", ret: J.JSArray, args: [E.Filter]},
E.Container,
H.Closure,
P.Map,
J.JSBool,
E.Class,
E.Item,
"innerItem",
E.Filter,
[J.JSArray, E.Item],
{func: "Future_", ret: P.Future},
{func: "void__Item", void: true, args: [E.Item]},
{func: "DocsLocation_", ret: Y.DocsLocation},
{func: "Item__String__Function", ret: E.Item, args: [J.JSString], named: {orElse: P.Function}},
{func: "Item_", ret: E.Item},
{func: "bool__Item", ret: J.JSBool, args: [E.Item]},
"possibleOwner",
{func: "Home_", ret: E.Home},
{func: "dynamic__Item_Item", args: [E.Item, E.Item]},
E.Home,
"each",
"packageName",
"libraries",
"response",
E.Category,
{func: "void__Map", void: true, args: [P.Map]},
E.LazyItem,
E.LinkableType,
E.AnnotationGroup,
[J.JSArray, E.LinkableType],
[J.JSArray, J.JSString],
{func: "Category_", ret: E.Category},
{func: "List_", ret: [J.JSArray, E.Category]},
{func: "void__Map__dynamic_dynamic", void: true, args: [P.Map], named: {isGetter: null, isSetter: null}},
{func: "void__Map__dynamic", void: true, args: [P.Map], named: {isOperator: null}},
"category",
"generic",
[J.JSArray, E.Annotation],
"annotation",
"param",
[J.JSArray, E.Parameter],
{func: "List__Map", ret: [J.JSArray, E.Parameter], args: [P.Map]},
"parameters",
{func: "Parameter__String", ret: E.Parameter, args: [J.JSString]},
E.Parameterized,
E.NestedType,
E.Parameter,
[J.JSArray, E.NestedType],
Y.DocsLocation,
"alias",
"scalar",
"seq",
"anchored",
{func: "ScalarNode__String", ret: R.ScalarNode, args: [J.JSString]},
"k",
"action",
"library",
{func: "dynamic__JsLibraryMirror", args: [H.JsLibraryMirror]},
{func: "dynamic__Symbol_Mirror", args: [P.Symbol, P.Mirror]},
"reflectiveName",
{func: "dynamic__Symbol_dynamic", args: [P.Symbol, null]},
"typeArgument",
"tv",
"methodOwner",
"fieldOwner",
{func: "ClassMirror__int", ret: P.ClassMirror, args: [J.JSInt]},
{func: "dynamic__int", args: [J.JSInt]},
"eventId",
{func: "void__Object__StackTrace", void: true, args: [P.Object], opt: [P.StackTrace]},
"theError",
"theStackTrace",
{func: "dynamic__Object", args: [P.Object]},
{func: "dynamic__dynamic__dynamic", args: [null], opt: [null]},
"ignored",
"convert",
"defaultValue",
"st",
"isMatch",
{func: "dynamic__bool", args: [J.JSBool]},
"pendingEvents",
"handleData",
"handleDone",
"resumeSignal",
"wasInputPaused",
"dispatch",
{func: "dynamic__dynamic_StackTrace", args: [null, P.StackTrace]},
"sink",
{func: "void__dynamic_StackTrace", void: true, args: [null, P.StackTrace]},
"inputEvent",
"otherZone",
"runGuarded",
"bucket",
"cell",
"objects",
"elements",
"offset",
"comp",
"key1",
"key2",
{func: "bool___SplayTreeMapNode", ret: J.JSBool, args: [P._SplayTreeMapNode]},
"leadingSurrogate",
"nextCodeUnit",
"codeUnits",
"matched",
{func: "int__String", ret: J.JSInt, args: [J.JSString]},
{func: "double__String", ret: J.JSDouble, args: [J.JSString]},
"factor",
"quotient",
"pathSegments",
"base",
"reference",
"windows",
"segment",
"ch",
{func: "bool__int", ret: J.JSBool, args: [J.JSInt]},
"digit",
"part",
{func: "int__dynamic_dynamic", ret: J.JSInt, args: [null, null]},
"byteString",
{func: "int__int_int", ret: J.JSInt, args: [J.JSInt, J.JSInt]},
"byte",
"buffer",
{func: "void__Object", void: true, args: [P.Object]},
"xhr",
"header",
"time",
"word",
"shouldAdd",
"prevValue",
"dimensions",
"augmentingMeasurement",
"selector",
"stream",
"attr",
{func: "void__Node", void: true, args: [W.Node]},
"e1",
"e2",
{func: "dynamic__int_dynamic", args: [J.JSInt, null]},
"uri",
{func: "List_0", ret: [J.JSArray, J.JSString]},
{func: "List__dynamic__bool", ret: J.JSArray, args: [null], named: {includeAllItems: J.JSBool}},
"root",
"includeAllItems",
"regex",
"logLevel",
{func: "dynamic__ZoneDelegate_Zone", args: [P.ZoneDelegate, P.Zone]},
{func: "dynamic__Zone_ZoneDelegate_Zone_args1", args: [P.Zone, P.ZoneDelegate, P.Zone, {func: "args1", args: [null]}]},
{func: "int_", ret: J.JSInt},
{func: "bool__Object", ret: J.JSBool, args: [P.Object]},
{func: "dynamic__List0", args: [[J.JSArray, G.ListChangeRecord]]},
{func: "dynamic__List1", args: [[J.JSArray, T.ChangeRecord]]},
"matcher",
"char",
"consumer",
"consumers",
"replacement",
"transformation",
"pairs",
"fn",
"expected",
"indent",
"digits",
"ctx",
{func: "Node_", ret: R.Node0},
{func: "ScalarNode_", ret: R.ScalarNode},
"chomping",
"pair",
"hex",
"range",
"part1",
"part2",
"part3",
"part4",
"part5",
"part6",
"part7",
"part8",
"superDecl",
"delegates",
"scopeDescriptor",
"cssText",
"properties",
"onName",
"eventType",
[P.Map, J.JSString, W.Element],
"declaration",
"elementElement",
{func: "void__String_String", void: true, args: [J.JSString, J.JSString]},
"preventCascade",
{func: "void__Iterable", void: true, args: [[P.Iterable, T.ChangeRecord]]},
"changes",
"sub",
"events",
{func: "void__Event", void: true, args: [W.Event]},
"callbackOrMethod",
"toNode",
"mutations",
"observer",
"p",
{func: "void__List0", void: true, args: [[J.JSArray, T.ChangeRecord]]},
"d",
"def",
{func: "dynamic__String_dynamic_dynamic", args: [J.JSString, null, null]},
"arg0",
{func: "Getter__Expression_String", ret: U.Getter, args: [U.Expression, J.JSString]},
{func: "Index__Expression_Expression", ret: U.Index, args: [U.Expression, U.Expression]},
"h",
"kind",
"precedence",
"prefix",
4,
{func: "dynamic__Expression", args: [U.Expression]},
{func: "int__SearchResult", ret: J.JSInt, args: [B.SearchResult]},
P.Comparable,
{func: "dynamic__num", args: [J.JSNumber]},
"increase",
"q",
"y",
"instanceRef",
{func: "String__Object", ret: J.JSString, args: [P.Object]},
{func: "String__List", ret: J.JSString, args: [[J.JSArray, P.Object]]},
"values",
"instanceNodes",
{func: "void__List1", void: true, args: [[J.JSArray, G.ListChangeRecord]]},
"r",
{func: "PrepareBindingFunction__String_String_Node", ret: {func: "dynamic__dynamic_Node", args: [null, W.Node]}, args: [J.JSString, J.JSString, W.Node]},
{func: "AnnotationGroup_", ret: E.AnnotationGroup},
C.C_PublishedProperty,
{func: "dynamic__AnnotationGroup", args: [E.AnnotationGroup]},
Y.PolymerElement_ChangeNotifier,
{func: "dynamic__Home", args: [E.Home]},
{func: "List_1", ret: J.JSArray},
{func: "dynamic__Item", args: [E.Item]},
"newPage",
"id",
"lib",
"libWithMember",
"mem",
{func: "dynamic__Class", args: [E.Class]},
"loaded",
{func: "List_2", ret: [J.JSArray, E.Item]},
{func: "dynamic__List2", args: [[J.JSArray, E.Item]]},
U.PolymerElement_ChangeNotifier0,
[Q.ObservableList, E.Item],
[Q.ObservableList, E.Variable],
[Q.ObservableList, E.Method],
{func: "dynamic__Category", args: [E.Category]},
{func: "ObservableList_", ret: [Q.ObservableList, E.Item]},
{func: "dynamic__ObservableList", args: [[Q.ObservableList, E.Item]]},
{func: "ObservableList_0", ret: [Q.ObservableList, E.Variable]},
{func: "dynamic__ObservableList0", args: [[Q.ObservableList, E.Variable]]},
{func: "ObservableList_1", ret: [Q.ObservableList, E.Method]},
{func: "dynamic__ObservableList1", args: [[Q.ObservableList, E.Method]]},
"expanded",
{func: "dynamic__dynamic_dynamic_AnchorElement", args: [null, null, W.AnchorElement]},
O.DartdocElement_ChangeNotifier,
Q.ObservableList,
X.LazyListLoader,
"newItem",
{func: "void__dynamic_dynamic_dynamic", void: true, args: [null, null, null]},
{func: "dynamic__Iterable__dynamic", args: [P.Iterable], named: {hidden: null}},
"hidden",
{func: "dynamic__dynamic__dynamic0", args: [null], named: {hidden: null}},
U.MemberElement,
"classLink",
W.Element,
{func: "Container_", ret: E.Container},
{func: "dynamic__Container", args: [E.Container]},
{func: "bool__AnchorElement_DocsLocation", ret: J.JSBool, args: [W.AnchorElement, Y.DocsLocation]},
"link",
"loc",
{func: "void__AnchorElement", void: true, args: [W.AnchorElement]},
{func: "void__AnchorElement_DocsLocation", void: true, args: [W.AnchorElement, Y.DocsLocation]},
S.DivElement_Polymer_ChangeNotifier,
U.DartdocElement,
{func: "LinkableType_", ret: E.LinkableType},
{func: "dynamic__LinkableType", args: [E.LinkableType]},
Q.PolymerElement_ChangeNotifier1,
{func: "void__MouseEvent_dynamic_dynamic", void: true, args: [W.MouseEvent, null, null]},
{func: "void__MouseEvent", void: true, args: [W.MouseEvent]},
{func: "void___bool_Element", void: true, named: {hide: J.JSBool, nav: W.Element}},
"hide",
"nav",
A.DartdocElement_ChangeNotifier1,
"sum",
"version",
{func: "Viewer_", ret: V.Viewer},
A.PolymerElement,
U.DartdocElement_ChangeNotifier0,
U.MemberElement_ChangeNotifier,
X.InheritedElement_ChangeNotifier,
Z.PolymerElement_ChangeNotifier2,
O.DartdocElement_ChangeNotifier2,
{func: "List_3", ret: [J.JSArray, E.Parameter]},
{func: "dynamic__List3", args: [[J.JSArray, E.Parameter]]},
{func: "void__List_String_List", void: true, args: [[J.JSArray, E.Parameter], J.JSString, [J.JSArray, E.Parameter]]},
"optional",
X.DartdocElement_ChangeNotifier3,
B.SearchResult,
{func: "SearchResult_", ret: B.SearchResult},
{func: "dynamic__SearchResult", args: [B.SearchResult]},
G.AnchorElement_Polymer_ChangeNotifier,
[Q.ObservableList, B.SearchResult],
{func: "ObservableList_2", ret: [Q.ObservableList, B.SearchResult]},
{func: "dynamic__ObservableList2", args: [[Q.ObservableList, B.SearchResult]]},
{func: "bool__DocsLocation", ret: J.JSBool, args: [Y.DocsLocation]},
{func: "void__KeyboardEvent", void: true, args: [W.KeyboardEvent]},
M.PolymerElement_ChangeNotifier3,
{func: "NestedType_", ret: E.NestedType},
{func: "dynamic__NestedType", args: [E.NestedType]},
N.PolymerElement_ChangeNotifier4,
F.InheritedElement_ChangeNotifier0,
E.MemberElement_ChangeNotifier0,
];
$ = null;
Isolate = Isolate.$finishIsolateConstructor(Isolate);
$ = new Isolate();
function convertToFastObject(properties) {
  function MyClass() {};
  MyClass.prototype = properties;
  new MyClass();
  return properties;
}
A = convertToFastObject(A);
B = convertToFastObject(B);
C = convertToFastObject(C);
D = convertToFastObject(D);
E = convertToFastObject(E);
F = convertToFastObject(F);
G = convertToFastObject(G);
H = convertToFastObject(H);
J = convertToFastObject(J);
K = convertToFastObject(K);
L = convertToFastObject(L);
M = convertToFastObject(M);
N = convertToFastObject(N);
O = convertToFastObject(O);
P = convertToFastObject(P);
Q = convertToFastObject(Q);
R = convertToFastObject(R);
S = convertToFastObject(S);
T = convertToFastObject(T);
U = convertToFastObject(U);
V = convertToFastObject(V);
W = convertToFastObject(W);
X = convertToFastObject(X);
Y = convertToFastObject(Y);
Z = convertToFastObject(Z);
!function() {
  var objectProto = Object.prototype;
  for (var i = 0;; i++) {
    var property = "___dart_dispatch_record_ZxYxX_0_";
    if (i > 0)
      property = rootProperty + "_" + i;
    if (!(property in objectProto))
      return init.dispatchPropertyName = property;
  }
}();
// BEGIN invoke [main].
;(function (callback) {
  if (typeof document === "undefined") {
    callback(null);
    return;
  }
  if (document.currentScript) {
    callback(document.currentScript);
    return;
  }

  var scripts = document.scripts;
  function onLoad(event) {
    for (var i = 0; i < scripts.length; ++i) {
      scripts[i].removeEventListener("load", onLoad, false);
    }
    callback(event.target);
  }
  for (var i = 0; i < scripts.length; ++i) {
    scripts[i].addEventListener("load", onLoad, false);
  }
})(function(currentScript) {
  init.currentScript = currentScript;

  if (typeof dartMainRunner === "function") {
    dartMainRunner(function() { H.startRootIsolate(E.main0$closure()); });
  } else {
    H.startRootIsolate(E.main0$closure());
  }
});
// END invoke [main].
function init() {
  Isolate.$isolateProperties = {};
  function generateAccessor(fieldDescriptor, accessors, cls) {
    var fieldInformation = fieldDescriptor.split("-");
    var field = fieldInformation[0];
    var len = field.length;
    var code = field.charCodeAt(len - 1);
    var reflectable;
    if (fieldInformation.length > 1)
      reflectable = true;
    else
      reflectable = false;
    code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
    if (code) {
      var getterCode = code & 3;
      var setterCode = code >> 2;
      var accessorName = field = field.substring(0, len - 1);
      var divider = field.indexOf(":");
      if (divider > 0) {
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (getterCode) {
        var args = getterCode & 2 ? "receiver" : "";
        var receiver = getterCode & 1 ? "this" : "receiver";
        var body = "return " + receiver + "." + field;
        var property = cls + ".prototype.get$" + accessorName + "=";
        var fn = "function(" + args + "){" + body + "}";
        if (reflectable)
          accessors.push(property + "$reflectable(" + fn + ");\n");
        else
          accessors.push(property + fn + ";\n");
      }
      if (setterCode) {
        var args = setterCode & 2 ? "receiver, value" : "value";
        var receiver = setterCode & 1 ? "this" : "receiver";
        var body = receiver + "." + field + " = value";
        var property = cls + ".prototype.set$" + accessorName + "=";
        var fn = "function(" + args + "){" + body + "}";
        if (reflectable)
          accessors.push(property + "$reflectable(" + fn + ");\n");
        else
          accessors.push(property + fn + ";\n");
      }
    }
    return field;
  }
  Isolate.$isolateProperties.$generateAccessor = generateAccessor;
  function defineClass(name, cls, fields) {
    var accessors = [];
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0)
        str += ", ";
      var field = generateAccessor(fields[i], accessors, cls);
      var parameter = "parameter_" + field;
      str += parameter;
      body += "this." + field + " = " + parameter + ";\n";
    }
    str += ") {\n" + body + "}\n";
    str += cls + ".builtin$cls=\"" + name + "\";\n";
    str += "$desc=$collectedClasses." + cls + ";\n";
    str += "if($desc instanceof Array) $desc = $desc[1];\n";
    str += cls + ".prototype = $desc;\n";
    if (typeof defineClass.name != "string") {
      str += cls + ".name=\"" + cls + "\";\n";
    }
    str += accessors.join("");
    return str;
  }
  var inheritFrom = function() {
    function tmp() {
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    return function(constructor, superConstructor) {
      tmp.prototype = superConstructor.prototype;
      var object = new tmp();
      var properties = constructor.prototype;
      for (var member in properties)
        if (hasOwnProperty.call(properties, member))
          object[member] = properties[member];
      object.constructor = constructor;
      constructor.prototype = object;
      return object;
    };
  }();
  Isolate.$finishClasses = function(collectedClasses, isolateProperties, existingIsolateProperties) {
    var pendingClasses = {};
    if (!init.allClasses)
      init.allClasses = {};
    var allClasses = init.allClasses;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (typeof dart_precompiled == "function") {
      var constructors = dart_precompiled(collectedClasses);
    } else {
      var combinedConstructorFunction = "function $reflectable(fn){fn.$reflectable=1;return fn};\n" + "var $desc;\n";
      var constructorsList = [];
    }
    for (var cls in collectedClasses) {
      if (hasOwnProperty.call(collectedClasses, cls)) {
        var desc = collectedClasses[cls];
        if (desc instanceof Array)
          desc = desc[1];
        var classData = desc[""], supr, name = cls, fields = classData;
        if (typeof classData == "object" && classData instanceof Array) {
          classData = fields = classData[0];
        }
        if (typeof classData == "string") {
          var split = classData.split("/");
          if (split.length == 2) {
            name = split[0];
            fields = split[1];
          }
        }
        var s = fields.split(";");
        fields = s[1] == "" ? [] : s[1].split(",");
        supr = s[0];
        split = supr.split(":");
        if (split.length == 2) {
          supr = split[0];
          var functionSignature = split[1];
          if (functionSignature)
            desc.$signature = function(s) {
              return function() {
                return init.metadata[s];
              };
            }(functionSignature);
        }
        if (supr && supr.indexOf("+") > 0) {
          s = supr.split("+");
          supr = s[0];
          var mixin = collectedClasses[s[1]];
          if (mixin instanceof Array)
            mixin = mixin[1];
          for (var d in mixin) {
            if (hasOwnProperty.call(mixin, d) && !hasOwnProperty.call(desc, d))
              desc[d] = mixin[d];
          }
        }
        if (typeof dart_precompiled != "function") {
          combinedConstructorFunction += defineClass(name, cls, fields);
          constructorsList.push(cls);
        }
        if (supr)
          pendingClasses[cls] = supr;
      }
    }
    if (typeof dart_precompiled != "function") {
      combinedConstructorFunction += "return [\n  " + constructorsList.join(",\n  ") + "\n]";
      var constructors = new Function("$collectedClasses", combinedConstructorFunction)(collectedClasses);
      combinedConstructorFunction = null;
    }
    for (var i = 0; i < constructors.length; i++) {
      var constructor = constructors[i];
      var cls = constructor.name;
      var desc = collectedClasses[cls];
      var globalObject = isolateProperties;
      if (desc instanceof Array) {
        globalObject = desc[0] || isolateProperties;
        desc = desc[1];
      }
      constructor["@"] = desc;
      allClasses[cls] = constructor;
      globalObject[cls] = constructor;
    }
    constructors = null;
    var finishedClasses = {};
    init.interceptorsByTag = Object.create(null);
    init.leafTags = {};
    function finishClass(cls) {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      if (hasOwnProperty.call(finishedClasses, cls))
        return;
      finishedClasses[cls] = true;
      var superclass = pendingClasses[cls];
      if (!superclass || typeof superclass != "string")
        return;
      finishClass(superclass);
      var constructor = allClasses[cls];
      var superConstructor = allClasses[superclass];
      if (!superConstructor)
        superConstructor = existingIsolateProperties[superclass];
      var prototype = inheritFrom(constructor, superConstructor);
      if (hasOwnProperty.call(prototype, "%")) {
        var nativeSpec = prototype["%"].split(";");
        if (nativeSpec[0]) {
          var tags = nativeSpec[0].split("|");
          for (var i = 0; i < tags.length; i++) {
            init.interceptorsByTag[tags[i]] = constructor;
            init.leafTags[tags[i]] = true;
          }
        }
        if (nativeSpec[1]) {
          tags = nativeSpec[1].split("|");
          if (nativeSpec[2]) {
            var subclasses = nativeSpec[2].split("|");
            for (var i = 0; i < subclasses.length; i++) {
              var subclass = allClasses[subclasses[i]];
              subclass.$nativeSuperclassTag = tags[0];
            }
          }
          for (i = 0; i < tags.length; i++) {
            init.interceptorsByTag[tags[i]] = constructor;
            init.leafTags[tags[i]] = false;
          }
        }
      }
    }
    for (var cls in pendingClasses)
      finishClass(cls);
  };
  Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
    if (!init.lazies)
      init.lazies = {};
    init.lazies[fieldName] = getterName;
    var sentinelUndefined = {};
    var sentinelInProgress = {};
    prototype[fieldName] = sentinelUndefined;
    prototype[getterName] = function() {
      var result = $[fieldName];
      try {
        if (result === sentinelUndefined) {
          $[fieldName] = sentinelInProgress;
          try {
            result = $[fieldName] = lazyValue();
          } finally {
            if (result === sentinelUndefined) {
              if ($[fieldName] === sentinelInProgress) {
                $[fieldName] = null;
              }
            }
          }
        } else {
          if (result === sentinelInProgress)
            H.throwCyclicInit(staticName);
        }
        return result;
      } finally {
        $[getterName] = function() {
          return this[fieldName];
        };
      }
    };
  };
  Isolate.$finishIsolateConstructor = function(oldIsolate) {
    var isolateProperties = oldIsolate.$isolateProperties;
    function Isolate() {
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      for (var staticName in isolateProperties)
        if (hasOwnProperty.call(isolateProperties, staticName))
          this[staticName] = isolateProperties[staticName];
      function ForceEfficientMap() {
      }
      ForceEfficientMap.prototype = this;
      new ForceEfficientMap();
    }
    Isolate.prototype = oldIsolate.prototype;
    Isolate.prototype.constructor = Isolate;
    Isolate.$isolateProperties = isolateProperties;
    Isolate.$finishClasses = oldIsolate.$finishClasses;
    Isolate.makeConstantList = oldIsolate.makeConstantList;
    return Isolate;
  };
}
})()
function dart_precompiled($collectedClasses) {
  var $desc;
  function HtmlElement() {
  }
  HtmlElement.builtin$cls = "HtmlElement";
  if (!"name" in HtmlElement)
    HtmlElement.name = "HtmlElement";
  $desc = $collectedClasses.HtmlElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HtmlElement.prototype = $desc;
  function _EntryArray() {
  }
  _EntryArray.builtin$cls = "_EntryArray";
  if (!"name" in _EntryArray)
    _EntryArray.name = "_EntryArray";
  $desc = $collectedClasses._EntryArray;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _EntryArray.prototype = $desc;
  function AnchorElement() {
  }
  AnchorElement.builtin$cls = "AnchorElement";
  if (!"name" in AnchorElement)
    AnchorElement.name = "AnchorElement";
  $desc = $collectedClasses.AnchorElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnchorElement.prototype = $desc;
  AnchorElement.prototype.get$target = function(receiver) {
    return receiver.target;
  };
  AnchorElement.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  AnchorElement.prototype.set$type = function(receiver, v) {
    return receiver.type = v;
  };
  AnchorElement.prototype.get$hash = function(receiver) {
    return receiver.hash;
  };
  AnchorElement.prototype.set$hash = function(receiver, v) {
    return receiver.hash = v;
  };
  AnchorElement.prototype.get$host = function(receiver) {
    return receiver.host;
  };
  AnchorElement.prototype.get$hostname = function(receiver) {
    return receiver.hostname;
  };
  AnchorElement.prototype.get$href = function(receiver) {
    return receiver.href;
  };
  AnchorElement.prototype.set$href = function(receiver, v) {
    return receiver.href = v;
  };
  AnchorElement.prototype.get$pathname = function(receiver) {
    return receiver.pathname;
  };
  AnchorElement.prototype.get$port = function(receiver) {
    return receiver.port;
  };
  AnchorElement.prototype.get$protocol = function(receiver) {
    return receiver.protocol;
  };
  AnchorElement.prototype.get$search = function(receiver) {
    return receiver.search;
  };
  function AnimationEvent() {
  }
  AnimationEvent.builtin$cls = "AnimationEvent";
  if (!"name" in AnimationEvent)
    AnimationEvent.name = "AnimationEvent";
  $desc = $collectedClasses.AnimationEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnimationEvent.prototype = $desc;
  function AreaElement() {
  }
  AreaElement.builtin$cls = "AreaElement";
  if (!"name" in AreaElement)
    AreaElement.name = "AreaElement";
  $desc = $collectedClasses.AreaElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AreaElement.prototype = $desc;
  AreaElement.prototype.get$target = function(receiver) {
    return receiver.target;
  };
  AreaElement.prototype.get$hash = function(receiver) {
    return receiver.hash;
  };
  AreaElement.prototype.set$hash = function(receiver, v) {
    return receiver.hash = v;
  };
  AreaElement.prototype.get$host = function(receiver) {
    return receiver.host;
  };
  AreaElement.prototype.get$hostname = function(receiver) {
    return receiver.hostname;
  };
  AreaElement.prototype.get$href = function(receiver) {
    return receiver.href;
  };
  AreaElement.prototype.set$href = function(receiver, v) {
    return receiver.href = v;
  };
  AreaElement.prototype.get$pathname = function(receiver) {
    return receiver.pathname;
  };
  AreaElement.prototype.get$port = function(receiver) {
    return receiver.port;
  };
  AreaElement.prototype.get$protocol = function(receiver) {
    return receiver.protocol;
  };
  AreaElement.prototype.get$search = function(receiver) {
    return receiver.search;
  };
  function AudioElement() {
  }
  AudioElement.builtin$cls = "AudioElement";
  if (!"name" in AudioElement)
    AudioElement.name = "AudioElement";
  $desc = $collectedClasses.AudioElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AudioElement.prototype = $desc;
  function AutocompleteErrorEvent() {
  }
  AutocompleteErrorEvent.builtin$cls = "AutocompleteErrorEvent";
  if (!"name" in AutocompleteErrorEvent)
    AutocompleteErrorEvent.name = "AutocompleteErrorEvent";
  $desc = $collectedClasses.AutocompleteErrorEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AutocompleteErrorEvent.prototype = $desc;
  function BRElement() {
  }
  BRElement.builtin$cls = "BRElement";
  if (!"name" in BRElement)
    BRElement.name = "BRElement";
  $desc = $collectedClasses.BRElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  BRElement.prototype = $desc;
  function BaseElement() {
  }
  BaseElement.builtin$cls = "BaseElement";
  if (!"name" in BaseElement)
    BaseElement.name = "BaseElement";
  $desc = $collectedClasses.BaseElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  BaseElement.prototype = $desc;
  BaseElement.prototype.get$href = function(receiver) {
    return receiver.href;
  };
  BaseElement.prototype.set$href = function(receiver, v) {
    return receiver.href = v;
  };
  BaseElement.prototype.get$target = function(receiver) {
    return receiver.target;
  };
  function BeforeLoadEvent() {
  }
  BeforeLoadEvent.builtin$cls = "BeforeLoadEvent";
  if (!"name" in BeforeLoadEvent)
    BeforeLoadEvent.name = "BeforeLoadEvent";
  $desc = $collectedClasses.BeforeLoadEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  BeforeLoadEvent.prototype = $desc;
  BeforeLoadEvent.prototype.get$url = function(receiver) {
    return receiver.url;
  };
  function BeforeUnloadEvent() {
  }
  BeforeUnloadEvent.builtin$cls = "BeforeUnloadEvent";
  if (!"name" in BeforeUnloadEvent)
    BeforeUnloadEvent.name = "BeforeUnloadEvent";
  $desc = $collectedClasses.BeforeUnloadEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  BeforeUnloadEvent.prototype = $desc;
  function Blob() {
  }
  Blob.builtin$cls = "Blob";
  if (!"name" in Blob)
    Blob.name = "Blob";
  $desc = $collectedClasses.Blob;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Blob.prototype = $desc;
  Blob.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  function BodyElement() {
  }
  BodyElement.builtin$cls = "BodyElement";
  if (!"name" in BodyElement)
    BodyElement.name = "BodyElement";
  $desc = $collectedClasses.BodyElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  BodyElement.prototype = $desc;
  function ButtonElement() {
  }
  ButtonElement.builtin$cls = "ButtonElement";
  if (!"name" in ButtonElement)
    ButtonElement.name = "ButtonElement";
  $desc = $collectedClasses.ButtonElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ButtonElement.prototype = $desc;
  ButtonElement.prototype.get$form = function(receiver) {
    return receiver.form;
  };
  ButtonElement.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  ButtonElement.prototype.set$name = function(receiver, v) {
    return receiver.name = v;
  };
  ButtonElement.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  ButtonElement.prototype.set$type = function(receiver, v) {
    return receiver.type = v;
  };
  ButtonElement.prototype.get$value = function(receiver) {
    return receiver.value;
  };
  ButtonElement.prototype.set$value = function(receiver, v) {
    return receiver.value = v;
  };
  function CDataSection() {
  }
  CDataSection.builtin$cls = "CDataSection";
  if (!"name" in CDataSection)
    CDataSection.name = "CDataSection";
  $desc = $collectedClasses.CDataSection;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CDataSection.prototype = $desc;
  function CanvasElement() {
  }
  CanvasElement.builtin$cls = "CanvasElement";
  if (!"name" in CanvasElement)
    CanvasElement.name = "CanvasElement";
  $desc = $collectedClasses.CanvasElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CanvasElement.prototype = $desc;
  function CharacterData() {
  }
  CharacterData.builtin$cls = "CharacterData";
  if (!"name" in CharacterData)
    CharacterData.name = "CharacterData";
  $desc = $collectedClasses.CharacterData;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CharacterData.prototype = $desc;
  CharacterData.prototype.get$length = function(receiver) {
    return receiver.length;
  };
  function CloseEvent() {
  }
  CloseEvent.builtin$cls = "CloseEvent";
  if (!"name" in CloseEvent)
    CloseEvent.name = "CloseEvent";
  $desc = $collectedClasses.CloseEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CloseEvent.prototype = $desc;
  function Comment() {
  }
  Comment.builtin$cls = "Comment";
  if (!"name" in Comment)
    Comment.name = "Comment";
  $desc = $collectedClasses.Comment;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Comment.prototype = $desc;
  function CompositionEvent() {
  }
  CompositionEvent.builtin$cls = "CompositionEvent";
  if (!"name" in CompositionEvent)
    CompositionEvent.name = "CompositionEvent";
  $desc = $collectedClasses.CompositionEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CompositionEvent.prototype = $desc;
  function ContentElement() {
  }
  ContentElement.builtin$cls = "ContentElement";
  if (!"name" in ContentElement)
    ContentElement.name = "ContentElement";
  $desc = $collectedClasses.ContentElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ContentElement.prototype = $desc;
  function CssFontFaceLoadEvent() {
  }
  CssFontFaceLoadEvent.builtin$cls = "CssFontFaceLoadEvent";
  if (!"name" in CssFontFaceLoadEvent)
    CssFontFaceLoadEvent.name = "CssFontFaceLoadEvent";
  $desc = $collectedClasses.CssFontFaceLoadEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CssFontFaceLoadEvent.prototype = $desc;
  function CssStyleDeclaration() {
  }
  CssStyleDeclaration.builtin$cls = "CssStyleDeclaration";
  if (!"name" in CssStyleDeclaration)
    CssStyleDeclaration.name = "CssStyleDeclaration";
  $desc = $collectedClasses.CssStyleDeclaration;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CssStyleDeclaration.prototype = $desc;
  CssStyleDeclaration.prototype.get$length = function(receiver) {
    return receiver.length;
  };
  function CustomEvent() {
  }
  CustomEvent.builtin$cls = "CustomEvent";
  if (!"name" in CustomEvent)
    CustomEvent.name = "CustomEvent";
  $desc = $collectedClasses.CustomEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CustomEvent.prototype = $desc;
  CustomEvent.prototype.set$_dartDetail = function(receiver, v) {
    return receiver._dartDetail = v;
  };
  function DListElement() {
  }
  DListElement.builtin$cls = "DListElement";
  if (!"name" in DListElement)
    DListElement.name = "DListElement";
  $desc = $collectedClasses.DListElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DListElement.prototype = $desc;
  function DataListElement() {
  }
  DataListElement.builtin$cls = "DataListElement";
  if (!"name" in DataListElement)
    DataListElement.name = "DataListElement";
  $desc = $collectedClasses.DataListElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DataListElement.prototype = $desc;
  function DetailsElement() {
  }
  DetailsElement.builtin$cls = "DetailsElement";
  if (!"name" in DetailsElement)
    DetailsElement.name = "DetailsElement";
  $desc = $collectedClasses.DetailsElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DetailsElement.prototype = $desc;
  function DeviceMotionEvent() {
  }
  DeviceMotionEvent.builtin$cls = "DeviceMotionEvent";
  if (!"name" in DeviceMotionEvent)
    DeviceMotionEvent.name = "DeviceMotionEvent";
  $desc = $collectedClasses.DeviceMotionEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DeviceMotionEvent.prototype = $desc;
  function DeviceOrientationEvent() {
  }
  DeviceOrientationEvent.builtin$cls = "DeviceOrientationEvent";
  if (!"name" in DeviceOrientationEvent)
    DeviceOrientationEvent.name = "DeviceOrientationEvent";
  $desc = $collectedClasses.DeviceOrientationEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DeviceOrientationEvent.prototype = $desc;
  function DialogElement() {
  }
  DialogElement.builtin$cls = "DialogElement";
  if (!"name" in DialogElement)
    DialogElement.name = "DialogElement";
  $desc = $collectedClasses.DialogElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DialogElement.prototype = $desc;
  function DivElement() {
  }
  DivElement.builtin$cls = "DivElement";
  if (!"name" in DivElement)
    DivElement.name = "DivElement";
  $desc = $collectedClasses.DivElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DivElement.prototype = $desc;
  function Document() {
  }
  Document.builtin$cls = "Document";
  if (!"name" in Document)
    Document.name = "Document";
  $desc = $collectedClasses.Document;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Document.prototype = $desc;
  function DocumentFragment() {
  }
  DocumentFragment.builtin$cls = "DocumentFragment";
  if (!"name" in DocumentFragment)
    DocumentFragment.name = "DocumentFragment";
  $desc = $collectedClasses.DocumentFragment;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DocumentFragment.prototype = $desc;
  function DocumentType() {
  }
  DocumentType.builtin$cls = "DocumentType";
  if (!"name" in DocumentType)
    DocumentType.name = "DocumentType";
  $desc = $collectedClasses.DocumentType;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DocumentType.prototype = $desc;
  function DomError() {
  }
  DomError.builtin$cls = "DomError";
  if (!"name" in DomError)
    DomError.name = "DomError";
  $desc = $collectedClasses.DomError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DomError.prototype = $desc;
  DomError.prototype.get$message = function(receiver) {
    return receiver.message;
  };
  DomError.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  function DomException() {
  }
  DomException.builtin$cls = "DomException";
  if (!"name" in DomException)
    DomException.name = "DomException";
  $desc = $collectedClasses.DomException;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DomException.prototype = $desc;
  DomException.prototype.get$message = function(receiver) {
    return receiver.message;
  };
  function DomImplementation() {
  }
  DomImplementation.builtin$cls = "DomImplementation";
  if (!"name" in DomImplementation)
    DomImplementation.name = "DomImplementation";
  $desc = $collectedClasses.DomImplementation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DomImplementation.prototype = $desc;
  function Element() {
  }
  Element.builtin$cls = "Element";
  if (!"name" in Element)
    Element.name = "Element";
  $desc = $collectedClasses.Element;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Element.prototype = $desc;
  Element.prototype.get$title = function(receiver) {
    return receiver.title;
  };
  Element.prototype.set$title = function(receiver, v) {
    return receiver.title = v;
  };
  Element.prototype.get$className = function(receiver) {
    return receiver.className;
  };
  Element.prototype.set$className = function(receiver, v) {
    return receiver.className = v;
  };
  Element.prototype.get$id = function(receiver) {
    return receiver.id;
  };
  Element.prototype.get$offsetHeight = function(receiver) {
    return receiver.offsetHeight;
  };
  Element.prototype.get$offsetWidth = function(receiver) {
    return receiver.offsetWidth;
  };
  Element.prototype.get$tagName = function(receiver) {
    return receiver.tagName;
  };
  function EmbedElement() {
  }
  EmbedElement.builtin$cls = "EmbedElement";
  if (!"name" in EmbedElement)
    EmbedElement.name = "EmbedElement";
  $desc = $collectedClasses.EmbedElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EmbedElement.prototype = $desc;
  EmbedElement.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  EmbedElement.prototype.set$name = function(receiver, v) {
    return receiver.name = v;
  };
  EmbedElement.prototype.get$src = function(receiver) {
    return receiver.src;
  };
  EmbedElement.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  EmbedElement.prototype.set$type = function(receiver, v) {
    return receiver.type = v;
  };
  function ErrorEvent() {
  }
  ErrorEvent.builtin$cls = "ErrorEvent";
  if (!"name" in ErrorEvent)
    ErrorEvent.name = "ErrorEvent";
  $desc = $collectedClasses.ErrorEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ErrorEvent.prototype = $desc;
  ErrorEvent.prototype.get$error = function(receiver) {
    return receiver.error;
  };
  ErrorEvent.prototype.get$message = function(receiver) {
    return receiver.message;
  };
  function Event() {
  }
  Event.builtin$cls = "Event";
  if (!"name" in Event)
    Event.name = "Event";
  $desc = $collectedClasses.Event;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Event.prototype = $desc;
  Event.prototype.set$_selector = function(receiver, v) {
    return receiver._selector = v;
  };
  Event.prototype.get$bubbles = function(receiver) {
    return receiver.bubbles;
  };
  Event.prototype.get$path = function(receiver) {
    return receiver.path;
  };
  Event.prototype.get$timeStamp = function(receiver) {
    return receiver.timeStamp;
  };
  Event.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  function EventTarget() {
  }
  EventTarget.builtin$cls = "EventTarget";
  if (!"name" in EventTarget)
    EventTarget.name = "EventTarget";
  $desc = $collectedClasses.EventTarget;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EventTarget.prototype = $desc;
  function FieldSetElement() {
  }
  FieldSetElement.builtin$cls = "FieldSetElement";
  if (!"name" in FieldSetElement)
    FieldSetElement.name = "FieldSetElement";
  $desc = $collectedClasses.FieldSetElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FieldSetElement.prototype = $desc;
  FieldSetElement.prototype.get$form = function(receiver) {
    return receiver.form;
  };
  FieldSetElement.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  FieldSetElement.prototype.set$name = function(receiver, v) {
    return receiver.name = v;
  };
  FieldSetElement.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  function File() {
  }
  File.builtin$cls = "File";
  if (!"name" in File)
    File.name = "File";
  $desc = $collectedClasses.File;
  if ($desc instanceof Array)
    $desc = $desc[1];
  File.prototype = $desc;
  File.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  function FileError() {
  }
  FileError.builtin$cls = "FileError";
  if (!"name" in FileError)
    FileError.name = "FileError";
  $desc = $collectedClasses.FileError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FileError.prototype = $desc;
  function FocusEvent() {
  }
  FocusEvent.builtin$cls = "FocusEvent";
  if (!"name" in FocusEvent)
    FocusEvent.name = "FocusEvent";
  $desc = $collectedClasses.FocusEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FocusEvent.prototype = $desc;
  function FormElement() {
  }
  FormElement.builtin$cls = "FormElement";
  if (!"name" in FormElement)
    FormElement.name = "FormElement";
  $desc = $collectedClasses.FormElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FormElement.prototype = $desc;
  FormElement.prototype.get$length = function(receiver) {
    return receiver.length;
  };
  FormElement.prototype.get$method = function(receiver) {
    return receiver.method;
  };
  FormElement.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  FormElement.prototype.set$name = function(receiver, v) {
    return receiver.name = v;
  };
  FormElement.prototype.get$target = function(receiver) {
    return receiver.target;
  };
  function HRElement() {
  }
  HRElement.builtin$cls = "HRElement";
  if (!"name" in HRElement)
    HRElement.name = "HRElement";
  $desc = $collectedClasses.HRElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HRElement.prototype = $desc;
  function HashChangeEvent() {
  }
  HashChangeEvent.builtin$cls = "HashChangeEvent";
  if (!"name" in HashChangeEvent)
    HashChangeEvent.name = "HashChangeEvent";
  $desc = $collectedClasses.HashChangeEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HashChangeEvent.prototype = $desc;
  function HeadElement() {
  }
  HeadElement.builtin$cls = "HeadElement";
  if (!"name" in HeadElement)
    HeadElement.name = "HeadElement";
  $desc = $collectedClasses.HeadElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HeadElement.prototype = $desc;
  function HeadingElement() {
  }
  HeadingElement.builtin$cls = "HeadingElement";
  if (!"name" in HeadingElement)
    HeadingElement.name = "HeadingElement";
  $desc = $collectedClasses.HeadingElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HeadingElement.prototype = $desc;
  function History() {
  }
  History.builtin$cls = "History";
  if (!"name" in History)
    History.name = "History";
  $desc = $collectedClasses.History;
  if ($desc instanceof Array)
    $desc = $desc[1];
  History.prototype = $desc;
  History.prototype.get$length = function(receiver) {
    return receiver.length;
  };
  function HtmlCollection() {
  }
  HtmlCollection.builtin$cls = "HtmlCollection";
  if (!"name" in HtmlCollection)
    HtmlCollection.name = "HtmlCollection";
  $desc = $collectedClasses.HtmlCollection;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HtmlCollection.prototype = $desc;
  function HtmlDocument() {
  }
  HtmlDocument.builtin$cls = "HtmlDocument";
  if (!"name" in HtmlDocument)
    HtmlDocument.name = "HtmlDocument";
  $desc = $collectedClasses.HtmlDocument;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HtmlDocument.prototype = $desc;
  function HtmlFormControlsCollection() {
  }
  HtmlFormControlsCollection.builtin$cls = "HtmlFormControlsCollection";
  if (!"name" in HtmlFormControlsCollection)
    HtmlFormControlsCollection.name = "HtmlFormControlsCollection";
  $desc = $collectedClasses.HtmlFormControlsCollection;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HtmlFormControlsCollection.prototype = $desc;
  function HtmlHtmlElement() {
  }
  HtmlHtmlElement.builtin$cls = "HtmlHtmlElement";
  if (!"name" in HtmlHtmlElement)
    HtmlHtmlElement.name = "HtmlHtmlElement";
  $desc = $collectedClasses.HtmlHtmlElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HtmlHtmlElement.prototype = $desc;
  function HtmlOptionsCollection() {
  }
  HtmlOptionsCollection.builtin$cls = "HtmlOptionsCollection";
  if (!"name" in HtmlOptionsCollection)
    HtmlOptionsCollection.name = "HtmlOptionsCollection";
  $desc = $collectedClasses.HtmlOptionsCollection;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HtmlOptionsCollection.prototype = $desc;
  function HttpRequest() {
  }
  HttpRequest.builtin$cls = "HttpRequest";
  if (!"name" in HttpRequest)
    HttpRequest.name = "HttpRequest";
  $desc = $collectedClasses.HttpRequest;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HttpRequest.prototype = $desc;
  HttpRequest.prototype.get$responseText = function(receiver) {
    return receiver.responseText;
  };
  function HttpRequestEventTarget() {
  }
  HttpRequestEventTarget.builtin$cls = "HttpRequestEventTarget";
  if (!"name" in HttpRequestEventTarget)
    HttpRequestEventTarget.name = "HttpRequestEventTarget";
  $desc = $collectedClasses.HttpRequestEventTarget;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HttpRequestEventTarget.prototype = $desc;
  function IFrameElement() {
  }
  IFrameElement.builtin$cls = "IFrameElement";
  if (!"name" in IFrameElement)
    IFrameElement.name = "IFrameElement";
  $desc = $collectedClasses.IFrameElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IFrameElement.prototype = $desc;
  IFrameElement.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  IFrameElement.prototype.set$name = function(receiver, v) {
    return receiver.name = v;
  };
  IFrameElement.prototype.get$src = function(receiver) {
    return receiver.src;
  };
  function ImageData() {
  }
  ImageData.builtin$cls = "ImageData";
  if (!"name" in ImageData)
    ImageData.name = "ImageData";
  $desc = $collectedClasses.ImageData;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ImageData.prototype = $desc;
  function ImageElement() {
  }
  ImageElement.builtin$cls = "ImageElement";
  if (!"name" in ImageElement)
    ImageElement.name = "ImageElement";
  $desc = $collectedClasses.ImageElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ImageElement.prototype = $desc;
  ImageElement.prototype.get$src = function(receiver) {
    return receiver.src;
  };
  function InputElement() {
  }
  InputElement.builtin$cls = "InputElement";
  if (!"name" in InputElement)
    InputElement.name = "InputElement";
  $desc = $collectedClasses.InputElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  InputElement.prototype = $desc;
  InputElement.prototype.get$checked = function(receiver) {
    return receiver.checked;
  };
  InputElement.prototype.set$checked = function(receiver, v) {
    return receiver.checked = v;
  };
  InputElement.prototype.get$defaultValue = function(receiver) {
    return receiver.defaultValue;
  };
  InputElement.prototype.set$defaultValue = function(receiver, v) {
    return receiver.defaultValue = v;
  };
  InputElement.prototype.get$form = function(receiver) {
    return receiver.form;
  };
  InputElement.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  InputElement.prototype.set$name = function(receiver, v) {
    return receiver.name = v;
  };
  InputElement.prototype.get$src = function(receiver) {
    return receiver.src;
  };
  InputElement.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  InputElement.prototype.set$type = function(receiver, v) {
    return receiver.type = v;
  };
  InputElement.prototype.get$value = function(receiver) {
    return receiver.value;
  };
  InputElement.prototype.set$value = function(receiver, v) {
    return receiver.value = v;
  };
  function KeyboardEvent() {
  }
  KeyboardEvent.builtin$cls = "KeyboardEvent";
  if (!"name" in KeyboardEvent)
    KeyboardEvent.name = "KeyboardEvent";
  $desc = $collectedClasses.KeyboardEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  KeyboardEvent.prototype = $desc;
  KeyboardEvent.prototype.get$ctrlKey = function(receiver) {
    return receiver.ctrlKey;
  };
  KeyboardEvent.prototype.get$location = function(receiver) {
    return receiver.location;
  };
  function KeygenElement() {
  }
  KeygenElement.builtin$cls = "KeygenElement";
  if (!"name" in KeygenElement)
    KeygenElement.name = "KeygenElement";
  $desc = $collectedClasses.KeygenElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  KeygenElement.prototype = $desc;
  KeygenElement.prototype.get$form = function(receiver) {
    return receiver.form;
  };
  KeygenElement.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  KeygenElement.prototype.set$name = function(receiver, v) {
    return receiver.name = v;
  };
  KeygenElement.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  function LIElement() {
  }
  LIElement.builtin$cls = "LIElement";
  if (!"name" in LIElement)
    LIElement.name = "LIElement";
  $desc = $collectedClasses.LIElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LIElement.prototype = $desc;
  LIElement.prototype.get$value = function(receiver) {
    return receiver.value;
  };
  LIElement.prototype.set$value = function(receiver, v) {
    return receiver.value = v;
  };
  function LabelElement() {
  }
  LabelElement.builtin$cls = "LabelElement";
  if (!"name" in LabelElement)
    LabelElement.name = "LabelElement";
  $desc = $collectedClasses.LabelElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LabelElement.prototype = $desc;
  LabelElement.prototype.get$form = function(receiver) {
    return receiver.form;
  };
  function LegendElement() {
  }
  LegendElement.builtin$cls = "LegendElement";
  if (!"name" in LegendElement)
    LegendElement.name = "LegendElement";
  $desc = $collectedClasses.LegendElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LegendElement.prototype = $desc;
  LegendElement.prototype.get$form = function(receiver) {
    return receiver.form;
  };
  function LinkElement() {
  }
  LinkElement.builtin$cls = "LinkElement";
  if (!"name" in LinkElement)
    LinkElement.name = "LinkElement";
  $desc = $collectedClasses.LinkElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkElement.prototype = $desc;
  LinkElement.prototype.get$href = function(receiver) {
    return receiver.href;
  };
  LinkElement.prototype.set$href = function(receiver, v) {
    return receiver.href = v;
  };
  LinkElement.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  LinkElement.prototype.set$type = function(receiver, v) {
    return receiver.type = v;
  };
  function Location() {
  }
  Location.builtin$cls = "Location";
  if (!"name" in Location)
    Location.name = "Location";
  $desc = $collectedClasses.Location;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Location.prototype = $desc;
  Location.prototype.get$hash = function(receiver) {
    return receiver.hash;
  };
  Location.prototype.set$hash = function(receiver, v) {
    return receiver.hash = v;
  };
  Location.prototype.get$host = function(receiver) {
    return receiver.host;
  };
  Location.prototype.get$hostname = function(receiver) {
    return receiver.hostname;
  };
  Location.prototype.get$href = function(receiver) {
    return receiver.href;
  };
  Location.prototype.set$href = function(receiver, v) {
    return receiver.href = v;
  };
  Location.prototype.get$pathname = function(receiver) {
    return receiver.pathname;
  };
  Location.prototype.get$port = function(receiver) {
    return receiver.port;
  };
  Location.prototype.get$protocol = function(receiver) {
    return receiver.protocol;
  };
  Location.prototype.get$search = function(receiver) {
    return receiver.search;
  };
  function MapElement() {
  }
  MapElement.builtin$cls = "MapElement";
  if (!"name" in MapElement)
    MapElement.name = "MapElement";
  $desc = $collectedClasses.MapElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MapElement.prototype = $desc;
  MapElement.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  MapElement.prototype.set$name = function(receiver, v) {
    return receiver.name = v;
  };
  function MediaElement() {
  }
  MediaElement.builtin$cls = "MediaElement";
  if (!"name" in MediaElement)
    MediaElement.name = "MediaElement";
  $desc = $collectedClasses.MediaElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MediaElement.prototype = $desc;
  MediaElement.prototype.get$error = function(receiver) {
    return receiver.error;
  };
  MediaElement.prototype.get$src = function(receiver) {
    return receiver.src;
  };
  function MediaError() {
  }
  MediaError.builtin$cls = "MediaError";
  if (!"name" in MediaError)
    MediaError.name = "MediaError";
  $desc = $collectedClasses.MediaError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MediaError.prototype = $desc;
  function MediaKeyError() {
  }
  MediaKeyError.builtin$cls = "MediaKeyError";
  if (!"name" in MediaKeyError)
    MediaKeyError.name = "MediaKeyError";
  $desc = $collectedClasses.MediaKeyError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MediaKeyError.prototype = $desc;
  function MediaKeyEvent() {
  }
  MediaKeyEvent.builtin$cls = "MediaKeyEvent";
  if (!"name" in MediaKeyEvent)
    MediaKeyEvent.name = "MediaKeyEvent";
  $desc = $collectedClasses.MediaKeyEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MediaKeyEvent.prototype = $desc;
  MediaKeyEvent.prototype.get$message = function(receiver) {
    return receiver.message;
  };
  function MediaKeyMessageEvent() {
  }
  MediaKeyMessageEvent.builtin$cls = "MediaKeyMessageEvent";
  if (!"name" in MediaKeyMessageEvent)
    MediaKeyMessageEvent.name = "MediaKeyMessageEvent";
  $desc = $collectedClasses.MediaKeyMessageEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MediaKeyMessageEvent.prototype = $desc;
  MediaKeyMessageEvent.prototype.get$message = function(receiver) {
    return receiver.message;
  };
  function MediaKeyNeededEvent() {
  }
  MediaKeyNeededEvent.builtin$cls = "MediaKeyNeededEvent";
  if (!"name" in MediaKeyNeededEvent)
    MediaKeyNeededEvent.name = "MediaKeyNeededEvent";
  $desc = $collectedClasses.MediaKeyNeededEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MediaKeyNeededEvent.prototype = $desc;
  function MediaStream() {
  }
  MediaStream.builtin$cls = "MediaStream";
  if (!"name" in MediaStream)
    MediaStream.name = "MediaStream";
  $desc = $collectedClasses.MediaStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MediaStream.prototype = $desc;
  MediaStream.prototype.get$id = function(receiver) {
    return receiver.id;
  };
  function MediaStreamEvent() {
  }
  MediaStreamEvent.builtin$cls = "MediaStreamEvent";
  if (!"name" in MediaStreamEvent)
    MediaStreamEvent.name = "MediaStreamEvent";
  $desc = $collectedClasses.MediaStreamEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MediaStreamEvent.prototype = $desc;
  function MediaStreamTrackEvent() {
  }
  MediaStreamTrackEvent.builtin$cls = "MediaStreamTrackEvent";
  if (!"name" in MediaStreamTrackEvent)
    MediaStreamTrackEvent.name = "MediaStreamTrackEvent";
  $desc = $collectedClasses.MediaStreamTrackEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MediaStreamTrackEvent.prototype = $desc;
  function MenuElement() {
  }
  MenuElement.builtin$cls = "MenuElement";
  if (!"name" in MenuElement)
    MenuElement.name = "MenuElement";
  $desc = $collectedClasses.MenuElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MenuElement.prototype = $desc;
  function MessageEvent() {
  }
  MessageEvent.builtin$cls = "MessageEvent";
  if (!"name" in MessageEvent)
    MessageEvent.name = "MessageEvent";
  $desc = $collectedClasses.MessageEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MessageEvent.prototype = $desc;
  function MetaElement() {
  }
  MetaElement.builtin$cls = "MetaElement";
  if (!"name" in MetaElement)
    MetaElement.name = "MetaElement";
  $desc = $collectedClasses.MetaElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MetaElement.prototype = $desc;
  MetaElement.prototype.get$content = function(receiver) {
    return receiver.content;
  };
  MetaElement.prototype.set$content = function(receiver, v) {
    return receiver.content = v;
  };
  MetaElement.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  MetaElement.prototype.set$name = function(receiver, v) {
    return receiver.name = v;
  };
  function MeterElement() {
  }
  MeterElement.builtin$cls = "MeterElement";
  if (!"name" in MeterElement)
    MeterElement.name = "MeterElement";
  $desc = $collectedClasses.MeterElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MeterElement.prototype = $desc;
  MeterElement.prototype.get$value = function(receiver) {
    return receiver.value;
  };
  MeterElement.prototype.set$value = function(receiver, v) {
    return receiver.value = v;
  };
  function MidiConnectionEvent() {
  }
  MidiConnectionEvent.builtin$cls = "MidiConnectionEvent";
  if (!"name" in MidiConnectionEvent)
    MidiConnectionEvent.name = "MidiConnectionEvent";
  $desc = $collectedClasses.MidiConnectionEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MidiConnectionEvent.prototype = $desc;
  MidiConnectionEvent.prototype.get$port = function(receiver) {
    return receiver.port;
  };
  function MidiInput() {
  }
  MidiInput.builtin$cls = "MidiInput";
  if (!"name" in MidiInput)
    MidiInput.name = "MidiInput";
  $desc = $collectedClasses.MidiInput;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MidiInput.prototype = $desc;
  function MidiMessageEvent() {
  }
  MidiMessageEvent.builtin$cls = "MidiMessageEvent";
  if (!"name" in MidiMessageEvent)
    MidiMessageEvent.name = "MidiMessageEvent";
  $desc = $collectedClasses.MidiMessageEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MidiMessageEvent.prototype = $desc;
  function MidiOutput() {
  }
  MidiOutput.builtin$cls = "MidiOutput";
  if (!"name" in MidiOutput)
    MidiOutput.name = "MidiOutput";
  $desc = $collectedClasses.MidiOutput;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MidiOutput.prototype = $desc;
  function MidiPort() {
  }
  MidiPort.builtin$cls = "MidiPort";
  if (!"name" in MidiPort)
    MidiPort.name = "MidiPort";
  $desc = $collectedClasses.MidiPort;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MidiPort.prototype = $desc;
  MidiPort.prototype.get$id = function(receiver) {
    return receiver.id;
  };
  MidiPort.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  MidiPort.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  function ModElement() {
  }
  ModElement.builtin$cls = "ModElement";
  if (!"name" in ModElement)
    ModElement.name = "ModElement";
  $desc = $collectedClasses.ModElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ModElement.prototype = $desc;
  function MouseEvent() {
  }
  MouseEvent.builtin$cls = "MouseEvent";
  if (!"name" in MouseEvent)
    MouseEvent.name = "MouseEvent";
  $desc = $collectedClasses.MouseEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MouseEvent.prototype = $desc;
  MouseEvent.prototype.get$ctrlKey = function(receiver) {
    return receiver.ctrlKey;
  };
  function MutationObserver() {
  }
  MutationObserver.builtin$cls = "MutationObserver";
  if (!"name" in MutationObserver)
    MutationObserver.name = "MutationObserver";
  $desc = $collectedClasses.MutationObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MutationObserver.prototype = $desc;
  function MutationRecord() {
  }
  MutationRecord.builtin$cls = "MutationRecord";
  if (!"name" in MutationRecord)
    MutationRecord.name = "MutationRecord";
  $desc = $collectedClasses.MutationRecord;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MutationRecord.prototype = $desc;
  MutationRecord.prototype.get$oldValue = function(receiver) {
    return receiver.oldValue;
  };
  MutationRecord.prototype.get$target = function(receiver) {
    return receiver.target;
  };
  MutationRecord.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  function Navigator() {
  }
  Navigator.builtin$cls = "Navigator";
  if (!"name" in Navigator)
    Navigator.name = "Navigator";
  $desc = $collectedClasses.Navigator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Navigator.prototype = $desc;
  function NavigatorUserMediaError() {
  }
  NavigatorUserMediaError.builtin$cls = "NavigatorUserMediaError";
  if (!"name" in NavigatorUserMediaError)
    NavigatorUserMediaError.name = "NavigatorUserMediaError";
  $desc = $collectedClasses.NavigatorUserMediaError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NavigatorUserMediaError.prototype = $desc;
  NavigatorUserMediaError.prototype.get$message = function(receiver) {
    return receiver.message;
  };
  NavigatorUserMediaError.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  function Node() {
  }
  Node.builtin$cls = "Node";
  if (!"name" in Node)
    Node.name = "Node";
  $desc = $collectedClasses.Node;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Node.prototype = $desc;
  Node.prototype.get$firstChild = function(receiver) {
    return receiver.firstChild;
  };
  Node.prototype.get$nextNode = function(receiver) {
    return receiver.nextSibling;
  };
  Node.prototype.get$ownerDocument = function(receiver) {
    return receiver.ownerDocument;
  };
  Node.prototype.get$parent = function(receiver) {
    return receiver.parentElement;
  };
  Node.prototype.get$parentNode = function(receiver) {
    return receiver.parentNode;
  };
  Node.prototype.get$text = function(receiver) {
    return receiver.textContent;
  };
  Node.prototype.set$text = function(receiver, v) {
    return receiver.textContent = v;
  };
  function NodeList() {
  }
  NodeList.builtin$cls = "NodeList";
  if (!"name" in NodeList)
    NodeList.name = "NodeList";
  $desc = $collectedClasses.NodeList;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NodeList.prototype = $desc;
  function OListElement() {
  }
  OListElement.builtin$cls = "OListElement";
  if (!"name" in OListElement)
    OListElement.name = "OListElement";
  $desc = $collectedClasses.OListElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  OListElement.prototype = $desc;
  OListElement.prototype.get$reversed = function(receiver) {
    return receiver.reversed;
  };
  OListElement.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  OListElement.prototype.set$type = function(receiver, v) {
    return receiver.type = v;
  };
  function ObjectElement() {
  }
  ObjectElement.builtin$cls = "ObjectElement";
  if (!"name" in ObjectElement)
    ObjectElement.name = "ObjectElement";
  $desc = $collectedClasses.ObjectElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObjectElement.prototype = $desc;
  ObjectElement.prototype.get$form = function(receiver) {
    return receiver.form;
  };
  ObjectElement.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  ObjectElement.prototype.set$name = function(receiver, v) {
    return receiver.name = v;
  };
  ObjectElement.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  ObjectElement.prototype.set$type = function(receiver, v) {
    return receiver.type = v;
  };
  function OptGroupElement() {
  }
  OptGroupElement.builtin$cls = "OptGroupElement";
  if (!"name" in OptGroupElement)
    OptGroupElement.name = "OptGroupElement";
  $desc = $collectedClasses.OptGroupElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  OptGroupElement.prototype = $desc;
  function OptionElement() {
  }
  OptionElement.builtin$cls = "OptionElement";
  if (!"name" in OptionElement)
    OptionElement.name = "OptionElement";
  $desc = $collectedClasses.OptionElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  OptionElement.prototype = $desc;
  OptionElement.prototype.get$form = function(receiver) {
    return receiver.form;
  };
  OptionElement.prototype.get$index = function(receiver) {
    return receiver.index;
  };
  OptionElement.prototype.get$value = function(receiver) {
    return receiver.value;
  };
  OptionElement.prototype.set$value = function(receiver, v) {
    return receiver.value = v;
  };
  function OutputElement() {
  }
  OutputElement.builtin$cls = "OutputElement";
  if (!"name" in OutputElement)
    OutputElement.name = "OutputElement";
  $desc = $collectedClasses.OutputElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  OutputElement.prototype = $desc;
  OutputElement.prototype.get$defaultValue = function(receiver) {
    return receiver.defaultValue;
  };
  OutputElement.prototype.set$defaultValue = function(receiver, v) {
    return receiver.defaultValue = v;
  };
  OutputElement.prototype.get$form = function(receiver) {
    return receiver.form;
  };
  OutputElement.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  OutputElement.prototype.set$name = function(receiver, v) {
    return receiver.name = v;
  };
  OutputElement.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  OutputElement.prototype.get$value = function(receiver) {
    return receiver.value;
  };
  OutputElement.prototype.set$value = function(receiver, v) {
    return receiver.value = v;
  };
  function OverflowEvent() {
  }
  OverflowEvent.builtin$cls = "OverflowEvent";
  if (!"name" in OverflowEvent)
    OverflowEvent.name = "OverflowEvent";
  $desc = $collectedClasses.OverflowEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  OverflowEvent.prototype = $desc;
  function PageTransitionEvent() {
  }
  PageTransitionEvent.builtin$cls = "PageTransitionEvent";
  if (!"name" in PageTransitionEvent)
    PageTransitionEvent.name = "PageTransitionEvent";
  $desc = $collectedClasses.PageTransitionEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PageTransitionEvent.prototype = $desc;
  function ParagraphElement() {
  }
  ParagraphElement.builtin$cls = "ParagraphElement";
  if (!"name" in ParagraphElement)
    ParagraphElement.name = "ParagraphElement";
  $desc = $collectedClasses.ParagraphElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ParagraphElement.prototype = $desc;
  function ParamElement() {
  }
  ParamElement.builtin$cls = "ParamElement";
  if (!"name" in ParamElement)
    ParamElement.name = "ParamElement";
  $desc = $collectedClasses.ParamElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ParamElement.prototype = $desc;
  ParamElement.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  ParamElement.prototype.set$name = function(receiver, v) {
    return receiver.name = v;
  };
  ParamElement.prototype.get$value = function(receiver) {
    return receiver.value;
  };
  ParamElement.prototype.set$value = function(receiver, v) {
    return receiver.value = v;
  };
  function PopStateEvent() {
  }
  PopStateEvent.builtin$cls = "PopStateEvent";
  if (!"name" in PopStateEvent)
    PopStateEvent.name = "PopStateEvent";
  $desc = $collectedClasses.PopStateEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PopStateEvent.prototype = $desc;
  function PositionError() {
  }
  PositionError.builtin$cls = "PositionError";
  if (!"name" in PositionError)
    PositionError.name = "PositionError";
  $desc = $collectedClasses.PositionError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PositionError.prototype = $desc;
  PositionError.prototype.get$message = function(receiver) {
    return receiver.message;
  };
  function PreElement() {
  }
  PreElement.builtin$cls = "PreElement";
  if (!"name" in PreElement)
    PreElement.name = "PreElement";
  $desc = $collectedClasses.PreElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PreElement.prototype = $desc;
  function ProcessingInstruction() {
  }
  ProcessingInstruction.builtin$cls = "ProcessingInstruction";
  if (!"name" in ProcessingInstruction)
    ProcessingInstruction.name = "ProcessingInstruction";
  $desc = $collectedClasses.ProcessingInstruction;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ProcessingInstruction.prototype = $desc;
  ProcessingInstruction.prototype.get$target = function(receiver) {
    return receiver.target;
  };
  function ProgressElement() {
  }
  ProgressElement.builtin$cls = "ProgressElement";
  if (!"name" in ProgressElement)
    ProgressElement.name = "ProgressElement";
  $desc = $collectedClasses.ProgressElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ProgressElement.prototype = $desc;
  ProgressElement.prototype.get$position = function(receiver) {
    return receiver.position;
  };
  ProgressElement.prototype.get$value = function(receiver) {
    return receiver.value;
  };
  ProgressElement.prototype.set$value = function(receiver, v) {
    return receiver.value = v;
  };
  function ProgressEvent() {
  }
  ProgressEvent.builtin$cls = "ProgressEvent";
  if (!"name" in ProgressEvent)
    ProgressEvent.name = "ProgressEvent";
  $desc = $collectedClasses.ProgressEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ProgressEvent.prototype = $desc;
  function QuoteElement() {
  }
  QuoteElement.builtin$cls = "QuoteElement";
  if (!"name" in QuoteElement)
    QuoteElement.name = "QuoteElement";
  $desc = $collectedClasses.QuoteElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  QuoteElement.prototype = $desc;
  function Range() {
  }
  Range.builtin$cls = "Range";
  if (!"name" in Range)
    Range.name = "Range";
  $desc = $collectedClasses.Range;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Range.prototype = $desc;
  function ResourceProgressEvent() {
  }
  ResourceProgressEvent.builtin$cls = "ResourceProgressEvent";
  if (!"name" in ResourceProgressEvent)
    ResourceProgressEvent.name = "ResourceProgressEvent";
  $desc = $collectedClasses.ResourceProgressEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ResourceProgressEvent.prototype = $desc;
  ResourceProgressEvent.prototype.get$url = function(receiver) {
    return receiver.url;
  };
  function RtcDataChannelEvent() {
  }
  RtcDataChannelEvent.builtin$cls = "RtcDataChannelEvent";
  if (!"name" in RtcDataChannelEvent)
    RtcDataChannelEvent.name = "RtcDataChannelEvent";
  $desc = $collectedClasses.RtcDataChannelEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RtcDataChannelEvent.prototype = $desc;
  function RtcDtmfToneChangeEvent() {
  }
  RtcDtmfToneChangeEvent.builtin$cls = "RtcDtmfToneChangeEvent";
  if (!"name" in RtcDtmfToneChangeEvent)
    RtcDtmfToneChangeEvent.name = "RtcDtmfToneChangeEvent";
  $desc = $collectedClasses.RtcDtmfToneChangeEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RtcDtmfToneChangeEvent.prototype = $desc;
  function RtcIceCandidateEvent() {
  }
  RtcIceCandidateEvent.builtin$cls = "RtcIceCandidateEvent";
  if (!"name" in RtcIceCandidateEvent)
    RtcIceCandidateEvent.name = "RtcIceCandidateEvent";
  $desc = $collectedClasses.RtcIceCandidateEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RtcIceCandidateEvent.prototype = $desc;
  function ScriptElement0() {
  }
  ScriptElement0.builtin$cls = "ScriptElement0";
  if (!"name" in ScriptElement0)
    ScriptElement0.name = "ScriptElement0";
  $desc = $collectedClasses.ScriptElement0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ScriptElement0.prototype = $desc;
  ScriptElement0.prototype.get$src = function(receiver) {
    return receiver.src;
  };
  ScriptElement0.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  ScriptElement0.prototype.set$type = function(receiver, v) {
    return receiver.type = v;
  };
  function SecurityPolicyViolationEvent() {
  }
  SecurityPolicyViolationEvent.builtin$cls = "SecurityPolicyViolationEvent";
  if (!"name" in SecurityPolicyViolationEvent)
    SecurityPolicyViolationEvent.name = "SecurityPolicyViolationEvent";
  $desc = $collectedClasses.SecurityPolicyViolationEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SecurityPolicyViolationEvent.prototype = $desc;
  function SelectElement() {
  }
  SelectElement.builtin$cls = "SelectElement";
  if (!"name" in SelectElement)
    SelectElement.name = "SelectElement";
  $desc = $collectedClasses.SelectElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SelectElement.prototype = $desc;
  SelectElement.prototype.get$form = function(receiver) {
    return receiver.form;
  };
  SelectElement.prototype.get$length = function(receiver) {
    return receiver.length;
  };
  SelectElement.prototype.set$length = function(receiver, v) {
    return receiver.length = v;
  };
  SelectElement.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  SelectElement.prototype.set$name = function(receiver, v) {
    return receiver.name = v;
  };
  SelectElement.prototype.get$selectedIndex = function(receiver) {
    return receiver.selectedIndex;
  };
  SelectElement.prototype.set$selectedIndex = function(receiver, v) {
    return receiver.selectedIndex = v;
  };
  SelectElement.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  SelectElement.prototype.get$value = function(receiver) {
    return receiver.value;
  };
  SelectElement.prototype.set$value = function(receiver, v) {
    return receiver.value = v;
  };
  function ShadowElement() {
  }
  ShadowElement.builtin$cls = "ShadowElement";
  if (!"name" in ShadowElement)
    ShadowElement.name = "ShadowElement";
  $desc = $collectedClasses.ShadowElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ShadowElement.prototype = $desc;
  function ShadowRoot() {
  }
  ShadowRoot.builtin$cls = "ShadowRoot";
  if (!"name" in ShadowRoot)
    ShadowRoot.name = "ShadowRoot";
  $desc = $collectedClasses.ShadowRoot;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ShadowRoot.prototype = $desc;
  ShadowRoot.prototype.get$applyAuthorStyles = function(receiver) {
    return receiver.applyAuthorStyles;
  };
  ShadowRoot.prototype.get$host = function(receiver) {
    return receiver.host;
  };
  ShadowRoot.prototype.get$innerHtml = function(receiver) {
    return receiver.innerHTML;
  };
  function SourceElement() {
  }
  SourceElement.builtin$cls = "SourceElement";
  if (!"name" in SourceElement)
    SourceElement.name = "SourceElement";
  $desc = $collectedClasses.SourceElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SourceElement.prototype = $desc;
  SourceElement.prototype.get$src = function(receiver) {
    return receiver.src;
  };
  SourceElement.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  SourceElement.prototype.set$type = function(receiver, v) {
    return receiver.type = v;
  };
  function SpanElement() {
  }
  SpanElement.builtin$cls = "SpanElement";
  if (!"name" in SpanElement)
    SpanElement.name = "SpanElement";
  $desc = $collectedClasses.SpanElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SpanElement.prototype = $desc;
  function SpeechInputEvent() {
  }
  SpeechInputEvent.builtin$cls = "SpeechInputEvent";
  if (!"name" in SpeechInputEvent)
    SpeechInputEvent.name = "SpeechInputEvent";
  $desc = $collectedClasses.SpeechInputEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SpeechInputEvent.prototype = $desc;
  SpeechInputEvent.prototype.get$results = function(receiver) {
    return receiver.results;
  };
  function SpeechInputResult() {
  }
  SpeechInputResult.builtin$cls = "SpeechInputResult";
  if (!"name" in SpeechInputResult)
    SpeechInputResult.name = "SpeechInputResult";
  $desc = $collectedClasses.SpeechInputResult;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SpeechInputResult.prototype = $desc;
  function SpeechRecognitionAlternative() {
  }
  SpeechRecognitionAlternative.builtin$cls = "SpeechRecognitionAlternative";
  if (!"name" in SpeechRecognitionAlternative)
    SpeechRecognitionAlternative.name = "SpeechRecognitionAlternative";
  $desc = $collectedClasses.SpeechRecognitionAlternative;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SpeechRecognitionAlternative.prototype = $desc;
  function SpeechRecognitionError() {
  }
  SpeechRecognitionError.builtin$cls = "SpeechRecognitionError";
  if (!"name" in SpeechRecognitionError)
    SpeechRecognitionError.name = "SpeechRecognitionError";
  $desc = $collectedClasses.SpeechRecognitionError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SpeechRecognitionError.prototype = $desc;
  SpeechRecognitionError.prototype.get$error = function(receiver) {
    return receiver.error;
  };
  SpeechRecognitionError.prototype.get$message = function(receiver) {
    return receiver.message;
  };
  function SpeechRecognitionEvent() {
  }
  SpeechRecognitionEvent.builtin$cls = "SpeechRecognitionEvent";
  if (!"name" in SpeechRecognitionEvent)
    SpeechRecognitionEvent.name = "SpeechRecognitionEvent";
  $desc = $collectedClasses.SpeechRecognitionEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SpeechRecognitionEvent.prototype = $desc;
  SpeechRecognitionEvent.prototype.get$results = function(receiver) {
    return receiver.results;
  };
  function SpeechRecognitionResult() {
  }
  SpeechRecognitionResult.builtin$cls = "SpeechRecognitionResult";
  if (!"name" in SpeechRecognitionResult)
    SpeechRecognitionResult.name = "SpeechRecognitionResult";
  $desc = $collectedClasses.SpeechRecognitionResult;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SpeechRecognitionResult.prototype = $desc;
  SpeechRecognitionResult.prototype.get$isFinal = function(receiver) {
    return receiver.isFinal;
  };
  SpeechRecognitionResult.prototype.get$length = function(receiver) {
    return receiver.length;
  };
  function SpeechSynthesisEvent() {
  }
  SpeechSynthesisEvent.builtin$cls = "SpeechSynthesisEvent";
  if (!"name" in SpeechSynthesisEvent)
    SpeechSynthesisEvent.name = "SpeechSynthesisEvent";
  $desc = $collectedClasses.SpeechSynthesisEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SpeechSynthesisEvent.prototype = $desc;
  SpeechSynthesisEvent.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  function StorageEvent() {
  }
  StorageEvent.builtin$cls = "StorageEvent";
  if (!"name" in StorageEvent)
    StorageEvent.name = "StorageEvent";
  $desc = $collectedClasses.StorageEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StorageEvent.prototype = $desc;
  StorageEvent.prototype.get$key = function(receiver) {
    return receiver.key;
  };
  StorageEvent.prototype.get$newValue = function(receiver) {
    return receiver.newValue;
  };
  StorageEvent.prototype.get$oldValue = function(receiver) {
    return receiver.oldValue;
  };
  StorageEvent.prototype.get$url = function(receiver) {
    return receiver.url;
  };
  function StyleElement() {
  }
  StyleElement.builtin$cls = "StyleElement";
  if (!"name" in StyleElement)
    StyleElement.name = "StyleElement";
  $desc = $collectedClasses.StyleElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StyleElement.prototype = $desc;
  StyleElement.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  StyleElement.prototype.set$type = function(receiver, v) {
    return receiver.type = v;
  };
  function TableCaptionElement() {
  }
  TableCaptionElement.builtin$cls = "TableCaptionElement";
  if (!"name" in TableCaptionElement)
    TableCaptionElement.name = "TableCaptionElement";
  $desc = $collectedClasses.TableCaptionElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TableCaptionElement.prototype = $desc;
  function TableCellElement() {
  }
  TableCellElement.builtin$cls = "TableCellElement";
  if (!"name" in TableCellElement)
    TableCellElement.name = "TableCellElement";
  $desc = $collectedClasses.TableCellElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TableCellElement.prototype = $desc;
  function TableColElement() {
  }
  TableColElement.builtin$cls = "TableColElement";
  if (!"name" in TableColElement)
    TableColElement.name = "TableColElement";
  $desc = $collectedClasses.TableColElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TableColElement.prototype = $desc;
  function TableElement() {
  }
  TableElement.builtin$cls = "TableElement";
  if (!"name" in TableElement)
    TableElement.name = "TableElement";
  $desc = $collectedClasses.TableElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TableElement.prototype = $desc;
  function TableRowElement() {
  }
  TableRowElement.builtin$cls = "TableRowElement";
  if (!"name" in TableRowElement)
    TableRowElement.name = "TableRowElement";
  $desc = $collectedClasses.TableRowElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TableRowElement.prototype = $desc;
  function TableSectionElement() {
  }
  TableSectionElement.builtin$cls = "TableSectionElement";
  if (!"name" in TableSectionElement)
    TableSectionElement.name = "TableSectionElement";
  $desc = $collectedClasses.TableSectionElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TableSectionElement.prototype = $desc;
  function TemplateElement() {
  }
  TemplateElement.builtin$cls = "TemplateElement";
  if (!"name" in TemplateElement)
    TemplateElement.name = "TemplateElement";
  $desc = $collectedClasses.TemplateElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TemplateElement.prototype = $desc;
  TemplateElement.prototype.get$content = function(receiver) {
    return receiver.content;
  };
  function Text() {
  }
  Text.builtin$cls = "Text";
  if (!"name" in Text)
    Text.name = "Text";
  $desc = $collectedClasses.Text;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Text.prototype = $desc;
  function TextAreaElement() {
  }
  TextAreaElement.builtin$cls = "TextAreaElement";
  if (!"name" in TextAreaElement)
    TextAreaElement.name = "TextAreaElement";
  $desc = $collectedClasses.TextAreaElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TextAreaElement.prototype = $desc;
  TextAreaElement.prototype.get$defaultValue = function(receiver) {
    return receiver.defaultValue;
  };
  TextAreaElement.prototype.set$defaultValue = function(receiver, v) {
    return receiver.defaultValue = v;
  };
  TextAreaElement.prototype.get$form = function(receiver) {
    return receiver.form;
  };
  TextAreaElement.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  TextAreaElement.prototype.set$name = function(receiver, v) {
    return receiver.name = v;
  };
  TextAreaElement.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  TextAreaElement.prototype.get$value = function(receiver) {
    return receiver.value;
  };
  TextAreaElement.prototype.set$value = function(receiver, v) {
    return receiver.value = v;
  };
  function TextEvent() {
  }
  TextEvent.builtin$cls = "TextEvent";
  if (!"name" in TextEvent)
    TextEvent.name = "TextEvent";
  $desc = $collectedClasses.TextEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TextEvent.prototype = $desc;
  function TitleElement() {
  }
  TitleElement.builtin$cls = "TitleElement";
  if (!"name" in TitleElement)
    TitleElement.name = "TitleElement";
  $desc = $collectedClasses.TitleElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TitleElement.prototype = $desc;
  function TouchEvent() {
  }
  TouchEvent.builtin$cls = "TouchEvent";
  if (!"name" in TouchEvent)
    TouchEvent.name = "TouchEvent";
  $desc = $collectedClasses.TouchEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TouchEvent.prototype = $desc;
  TouchEvent.prototype.get$ctrlKey = function(receiver) {
    return receiver.ctrlKey;
  };
  function TrackElement() {
  }
  TrackElement.builtin$cls = "TrackElement";
  if (!"name" in TrackElement)
    TrackElement.name = "TrackElement";
  $desc = $collectedClasses.TrackElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TrackElement.prototype = $desc;
  TrackElement.prototype.get$defaultValue = function(receiver) {
    return receiver.default;
  };
  TrackElement.prototype.set$defaultValue = function(receiver, v) {
    return receiver.default = v;
  };
  TrackElement.prototype.get$kind = function(receiver) {
    return receiver.kind;
  };
  TrackElement.prototype.get$src = function(receiver) {
    return receiver.src;
  };
  function TrackEvent() {
  }
  TrackEvent.builtin$cls = "TrackEvent";
  if (!"name" in TrackEvent)
    TrackEvent.name = "TrackEvent";
  $desc = $collectedClasses.TrackEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TrackEvent.prototype = $desc;
  function TransitionEvent() {
  }
  TransitionEvent.builtin$cls = "TransitionEvent";
  if (!"name" in TransitionEvent)
    TransitionEvent.name = "TransitionEvent";
  $desc = $collectedClasses.TransitionEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TransitionEvent.prototype = $desc;
  function UIEvent() {
  }
  UIEvent.builtin$cls = "UIEvent";
  if (!"name" in UIEvent)
    UIEvent.name = "UIEvent";
  $desc = $collectedClasses.UIEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UIEvent.prototype = $desc;
  function UListElement() {
  }
  UListElement.builtin$cls = "UListElement";
  if (!"name" in UListElement)
    UListElement.name = "UListElement";
  $desc = $collectedClasses.UListElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UListElement.prototype = $desc;
  function UnknownElement() {
  }
  UnknownElement.builtin$cls = "UnknownElement";
  if (!"name" in UnknownElement)
    UnknownElement.name = "UnknownElement";
  $desc = $collectedClasses.UnknownElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnknownElement.prototype = $desc;
  function VideoElement() {
  }
  VideoElement.builtin$cls = "VideoElement";
  if (!"name" in VideoElement)
    VideoElement.name = "VideoElement";
  $desc = $collectedClasses.VideoElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  VideoElement.prototype = $desc;
  function WheelEvent() {
  }
  WheelEvent.builtin$cls = "WheelEvent";
  if (!"name" in WheelEvent)
    WheelEvent.name = "WheelEvent";
  $desc = $collectedClasses.WheelEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  WheelEvent.prototype = $desc;
  function Window() {
  }
  Window.builtin$cls = "Window";
  if (!"name" in Window)
    Window.name = "Window";
  $desc = $collectedClasses.Window;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Window.prototype = $desc;
  Window.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  Window.prototype.set$name = function(receiver, v) {
    return receiver.name = v;
  };
  function _Attr() {
  }
  _Attr.builtin$cls = "_Attr";
  if (!"name" in _Attr)
    _Attr.name = "_Attr";
  $desc = $collectedClasses._Attr;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Attr.prototype = $desc;
  _Attr.prototype.get$name = function(receiver) {
    return receiver.name;
  };
  _Attr.prototype.get$value = function(receiver) {
    return receiver.value;
  };
  _Attr.prototype.set$value = function(receiver, v) {
    return receiver.value = v;
  };
  function _ClientRect() {
  }
  _ClientRect.builtin$cls = "_ClientRect";
  if (!"name" in _ClientRect)
    _ClientRect.name = "_ClientRect";
  $desc = $collectedClasses._ClientRect;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ClientRect.prototype = $desc;
  _ClientRect.prototype.get$height = function(receiver) {
    return receiver.height;
  };
  _ClientRect.prototype.get$left = function(receiver) {
    return receiver.left;
  };
  _ClientRect.prototype.get$right = function(receiver) {
    return receiver.right;
  };
  _ClientRect.prototype.get$top = function(receiver) {
    return receiver.top;
  };
  _ClientRect.prototype.get$width = function(receiver) {
    return receiver.width;
  };
  function _Entity() {
  }
  _Entity.builtin$cls = "_Entity";
  if (!"name" in _Entity)
    _Entity.name = "_Entity";
  $desc = $collectedClasses._Entity;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Entity.prototype = $desc;
  function _HTMLAppletElement() {
  }
  _HTMLAppletElement.builtin$cls = "_HTMLAppletElement";
  if (!"name" in _HTMLAppletElement)
    _HTMLAppletElement.name = "_HTMLAppletElement";
  $desc = $collectedClasses._HTMLAppletElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HTMLAppletElement.prototype = $desc;
  function _HTMLBaseFontElement() {
  }
  _HTMLBaseFontElement.builtin$cls = "_HTMLBaseFontElement";
  if (!"name" in _HTMLBaseFontElement)
    _HTMLBaseFontElement.name = "_HTMLBaseFontElement";
  $desc = $collectedClasses._HTMLBaseFontElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HTMLBaseFontElement.prototype = $desc;
  function _HTMLDirectoryElement() {
  }
  _HTMLDirectoryElement.builtin$cls = "_HTMLDirectoryElement";
  if (!"name" in _HTMLDirectoryElement)
    _HTMLDirectoryElement.name = "_HTMLDirectoryElement";
  $desc = $collectedClasses._HTMLDirectoryElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HTMLDirectoryElement.prototype = $desc;
  function _HTMLFontElement() {
  }
  _HTMLFontElement.builtin$cls = "_HTMLFontElement";
  if (!"name" in _HTMLFontElement)
    _HTMLFontElement.name = "_HTMLFontElement";
  $desc = $collectedClasses._HTMLFontElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HTMLFontElement.prototype = $desc;
  function _HTMLFrameElement() {
  }
  _HTMLFrameElement.builtin$cls = "_HTMLFrameElement";
  if (!"name" in _HTMLFrameElement)
    _HTMLFrameElement.name = "_HTMLFrameElement";
  $desc = $collectedClasses._HTMLFrameElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HTMLFrameElement.prototype = $desc;
  function _HTMLFrameSetElement() {
  }
  _HTMLFrameSetElement.builtin$cls = "_HTMLFrameSetElement";
  if (!"name" in _HTMLFrameSetElement)
    _HTMLFrameSetElement.name = "_HTMLFrameSetElement";
  $desc = $collectedClasses._HTMLFrameSetElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HTMLFrameSetElement.prototype = $desc;
  function _HTMLMarqueeElement() {
  }
  _HTMLMarqueeElement.builtin$cls = "_HTMLMarqueeElement";
  if (!"name" in _HTMLMarqueeElement)
    _HTMLMarqueeElement.name = "_HTMLMarqueeElement";
  $desc = $collectedClasses._HTMLMarqueeElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HTMLMarqueeElement.prototype = $desc;
  function _MutationEvent() {
  }
  _MutationEvent.builtin$cls = "_MutationEvent";
  if (!"name" in _MutationEvent)
    _MutationEvent.name = "_MutationEvent";
  $desc = $collectedClasses._MutationEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MutationEvent.prototype = $desc;
  function _NamedNodeMap() {
  }
  _NamedNodeMap.builtin$cls = "_NamedNodeMap";
  if (!"name" in _NamedNodeMap)
    _NamedNodeMap.name = "_NamedNodeMap";
  $desc = $collectedClasses._NamedNodeMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _NamedNodeMap.prototype = $desc;
  function _Notation() {
  }
  _Notation.builtin$cls = "_Notation";
  if (!"name" in _Notation)
    _Notation.name = "_Notation";
  $desc = $collectedClasses._Notation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Notation.prototype = $desc;
  function _SpeechInputResultList() {
  }
  _SpeechInputResultList.builtin$cls = "_SpeechInputResultList";
  if (!"name" in _SpeechInputResultList)
    _SpeechInputResultList.name = "_SpeechInputResultList";
  $desc = $collectedClasses._SpeechInputResultList;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SpeechInputResultList.prototype = $desc;
  function _SpeechRecognitionResultList() {
  }
  _SpeechRecognitionResultList.builtin$cls = "_SpeechRecognitionResultList";
  if (!"name" in _SpeechRecognitionResultList)
    _SpeechRecognitionResultList.name = "_SpeechRecognitionResultList";
  $desc = $collectedClasses._SpeechRecognitionResultList;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SpeechRecognitionResultList.prototype = $desc;
  function _XMLHttpRequestProgressEvent() {
  }
  _XMLHttpRequestProgressEvent.builtin$cls = "_XMLHttpRequestProgressEvent";
  if (!"name" in _XMLHttpRequestProgressEvent)
    _XMLHttpRequestProgressEvent.name = "_XMLHttpRequestProgressEvent";
  $desc = $collectedClasses._XMLHttpRequestProgressEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _XMLHttpRequestProgressEvent.prototype = $desc;
  function KeyRange() {
  }
  KeyRange.builtin$cls = "KeyRange";
  if (!"name" in KeyRange)
    KeyRange.name = "KeyRange";
  $desc = $collectedClasses.KeyRange;
  if ($desc instanceof Array)
    $desc = $desc[1];
  KeyRange.prototype = $desc;
  KeyRange.prototype.get$lower = function(receiver) {
    return receiver.lower;
  };
  function VersionChangeEvent() {
  }
  VersionChangeEvent.builtin$cls = "VersionChangeEvent";
  if (!"name" in VersionChangeEvent)
    VersionChangeEvent.name = "VersionChangeEvent";
  $desc = $collectedClasses.VersionChangeEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  VersionChangeEvent.prototype = $desc;
  function AElement() {
  }
  AElement.builtin$cls = "AElement";
  if (!"name" in AElement)
    AElement.name = "AElement";
  $desc = $collectedClasses.AElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AElement.prototype = $desc;
  AElement.prototype.get$target = function(receiver) {
    return receiver.target;
  };
  AElement.prototype.get$href = function(receiver) {
    return receiver.href;
  };
  function AltGlyphElement() {
  }
  AltGlyphElement.builtin$cls = "AltGlyphElement";
  if (!"name" in AltGlyphElement)
    AltGlyphElement.name = "AltGlyphElement";
  $desc = $collectedClasses.AltGlyphElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AltGlyphElement.prototype = $desc;
  AltGlyphElement.prototype.get$href = function(receiver) {
    return receiver.href;
  };
  function AnimateElement() {
  }
  AnimateElement.builtin$cls = "AnimateElement";
  if (!"name" in AnimateElement)
    AnimateElement.name = "AnimateElement";
  $desc = $collectedClasses.AnimateElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnimateElement.prototype = $desc;
  function AnimateMotionElement() {
  }
  AnimateMotionElement.builtin$cls = "AnimateMotionElement";
  if (!"name" in AnimateMotionElement)
    AnimateMotionElement.name = "AnimateMotionElement";
  $desc = $collectedClasses.AnimateMotionElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnimateMotionElement.prototype = $desc;
  function AnimateTransformElement() {
  }
  AnimateTransformElement.builtin$cls = "AnimateTransformElement";
  if (!"name" in AnimateTransformElement)
    AnimateTransformElement.name = "AnimateTransformElement";
  $desc = $collectedClasses.AnimateTransformElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnimateTransformElement.prototype = $desc;
  function AnimatedEnumeration() {
  }
  AnimatedEnumeration.builtin$cls = "AnimatedEnumeration";
  if (!"name" in AnimatedEnumeration)
    AnimatedEnumeration.name = "AnimatedEnumeration";
  $desc = $collectedClasses.AnimatedEnumeration;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnimatedEnumeration.prototype = $desc;
  function AnimatedLength() {
  }
  AnimatedLength.builtin$cls = "AnimatedLength";
  if (!"name" in AnimatedLength)
    AnimatedLength.name = "AnimatedLength";
  $desc = $collectedClasses.AnimatedLength;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnimatedLength.prototype = $desc;
  function AnimatedLengthList() {
  }
  AnimatedLengthList.builtin$cls = "AnimatedLengthList";
  if (!"name" in AnimatedLengthList)
    AnimatedLengthList.name = "AnimatedLengthList";
  $desc = $collectedClasses.AnimatedLengthList;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnimatedLengthList.prototype = $desc;
  function AnimatedNumber() {
  }
  AnimatedNumber.builtin$cls = "AnimatedNumber";
  if (!"name" in AnimatedNumber)
    AnimatedNumber.name = "AnimatedNumber";
  $desc = $collectedClasses.AnimatedNumber;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnimatedNumber.prototype = $desc;
  function AnimatedNumberList() {
  }
  AnimatedNumberList.builtin$cls = "AnimatedNumberList";
  if (!"name" in AnimatedNumberList)
    AnimatedNumberList.name = "AnimatedNumberList";
  $desc = $collectedClasses.AnimatedNumberList;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnimatedNumberList.prototype = $desc;
  function AnimatedString() {
  }
  AnimatedString.builtin$cls = "AnimatedString";
  if (!"name" in AnimatedString)
    AnimatedString.name = "AnimatedString";
  $desc = $collectedClasses.AnimatedString;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnimatedString.prototype = $desc;
  function AnimationElement() {
  }
  AnimationElement.builtin$cls = "AnimationElement";
  if (!"name" in AnimationElement)
    AnimationElement.name = "AnimationElement";
  $desc = $collectedClasses.AnimationElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnimationElement.prototype = $desc;
  function CircleElement() {
  }
  CircleElement.builtin$cls = "CircleElement";
  if (!"name" in CircleElement)
    CircleElement.name = "CircleElement";
  $desc = $collectedClasses.CircleElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CircleElement.prototype = $desc;
  function ClipPathElement() {
  }
  ClipPathElement.builtin$cls = "ClipPathElement";
  if (!"name" in ClipPathElement)
    ClipPathElement.name = "ClipPathElement";
  $desc = $collectedClasses.ClipPathElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ClipPathElement.prototype = $desc;
  function DefsElement() {
  }
  DefsElement.builtin$cls = "DefsElement";
  if (!"name" in DefsElement)
    DefsElement.name = "DefsElement";
  $desc = $collectedClasses.DefsElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DefsElement.prototype = $desc;
  function DescElement() {
  }
  DescElement.builtin$cls = "DescElement";
  if (!"name" in DescElement)
    DescElement.name = "DescElement";
  $desc = $collectedClasses.DescElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DescElement.prototype = $desc;
  function EllipseElement() {
  }
  EllipseElement.builtin$cls = "EllipseElement";
  if (!"name" in EllipseElement)
    EllipseElement.name = "EllipseElement";
  $desc = $collectedClasses.EllipseElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EllipseElement.prototype = $desc;
  function FEBlendElement() {
  }
  FEBlendElement.builtin$cls = "FEBlendElement";
  if (!"name" in FEBlendElement)
    FEBlendElement.name = "FEBlendElement";
  $desc = $collectedClasses.FEBlendElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEBlendElement.prototype = $desc;
  function FEColorMatrixElement() {
  }
  FEColorMatrixElement.builtin$cls = "FEColorMatrixElement";
  if (!"name" in FEColorMatrixElement)
    FEColorMatrixElement.name = "FEColorMatrixElement";
  $desc = $collectedClasses.FEColorMatrixElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEColorMatrixElement.prototype = $desc;
  FEColorMatrixElement.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  FEColorMatrixElement.prototype.get$values = function(receiver) {
    return receiver.values;
  };
  function FEComponentTransferElement() {
  }
  FEComponentTransferElement.builtin$cls = "FEComponentTransferElement";
  if (!"name" in FEComponentTransferElement)
    FEComponentTransferElement.name = "FEComponentTransferElement";
  $desc = $collectedClasses.FEComponentTransferElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEComponentTransferElement.prototype = $desc;
  function FECompositeElement() {
  }
  FECompositeElement.builtin$cls = "FECompositeElement";
  if (!"name" in FECompositeElement)
    FECompositeElement.name = "FECompositeElement";
  $desc = $collectedClasses.FECompositeElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FECompositeElement.prototype = $desc;
  FECompositeElement.prototype.get$operator = function(receiver) {
    return receiver.operator;
  };
  function FEConvolveMatrixElement() {
  }
  FEConvolveMatrixElement.builtin$cls = "FEConvolveMatrixElement";
  if (!"name" in FEConvolveMatrixElement)
    FEConvolveMatrixElement.name = "FEConvolveMatrixElement";
  $desc = $collectedClasses.FEConvolveMatrixElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEConvolveMatrixElement.prototype = $desc;
  function FEDiffuseLightingElement() {
  }
  FEDiffuseLightingElement.builtin$cls = "FEDiffuseLightingElement";
  if (!"name" in FEDiffuseLightingElement)
    FEDiffuseLightingElement.name = "FEDiffuseLightingElement";
  $desc = $collectedClasses.FEDiffuseLightingElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEDiffuseLightingElement.prototype = $desc;
  function FEDisplacementMapElement() {
  }
  FEDisplacementMapElement.builtin$cls = "FEDisplacementMapElement";
  if (!"name" in FEDisplacementMapElement)
    FEDisplacementMapElement.name = "FEDisplacementMapElement";
  $desc = $collectedClasses.FEDisplacementMapElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEDisplacementMapElement.prototype = $desc;
  function FEDistantLightElement() {
  }
  FEDistantLightElement.builtin$cls = "FEDistantLightElement";
  if (!"name" in FEDistantLightElement)
    FEDistantLightElement.name = "FEDistantLightElement";
  $desc = $collectedClasses.FEDistantLightElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEDistantLightElement.prototype = $desc;
  function FEFloodElement() {
  }
  FEFloodElement.builtin$cls = "FEFloodElement";
  if (!"name" in FEFloodElement)
    FEFloodElement.name = "FEFloodElement";
  $desc = $collectedClasses.FEFloodElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEFloodElement.prototype = $desc;
  function FEFuncAElement() {
  }
  FEFuncAElement.builtin$cls = "FEFuncAElement";
  if (!"name" in FEFuncAElement)
    FEFuncAElement.name = "FEFuncAElement";
  $desc = $collectedClasses.FEFuncAElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEFuncAElement.prototype = $desc;
  function FEFuncBElement() {
  }
  FEFuncBElement.builtin$cls = "FEFuncBElement";
  if (!"name" in FEFuncBElement)
    FEFuncBElement.name = "FEFuncBElement";
  $desc = $collectedClasses.FEFuncBElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEFuncBElement.prototype = $desc;
  function FEFuncGElement() {
  }
  FEFuncGElement.builtin$cls = "FEFuncGElement";
  if (!"name" in FEFuncGElement)
    FEFuncGElement.name = "FEFuncGElement";
  $desc = $collectedClasses.FEFuncGElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEFuncGElement.prototype = $desc;
  function FEFuncRElement() {
  }
  FEFuncRElement.builtin$cls = "FEFuncRElement";
  if (!"name" in FEFuncRElement)
    FEFuncRElement.name = "FEFuncRElement";
  $desc = $collectedClasses.FEFuncRElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEFuncRElement.prototype = $desc;
  function FEGaussianBlurElement() {
  }
  FEGaussianBlurElement.builtin$cls = "FEGaussianBlurElement";
  if (!"name" in FEGaussianBlurElement)
    FEGaussianBlurElement.name = "FEGaussianBlurElement";
  $desc = $collectedClasses.FEGaussianBlurElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEGaussianBlurElement.prototype = $desc;
  function FEImageElement() {
  }
  FEImageElement.builtin$cls = "FEImageElement";
  if (!"name" in FEImageElement)
    FEImageElement.name = "FEImageElement";
  $desc = $collectedClasses.FEImageElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEImageElement.prototype = $desc;
  FEImageElement.prototype.get$href = function(receiver) {
    return receiver.href;
  };
  function FEMergeElement() {
  }
  FEMergeElement.builtin$cls = "FEMergeElement";
  if (!"name" in FEMergeElement)
    FEMergeElement.name = "FEMergeElement";
  $desc = $collectedClasses.FEMergeElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEMergeElement.prototype = $desc;
  function FEMergeNodeElement() {
  }
  FEMergeNodeElement.builtin$cls = "FEMergeNodeElement";
  if (!"name" in FEMergeNodeElement)
    FEMergeNodeElement.name = "FEMergeNodeElement";
  $desc = $collectedClasses.FEMergeNodeElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEMergeNodeElement.prototype = $desc;
  function FEMorphologyElement() {
  }
  FEMorphologyElement.builtin$cls = "FEMorphologyElement";
  if (!"name" in FEMorphologyElement)
    FEMorphologyElement.name = "FEMorphologyElement";
  $desc = $collectedClasses.FEMorphologyElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEMorphologyElement.prototype = $desc;
  FEMorphologyElement.prototype.get$operator = function(receiver) {
    return receiver.operator;
  };
  function FEOffsetElement() {
  }
  FEOffsetElement.builtin$cls = "FEOffsetElement";
  if (!"name" in FEOffsetElement)
    FEOffsetElement.name = "FEOffsetElement";
  $desc = $collectedClasses.FEOffsetElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEOffsetElement.prototype = $desc;
  function FEPointLightElement() {
  }
  FEPointLightElement.builtin$cls = "FEPointLightElement";
  if (!"name" in FEPointLightElement)
    FEPointLightElement.name = "FEPointLightElement";
  $desc = $collectedClasses.FEPointLightElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FEPointLightElement.prototype = $desc;
  function FESpecularLightingElement() {
  }
  FESpecularLightingElement.builtin$cls = "FESpecularLightingElement";
  if (!"name" in FESpecularLightingElement)
    FESpecularLightingElement.name = "FESpecularLightingElement";
  $desc = $collectedClasses.FESpecularLightingElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FESpecularLightingElement.prototype = $desc;
  function FESpotLightElement() {
  }
  FESpotLightElement.builtin$cls = "FESpotLightElement";
  if (!"name" in FESpotLightElement)
    FESpotLightElement.name = "FESpotLightElement";
  $desc = $collectedClasses.FESpotLightElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FESpotLightElement.prototype = $desc;
  function FETileElement() {
  }
  FETileElement.builtin$cls = "FETileElement";
  if (!"name" in FETileElement)
    FETileElement.name = "FETileElement";
  $desc = $collectedClasses.FETileElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FETileElement.prototype = $desc;
  function FETurbulenceElement() {
  }
  FETurbulenceElement.builtin$cls = "FETurbulenceElement";
  if (!"name" in FETurbulenceElement)
    FETurbulenceElement.name = "FETurbulenceElement";
  $desc = $collectedClasses.FETurbulenceElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FETurbulenceElement.prototype = $desc;
  FETurbulenceElement.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  function FilterElement() {
  }
  FilterElement.builtin$cls = "FilterElement";
  if (!"name" in FilterElement)
    FilterElement.name = "FilterElement";
  $desc = $collectedClasses.FilterElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FilterElement.prototype = $desc;
  FilterElement.prototype.get$href = function(receiver) {
    return receiver.href;
  };
  function ForeignObjectElement() {
  }
  ForeignObjectElement.builtin$cls = "ForeignObjectElement";
  if (!"name" in ForeignObjectElement)
    ForeignObjectElement.name = "ForeignObjectElement";
  $desc = $collectedClasses.ForeignObjectElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ForeignObjectElement.prototype = $desc;
  function GElement() {
  }
  GElement.builtin$cls = "GElement";
  if (!"name" in GElement)
    GElement.name = "GElement";
  $desc = $collectedClasses.GElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  GElement.prototype = $desc;
  function GraphicsElement() {
  }
  GraphicsElement.builtin$cls = "GraphicsElement";
  if (!"name" in GraphicsElement)
    GraphicsElement.name = "GraphicsElement";
  $desc = $collectedClasses.GraphicsElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  GraphicsElement.prototype = $desc;
  function ImageElement0() {
  }
  ImageElement0.builtin$cls = "ImageElement0";
  if (!"name" in ImageElement0)
    ImageElement0.name = "ImageElement0";
  $desc = $collectedClasses.ImageElement0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ImageElement0.prototype = $desc;
  ImageElement0.prototype.get$href = function(receiver) {
    return receiver.href;
  };
  function LineElement() {
  }
  LineElement.builtin$cls = "LineElement";
  if (!"name" in LineElement)
    LineElement.name = "LineElement";
  $desc = $collectedClasses.LineElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LineElement.prototype = $desc;
  function LinearGradientElement() {
  }
  LinearGradientElement.builtin$cls = "LinearGradientElement";
  if (!"name" in LinearGradientElement)
    LinearGradientElement.name = "LinearGradientElement";
  $desc = $collectedClasses.LinearGradientElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinearGradientElement.prototype = $desc;
  function MarkerElement() {
  }
  MarkerElement.builtin$cls = "MarkerElement";
  if (!"name" in MarkerElement)
    MarkerElement.name = "MarkerElement";
  $desc = $collectedClasses.MarkerElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MarkerElement.prototype = $desc;
  function MaskElement() {
  }
  MaskElement.builtin$cls = "MaskElement";
  if (!"name" in MaskElement)
    MaskElement.name = "MaskElement";
  $desc = $collectedClasses.MaskElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MaskElement.prototype = $desc;
  function MetadataElement() {
  }
  MetadataElement.builtin$cls = "MetadataElement";
  if (!"name" in MetadataElement)
    MetadataElement.name = "MetadataElement";
  $desc = $collectedClasses.MetadataElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MetadataElement.prototype = $desc;
  function PathElement() {
  }
  PathElement.builtin$cls = "PathElement";
  if (!"name" in PathElement)
    PathElement.name = "PathElement";
  $desc = $collectedClasses.PathElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PathElement.prototype = $desc;
  function PatternElement() {
  }
  PatternElement.builtin$cls = "PatternElement";
  if (!"name" in PatternElement)
    PatternElement.name = "PatternElement";
  $desc = $collectedClasses.PatternElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PatternElement.prototype = $desc;
  PatternElement.prototype.get$href = function(receiver) {
    return receiver.href;
  };
  function PolygonElement() {
  }
  PolygonElement.builtin$cls = "PolygonElement";
  if (!"name" in PolygonElement)
    PolygonElement.name = "PolygonElement";
  $desc = $collectedClasses.PolygonElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolygonElement.prototype = $desc;
  function PolylineElement() {
  }
  PolylineElement.builtin$cls = "PolylineElement";
  if (!"name" in PolylineElement)
    PolylineElement.name = "PolylineElement";
  $desc = $collectedClasses.PolylineElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolylineElement.prototype = $desc;
  function RadialGradientElement() {
  }
  RadialGradientElement.builtin$cls = "RadialGradientElement";
  if (!"name" in RadialGradientElement)
    RadialGradientElement.name = "RadialGradientElement";
  $desc = $collectedClasses.RadialGradientElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RadialGradientElement.prototype = $desc;
  function RectElement() {
  }
  RectElement.builtin$cls = "RectElement";
  if (!"name" in RectElement)
    RectElement.name = "RectElement";
  $desc = $collectedClasses.RectElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RectElement.prototype = $desc;
  function ScriptElement() {
  }
  ScriptElement.builtin$cls = "ScriptElement";
  if (!"name" in ScriptElement)
    ScriptElement.name = "ScriptElement";
  $desc = $collectedClasses.ScriptElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ScriptElement.prototype = $desc;
  ScriptElement.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  ScriptElement.prototype.set$type = function(receiver, v) {
    return receiver.type = v;
  };
  ScriptElement.prototype.get$href = function(receiver) {
    return receiver.href;
  };
  function SetElement() {
  }
  SetElement.builtin$cls = "SetElement";
  if (!"name" in SetElement)
    SetElement.name = "SetElement";
  $desc = $collectedClasses.SetElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SetElement.prototype = $desc;
  function StopElement() {
  }
  StopElement.builtin$cls = "StopElement";
  if (!"name" in StopElement)
    StopElement.name = "StopElement";
  $desc = $collectedClasses.StopElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StopElement.prototype = $desc;
  function StyleElement0() {
  }
  StyleElement0.builtin$cls = "StyleElement0";
  if (!"name" in StyleElement0)
    StyleElement0.name = "StyleElement0";
  $desc = $collectedClasses.StyleElement0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StyleElement0.prototype = $desc;
  StyleElement0.prototype.get$type = function(receiver) {
    return receiver.type;
  };
  StyleElement0.prototype.set$type = function(receiver, v) {
    return receiver.type = v;
  };
  function SvgDocument() {
  }
  SvgDocument.builtin$cls = "SvgDocument";
  if (!"name" in SvgDocument)
    SvgDocument.name = "SvgDocument";
  $desc = $collectedClasses.SvgDocument;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SvgDocument.prototype = $desc;
  function SvgElement() {
  }
  SvgElement.builtin$cls = "SvgElement";
  if (!"name" in SvgElement)
    SvgElement.name = "SvgElement";
  $desc = $collectedClasses.SvgElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SvgElement.prototype = $desc;
  function SvgSvgElement() {
  }
  SvgSvgElement.builtin$cls = "SvgSvgElement";
  if (!"name" in SvgSvgElement)
    SvgSvgElement.name = "SvgSvgElement";
  $desc = $collectedClasses.SvgSvgElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SvgSvgElement.prototype = $desc;
  function SwitchElement() {
  }
  SwitchElement.builtin$cls = "SwitchElement";
  if (!"name" in SwitchElement)
    SwitchElement.name = "SwitchElement";
  $desc = $collectedClasses.SwitchElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SwitchElement.prototype = $desc;
  function SymbolElement() {
  }
  SymbolElement.builtin$cls = "SymbolElement";
  if (!"name" in SymbolElement)
    SymbolElement.name = "SymbolElement";
  $desc = $collectedClasses.SymbolElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SymbolElement.prototype = $desc;
  function TSpanElement() {
  }
  TSpanElement.builtin$cls = "TSpanElement";
  if (!"name" in TSpanElement)
    TSpanElement.name = "TSpanElement";
  $desc = $collectedClasses.TSpanElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TSpanElement.prototype = $desc;
  function TextContentElement() {
  }
  TextContentElement.builtin$cls = "TextContentElement";
  if (!"name" in TextContentElement)
    TextContentElement.name = "TextContentElement";
  $desc = $collectedClasses.TextContentElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TextContentElement.prototype = $desc;
  function TextElement() {
  }
  TextElement.builtin$cls = "TextElement";
  if (!"name" in TextElement)
    TextElement.name = "TextElement";
  $desc = $collectedClasses.TextElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TextElement.prototype = $desc;
  function TextPathElement() {
  }
  TextPathElement.builtin$cls = "TextPathElement";
  if (!"name" in TextPathElement)
    TextPathElement.name = "TextPathElement";
  $desc = $collectedClasses.TextPathElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TextPathElement.prototype = $desc;
  TextPathElement.prototype.get$method = function(receiver) {
    return receiver.method;
  };
  TextPathElement.prototype.get$href = function(receiver) {
    return receiver.href;
  };
  function TextPositioningElement() {
  }
  TextPositioningElement.builtin$cls = "TextPositioningElement";
  if (!"name" in TextPositioningElement)
    TextPositioningElement.name = "TextPositioningElement";
  $desc = $collectedClasses.TextPositioningElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TextPositioningElement.prototype = $desc;
  function TitleElement0() {
  }
  TitleElement0.builtin$cls = "TitleElement0";
  if (!"name" in TitleElement0)
    TitleElement0.name = "TitleElement0";
  $desc = $collectedClasses.TitleElement0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TitleElement0.prototype = $desc;
  function UseElement() {
  }
  UseElement.builtin$cls = "UseElement";
  if (!"name" in UseElement)
    UseElement.name = "UseElement";
  $desc = $collectedClasses.UseElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UseElement.prototype = $desc;
  UseElement.prototype.get$href = function(receiver) {
    return receiver.href;
  };
  function ViewElement() {
  }
  ViewElement.builtin$cls = "ViewElement";
  if (!"name" in ViewElement)
    ViewElement.name = "ViewElement";
  $desc = $collectedClasses.ViewElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ViewElement.prototype = $desc;
  function ZoomEvent() {
  }
  ZoomEvent.builtin$cls = "ZoomEvent";
  if (!"name" in ZoomEvent)
    ZoomEvent.name = "ZoomEvent";
  $desc = $collectedClasses.ZoomEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ZoomEvent.prototype = $desc;
  function _GradientElement() {
  }
  _GradientElement.builtin$cls = "_GradientElement";
  if (!"name" in _GradientElement)
    _GradientElement.name = "_GradientElement";
  $desc = $collectedClasses._GradientElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _GradientElement.prototype = $desc;
  _GradientElement.prototype.get$href = function(receiver) {
    return receiver.href;
  };
  function _SVGAltGlyphDefElement() {
  }
  _SVGAltGlyphDefElement.builtin$cls = "_SVGAltGlyphDefElement";
  if (!"name" in _SVGAltGlyphDefElement)
    _SVGAltGlyphDefElement.name = "_SVGAltGlyphDefElement";
  $desc = $collectedClasses._SVGAltGlyphDefElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGAltGlyphDefElement.prototype = $desc;
  function _SVGAltGlyphItemElement() {
  }
  _SVGAltGlyphItemElement.builtin$cls = "_SVGAltGlyphItemElement";
  if (!"name" in _SVGAltGlyphItemElement)
    _SVGAltGlyphItemElement.name = "_SVGAltGlyphItemElement";
  $desc = $collectedClasses._SVGAltGlyphItemElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGAltGlyphItemElement.prototype = $desc;
  function _SVGAnimateColorElement() {
  }
  _SVGAnimateColorElement.builtin$cls = "_SVGAnimateColorElement";
  if (!"name" in _SVGAnimateColorElement)
    _SVGAnimateColorElement.name = "_SVGAnimateColorElement";
  $desc = $collectedClasses._SVGAnimateColorElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGAnimateColorElement.prototype = $desc;
  function _SVGComponentTransferFunctionElement() {
  }
  _SVGComponentTransferFunctionElement.builtin$cls = "_SVGComponentTransferFunctionElement";
  if (!"name" in _SVGComponentTransferFunctionElement)
    _SVGComponentTransferFunctionElement.name = "_SVGComponentTransferFunctionElement";
  $desc = $collectedClasses._SVGComponentTransferFunctionElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGComponentTransferFunctionElement.prototype = $desc;
  function _SVGCursorElement() {
  }
  _SVGCursorElement.builtin$cls = "_SVGCursorElement";
  if (!"name" in _SVGCursorElement)
    _SVGCursorElement.name = "_SVGCursorElement";
  $desc = $collectedClasses._SVGCursorElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGCursorElement.prototype = $desc;
  function _SVGFEDropShadowElement() {
  }
  _SVGFEDropShadowElement.builtin$cls = "_SVGFEDropShadowElement";
  if (!"name" in _SVGFEDropShadowElement)
    _SVGFEDropShadowElement.name = "_SVGFEDropShadowElement";
  $desc = $collectedClasses._SVGFEDropShadowElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGFEDropShadowElement.prototype = $desc;
  function _SVGFontElement() {
  }
  _SVGFontElement.builtin$cls = "_SVGFontElement";
  if (!"name" in _SVGFontElement)
    _SVGFontElement.name = "_SVGFontElement";
  $desc = $collectedClasses._SVGFontElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGFontElement.prototype = $desc;
  function _SVGFontFaceElement() {
  }
  _SVGFontFaceElement.builtin$cls = "_SVGFontFaceElement";
  if (!"name" in _SVGFontFaceElement)
    _SVGFontFaceElement.name = "_SVGFontFaceElement";
  $desc = $collectedClasses._SVGFontFaceElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGFontFaceElement.prototype = $desc;
  function _SVGFontFaceFormatElement() {
  }
  _SVGFontFaceFormatElement.builtin$cls = "_SVGFontFaceFormatElement";
  if (!"name" in _SVGFontFaceFormatElement)
    _SVGFontFaceFormatElement.name = "_SVGFontFaceFormatElement";
  $desc = $collectedClasses._SVGFontFaceFormatElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGFontFaceFormatElement.prototype = $desc;
  function _SVGFontFaceNameElement() {
  }
  _SVGFontFaceNameElement.builtin$cls = "_SVGFontFaceNameElement";
  if (!"name" in _SVGFontFaceNameElement)
    _SVGFontFaceNameElement.name = "_SVGFontFaceNameElement";
  $desc = $collectedClasses._SVGFontFaceNameElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGFontFaceNameElement.prototype = $desc;
  function _SVGFontFaceSrcElement() {
  }
  _SVGFontFaceSrcElement.builtin$cls = "_SVGFontFaceSrcElement";
  if (!"name" in _SVGFontFaceSrcElement)
    _SVGFontFaceSrcElement.name = "_SVGFontFaceSrcElement";
  $desc = $collectedClasses._SVGFontFaceSrcElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGFontFaceSrcElement.prototype = $desc;
  function _SVGFontFaceUriElement() {
  }
  _SVGFontFaceUriElement.builtin$cls = "_SVGFontFaceUriElement";
  if (!"name" in _SVGFontFaceUriElement)
    _SVGFontFaceUriElement.name = "_SVGFontFaceUriElement";
  $desc = $collectedClasses._SVGFontFaceUriElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGFontFaceUriElement.prototype = $desc;
  function _SVGGlyphElement() {
  }
  _SVGGlyphElement.builtin$cls = "_SVGGlyphElement";
  if (!"name" in _SVGGlyphElement)
    _SVGGlyphElement.name = "_SVGGlyphElement";
  $desc = $collectedClasses._SVGGlyphElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGGlyphElement.prototype = $desc;
  function _SVGGlyphRefElement() {
  }
  _SVGGlyphRefElement.builtin$cls = "_SVGGlyphRefElement";
  if (!"name" in _SVGGlyphRefElement)
    _SVGGlyphRefElement.name = "_SVGGlyphRefElement";
  $desc = $collectedClasses._SVGGlyphRefElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGGlyphRefElement.prototype = $desc;
  function _SVGHKernElement() {
  }
  _SVGHKernElement.builtin$cls = "_SVGHKernElement";
  if (!"name" in _SVGHKernElement)
    _SVGHKernElement.name = "_SVGHKernElement";
  $desc = $collectedClasses._SVGHKernElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGHKernElement.prototype = $desc;
  function _SVGMPathElement() {
  }
  _SVGMPathElement.builtin$cls = "_SVGMPathElement";
  if (!"name" in _SVGMPathElement)
    _SVGMPathElement.name = "_SVGMPathElement";
  $desc = $collectedClasses._SVGMPathElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGMPathElement.prototype = $desc;
  function _SVGMissingGlyphElement() {
  }
  _SVGMissingGlyphElement.builtin$cls = "_SVGMissingGlyphElement";
  if (!"name" in _SVGMissingGlyphElement)
    _SVGMissingGlyphElement.name = "_SVGMissingGlyphElement";
  $desc = $collectedClasses._SVGMissingGlyphElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGMissingGlyphElement.prototype = $desc;
  function _SVGVKernElement() {
  }
  _SVGVKernElement.builtin$cls = "_SVGVKernElement";
  if (!"name" in _SVGVKernElement)
    _SVGVKernElement.name = "_SVGVKernElement";
  $desc = $collectedClasses._SVGVKernElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SVGVKernElement.prototype = $desc;
  function AudioProcessingEvent() {
  }
  AudioProcessingEvent.builtin$cls = "AudioProcessingEvent";
  if (!"name" in AudioProcessingEvent)
    AudioProcessingEvent.name = "AudioProcessingEvent";
  $desc = $collectedClasses.AudioProcessingEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AudioProcessingEvent.prototype = $desc;
  function OfflineAudioCompletionEvent() {
  }
  OfflineAudioCompletionEvent.builtin$cls = "OfflineAudioCompletionEvent";
  if (!"name" in OfflineAudioCompletionEvent)
    OfflineAudioCompletionEvent.name = "OfflineAudioCompletionEvent";
  $desc = $collectedClasses.OfflineAudioCompletionEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  OfflineAudioCompletionEvent.prototype = $desc;
  function ContextEvent() {
  }
  ContextEvent.builtin$cls = "ContextEvent";
  if (!"name" in ContextEvent)
    ContextEvent.name = "ContextEvent";
  $desc = $collectedClasses.ContextEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ContextEvent.prototype = $desc;
  function SqlError() {
  }
  SqlError.builtin$cls = "SqlError";
  if (!"name" in SqlError)
    SqlError.name = "SqlError";
  $desc = $collectedClasses.SqlError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SqlError.prototype = $desc;
  SqlError.prototype.get$message = function(receiver) {
    return receiver.message;
  };
  function NativeByteBuffer() {
  }
  NativeByteBuffer.builtin$cls = "NativeByteBuffer";
  if (!"name" in NativeByteBuffer)
    NativeByteBuffer.name = "NativeByteBuffer";
  $desc = $collectedClasses.NativeByteBuffer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeByteBuffer.prototype = $desc;
  function NativeTypedData() {
  }
  NativeTypedData.builtin$cls = "NativeTypedData";
  if (!"name" in NativeTypedData)
    NativeTypedData.name = "NativeTypedData";
  $desc = $collectedClasses.NativeTypedData;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeTypedData.prototype = $desc;
  function NativeByteData() {
  }
  NativeByteData.builtin$cls = "NativeByteData";
  if (!"name" in NativeByteData)
    NativeByteData.name = "NativeByteData";
  $desc = $collectedClasses.NativeByteData;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeByteData.prototype = $desc;
  function NativeFloat32List() {
  }
  NativeFloat32List.builtin$cls = "NativeFloat32List";
  if (!"name" in NativeFloat32List)
    NativeFloat32List.name = "NativeFloat32List";
  $desc = $collectedClasses.NativeFloat32List;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeFloat32List.prototype = $desc;
  function NativeFloat64List() {
  }
  NativeFloat64List.builtin$cls = "NativeFloat64List";
  if (!"name" in NativeFloat64List)
    NativeFloat64List.name = "NativeFloat64List";
  $desc = $collectedClasses.NativeFloat64List;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeFloat64List.prototype = $desc;
  function NativeInt16List() {
  }
  NativeInt16List.builtin$cls = "NativeInt16List";
  if (!"name" in NativeInt16List)
    NativeInt16List.name = "NativeInt16List";
  $desc = $collectedClasses.NativeInt16List;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeInt16List.prototype = $desc;
  function NativeInt32List() {
  }
  NativeInt32List.builtin$cls = "NativeInt32List";
  if (!"name" in NativeInt32List)
    NativeInt32List.name = "NativeInt32List";
  $desc = $collectedClasses.NativeInt32List;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeInt32List.prototype = $desc;
  function NativeInt8List() {
  }
  NativeInt8List.builtin$cls = "NativeInt8List";
  if (!"name" in NativeInt8List)
    NativeInt8List.name = "NativeInt8List";
  $desc = $collectedClasses.NativeInt8List;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeInt8List.prototype = $desc;
  function NativeUint16List() {
  }
  NativeUint16List.builtin$cls = "NativeUint16List";
  if (!"name" in NativeUint16List)
    NativeUint16List.name = "NativeUint16List";
  $desc = $collectedClasses.NativeUint16List;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeUint16List.prototype = $desc;
  function NativeUint32List() {
  }
  NativeUint32List.builtin$cls = "NativeUint32List";
  if (!"name" in NativeUint32List)
    NativeUint32List.name = "NativeUint32List";
  $desc = $collectedClasses.NativeUint32List;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeUint32List.prototype = $desc;
  function NativeUint8ClampedList() {
  }
  NativeUint8ClampedList.builtin$cls = "NativeUint8ClampedList";
  if (!"name" in NativeUint8ClampedList)
    NativeUint8ClampedList.name = "NativeUint8ClampedList";
  $desc = $collectedClasses.NativeUint8ClampedList;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeUint8ClampedList.prototype = $desc;
  function NativeUint8List() {
  }
  NativeUint8List.builtin$cls = "NativeUint8List";
  if (!"name" in NativeUint8List)
    NativeUint8List.name = "NativeUint8List";
  $desc = $collectedClasses.NativeUint8List;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeUint8List.prototype = $desc;
  function JS_CONST(code) {
    this.code = code;
  }
  JS_CONST.builtin$cls = "JS_CONST";
  if (!"name" in JS_CONST)
    JS_CONST.name = "JS_CONST";
  $desc = $collectedClasses.JS_CONST;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JS_CONST.prototype = $desc;
  function Interceptor() {
  }
  Interceptor.builtin$cls = "Interceptor";
  if (!"name" in Interceptor)
    Interceptor.name = "Interceptor";
  $desc = $collectedClasses.Interceptor;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Interceptor.prototype = $desc;
  function JSBool() {
  }
  JSBool.builtin$cls = "bool";
  if (!"name" in JSBool)
    JSBool.name = "JSBool";
  $desc = $collectedClasses.JSBool;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSBool.prototype = $desc;
  function JSNull() {
  }
  JSNull.builtin$cls = "JSNull";
  if (!"name" in JSNull)
    JSNull.name = "JSNull";
  $desc = $collectedClasses.JSNull;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSNull.prototype = $desc;
  function JavaScriptObject() {
  }
  JavaScriptObject.builtin$cls = "JavaScriptObject";
  if (!"name" in JavaScriptObject)
    JavaScriptObject.name = "JavaScriptObject";
  $desc = $collectedClasses.JavaScriptObject;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JavaScriptObject.prototype = $desc;
  function PlainJavaScriptObject() {
  }
  PlainJavaScriptObject.builtin$cls = "PlainJavaScriptObject";
  if (!"name" in PlainJavaScriptObject)
    PlainJavaScriptObject.name = "PlainJavaScriptObject";
  $desc = $collectedClasses.PlainJavaScriptObject;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PlainJavaScriptObject.prototype = $desc;
  function UnknownJavaScriptObject() {
  }
  UnknownJavaScriptObject.builtin$cls = "UnknownJavaScriptObject";
  if (!"name" in UnknownJavaScriptObject)
    UnknownJavaScriptObject.name = "UnknownJavaScriptObject";
  $desc = $collectedClasses.UnknownJavaScriptObject;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnknownJavaScriptObject.prototype = $desc;
  function JSArray() {
  }
  JSArray.builtin$cls = "List";
  if (!"name" in JSArray)
    JSArray.name = "JSArray";
  $desc = $collectedClasses.JSArray;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSArray.prototype = $desc;
  function JSMutableArray() {
  }
  JSMutableArray.builtin$cls = "JSMutableArray";
  if (!"name" in JSMutableArray)
    JSMutableArray.name = "JSMutableArray";
  $desc = $collectedClasses.JSMutableArray;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSMutableArray.prototype = $desc;
  function JSFixedArray() {
  }
  JSFixedArray.builtin$cls = "JSFixedArray";
  if (!"name" in JSFixedArray)
    JSFixedArray.name = "JSFixedArray";
  $desc = $collectedClasses.JSFixedArray;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSFixedArray.prototype = $desc;
  function JSExtendableArray() {
  }
  JSExtendableArray.builtin$cls = "JSExtendableArray";
  if (!"name" in JSExtendableArray)
    JSExtendableArray.name = "JSExtendableArray";
  $desc = $collectedClasses.JSExtendableArray;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSExtendableArray.prototype = $desc;
  function JSNumber() {
  }
  JSNumber.builtin$cls = "num";
  if (!"name" in JSNumber)
    JSNumber.name = "JSNumber";
  $desc = $collectedClasses.JSNumber;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSNumber.prototype = $desc;
  function JSInt() {
  }
  JSInt.builtin$cls = "int";
  if (!"name" in JSInt)
    JSInt.name = "JSInt";
  $desc = $collectedClasses.JSInt;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSInt.prototype = $desc;
  function JSDouble() {
  }
  JSDouble.builtin$cls = "double";
  if (!"name" in JSDouble)
    JSDouble.name = "JSDouble";
  $desc = $collectedClasses.JSDouble;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSDouble.prototype = $desc;
  function JSPositiveInt() {
  }
  JSPositiveInt.builtin$cls = "JSPositiveInt";
  if (!"name" in JSPositiveInt)
    JSPositiveInt.name = "JSPositiveInt";
  $desc = $collectedClasses.JSPositiveInt;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSPositiveInt.prototype = $desc;
  function JSUInt32() {
  }
  JSUInt32.builtin$cls = "JSUInt32";
  if (!"name" in JSUInt32)
    JSUInt32.name = "JSUInt32";
  $desc = $collectedClasses.JSUInt32;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSUInt32.prototype = $desc;
  function JSUInt31() {
  }
  JSUInt31.builtin$cls = "JSUInt31";
  if (!"name" in JSUInt31)
    JSUInt31.name = "JSUInt31";
  $desc = $collectedClasses.JSUInt31;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSUInt31.prototype = $desc;
  function JSString() {
  }
  JSString.builtin$cls = "String";
  if (!"name" in JSString)
    JSString.name = "JSString";
  $desc = $collectedClasses.JSString;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSString.prototype = $desc;
  function _CodeUnits(__interceptors$_string) {
    this.__interceptors$_string = __interceptors$_string;
  }
  _CodeUnits.builtin$cls = "_CodeUnits";
  if (!"name" in _CodeUnits)
    _CodeUnits.name = "_CodeUnits";
  $desc = $collectedClasses._CodeUnits;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _CodeUnits.prototype = $desc;
  function startRootIsolate_closure(entry_0) {
    this.entry_0 = entry_0;
  }
  startRootIsolate_closure.builtin$cls = "startRootIsolate_closure";
  if (!"name" in startRootIsolate_closure)
    startRootIsolate_closure.name = "startRootIsolate_closure";
  $desc = $collectedClasses.startRootIsolate_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  startRootIsolate_closure.prototype = $desc;
  function startRootIsolate_closure0(entry_1) {
    this.entry_1 = entry_1;
  }
  startRootIsolate_closure0.builtin$cls = "startRootIsolate_closure0";
  if (!"name" in startRootIsolate_closure0)
    startRootIsolate_closure0.name = "startRootIsolate_closure0";
  $desc = $collectedClasses.startRootIsolate_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  startRootIsolate_closure0.prototype = $desc;
  function _Manager(nextIsolateId, currentManagerId, nextManagerId, currentContext, rootContext, topEventLoop, fromCommandLine, isWorker, supportsWorkers, isolates, mainManager, managers, entry) {
    this.nextIsolateId = nextIsolateId;
    this.currentManagerId = currentManagerId;
    this.nextManagerId = nextManagerId;
    this.currentContext = currentContext;
    this.rootContext = rootContext;
    this.topEventLoop = topEventLoop;
    this.fromCommandLine = fromCommandLine;
    this.isWorker = isWorker;
    this.supportsWorkers = supportsWorkers;
    this.isolates = isolates;
    this.mainManager = mainManager;
    this.managers = managers;
    this.entry = entry;
  }
  _Manager.builtin$cls = "_Manager";
  if (!"name" in _Manager)
    _Manager.name = "_Manager";
  $desc = $collectedClasses._Manager;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Manager.prototype = $desc;
  function _IsolateContext(id, ports, weakPorts, isolateStatics) {
    this.id = id;
    this.ports = ports;
    this.weakPorts = weakPorts;
    this.isolateStatics = isolateStatics;
  }
  _IsolateContext.builtin$cls = "_IsolateContext";
  if (!"name" in _IsolateContext)
    _IsolateContext.name = "_IsolateContext";
  $desc = $collectedClasses._IsolateContext;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _IsolateContext.prototype = $desc;
  _IsolateContext.prototype.get$id = function(receiver) {
    return this.id;
  };
  _IsolateContext.prototype.get$isolateStatics = function() {
    return this.isolateStatics;
  };
  function _EventLoop(events, activeTimerCount) {
    this.events = events;
    this.activeTimerCount = activeTimerCount;
  }
  _EventLoop.builtin$cls = "_EventLoop";
  if (!"name" in _EventLoop)
    _EventLoop.name = "_EventLoop";
  $desc = $collectedClasses._EventLoop;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _EventLoop.prototype = $desc;
  function _EventLoop__runHelper_next(this_0) {
    this.this_0 = this_0;
  }
  _EventLoop__runHelper_next.builtin$cls = "_EventLoop__runHelper_next";
  if (!"name" in _EventLoop__runHelper_next)
    _EventLoop__runHelper_next.name = "_EventLoop__runHelper_next";
  $desc = $collectedClasses._EventLoop__runHelper_next;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _EventLoop__runHelper_next.prototype = $desc;
  function _IsolateEvent(isolate, fn, message) {
    this.isolate = isolate;
    this.fn = fn;
    this.message = message;
  }
  _IsolateEvent.builtin$cls = "_IsolateEvent";
  if (!"name" in _IsolateEvent)
    _IsolateEvent.name = "_IsolateEvent";
  $desc = $collectedClasses._IsolateEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _IsolateEvent.prototype = $desc;
  _IsolateEvent.prototype.get$message = function(receiver) {
    return this.message;
  };
  function _MainManagerStub() {
  }
  _MainManagerStub.builtin$cls = "_MainManagerStub";
  if (!"name" in _MainManagerStub)
    _MainManagerStub.name = "_MainManagerStub";
  $desc = $collectedClasses._MainManagerStub;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MainManagerStub.prototype = $desc;
  function IsolateNatives__processWorkerMessage_closure(entryPoint_0, args_1, message_2, isSpawnUri_3, replyTo_4) {
    this.entryPoint_0 = entryPoint_0;
    this.args_1 = args_1;
    this.message_2 = message_2;
    this.isSpawnUri_3 = isSpawnUri_3;
    this.replyTo_4 = replyTo_4;
  }
  IsolateNatives__processWorkerMessage_closure.builtin$cls = "IsolateNatives__processWorkerMessage_closure";
  if (!"name" in IsolateNatives__processWorkerMessage_closure)
    IsolateNatives__processWorkerMessage_closure.name = "IsolateNatives__processWorkerMessage_closure";
  $desc = $collectedClasses.IsolateNatives__processWorkerMessage_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IsolateNatives__processWorkerMessage_closure.prototype = $desc;
  function _BaseSendPort() {
  }
  _BaseSendPort.builtin$cls = "_BaseSendPort";
  if (!"name" in _BaseSendPort)
    _BaseSendPort.name = "_BaseSendPort";
  $desc = $collectedClasses._BaseSendPort;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BaseSendPort.prototype = $desc;
  function _NativeJsSendPort(_receivePort, _isolateId) {
    this._receivePort = _receivePort;
    this._isolateId = _isolateId;
  }
  _NativeJsSendPort.builtin$cls = "_NativeJsSendPort";
  if (!"name" in _NativeJsSendPort)
    _NativeJsSendPort.name = "_NativeJsSendPort";
  $desc = $collectedClasses._NativeJsSendPort;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _NativeJsSendPort.prototype = $desc;
  function _NativeJsSendPort_send_closure(box_0, this_1, shouldSerialize_2) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.shouldSerialize_2 = shouldSerialize_2;
  }
  _NativeJsSendPort_send_closure.builtin$cls = "_NativeJsSendPort_send_closure";
  if (!"name" in _NativeJsSendPort_send_closure)
    _NativeJsSendPort_send_closure.name = "_NativeJsSendPort_send_closure";
  $desc = $collectedClasses._NativeJsSendPort_send_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _NativeJsSendPort_send_closure.prototype = $desc;
  function _WorkerSendPort(_workerId, _receivePortId, _isolateId) {
    this._workerId = _workerId;
    this._receivePortId = _receivePortId;
    this._isolateId = _isolateId;
  }
  _WorkerSendPort.builtin$cls = "_WorkerSendPort";
  if (!"name" in _WorkerSendPort)
    _WorkerSendPort.name = "_WorkerSendPort";
  $desc = $collectedClasses._WorkerSendPort;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _WorkerSendPort.prototype = $desc;
  function RawReceivePortImpl(_id, _handler, _isClosed) {
    this._id = _id;
    this._handler = _handler;
    this._isClosed = _isClosed;
  }
  RawReceivePortImpl.builtin$cls = "RawReceivePortImpl";
  if (!"name" in RawReceivePortImpl)
    RawReceivePortImpl.name = "RawReceivePortImpl";
  $desc = $collectedClasses.RawReceivePortImpl;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RawReceivePortImpl.prototype = $desc;
  RawReceivePortImpl.prototype.get$_id = function() {
    return this._id;
  };
  RawReceivePortImpl.prototype.get$_isClosed = function() {
    return this._isClosed;
  };
  function ReceivePortImpl(_rawPort, __isolate_helper$_controller) {
    this._rawPort = _rawPort;
    this.__isolate_helper$_controller = __isolate_helper$_controller;
  }
  ReceivePortImpl.builtin$cls = "ReceivePortImpl";
  if (!"name" in ReceivePortImpl)
    ReceivePortImpl.name = "ReceivePortImpl";
  $desc = $collectedClasses.ReceivePortImpl;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ReceivePortImpl.prototype = $desc;
  function _JsSerializer(_nextFreeRefId, _visited) {
    this._nextFreeRefId = _nextFreeRefId;
    this._visited = _visited;
  }
  _JsSerializer.builtin$cls = "_JsSerializer";
  if (!"name" in _JsSerializer)
    _JsSerializer.name = "_JsSerializer";
  $desc = $collectedClasses._JsSerializer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _JsSerializer.prototype = $desc;
  function _JsCopier(_visited) {
    this._visited = _visited;
  }
  _JsCopier.builtin$cls = "_JsCopier";
  if (!"name" in _JsCopier)
    _JsCopier.name = "_JsCopier";
  $desc = $collectedClasses._JsCopier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _JsCopier.prototype = $desc;
  function _JsDeserializer(_deserialized) {
    this._deserialized = _deserialized;
  }
  _JsDeserializer.builtin$cls = "_JsDeserializer";
  if (!"name" in _JsDeserializer)
    _JsDeserializer.name = "_JsDeserializer";
  $desc = $collectedClasses._JsDeserializer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _JsDeserializer.prototype = $desc;
  function _JsVisitedMap(tagged) {
    this.tagged = tagged;
  }
  _JsVisitedMap.builtin$cls = "_JsVisitedMap";
  if (!"name" in _JsVisitedMap)
    _JsVisitedMap.name = "_JsVisitedMap";
  $desc = $collectedClasses._JsVisitedMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _JsVisitedMap.prototype = $desc;
  function _MessageTraverserVisitedMap() {
  }
  _MessageTraverserVisitedMap.builtin$cls = "_MessageTraverserVisitedMap";
  if (!"name" in _MessageTraverserVisitedMap)
    _MessageTraverserVisitedMap.name = "_MessageTraverserVisitedMap";
  $desc = $collectedClasses._MessageTraverserVisitedMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MessageTraverserVisitedMap.prototype = $desc;
  function _MessageTraverser() {
  }
  _MessageTraverser.builtin$cls = "_MessageTraverser";
  if (!"name" in _MessageTraverser)
    _MessageTraverser.name = "_MessageTraverser";
  $desc = $collectedClasses._MessageTraverser;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MessageTraverser.prototype = $desc;
  function _Copier() {
  }
  _Copier.builtin$cls = "_Copier";
  if (!"name" in _Copier)
    _Copier.name = "_Copier";
  $desc = $collectedClasses._Copier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Copier.prototype = $desc;
  function _Copier_visitMap_closure(box_0, this_1) {
    this.box_0 = box_0;
    this.this_1 = this_1;
  }
  _Copier_visitMap_closure.builtin$cls = "_Copier_visitMap_closure";
  if (!"name" in _Copier_visitMap_closure)
    _Copier_visitMap_closure.name = "_Copier_visitMap_closure";
  $desc = $collectedClasses._Copier_visitMap_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Copier_visitMap_closure.prototype = $desc;
  function _Serializer() {
  }
  _Serializer.builtin$cls = "_Serializer";
  if (!"name" in _Serializer)
    _Serializer.name = "_Serializer";
  $desc = $collectedClasses._Serializer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Serializer.prototype = $desc;
  function _Deserializer() {
  }
  _Deserializer.builtin$cls = "_Deserializer";
  if (!"name" in _Deserializer)
    _Deserializer.name = "_Deserializer";
  $desc = $collectedClasses._Deserializer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Deserializer.prototype = $desc;
  function TimerImpl(_once, _inEventLoop, _handle) {
    this._once = _once;
    this._inEventLoop = _inEventLoop;
    this._handle = _handle;
  }
  TimerImpl.builtin$cls = "TimerImpl";
  if (!"name" in TimerImpl)
    TimerImpl.name = "TimerImpl";
  $desc = $collectedClasses.TimerImpl;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TimerImpl.prototype = $desc;
  function TimerImpl_internalCallback(this_0, callback_1) {
    this.this_0 = this_0;
    this.callback_1 = callback_1;
  }
  TimerImpl_internalCallback.builtin$cls = "TimerImpl_internalCallback";
  if (!"name" in TimerImpl_internalCallback)
    TimerImpl_internalCallback.name = "TimerImpl_internalCallback";
  $desc = $collectedClasses.TimerImpl_internalCallback;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TimerImpl_internalCallback.prototype = $desc;
  function TimerImpl_internalCallback0(this_2, callback_3) {
    this.this_2 = this_2;
    this.callback_3 = callback_3;
  }
  TimerImpl_internalCallback0.builtin$cls = "TimerImpl_internalCallback0";
  if (!"name" in TimerImpl_internalCallback0)
    TimerImpl_internalCallback0.name = "TimerImpl_internalCallback0";
  $desc = $collectedClasses.TimerImpl_internalCallback0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TimerImpl_internalCallback0.prototype = $desc;
  function NoSideEffects() {
  }
  NoSideEffects.builtin$cls = "NoSideEffects";
  if (!"name" in NoSideEffects)
    NoSideEffects.name = "NoSideEffects";
  $desc = $collectedClasses.NoSideEffects;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NoSideEffects.prototype = $desc;
  function NoThrows() {
  }
  NoThrows.builtin$cls = "NoThrows";
  if (!"name" in NoThrows)
    NoThrows.name = "NoThrows";
  $desc = $collectedClasses.NoThrows;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NoThrows.prototype = $desc;
  function NoInline() {
  }
  NoInline.builtin$cls = "NoInline";
  if (!"name" in NoInline)
    NoInline.name = "NoInline";
  $desc = $collectedClasses.NoInline;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NoInline.prototype = $desc;
  function ConstantMap() {
  }
  ConstantMap.builtin$cls = "ConstantMap";
  if (!"name" in ConstantMap)
    ConstantMap.name = "ConstantMap";
  $desc = $collectedClasses.ConstantMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ConstantMap.prototype = $desc;
  function ConstantStringMap(length, __js_helper$_jsObject, __js_helper$_keys) {
    this.length = length;
    this.__js_helper$_jsObject = __js_helper$_jsObject;
    this.__js_helper$_keys = __js_helper$_keys;
  }
  ConstantStringMap.builtin$cls = "ConstantStringMap";
  if (!"name" in ConstantStringMap)
    ConstantStringMap.name = "ConstantStringMap";
  $desc = $collectedClasses.ConstantStringMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ConstantStringMap.prototype = $desc;
  ConstantStringMap.prototype.get$length = function(receiver) {
    return this.length;
  };
  function ConstantStringMap_containsValue_closure(this_0, needle_1) {
    this.this_0 = this_0;
    this.needle_1 = needle_1;
  }
  ConstantStringMap_containsValue_closure.builtin$cls = "ConstantStringMap_containsValue_closure";
  if (!"name" in ConstantStringMap_containsValue_closure)
    ConstantStringMap_containsValue_closure.name = "ConstantStringMap_containsValue_closure";
  $desc = $collectedClasses.ConstantStringMap_containsValue_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ConstantStringMap_containsValue_closure.prototype = $desc;
  function ConstantStringMap_forEach_closure(this_0, f_1) {
    this.this_0 = this_0;
    this.f_1 = f_1;
  }
  ConstantStringMap_forEach_closure.builtin$cls = "ConstantStringMap_forEach_closure";
  if (!"name" in ConstantStringMap_forEach_closure)
    ConstantStringMap_forEach_closure.name = "ConstantStringMap_forEach_closure";
  $desc = $collectedClasses.ConstantStringMap_forEach_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ConstantStringMap_forEach_closure.prototype = $desc;
  function ConstantStringMap_values_closure(this_0) {
    this.this_0 = this_0;
  }
  ConstantStringMap_values_closure.builtin$cls = "ConstantStringMap_values_closure";
  if (!"name" in ConstantStringMap_values_closure)
    ConstantStringMap_values_closure.name = "ConstantStringMap_values_closure";
  $desc = $collectedClasses.ConstantStringMap_values_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ConstantStringMap_values_closure.prototype = $desc;
  function _ConstantMapKeyIterable(__js_helper$_map) {
    this.__js_helper$_map = __js_helper$_map;
  }
  _ConstantMapKeyIterable.builtin$cls = "_ConstantMapKeyIterable";
  if (!"name" in _ConstantMapKeyIterable)
    _ConstantMapKeyIterable.name = "_ConstantMapKeyIterable";
  $desc = $collectedClasses._ConstantMapKeyIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ConstantMapKeyIterable.prototype = $desc;
  function JSInvocationMirror(__js_helper$_memberName, _internalName, _kind, _arguments, _namedArgumentNames, _namedIndices) {
    this.__js_helper$_memberName = __js_helper$_memberName;
    this._internalName = _internalName;
    this._kind = _kind;
    this._arguments = _arguments;
    this._namedArgumentNames = _namedArgumentNames;
    this._namedIndices = _namedIndices;
  }
  JSInvocationMirror.builtin$cls = "JSInvocationMirror";
  if (!"name" in JSInvocationMirror)
    JSInvocationMirror.name = "JSInvocationMirror";
  $desc = $collectedClasses.JSInvocationMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSInvocationMirror.prototype = $desc;
  function CachedInvocation(jsFunction, isIntercepted, cachedInterceptor) {
    this.jsFunction = jsFunction;
    this.isIntercepted = isIntercepted;
    this.cachedInterceptor = cachedInterceptor;
  }
  CachedInvocation.builtin$cls = "CachedInvocation";
  if (!"name" in CachedInvocation)
    CachedInvocation.name = "CachedInvocation";
  $desc = $collectedClasses.CachedInvocation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CachedInvocation.prototype = $desc;
  function CachedCatchAllInvocation(info, jsFunction, isIntercepted, cachedInterceptor) {
    this.info = info;
    this.jsFunction = jsFunction;
    this.isIntercepted = isIntercepted;
    this.cachedInterceptor = cachedInterceptor;
  }
  CachedCatchAllInvocation.builtin$cls = "CachedCatchAllInvocation";
  if (!"name" in CachedCatchAllInvocation)
    CachedCatchAllInvocation.name = "CachedCatchAllInvocation";
  $desc = $collectedClasses.CachedCatchAllInvocation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CachedCatchAllInvocation.prototype = $desc;
  function CachedNoSuchMethodInvocation(interceptor) {
    this.interceptor = interceptor;
  }
  CachedNoSuchMethodInvocation.builtin$cls = "CachedNoSuchMethodInvocation";
  if (!"name" in CachedNoSuchMethodInvocation)
    CachedNoSuchMethodInvocation.name = "CachedNoSuchMethodInvocation";
  $desc = $collectedClasses.CachedNoSuchMethodInvocation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CachedNoSuchMethodInvocation.prototype = $desc;
  function ReflectionInfo(jsFunction, data, isAccessor, requiredParameterCount, optionalParameterCount, areOptionalParametersNamed, functionType) {
    this.jsFunction = jsFunction;
    this.data = data;
    this.isAccessor = isAccessor;
    this.requiredParameterCount = requiredParameterCount;
    this.optionalParameterCount = optionalParameterCount;
    this.areOptionalParametersNamed = areOptionalParametersNamed;
    this.functionType = functionType;
  }
  ReflectionInfo.builtin$cls = "ReflectionInfo";
  if (!"name" in ReflectionInfo)
    ReflectionInfo.name = "ReflectionInfo";
  $desc = $collectedClasses.ReflectionInfo;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ReflectionInfo.prototype = $desc;
  function Primitives_functionNoSuchMethod_closure(box_0, arguments_1, namedArgumentList_2) {
    this.box_0 = box_0;
    this.arguments_1 = arguments_1;
    this.namedArgumentList_2 = namedArgumentList_2;
  }
  Primitives_functionNoSuchMethod_closure.builtin$cls = "Primitives_functionNoSuchMethod_closure";
  if (!"name" in Primitives_functionNoSuchMethod_closure)
    Primitives_functionNoSuchMethod_closure.name = "Primitives_functionNoSuchMethod_closure";
  $desc = $collectedClasses.Primitives_functionNoSuchMethod_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Primitives_functionNoSuchMethod_closure.prototype = $desc;
  function Primitives_applyFunction_closure(box_0, defaultArguments_1) {
    this.box_0 = box_0;
    this.defaultArguments_1 = defaultArguments_1;
  }
  Primitives_applyFunction_closure.builtin$cls = "Primitives_applyFunction_closure";
  if (!"name" in Primitives_applyFunction_closure)
    Primitives_applyFunction_closure.name = "Primitives_applyFunction_closure";
  $desc = $collectedClasses.Primitives_applyFunction_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Primitives_applyFunction_closure.prototype = $desc;
  function TypeErrorDecoder(_pattern, _arguments, _argumentsExpr, _expr, _method, _receiver) {
    this._pattern = _pattern;
    this._arguments = _arguments;
    this._argumentsExpr = _argumentsExpr;
    this._expr = _expr;
    this._method = _method;
    this._receiver = _receiver;
  }
  TypeErrorDecoder.builtin$cls = "TypeErrorDecoder";
  if (!"name" in TypeErrorDecoder)
    TypeErrorDecoder.name = "TypeErrorDecoder";
  $desc = $collectedClasses.TypeErrorDecoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TypeErrorDecoder.prototype = $desc;
  function NullError(_message, _method) {
    this._message = _message;
    this._method = _method;
  }
  NullError.builtin$cls = "NullError";
  if (!"name" in NullError)
    NullError.name = "NullError";
  $desc = $collectedClasses.NullError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NullError.prototype = $desc;
  function JsNoSuchMethodError(_message, _method, _receiver) {
    this._message = _message;
    this._method = _method;
    this._receiver = _receiver;
  }
  JsNoSuchMethodError.builtin$cls = "JsNoSuchMethodError";
  if (!"name" in JsNoSuchMethodError)
    JsNoSuchMethodError.name = "JsNoSuchMethodError";
  $desc = $collectedClasses.JsNoSuchMethodError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsNoSuchMethodError.prototype = $desc;
  function UnknownJsTypeError(_message) {
    this._message = _message;
  }
  UnknownJsTypeError.builtin$cls = "UnknownJsTypeError";
  if (!"name" in UnknownJsTypeError)
    UnknownJsTypeError.name = "UnknownJsTypeError";
  $desc = $collectedClasses.UnknownJsTypeError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnknownJsTypeError.prototype = $desc;
  function unwrapException_saveStackTrace(ex_0) {
    this.ex_0 = ex_0;
  }
  unwrapException_saveStackTrace.builtin$cls = "unwrapException_saveStackTrace";
  if (!"name" in unwrapException_saveStackTrace)
    unwrapException_saveStackTrace.name = "unwrapException_saveStackTrace";
  $desc = $collectedClasses.unwrapException_saveStackTrace;
  if ($desc instanceof Array)
    $desc = $desc[1];
  unwrapException_saveStackTrace.prototype = $desc;
  function _StackTrace(_exception, _trace) {
    this._exception = _exception;
    this._trace = _trace;
  }
  _StackTrace.builtin$cls = "_StackTrace";
  if (!"name" in _StackTrace)
    _StackTrace.name = "_StackTrace";
  $desc = $collectedClasses._StackTrace;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StackTrace.prototype = $desc;
  function invokeClosure_closure(closure_0) {
    this.closure_0 = closure_0;
  }
  invokeClosure_closure.builtin$cls = "invokeClosure_closure";
  if (!"name" in invokeClosure_closure)
    invokeClosure_closure.name = "invokeClosure_closure";
  $desc = $collectedClasses.invokeClosure_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  invokeClosure_closure.prototype = $desc;
  function invokeClosure_closure0(closure_1, arg1_2) {
    this.closure_1 = closure_1;
    this.arg1_2 = arg1_2;
  }
  invokeClosure_closure0.builtin$cls = "invokeClosure_closure0";
  if (!"name" in invokeClosure_closure0)
    invokeClosure_closure0.name = "invokeClosure_closure0";
  $desc = $collectedClasses.invokeClosure_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  invokeClosure_closure0.prototype = $desc;
  function invokeClosure_closure1(closure_3, arg1_4, arg2_5) {
    this.closure_3 = closure_3;
    this.arg1_4 = arg1_4;
    this.arg2_5 = arg2_5;
  }
  invokeClosure_closure1.builtin$cls = "invokeClosure_closure1";
  if (!"name" in invokeClosure_closure1)
    invokeClosure_closure1.name = "invokeClosure_closure1";
  $desc = $collectedClasses.invokeClosure_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  invokeClosure_closure1.prototype = $desc;
  function invokeClosure_closure2(closure_6, arg1_7, arg2_8, arg3_9) {
    this.closure_6 = closure_6;
    this.arg1_7 = arg1_7;
    this.arg2_8 = arg2_8;
    this.arg3_9 = arg3_9;
  }
  invokeClosure_closure2.builtin$cls = "invokeClosure_closure2";
  if (!"name" in invokeClosure_closure2)
    invokeClosure_closure2.name = "invokeClosure_closure2";
  $desc = $collectedClasses.invokeClosure_closure2;
  if ($desc instanceof Array)
    $desc = $desc[1];
  invokeClosure_closure2.prototype = $desc;
  function invokeClosure_closure3(closure_10, arg1_11, arg2_12, arg3_13, arg4_14) {
    this.closure_10 = closure_10;
    this.arg1_11 = arg1_11;
    this.arg2_12 = arg2_12;
    this.arg3_13 = arg3_13;
    this.arg4_14 = arg4_14;
  }
  invokeClosure_closure3.builtin$cls = "invokeClosure_closure3";
  if (!"name" in invokeClosure_closure3)
    invokeClosure_closure3.name = "invokeClosure_closure3";
  $desc = $collectedClasses.invokeClosure_closure3;
  if ($desc instanceof Array)
    $desc = $desc[1];
  invokeClosure_closure3.prototype = $desc;
  function Closure() {
  }
  Closure.builtin$cls = "Closure";
  if (!"name" in Closure)
    Closure.name = "Closure";
  $desc = $collectedClasses.Closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Closure.prototype = $desc;
  function TearOffClosure() {
  }
  TearOffClosure.builtin$cls = "TearOffClosure";
  if (!"name" in TearOffClosure)
    TearOffClosure.name = "TearOffClosure";
  $desc = $collectedClasses.TearOffClosure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TearOffClosure.prototype = $desc;
  function BoundClosure(_self, __js_helper$_target, _receiver, __js_helper$_name) {
    this._self = _self;
    this.__js_helper$_target = __js_helper$_target;
    this._receiver = _receiver;
    this.__js_helper$_name = __js_helper$_name;
  }
  BoundClosure.builtin$cls = "BoundClosure";
  if (!"name" in BoundClosure)
    BoundClosure.name = "BoundClosure";
  $desc = $collectedClasses.BoundClosure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  BoundClosure.prototype = $desc;
  function Creates(types) {
    this.types = types;
  }
  Creates.builtin$cls = "Creates";
  if (!"name" in Creates)
    Creates.name = "Creates";
  $desc = $collectedClasses.Creates;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Creates.prototype = $desc;
  function Returns(types) {
    this.types = types;
  }
  Returns.builtin$cls = "Returns";
  if (!"name" in Returns)
    Returns.name = "Returns";
  $desc = $collectedClasses.Returns;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Returns.prototype = $desc;
  function JSName(name) {
    this.name = name;
  }
  JSName.builtin$cls = "JSName";
  if (!"name" in JSName)
    JSName.name = "JSName";
  $desc = $collectedClasses.JSName;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSName.prototype = $desc;
  JSName.prototype.get$name = function(receiver) {
    return this.name;
  };
  function CastErrorImplementation(message) {
    this.message = message;
  }
  CastErrorImplementation.builtin$cls = "CastErrorImplementation";
  if (!"name" in CastErrorImplementation)
    CastErrorImplementation.name = "CastErrorImplementation";
  $desc = $collectedClasses.CastErrorImplementation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CastErrorImplementation.prototype = $desc;
  CastErrorImplementation.prototype.get$message = function(receiver) {
    return this.message;
  };
  function RuntimeError(message) {
    this.message = message;
  }
  RuntimeError.builtin$cls = "RuntimeError";
  if (!"name" in RuntimeError)
    RuntimeError.name = "RuntimeError";
  $desc = $collectedClasses.RuntimeError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RuntimeError.prototype = $desc;
  RuntimeError.prototype.get$message = function(receiver) {
    return this.message;
  };
  function RuntimeType() {
  }
  RuntimeType.builtin$cls = "RuntimeType";
  if (!"name" in RuntimeType)
    RuntimeType.name = "RuntimeType";
  $desc = $collectedClasses.RuntimeType;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RuntimeType.prototype = $desc;
  function RuntimeFunctionType(returnType, parameterTypes, optionalParameterTypes, namedParameters) {
    this.returnType = returnType;
    this.parameterTypes = parameterTypes;
    this.optionalParameterTypes = optionalParameterTypes;
    this.namedParameters = namedParameters;
  }
  RuntimeFunctionType.builtin$cls = "RuntimeFunctionType";
  if (!"name" in RuntimeFunctionType)
    RuntimeFunctionType.name = "RuntimeFunctionType";
  $desc = $collectedClasses.RuntimeFunctionType;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RuntimeFunctionType.prototype = $desc;
  function DynamicRuntimeType() {
  }
  DynamicRuntimeType.builtin$cls = "DynamicRuntimeType";
  if (!"name" in DynamicRuntimeType)
    DynamicRuntimeType.name = "DynamicRuntimeType";
  $desc = $collectedClasses.DynamicRuntimeType;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DynamicRuntimeType.prototype = $desc;
  function RuntimeTypePlain(name) {
    this.name = name;
  }
  RuntimeTypePlain.builtin$cls = "RuntimeTypePlain";
  if (!"name" in RuntimeTypePlain)
    RuntimeTypePlain.name = "RuntimeTypePlain";
  $desc = $collectedClasses.RuntimeTypePlain;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RuntimeTypePlain.prototype = $desc;
  RuntimeTypePlain.prototype.get$name = function(receiver) {
    return this.name;
  };
  function RuntimeTypeGeneric(name, arguments, rti) {
    this.name = name;
    this.arguments = arguments;
    this.rti = rti;
  }
  RuntimeTypeGeneric.builtin$cls = "RuntimeTypeGeneric";
  if (!"name" in RuntimeTypeGeneric)
    RuntimeTypeGeneric.name = "RuntimeTypeGeneric";
  $desc = $collectedClasses.RuntimeTypeGeneric;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RuntimeTypeGeneric.prototype = $desc;
  RuntimeTypeGeneric.prototype.get$name = function(receiver) {
    return this.name;
  };
  RuntimeTypeGeneric.prototype.get$arguments = function() {
    return this.arguments;
  };
  function UnimplementedNoSuchMethodError(_message) {
    this._message = _message;
  }
  UnimplementedNoSuchMethodError.builtin$cls = "UnimplementedNoSuchMethodError";
  if (!"name" in UnimplementedNoSuchMethodError)
    UnimplementedNoSuchMethodError.name = "UnimplementedNoSuchMethodError";
  $desc = $collectedClasses.UnimplementedNoSuchMethodError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnimplementedNoSuchMethodError.prototype = $desc;
  function TypeImpl(_typeName, _unmangledName) {
    this._typeName = _typeName;
    this._unmangledName = _unmangledName;
  }
  TypeImpl.builtin$cls = "TypeImpl";
  if (!"name" in TypeImpl)
    TypeImpl.name = "TypeImpl";
  $desc = $collectedClasses.TypeImpl;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TypeImpl.prototype = $desc;
  TypeImpl.prototype.get$_typeName = function() {
    return this._typeName;
  };
  function TypeVariable(owner, name, bound) {
    this.owner = owner;
    this.name = name;
    this.bound = bound;
  }
  TypeVariable.builtin$cls = "TypeVariable";
  if (!"name" in TypeVariable)
    TypeVariable.name = "TypeVariable";
  $desc = $collectedClasses.TypeVariable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TypeVariable.prototype = $desc;
  TypeVariable.prototype.get$owner = function() {
    return this.owner;
  };
  TypeVariable.prototype.get$name = function(receiver) {
    return this.name;
  };
  TypeVariable.prototype.get$bound = function(receiver) {
    return this.bound;
  };
  function initHooks_closure(getTag_0) {
    this.getTag_0 = getTag_0;
  }
  initHooks_closure.builtin$cls = "initHooks_closure";
  if (!"name" in initHooks_closure)
    initHooks_closure.name = "initHooks_closure";
  $desc = $collectedClasses.initHooks_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  initHooks_closure.prototype = $desc;
  function initHooks_closure0(getUnknownTag_1) {
    this.getUnknownTag_1 = getUnknownTag_1;
  }
  initHooks_closure0.builtin$cls = "initHooks_closure0";
  if (!"name" in initHooks_closure0)
    initHooks_closure0.name = "initHooks_closure0";
  $desc = $collectedClasses.initHooks_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  initHooks_closure0.prototype = $desc;
  function initHooks_closure1(prototypeForTag_2) {
    this.prototypeForTag_2 = prototypeForTag_2;
  }
  initHooks_closure1.builtin$cls = "initHooks_closure1";
  if (!"name" in initHooks_closure1)
    initHooks_closure1.name = "initHooks_closure1";
  $desc = $collectedClasses.initHooks_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  initHooks_closure1.prototype = $desc;
  function JSSyntaxRegExp(_nativeRegExp, _nativeGlobalRegExp, _nativeAnchoredRegExp) {
    this._nativeRegExp = _nativeRegExp;
    this._nativeGlobalRegExp = _nativeGlobalRegExp;
    this._nativeAnchoredRegExp = _nativeAnchoredRegExp;
  }
  JSSyntaxRegExp.builtin$cls = "JSSyntaxRegExp";
  if (!"name" in JSSyntaxRegExp)
    JSSyntaxRegExp.name = "JSSyntaxRegExp";
  $desc = $collectedClasses.JSSyntaxRegExp;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JSSyntaxRegExp.prototype = $desc;
  function _MatchImplementation(pattern, _match) {
    this.pattern = pattern;
    this._match = _match;
  }
  _MatchImplementation.builtin$cls = "_MatchImplementation";
  if (!"name" in _MatchImplementation)
    _MatchImplementation.name = "_MatchImplementation";
  $desc = $collectedClasses._MatchImplementation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MatchImplementation.prototype = $desc;
  function _AllMatchesIterable(_re, _string) {
    this._re = _re;
    this._string = _string;
  }
  _AllMatchesIterable.builtin$cls = "_AllMatchesIterable";
  if (!"name" in _AllMatchesIterable)
    _AllMatchesIterable.name = "_AllMatchesIterable";
  $desc = $collectedClasses._AllMatchesIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AllMatchesIterable.prototype = $desc;
  function _AllMatchesIterator(_regExp, _string, __js_helper$_current) {
    this._regExp = _regExp;
    this._string = _string;
    this.__js_helper$_current = __js_helper$_current;
  }
  _AllMatchesIterator.builtin$cls = "_AllMatchesIterator";
  if (!"name" in _AllMatchesIterator)
    _AllMatchesIterator.name = "_AllMatchesIterator";
  $desc = $collectedClasses._AllMatchesIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AllMatchesIterator.prototype = $desc;
  function StringMatch(start, input, pattern) {
    this.start = start;
    this.input = input;
    this.pattern = pattern;
  }
  StringMatch.builtin$cls = "StringMatch";
  if (!"name" in StringMatch)
    StringMatch.name = "StringMatch";
  $desc = $collectedClasses.StringMatch;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StringMatch.prototype = $desc;
  function Container(name, _category_item$__$comment, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this.name = name;
    this._category_item$__$comment = _category_item$__$comment;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  Container.builtin$cls = "Container";
  if (!"name" in Container)
    Container.name = "Container";
  $desc = $collectedClasses.Container;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Container.prototype = $desc;
  Container.prototype.get$name = function(receiver) {
    return this.name;
  };
  Container.prototype.get$name.$reflectable = 1;
  Container.prototype.get$_category_item$__$comment = function() {
    return this._category_item$__$comment;
  };
  Container.prototype.get$_category_item$__$comment.$reflectable = 1;
  Container.prototype.set$_category_item$__$comment = function(v) {
    return this._category_item$__$comment = v;
  };
  Container.prototype.set$_category_item$__$comment.$reflectable = 1;
  function Category(content, memberNames, inheritedCounter, memberCounter, name, _category_item$__$comment, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this.content = content;
    this.memberNames = memberNames;
    this.inheritedCounter = inheritedCounter;
    this.memberCounter = memberCounter;
    this.name = name;
    this._category_item$__$comment = _category_item$__$comment;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  Category.builtin$cls = "Category";
  if (!"name" in Category)
    Category.name = "Category";
  $desc = $collectedClasses.Category;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Category.prototype = $desc;
  Category.prototype.get$content = function(receiver) {
    return this.content;
  };
  Category.prototype.get$content.$reflectable = 1;
  Category.prototype.set$content = function(receiver, v) {
    return this.content = v;
  };
  Category.prototype.set$content.$reflectable = 1;
  Category.prototype.get$memberNames = function() {
    return this.memberNames;
  };
  Category.prototype.get$memberNames.$reflectable = 1;
  Category.prototype.set$memberNames = function(v) {
    return this.memberNames = v;
  };
  Category.prototype.set$memberNames.$reflectable = 1;
  Category.prototype.get$inheritedCounter = function() {
    return this.inheritedCounter;
  };
  Category.prototype.get$inheritedCounter.$reflectable = 1;
  Category.prototype.set$inheritedCounter = function(v) {
    return this.inheritedCounter = v;
  };
  Category.prototype.set$inheritedCounter.$reflectable = 1;
  Category.prototype.get$memberCounter = function() {
    return this.memberCounter;
  };
  Category.prototype.get$memberCounter.$reflectable = 1;
  Category.prototype.set$memberCounter = function(v) {
    return this.memberCounter = v;
  };
  Category.prototype.set$memberCounter.$reflectable = 1;
  function Category_memberNamed_closure(name_0) {
    this.name_0 = name_0;
  }
  Category_memberNamed_closure.builtin$cls = "Category_memberNamed_closure";
  if (!"name" in Category_memberNamed_closure)
    Category_memberNamed_closure.name = "Category_memberNamed_closure";
  $desc = $collectedClasses.Category_memberNamed_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Category_memberNamed_closure.prototype = $desc;
  function Category$forClasses_closure(this_0) {
    this.this_0 = this_0;
  }
  Category$forClasses_closure.builtin$cls = "Category$forClasses_closure";
  if (!"name" in Category$forClasses_closure)
    Category$forClasses_closure.name = "Category$forClasses_closure";
  $desc = $collectedClasses.Category$forClasses_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Category$forClasses_closure.prototype = $desc;
  function Category$forVariables_closure(this_0, variables_1) {
    this.this_0 = this_0;
    this.variables_1 = variables_1;
  }
  Category$forVariables_closure.builtin$cls = "Category$forVariables_closure";
  if (!"name" in Category$forVariables_closure)
    Category$forVariables_closure.name = "Category$forVariables_closure";
  $desc = $collectedClasses.Category$forVariables_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Category$forVariables_closure.prototype = $desc;
  function Category$forVariables_closure0(this_2, getters_3) {
    this.this_2 = this_2;
    this.getters_3 = getters_3;
  }
  Category$forVariables_closure0.builtin$cls = "Category$forVariables_closure0";
  if (!"name" in Category$forVariables_closure0)
    Category$forVariables_closure0.name = "Category$forVariables_closure0";
  $desc = $collectedClasses.Category$forVariables_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Category$forVariables_closure0.prototype = $desc;
  function Category$forVariables_closure1(this_4, setters_5) {
    this.this_4 = this_4;
    this.setters_5 = setters_5;
  }
  Category$forVariables_closure1.builtin$cls = "Category$forVariables_closure1";
  if (!"name" in Category$forVariables_closure1)
    Category$forVariables_closure1.name = "Category$forVariables_closure1";
  $desc = $collectedClasses.Category$forVariables_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Category$forVariables_closure1.prototype = $desc;
  function Category$forFunctions_closure(this_0, yaml_1, isConstructor_2, className_3, isOperator_4, owner_5) {
    this.this_0 = this_0;
    this.yaml_1 = yaml_1;
    this.isConstructor_2 = isConstructor_2;
    this.className_3 = className_3;
    this.isOperator_4 = isOperator_4;
    this.owner_5 = owner_5;
  }
  Category$forFunctions_closure.builtin$cls = "Category$forFunctions_closure";
  if (!"name" in Category$forFunctions_closure)
    Category$forFunctions_closure.name = "Category$forFunctions_closure";
  $desc = $collectedClasses.Category$forFunctions_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Category$forFunctions_closure.prototype = $desc;
  function Category$forTypedefs_closure(this_0, yaml_1) {
    this.this_0 = this_0;
    this.yaml_1 = yaml_1;
  }
  Category$forTypedefs_closure.builtin$cls = "Category$forTypedefs_closure";
  if (!"name" in Category$forTypedefs_closure)
    Category$forTypedefs_closure.name = "Category$forTypedefs_closure";
  $desc = $collectedClasses.Category$forTypedefs_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Category$forTypedefs_closure.prototype = $desc;
  function Category_addInheritedItem_closure(item_0) {
    this.item_0 = item_0;
  }
  Category_addInheritedItem_closure.builtin$cls = "Category_addInheritedItem_closure";
  if (!"name" in Category_addInheritedItem_closure)
    Category_addInheritedItem_closure.name = "Category_addInheritedItem_closure";
  $desc = $collectedClasses.Category_addInheritedItem_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Category_addInheritedItem_closure.prototype = $desc;
  function Category_filteredContent_closure(filter_0) {
    this.filter_0 = filter_0;
  }
  Category_filteredContent_closure.builtin$cls = "Category_filteredContent_closure";
  if (!"name" in Category_filteredContent_closure)
    Category_filteredContent_closure.name = "Category_filteredContent_closure";
  $desc = $collectedClasses.Category_filteredContent_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Category_filteredContent_closure.prototype = $desc;
  function Filter(showInherited, showObjectMembers) {
    this.showInherited = showInherited;
    this.showObjectMembers = showObjectMembers;
  }
  Filter.builtin$cls = "Filter";
  if (!"name" in Filter)
    Filter.name = "Filter";
  $desc = $collectedClasses.Filter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Filter.prototype = $desc;
  Filter.prototype.get$showObjectMembers = function() {
    return this.showObjectMembers;
  };
  Filter.prototype.set$showObjectMembers = function(v) {
    return this.showObjectMembers = v;
  };
  function Item(path, qualifiedName, _category_item$_owner, name, _category_item$__$comment, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this.path = path;
    this.qualifiedName = qualifiedName;
    this._category_item$_owner = _category_item$_owner;
    this.name = name;
    this._category_item$__$comment = _category_item$__$comment;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  Item.builtin$cls = "Item";
  if (!"name" in Item)
    Item.name = "Item";
  $desc = $collectedClasses.Item;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Item.prototype = $desc;
  Item.prototype.get$path = function(receiver) {
    return this.path;
  };
  Item.prototype.get$path.$reflectable = 1;
  Item.prototype.set$path = function(receiver, v) {
    return this.path = v;
  };
  Item.prototype.set$path.$reflectable = 1;
  Item.prototype.get$qualifiedName = function() {
    return this.qualifiedName;
  };
  Item.prototype.get$qualifiedName.$reflectable = 1;
  Item.prototype.get$_category_item$_owner = function() {
    return this._category_item$_owner;
  };
  Item.prototype.get$_category_item$_owner.$reflectable = 1;
  Item.prototype.set$_category_item$_owner = function(v) {
    return this._category_item$_owner = v;
  };
  Item.prototype.set$_category_item$_owner.$reflectable = 1;
  function _sort_closure() {
  }
  _sort_closure.builtin$cls = "_sort_closure";
  if (!"name" in _sort_closure)
    _sort_closure.name = "_sort_closure";
  $desc = $collectedClasses._sort_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _sort_closure.prototype = $desc;
  function _sort__closure() {
  }
  _sort__closure.builtin$cls = "_sort__closure";
  if (!"name" in _sort__closure)
    _sort__closure.name = "_sort__closure";
  $desc = $collectedClasses._sort__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _sort__closure.prototype = $desc;
  function Home(owner, libraries, path, qualifiedName, _category_item$_owner, name, _category_item$__$comment, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this.owner = owner;
    this.libraries = libraries;
    this.path = path;
    this.qualifiedName = qualifiedName;
    this._category_item$_owner = _category_item$_owner;
    this.name = name;
    this._category_item$__$comment = _category_item$__$comment;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  Home.builtin$cls = "Home";
  if (!"name" in Home)
    Home.name = "Home";
  $desc = $collectedClasses.Home;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Home.prototype = $desc;
  Home.prototype.get$owner = function() {
    return this.owner;
  };
  Home.prototype.get$owner.$reflectable = 1;
  Home.prototype.set$owner = function(v) {
    return this.owner = v;
  };
  Home.prototype.set$owner.$reflectable = 1;
  Home.prototype.get$libraries = function() {
    return this.libraries;
  };
  Home.prototype.get$libraries.$reflectable = 1;
  Home.prototype.set$libraries = function(v) {
    return this.libraries = v;
  };
  Home.prototype.set$libraries.$reflectable = 1;
  function Home_closure(packages_0) {
    this.packages_0 = packages_0;
  }
  Home_closure.builtin$cls = "Home_closure";
  if (!"name" in Home_closure)
    Home_closure.name = "Home_closure";
  $desc = $collectedClasses.Home_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Home_closure.prototype = $desc;
  function Home__closure1() {
  }
  Home__closure1.builtin$cls = "Home__closure1";
  if (!"name" in Home__closure1)
    Home__closure1.name = "Home__closure1";
  $desc = $collectedClasses.Home__closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Home__closure1.prototype = $desc;
  function Home_closure0(this_1) {
    this.this_1 = this_1;
  }
  Home_closure0.builtin$cls = "Home_closure0";
  if (!"name" in Home_closure0)
    Home_closure0.name = "Home_closure0";
  $desc = $collectedClasses.Home_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Home_closure0.prototype = $desc;
  function Home__closure(packageName_2) {
    this.packageName_2 = packageName_2;
  }
  Home__closure.builtin$cls = "Home__closure";
  if (!"name" in Home__closure)
    Home__closure.name = "Home__closure";
  $desc = $collectedClasses.Home__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Home__closure.prototype = $desc;
  function Home__closure0(libraries_3) {
    this.libraries_3 = libraries_3;
  }
  Home__closure0.builtin$cls = "Home__closure0";
  if (!"name" in Home__closure0)
    Home__closure0.name = "Home__closure0";
  $desc = $collectedClasses.Home__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Home__closure0.prototype = $desc;
  function Home_makeMainLibrarySpecial_closure(this_0) {
    this.this_0 = this_0;
  }
  Home_makeMainLibrarySpecial_closure.builtin$cls = "Home_makeMainLibrarySpecial_closure";
  if (!"name" in Home_makeMainLibrarySpecial_closure)
    Home_makeMainLibrarySpecial_closure.name = "Home_makeMainLibrarySpecial_closure";
  $desc = $collectedClasses.Home_makeMainLibrarySpecial_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Home_makeMainLibrarySpecial_closure.prototype = $desc;
  function Home_makeMainLibrarySpecial_closure0(this_1) {
    this.this_1 = this_1;
  }
  Home_makeMainLibrarySpecial_closure0.builtin$cls = "Home_makeMainLibrarySpecial_closure0";
  if (!"name" in Home_makeMainLibrarySpecial_closure0)
    Home_makeMainLibrarySpecial_closure0.name = "Home_makeMainLibrarySpecial_closure0";
  $desc = $collectedClasses.Home_makeMainLibrarySpecial_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Home_makeMainLibrarySpecial_closure0.prototype = $desc;
  function Home_makeMainLibrarySpecial_closure1(mainLib_2) {
    this.mainLib_2 = mainLib_2;
  }
  Home_makeMainLibrarySpecial_closure1.builtin$cls = "Home_makeMainLibrarySpecial_closure1";
  if (!"name" in Home_makeMainLibrarySpecial_closure1)
    Home_makeMainLibrarySpecial_closure1.name = "Home_makeMainLibrarySpecial_closure1";
  $desc = $collectedClasses.Home_makeMainLibrarySpecial_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Home_makeMainLibrarySpecial_closure1.prototype = $desc;
  function Home_memberNamed_closure(name_0) {
    this.name_0 = name_0;
  }
  Home_memberNamed_closure.builtin$cls = "Home_memberNamed_closure";
  if (!"name" in Home_memberNamed_closure)
    Home_memberNamed_closure.name = "Home_memberNamed_closure";
  $desc = $collectedClasses.Home_memberNamed_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Home_memberNamed_closure.prototype = $desc;
  function LazyItem(isLoaded, previewComment, path, qualifiedName, _category_item$_owner, name, _category_item$__$comment, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this.isLoaded = isLoaded;
    this.previewComment = previewComment;
    this.path = path;
    this.qualifiedName = qualifiedName;
    this._category_item$_owner = _category_item$_owner;
    this.name = name;
    this._category_item$__$comment = _category_item$__$comment;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  LazyItem.builtin$cls = "LazyItem";
  if (!"name" in LazyItem)
    LazyItem.name = "LazyItem";
  $desc = $collectedClasses.LazyItem;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LazyItem.prototype = $desc;
  LazyItem.prototype.get$isLoaded = function() {
    return this.isLoaded;
  };
  LazyItem.prototype.get$isLoaded.$reflectable = 1;
  LazyItem.prototype.set$isLoaded = function(v) {
    return this.isLoaded = v;
  };
  LazyItem.prototype.set$isLoaded.$reflectable = 1;
  LazyItem.prototype.get$previewComment = function() {
    return this.previewComment;
  };
  LazyItem.prototype.get$previewComment.$reflectable = 1;
  LazyItem.prototype.set$previewComment = function(v) {
    return this.previewComment = v;
  };
  LazyItem.prototype.set$previewComment.$reflectable = 1;
  function LazyItem_load_closure(this_0) {
    this.this_0 = this_0;
  }
  LazyItem_load_closure.builtin$cls = "LazyItem_load_closure";
  if (!"name" in LazyItem_load_closure)
    LazyItem_load_closure.name = "LazyItem_load_closure";
  $desc = $collectedClasses.LazyItem_load_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LazyItem_load_closure.prototype = $desc;
  function Library(classes, errors, typedefs, variables, functions, operators, home, isLoaded, previewComment, path, qualifiedName, _category_item$_owner, name, _category_item$__$comment, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this.classes = classes;
    this.errors = errors;
    this.typedefs = typedefs;
    this.variables = variables;
    this.functions = functions;
    this.operators = operators;
    this.home = home;
    this.isLoaded = isLoaded;
    this.previewComment = previewComment;
    this.path = path;
    this.qualifiedName = qualifiedName;
    this._category_item$_owner = _category_item$_owner;
    this.name = name;
    this._category_item$__$comment = _category_item$__$comment;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  Library.builtin$cls = "Library";
  if (!"name" in Library)
    Library.name = "Library";
  $desc = $collectedClasses.Library;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Library.prototype = $desc;
  Library.prototype.get$classes = function(receiver) {
    return this.classes;
  };
  Library.prototype.get$classes.$reflectable = 1;
  Library.prototype.set$classes = function(receiver, v) {
    return this.classes = v;
  };
  Library.prototype.set$classes.$reflectable = 1;
  Library.prototype.get$errors = function() {
    return this.errors;
  };
  Library.prototype.get$errors.$reflectable = 1;
  Library.prototype.set$errors = function(v) {
    return this.errors = v;
  };
  Library.prototype.set$errors.$reflectable = 1;
  Library.prototype.get$typedefs = function() {
    return this.typedefs;
  };
  Library.prototype.get$typedefs.$reflectable = 1;
  Library.prototype.set$typedefs = function(v) {
    return this.typedefs = v;
  };
  Library.prototype.set$typedefs.$reflectable = 1;
  Library.prototype.get$variables = function(receiver) {
    return this.variables;
  };
  Library.prototype.get$variables.$reflectable = 1;
  Library.prototype.set$variables = function(receiver, v) {
    return this.variables = v;
  };
  Library.prototype.set$variables.$reflectable = 1;
  Library.prototype.get$functions = function() {
    return this.functions;
  };
  Library.prototype.get$functions.$reflectable = 1;
  Library.prototype.set$functions = function(v) {
    return this.functions = v;
  };
  Library.prototype.set$functions.$reflectable = 1;
  Library.prototype.get$operators = function() {
    return this.operators;
  };
  Library.prototype.get$operators.$reflectable = 1;
  Library.prototype.set$operators = function(v) {
    return this.operators = v;
  };
  Library.prototype.set$operators.$reflectable = 1;
  Library.prototype.get$home = function() {
    return this.home;
  };
  Library.prototype.get$home.$reflectable = 1;
  Library.prototype.set$home = function(v) {
    return this.home = v;
  };
  Library.prototype.set$home.$reflectable = 1;
  function Class(functions, variables, constructs, operators, superClass, isAbstract, annotations, interfaces, subclasses, generics, _instanceVariables, _staticVariables, _instanceFunctions, _staticFunctions, isLoaded, previewComment, path, qualifiedName, _category_item$_owner, name, _category_item$__$comment, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this.functions = functions;
    this.variables = variables;
    this.constructs = constructs;
    this.operators = operators;
    this.superClass = superClass;
    this.isAbstract = isAbstract;
    this.annotations = annotations;
    this.interfaces = interfaces;
    this.subclasses = subclasses;
    this.generics = generics;
    this._instanceVariables = _instanceVariables;
    this._staticVariables = _staticVariables;
    this._instanceFunctions = _instanceFunctions;
    this._staticFunctions = _staticFunctions;
    this.isLoaded = isLoaded;
    this.previewComment = previewComment;
    this.path = path;
    this.qualifiedName = qualifiedName;
    this._category_item$_owner = _category_item$_owner;
    this.name = name;
    this._category_item$__$comment = _category_item$__$comment;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  Class.builtin$cls = "Class";
  if (!"name" in Class)
    Class.name = "Class";
  $desc = $collectedClasses.Class;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Class.prototype = $desc;
  Class.prototype.get$functions = function() {
    return this.functions;
  };
  Class.prototype.get$functions.$reflectable = 1;
  Class.prototype.set$functions = function(v) {
    return this.functions = v;
  };
  Class.prototype.set$functions.$reflectable = 1;
  Class.prototype.get$variables = function(receiver) {
    return this.variables;
  };
  Class.prototype.get$variables.$reflectable = 1;
  Class.prototype.set$variables = function(receiver, v) {
    return this.variables = v;
  };
  Class.prototype.set$variables.$reflectable = 1;
  Class.prototype.get$constructs = function() {
    return this.constructs;
  };
  Class.prototype.get$constructs.$reflectable = 1;
  Class.prototype.set$constructs = function(v) {
    return this.constructs = v;
  };
  Class.prototype.set$constructs.$reflectable = 1;
  Class.prototype.get$operators = function() {
    return this.operators;
  };
  Class.prototype.get$operators.$reflectable = 1;
  Class.prototype.set$operators = function(v) {
    return this.operators = v;
  };
  Class.prototype.set$operators.$reflectable = 1;
  Class.prototype.get$superClass = function() {
    return this.superClass;
  };
  Class.prototype.get$superClass.$reflectable = 1;
  Class.prototype.set$superClass = function(v) {
    return this.superClass = v;
  };
  Class.prototype.set$superClass.$reflectable = 1;
  Class.prototype.get$isAbstract = function() {
    return this.isAbstract;
  };
  Class.prototype.get$isAbstract.$reflectable = 1;
  Class.prototype.set$isAbstract = function(v) {
    return this.isAbstract = v;
  };
  Class.prototype.set$isAbstract.$reflectable = 1;
  Class.prototype.get$annotations = function(receiver) {
    return this.annotations;
  };
  Class.prototype.get$annotations.$reflectable = 1;
  Class.prototype.set$annotations = function(receiver, v) {
    return this.annotations = v;
  };
  Class.prototype.set$annotations.$reflectable = 1;
  Class.prototype.get$interfaces = function() {
    return this.interfaces;
  };
  Class.prototype.get$interfaces.$reflectable = 1;
  Class.prototype.set$interfaces = function(v) {
    return this.interfaces = v;
  };
  Class.prototype.set$interfaces.$reflectable = 1;
  Class.prototype.get$subclasses = function() {
    return this.subclasses;
  };
  Class.prototype.get$subclasses.$reflectable = 1;
  Class.prototype.set$subclasses = function(v) {
    return this.subclasses = v;
  };
  Class.prototype.set$subclasses.$reflectable = 1;
  Class.prototype.get$generics = function() {
    return this.generics;
  };
  Class.prototype.get$generics.$reflectable = 1;
  Class.prototype.set$generics = function(v) {
    return this.generics = v;
  };
  Class.prototype.set$generics.$reflectable = 1;
  Class.prototype.get$_instanceVariables = function() {
    return this._instanceVariables;
  };
  Class.prototype.get$_instanceVariables.$reflectable = 1;
  Class.prototype.set$_instanceVariables = function(v) {
    return this._instanceVariables = v;
  };
  Class.prototype.set$_instanceVariables.$reflectable = 1;
  Class.prototype.get$_staticVariables = function() {
    return this._staticVariables;
  };
  Class.prototype.get$_staticVariables.$reflectable = 1;
  Class.prototype.set$_staticVariables = function(v) {
    return this._staticVariables = v;
  };
  Class.prototype.set$_staticVariables.$reflectable = 1;
  Class.prototype.get$_instanceFunctions = function() {
    return this._instanceFunctions;
  };
  Class.prototype.get$_instanceFunctions.$reflectable = 1;
  Class.prototype.set$_instanceFunctions = function(v) {
    return this._instanceFunctions = v;
  };
  Class.prototype.set$_instanceFunctions.$reflectable = 1;
  Class.prototype.get$_staticFunctions = function() {
    return this._staticFunctions;
  };
  Class.prototype.get$_staticFunctions.$reflectable = 1;
  Class.prototype.set$_staticFunctions = function(v) {
    return this._staticFunctions = v;
  };
  Class.prototype.set$_staticFunctions.$reflectable = 1;
  function Class_addToHierarchy_closure(this_0) {
    this.this_0 = this_0;
  }
  Class_addToHierarchy_closure.builtin$cls = "Class_addToHierarchy_closure";
  if (!"name" in Class_addToHierarchy_closure)
    Class_addToHierarchy_closure.name = "Class_addToHierarchy_closure";
  $desc = $collectedClasses.Class_addToHierarchy_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Class_addToHierarchy_closure.prototype = $desc;
  function Class_addToHierarchy__closure(this_1) {
    this.this_1 = this_1;
  }
  Class_addToHierarchy__closure.builtin$cls = "Class_addToHierarchy__closure";
  if (!"name" in Class_addToHierarchy__closure)
    Class_addToHierarchy__closure.name = "Class_addToHierarchy__closure";
  $desc = $collectedClasses.Class_addToHierarchy__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Class_addToHierarchy__closure.prototype = $desc;
  function Class_loadValues_closure() {
  }
  Class_loadValues_closure.builtin$cls = "Class_loadValues_closure";
  if (!"name" in Class_loadValues_closure)
    Class_loadValues_closure.name = "Class_loadValues_closure";
  $desc = $collectedClasses.Class_loadValues_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Class_loadValues_closure.prototype = $desc;
  function Class_loadValues_closure0() {
  }
  Class_loadValues_closure0.builtin$cls = "Class_loadValues_closure0";
  if (!"name" in Class_loadValues_closure0)
    Class_loadValues_closure0.name = "Class_loadValues_closure0";
  $desc = $collectedClasses.Class_loadValues_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Class_loadValues_closure0.prototype = $desc;
  function Class_loadValues_closure1(this_0) {
    this.this_0 = this_0;
  }
  Class_loadValues_closure1.builtin$cls = "Class_loadValues_closure1";
  if (!"name" in Class_loadValues_closure1)
    Class_loadValues_closure1.name = "Class_loadValues_closure1";
  $desc = $collectedClasses.Class_loadValues_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Class_loadValues_closure1.prototype = $desc;
  function Class__addVariable_closure(this_0, isSetter_1, isGetter_2) {
    this.this_0 = this_0;
    this.isSetter_1 = isSetter_1;
    this.isGetter_2 = isGetter_2;
  }
  Class__addVariable_closure.builtin$cls = "Class__addVariable_closure";
  if (!"name" in Class__addVariable_closure)
    Class__addVariable_closure.name = "Class__addVariable_closure";
  $desc = $collectedClasses.Class__addVariable_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Class__addVariable_closure.prototype = $desc;
  function Class__addMethod_closure(this_0, isOperator_1) {
    this.this_0 = this_0;
    this.isOperator_1 = isOperator_1;
  }
  Class__addMethod_closure.builtin$cls = "Class__addMethod_closure";
  if (!"name" in Class__addMethod_closure)
    Class__addMethod_closure.name = "Class__addMethod_closure";
  $desc = $collectedClasses.Class__addMethod_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Class__addMethod_closure.prototype = $desc;
  function AnnotationGroup(supportedBrowsers, annotations, domName) {
    this.supportedBrowsers = supportedBrowsers;
    this.annotations = annotations;
    this.domName = domName;
  }
  AnnotationGroup.builtin$cls = "AnnotationGroup";
  if (!"name" in AnnotationGroup)
    AnnotationGroup.name = "AnnotationGroup";
  $desc = $collectedClasses.AnnotationGroup;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnnotationGroup.prototype = $desc;
  AnnotationGroup.prototype.get$supportedBrowsers = function() {
    return this.supportedBrowsers;
  };
  AnnotationGroup.prototype.get$supportedBrowsers.$reflectable = 1;
  AnnotationGroup.prototype.set$supportedBrowsers = function(v) {
    return this.supportedBrowsers = v;
  };
  AnnotationGroup.prototype.set$supportedBrowsers.$reflectable = 1;
  AnnotationGroup.prototype.get$annotations = function(receiver) {
    return this.annotations;
  };
  AnnotationGroup.prototype.get$annotations.$reflectable = 1;
  AnnotationGroup.prototype.set$annotations = function(receiver, v) {
    return this.annotations = v;
  };
  AnnotationGroup.prototype.set$annotations.$reflectable = 1;
  AnnotationGroup.prototype.get$domName = function() {
    return this.domName;
  };
  AnnotationGroup.prototype.get$domName.$reflectable = 1;
  AnnotationGroup.prototype.set$domName = function(v) {
    return this.domName = v;
  };
  AnnotationGroup.prototype.set$domName.$reflectable = 1;
  function AnnotationGroup_closure(this_0, set_1) {
    this.this_0 = this_0;
    this.set_1 = set_1;
  }
  AnnotationGroup_closure.builtin$cls = "AnnotationGroup_closure";
  if (!"name" in AnnotationGroup_closure)
    AnnotationGroup_closure.name = "AnnotationGroup_closure";
  $desc = $collectedClasses.AnnotationGroup_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnnotationGroup_closure.prototype = $desc;
  function AnnotationGroup_closure0() {
  }
  AnnotationGroup_closure0.builtin$cls = "AnnotationGroup_closure0";
  if (!"name" in AnnotationGroup_closure0)
    AnnotationGroup_closure0.name = "AnnotationGroup_closure0";
  $desc = $collectedClasses.AnnotationGroup_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnnotationGroup_closure0.prototype = $desc;
  function Annotation(qualifiedName, link, parameters) {
    this.qualifiedName = qualifiedName;
    this.link = link;
    this.parameters = parameters;
  }
  Annotation.builtin$cls = "Annotation";
  if (!"name" in Annotation)
    Annotation.name = "Annotation";
  $desc = $collectedClasses.Annotation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Annotation.prototype = $desc;
  Annotation.prototype.get$qualifiedName = function() {
    return this.qualifiedName;
  };
  Annotation.prototype.get$qualifiedName.$reflectable = 1;
  Annotation.prototype.set$qualifiedName = function(v) {
    return this.qualifiedName = v;
  };
  Annotation.prototype.set$qualifiedName.$reflectable = 1;
  Annotation.prototype.get$link = function() {
    return this.link;
  };
  Annotation.prototype.get$link.$reflectable = 1;
  Annotation.prototype.set$link = function(v) {
    return this.link = v;
  };
  Annotation.prototype.set$link.$reflectable = 1;
  Annotation.prototype.get$parameters = function(receiver) {
    return this.parameters;
  };
  Annotation.prototype.get$parameters.$reflectable = 1;
  Annotation.prototype.set$parameters = function(receiver, v) {
    return this.parameters = v;
  };
  Annotation.prototype.set$parameters.$reflectable = 1;
  function Annotation_hashCode_closure() {
  }
  Annotation_hashCode_closure.builtin$cls = "Annotation_hashCode_closure";
  if (!"name" in Annotation_hashCode_closure)
    Annotation_hashCode_closure.name = "Annotation_hashCode_closure";
  $desc = $collectedClasses.Annotation_hashCode_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Annotation_hashCode_closure.prototype = $desc;
  function Parameterized(parameters, path, qualifiedName, _category_item$_owner, name, _category_item$__$comment, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this.parameters = parameters;
    this.path = path;
    this.qualifiedName = qualifiedName;
    this._category_item$_owner = _category_item$_owner;
    this.name = name;
    this._category_item$__$comment = _category_item$__$comment;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  Parameterized.builtin$cls = "Parameterized";
  if (!"name" in Parameterized)
    Parameterized.name = "Parameterized";
  $desc = $collectedClasses.Parameterized;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parameterized.prototype = $desc;
  Parameterized.prototype.get$parameters = function(receiver) {
    return this.parameters;
  };
  Parameterized.prototype.get$parameters.$reflectable = 1;
  Parameterized.prototype.set$parameters = function(receiver, v) {
    return this.parameters = v;
  };
  Parameterized.prototype.set$parameters.$reflectable = 1;
  function Parameterized_getParameters_closure(this_0, values_1) {
    this.this_0 = this_0;
    this.values_1 = values_1;
  }
  Parameterized_getParameters_closure.builtin$cls = "Parameterized_getParameters_closure";
  if (!"name" in Parameterized_getParameters_closure)
    Parameterized_getParameters_closure.name = "Parameterized_getParameters_closure";
  $desc = $collectedClasses.Parameterized_getParameters_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parameterized_getParameters_closure.prototype = $desc;
  function Parameterized_parameterNamed_closure(name_0) {
    this.name_0 = name_0;
  }
  Parameterized_parameterNamed_closure.builtin$cls = "Parameterized_parameterNamed_closure";
  if (!"name" in Parameterized_parameterNamed_closure)
    Parameterized_parameterNamed_closure.name = "Parameterized_parameterNamed_closure";
  $desc = $collectedClasses.Parameterized_parameterNamed_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parameterized_parameterNamed_closure.prototype = $desc;
  function Parameterized_parameterNamed_closure0() {
  }
  Parameterized_parameterNamed_closure0.builtin$cls = "Parameterized_parameterNamed_closure0";
  if (!"name" in Parameterized_parameterNamed_closure0)
    Parameterized_parameterNamed_closure0.name = "Parameterized_parameterNamed_closure0";
  $desc = $collectedClasses.Parameterized_parameterNamed_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parameterized_parameterNamed_closure0.prototype = $desc;
  function Typedef(type, annotations, parameters, path, qualifiedName, _category_item$_owner, name, _category_item$__$comment, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this.type = type;
    this.annotations = annotations;
    this.parameters = parameters;
    this.path = path;
    this.qualifiedName = qualifiedName;
    this._category_item$_owner = _category_item$_owner;
    this.name = name;
    this._category_item$__$comment = _category_item$__$comment;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  Typedef.builtin$cls = "Typedef";
  if (!"name" in Typedef)
    Typedef.name = "Typedef";
  $desc = $collectedClasses.Typedef;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Typedef.prototype = $desc;
  Typedef.prototype.get$type = function(receiver) {
    return this.type;
  };
  Typedef.prototype.get$type.$reflectable = 1;
  Typedef.prototype.set$type = function(receiver, v) {
    return this.type = v;
  };
  Typedef.prototype.set$type.$reflectable = 1;
  Typedef.prototype.get$annotations = function(receiver) {
    return this.annotations;
  };
  Typedef.prototype.get$annotations.$reflectable = 1;
  Typedef.prototype.set$annotations = function(receiver, v) {
    return this.annotations = v;
  };
  Typedef.prototype.set$annotations.$reflectable = 1;
  function Method(isStatic, isAbstract, isConstant, isConstructor, inheritedFrom, commentFrom, className, isOperator, annotations, type, parameters, path, qualifiedName, _category_item$_owner, name, _category_item$__$comment, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this.isStatic = isStatic;
    this.isAbstract = isAbstract;
    this.isConstant = isConstant;
    this.isConstructor = isConstructor;
    this.inheritedFrom = inheritedFrom;
    this.commentFrom = commentFrom;
    this.className = className;
    this.isOperator = isOperator;
    this.annotations = annotations;
    this.type = type;
    this.parameters = parameters;
    this.path = path;
    this.qualifiedName = qualifiedName;
    this._category_item$_owner = _category_item$_owner;
    this.name = name;
    this._category_item$__$comment = _category_item$__$comment;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  Method.builtin$cls = "Method";
  if (!"name" in Method)
    Method.name = "Method";
  $desc = $collectedClasses.Method;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Method.prototype = $desc;
  Method.prototype.get$isStatic = function() {
    return this.isStatic;
  };
  Method.prototype.get$isStatic.$reflectable = 1;
  Method.prototype.set$isStatic = function(v) {
    return this.isStatic = v;
  };
  Method.prototype.set$isStatic.$reflectable = 1;
  Method.prototype.get$isAbstract = function() {
    return this.isAbstract;
  };
  Method.prototype.get$isAbstract.$reflectable = 1;
  Method.prototype.set$isAbstract = function(v) {
    return this.isAbstract = v;
  };
  Method.prototype.set$isAbstract.$reflectable = 1;
  Method.prototype.get$isConstant = function() {
    return this.isConstant;
  };
  Method.prototype.get$isConstant.$reflectable = 1;
  Method.prototype.set$isConstant = function(v) {
    return this.isConstant = v;
  };
  Method.prototype.set$isConstant.$reflectable = 1;
  Method.prototype.get$isConstructor = function() {
    return this.isConstructor;
  };
  Method.prototype.get$isConstructor.$reflectable = 1;
  Method.prototype.set$isConstructor = function(v) {
    return this.isConstructor = v;
  };
  Method.prototype.set$isConstructor.$reflectable = 1;
  Method.prototype.get$inheritedFrom = function(receiver) {
    return this.inheritedFrom;
  };
  Method.prototype.get$inheritedFrom.$reflectable = 1;
  Method.prototype.set$inheritedFrom = function(receiver, v) {
    return this.inheritedFrom = v;
  };
  Method.prototype.set$inheritedFrom.$reflectable = 1;
  Method.prototype.get$commentFrom = function(receiver) {
    return this.commentFrom;
  };
  Method.prototype.get$commentFrom.$reflectable = 1;
  Method.prototype.set$commentFrom = function(receiver, v) {
    return this.commentFrom = v;
  };
  Method.prototype.set$commentFrom.$reflectable = 1;
  Method.prototype.get$className = function(receiver) {
    return this.className;
  };
  Method.prototype.get$className.$reflectable = 1;
  Method.prototype.set$className = function(receiver, v) {
    return this.className = v;
  };
  Method.prototype.set$className.$reflectable = 1;
  Method.prototype.get$isOperator = function() {
    return this.isOperator;
  };
  Method.prototype.get$isOperator.$reflectable = 1;
  Method.prototype.set$isOperator = function(v) {
    return this.isOperator = v;
  };
  Method.prototype.set$isOperator.$reflectable = 1;
  Method.prototype.get$annotations = function(receiver) {
    return this.annotations;
  };
  Method.prototype.get$annotations.$reflectable = 1;
  Method.prototype.set$annotations = function(receiver, v) {
    return this.annotations = v;
  };
  Method.prototype.set$annotations.$reflectable = 1;
  Method.prototype.get$type = function(receiver) {
    return this.type;
  };
  Method.prototype.get$type.$reflectable = 1;
  Method.prototype.set$type = function(receiver, v) {
    return this.type = v;
  };
  Method.prototype.set$type.$reflectable = 1;
  function Parameter(isOptional, isNamed, hasDefault, type, defaultValue, annotations, path, qualifiedName, _category_item$_owner, name, _category_item$__$comment, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this.isOptional = isOptional;
    this.isNamed = isNamed;
    this.hasDefault = hasDefault;
    this.type = type;
    this.defaultValue = defaultValue;
    this.annotations = annotations;
    this.path = path;
    this.qualifiedName = qualifiedName;
    this._category_item$_owner = _category_item$_owner;
    this.name = name;
    this._category_item$__$comment = _category_item$__$comment;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  Parameter.builtin$cls = "Parameter";
  if (!"name" in Parameter)
    Parameter.name = "Parameter";
  $desc = $collectedClasses.Parameter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parameter.prototype = $desc;
  Parameter.prototype.get$isOptional = function() {
    return this.isOptional;
  };
  Parameter.prototype.get$isOptional.$reflectable = 1;
  Parameter.prototype.set$isOptional = function(v) {
    return this.isOptional = v;
  };
  Parameter.prototype.set$isOptional.$reflectable = 1;
  Parameter.prototype.get$isNamed = function() {
    return this.isNamed;
  };
  Parameter.prototype.get$isNamed.$reflectable = 1;
  Parameter.prototype.set$isNamed = function(v) {
    return this.isNamed = v;
  };
  Parameter.prototype.set$isNamed.$reflectable = 1;
  Parameter.prototype.get$hasDefault = function() {
    return this.hasDefault;
  };
  Parameter.prototype.get$hasDefault.$reflectable = 1;
  Parameter.prototype.set$hasDefault = function(v) {
    return this.hasDefault = v;
  };
  Parameter.prototype.set$hasDefault.$reflectable = 1;
  Parameter.prototype.get$type = function(receiver) {
    return this.type;
  };
  Parameter.prototype.get$type.$reflectable = 1;
  Parameter.prototype.set$type = function(receiver, v) {
    return this.type = v;
  };
  Parameter.prototype.set$type.$reflectable = 1;
  Parameter.prototype.get$defaultValue = function(receiver) {
    return this.defaultValue;
  };
  Parameter.prototype.get$defaultValue.$reflectable = 1;
  Parameter.prototype.set$defaultValue = function(receiver, v) {
    return this.defaultValue = v;
  };
  Parameter.prototype.set$defaultValue.$reflectable = 1;
  Parameter.prototype.get$annotations = function(receiver) {
    return this.annotations;
  };
  Parameter.prototype.get$annotations.$reflectable = 1;
  Parameter.prototype.set$annotations = function(receiver, v) {
    return this.annotations = v;
  };
  Parameter.prototype.set$annotations.$reflectable = 1;
  function Variable(isFinal, isStatic, isAbstract, isConstant, isGetter, isSetter, inheritedFrom, commentFrom, setterParameter, type, annotations, path, qualifiedName, _category_item$_owner, name, _category_item$__$comment, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this.isFinal = isFinal;
    this.isStatic = isStatic;
    this.isAbstract = isAbstract;
    this.isConstant = isConstant;
    this.isGetter = isGetter;
    this.isSetter = isSetter;
    this.inheritedFrom = inheritedFrom;
    this.commentFrom = commentFrom;
    this.setterParameter = setterParameter;
    this.type = type;
    this.annotations = annotations;
    this.path = path;
    this.qualifiedName = qualifiedName;
    this._category_item$_owner = _category_item$_owner;
    this.name = name;
    this._category_item$__$comment = _category_item$__$comment;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  Variable.builtin$cls = "Variable";
  if (!"name" in Variable)
    Variable.name = "Variable";
  $desc = $collectedClasses.Variable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Variable.prototype = $desc;
  Variable.prototype.get$isFinal = function(receiver) {
    return this.isFinal;
  };
  Variable.prototype.get$isFinal.$reflectable = 1;
  Variable.prototype.set$isFinal = function(receiver, v) {
    return this.isFinal = v;
  };
  Variable.prototype.set$isFinal.$reflectable = 1;
  Variable.prototype.get$isStatic = function() {
    return this.isStatic;
  };
  Variable.prototype.get$isStatic.$reflectable = 1;
  Variable.prototype.set$isStatic = function(v) {
    return this.isStatic = v;
  };
  Variable.prototype.set$isStatic.$reflectable = 1;
  Variable.prototype.get$isAbstract = function() {
    return this.isAbstract;
  };
  Variable.prototype.get$isAbstract.$reflectable = 1;
  Variable.prototype.set$isAbstract = function(v) {
    return this.isAbstract = v;
  };
  Variable.prototype.set$isAbstract.$reflectable = 1;
  Variable.prototype.get$isConstant = function() {
    return this.isConstant;
  };
  Variable.prototype.get$isConstant.$reflectable = 1;
  Variable.prototype.set$isConstant = function(v) {
    return this.isConstant = v;
  };
  Variable.prototype.set$isConstant.$reflectable = 1;
  Variable.prototype.get$isGetter = function() {
    return this.isGetter;
  };
  Variable.prototype.get$isGetter.$reflectable = 1;
  Variable.prototype.set$isGetter = function(v) {
    return this.isGetter = v;
  };
  Variable.prototype.set$isGetter.$reflectable = 1;
  Variable.prototype.get$isSetter = function() {
    return this.isSetter;
  };
  Variable.prototype.get$isSetter.$reflectable = 1;
  Variable.prototype.set$isSetter = function(v) {
    return this.isSetter = v;
  };
  Variable.prototype.set$isSetter.$reflectable = 1;
  Variable.prototype.get$inheritedFrom = function(receiver) {
    return this.inheritedFrom;
  };
  Variable.prototype.get$inheritedFrom.$reflectable = 1;
  Variable.prototype.set$inheritedFrom = function(receiver, v) {
    return this.inheritedFrom = v;
  };
  Variable.prototype.set$inheritedFrom.$reflectable = 1;
  Variable.prototype.get$commentFrom = function(receiver) {
    return this.commentFrom;
  };
  Variable.prototype.get$commentFrom.$reflectable = 1;
  Variable.prototype.set$commentFrom = function(receiver, v) {
    return this.commentFrom = v;
  };
  Variable.prototype.set$commentFrom.$reflectable = 1;
  Variable.prototype.get$setterParameter = function() {
    return this.setterParameter;
  };
  Variable.prototype.get$setterParameter.$reflectable = 1;
  Variable.prototype.set$setterParameter = function(v) {
    return this.setterParameter = v;
  };
  Variable.prototype.set$setterParameter.$reflectable = 1;
  Variable.prototype.get$type = function(receiver) {
    return this.type;
  };
  Variable.prototype.get$type.$reflectable = 1;
  Variable.prototype.set$type = function(receiver, v) {
    return this.type = v;
  };
  Variable.prototype.set$type.$reflectable = 1;
  Variable.prototype.get$annotations = function(receiver) {
    return this.annotations;
  };
  Variable.prototype.get$annotations.$reflectable = 1;
  Variable.prototype.set$annotations = function(receiver, v) {
    return this.annotations = v;
  };
  Variable.prototype.set$annotations.$reflectable = 1;
  function NestedType(outer, inner) {
    this.outer = outer;
    this.inner = inner;
  }
  NestedType.builtin$cls = "NestedType";
  if (!"name" in NestedType)
    NestedType.name = "NestedType";
  $desc = $collectedClasses.NestedType;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NestedType.prototype = $desc;
  NestedType.prototype.get$outer = function() {
    return this.outer;
  };
  NestedType.prototype.get$outer.$reflectable = 1;
  NestedType.prototype.set$outer = function(v) {
    return this.outer = v;
  };
  NestedType.prototype.set$outer.$reflectable = 1;
  NestedType.prototype.get$inner = function() {
    return this.inner;
  };
  NestedType.prototype.get$inner.$reflectable = 1;
  NestedType.prototype.set$inner = function(v) {
    return this.inner = v;
  };
  NestedType.prototype.set$inner.$reflectable = 1;
  function NestedType_closure(this_0) {
    this.this_0 = this_0;
  }
  NestedType_closure.builtin$cls = "NestedType_closure";
  if (!"name" in NestedType_closure)
    NestedType_closure.name = "NestedType_closure";
  $desc = $collectedClasses.NestedType_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NestedType_closure.prototype = $desc;
  function LinkableType(loc) {
    this.loc = loc;
  }
  LinkableType.builtin$cls = "LinkableType";
  if (!"name" in LinkableType)
    LinkableType.name = "LinkableType";
  $desc = $collectedClasses.LinkableType;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkableType.prototype = $desc;
  LinkableType.prototype.get$loc = function() {
    return this.loc;
  };
  LinkableType.prototype.get$loc.$reflectable = 1;
  LinkableType.prototype.set$loc = function(v) {
    return this.loc = v;
  };
  LinkableType.prototype.set$loc.$reflectable = 1;
  function Composer(_composer$_root, _anchors, _idCounter) {
    this._composer$_root = _composer$_root;
    this._anchors = _anchors;
    this._idCounter = _idCounter;
  }
  Composer.builtin$cls = "Composer";
  if (!"name" in Composer)
    Composer.name = "Composer";
  $desc = $collectedClasses.Composer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Composer.prototype = $desc;
  function Constructor(_$constructor$_root, _$constructor$_anchors) {
    this._$constructor$_root = _$constructor$_root;
    this._$constructor$_anchors = _$constructor$_anchors;
  }
  Constructor.builtin$cls = "Constructor";
  if (!"name" in Constructor)
    Constructor.name = "Constructor";
  $desc = $collectedClasses.Constructor;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Constructor.prototype = $desc;
  function Constructor_visitMapping_closure(dartMap_0) {
    this.dartMap_0 = dartMap_0;
  }
  Constructor_visitMapping_closure.builtin$cls = "Constructor_visitMapping_closure";
  if (!"name" in Constructor_visitMapping_closure)
    Constructor_visitMapping_closure.name = "Constructor_visitMapping_closure";
  $desc = $collectedClasses.Constructor_visitMapping_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Constructor_visitMapping_closure.prototype = $desc;
  function closure() {
  }
  closure.builtin$cls = "closure";
  if (!"name" in closure)
    closure.name = "closure";
  $desc = $collectedClasses.closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure.prototype = $desc;
  function ListIterable() {
  }
  ListIterable.builtin$cls = "ListIterable";
  if (!"name" in ListIterable)
    ListIterable.name = "ListIterable";
  $desc = $collectedClasses.ListIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListIterable.prototype = $desc;
  function SubListIterable(_iterable, _start, _endOrLength) {
    this._iterable = _iterable;
    this._start = _start;
    this._endOrLength = _endOrLength;
  }
  SubListIterable.builtin$cls = "SubListIterable";
  if (!"name" in SubListIterable)
    SubListIterable.name = "SubListIterable";
  $desc = $collectedClasses.SubListIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SubListIterable.prototype = $desc;
  function ListIterator(_iterable, _length, _index, _current) {
    this._iterable = _iterable;
    this._length = _length;
    this._index = _index;
    this._current = _current;
  }
  ListIterator.builtin$cls = "ListIterator";
  if (!"name" in ListIterator)
    ListIterator.name = "ListIterator";
  $desc = $collectedClasses.ListIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListIterator.prototype = $desc;
  function MappedIterable(_iterable, _f) {
    this._iterable = _iterable;
    this._f = _f;
  }
  MappedIterable.builtin$cls = "MappedIterable";
  if (!"name" in MappedIterable)
    MappedIterable.name = "MappedIterable";
  $desc = $collectedClasses.MappedIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MappedIterable.prototype = $desc;
  function EfficientLengthMappedIterable(_iterable, _f) {
    this._iterable = _iterable;
    this._f = _f;
  }
  EfficientLengthMappedIterable.builtin$cls = "EfficientLengthMappedIterable";
  if (!"name" in EfficientLengthMappedIterable)
    EfficientLengthMappedIterable.name = "EfficientLengthMappedIterable";
  $desc = $collectedClasses.EfficientLengthMappedIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EfficientLengthMappedIterable.prototype = $desc;
  function MappedIterator(_current, _iterator, _f) {
    this._current = _current;
    this._iterator = _iterator;
    this._f = _f;
  }
  MappedIterator.builtin$cls = "MappedIterator";
  if (!"name" in MappedIterator)
    MappedIterator.name = "MappedIterator";
  $desc = $collectedClasses.MappedIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MappedIterator.prototype = $desc;
  function MappedListIterable(_source, _f) {
    this._source = _source;
    this._f = _f;
  }
  MappedListIterable.builtin$cls = "MappedListIterable";
  if (!"name" in MappedListIterable)
    MappedListIterable.name = "MappedListIterable";
  $desc = $collectedClasses.MappedListIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MappedListIterable.prototype = $desc;
  function WhereIterable(_iterable, _f) {
    this._iterable = _iterable;
    this._f = _f;
  }
  WhereIterable.builtin$cls = "WhereIterable";
  if (!"name" in WhereIterable)
    WhereIterable.name = "WhereIterable";
  $desc = $collectedClasses.WhereIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  WhereIterable.prototype = $desc;
  function WhereIterator(_iterator, _f) {
    this._iterator = _iterator;
    this._f = _f;
  }
  WhereIterator.builtin$cls = "WhereIterator";
  if (!"name" in WhereIterator)
    WhereIterator.name = "WhereIterator";
  $desc = $collectedClasses.WhereIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  WhereIterator.prototype = $desc;
  function ExpandIterable(_iterable, _f) {
    this._iterable = _iterable;
    this._f = _f;
  }
  ExpandIterable.builtin$cls = "ExpandIterable";
  if (!"name" in ExpandIterable)
    ExpandIterable.name = "ExpandIterable";
  $desc = $collectedClasses.ExpandIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ExpandIterable.prototype = $desc;
  function ExpandIterator(_iterator, _f, _currentExpansion, _current) {
    this._iterator = _iterator;
    this._f = _f;
    this._currentExpansion = _currentExpansion;
    this._current = _current;
  }
  ExpandIterator.builtin$cls = "ExpandIterator";
  if (!"name" in ExpandIterator)
    ExpandIterator.name = "ExpandIterator";
  $desc = $collectedClasses.ExpandIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ExpandIterator.prototype = $desc;
  function TakeIterable(_iterable, _takeCount) {
    this._iterable = _iterable;
    this._takeCount = _takeCount;
  }
  TakeIterable.builtin$cls = "TakeIterable";
  if (!"name" in TakeIterable)
    TakeIterable.name = "TakeIterable";
  $desc = $collectedClasses.TakeIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TakeIterable.prototype = $desc;
  function EfficientLengthTakeIterable(_iterable, _takeCount) {
    this._iterable = _iterable;
    this._takeCount = _takeCount;
  }
  EfficientLengthTakeIterable.builtin$cls = "EfficientLengthTakeIterable";
  if (!"name" in EfficientLengthTakeIterable)
    EfficientLengthTakeIterable.name = "EfficientLengthTakeIterable";
  $desc = $collectedClasses.EfficientLengthTakeIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EfficientLengthTakeIterable.prototype = $desc;
  function TakeIterator(_iterator, __internal$_remaining) {
    this._iterator = _iterator;
    this.__internal$_remaining = __internal$_remaining;
  }
  TakeIterator.builtin$cls = "TakeIterator";
  if (!"name" in TakeIterator)
    TakeIterator.name = "TakeIterator";
  $desc = $collectedClasses.TakeIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TakeIterator.prototype = $desc;
  function SkipIterable(_iterable, _skipCount) {
    this._iterable = _iterable;
    this._skipCount = _skipCount;
  }
  SkipIterable.builtin$cls = "SkipIterable";
  if (!"name" in SkipIterable)
    SkipIterable.name = "SkipIterable";
  $desc = $collectedClasses.SkipIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SkipIterable.prototype = $desc;
  function EfficientLengthSkipIterable(_iterable, _skipCount) {
    this._iterable = _iterable;
    this._skipCount = _skipCount;
  }
  EfficientLengthSkipIterable.builtin$cls = "EfficientLengthSkipIterable";
  if (!"name" in EfficientLengthSkipIterable)
    EfficientLengthSkipIterable.name = "EfficientLengthSkipIterable";
  $desc = $collectedClasses.EfficientLengthSkipIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EfficientLengthSkipIterable.prototype = $desc;
  function SkipIterator(_iterator, _skipCount) {
    this._iterator = _iterator;
    this._skipCount = _skipCount;
  }
  SkipIterator.builtin$cls = "SkipIterator";
  if (!"name" in SkipIterator)
    SkipIterator.name = "SkipIterator";
  $desc = $collectedClasses.SkipIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SkipIterator.prototype = $desc;
  function EmptyIterator() {
  }
  EmptyIterator.builtin$cls = "EmptyIterator";
  if (!"name" in EmptyIterator)
    EmptyIterator.name = "EmptyIterator";
  $desc = $collectedClasses.EmptyIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EmptyIterator.prototype = $desc;
  function FixedLengthListMixin() {
  }
  FixedLengthListMixin.builtin$cls = "FixedLengthListMixin";
  if (!"name" in FixedLengthListMixin)
    FixedLengthListMixin.name = "FixedLengthListMixin";
  $desc = $collectedClasses.FixedLengthListMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FixedLengthListMixin.prototype = $desc;
  function UnmodifiableListMixin() {
  }
  UnmodifiableListMixin.builtin$cls = "UnmodifiableListMixin";
  if (!"name" in UnmodifiableListMixin)
    UnmodifiableListMixin.name = "UnmodifiableListMixin";
  $desc = $collectedClasses.UnmodifiableListMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnmodifiableListMixin.prototype = $desc;
  function UnmodifiableListBase() {
  }
  UnmodifiableListBase.builtin$cls = "UnmodifiableListBase";
  if (!"name" in UnmodifiableListBase)
    UnmodifiableListBase.name = "UnmodifiableListBase";
  $desc = $collectedClasses.UnmodifiableListBase;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnmodifiableListBase.prototype = $desc;
  function ReversedListIterable(_source) {
    this._source = _source;
  }
  ReversedListIterable.builtin$cls = "ReversedListIterable";
  if (!"name" in ReversedListIterable)
    ReversedListIterable.name = "ReversedListIterable";
  $desc = $collectedClasses.ReversedListIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ReversedListIterable.prototype = $desc;
  function Symbol0(_name) {
    this._name = _name;
  }
  Symbol0.builtin$cls = "Symbol0";
  if (!"name" in Symbol0)
    Symbol0.name = "Symbol0";
  $desc = $collectedClasses.Symbol0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Symbol0.prototype = $desc;
  Symbol0.prototype.get$_name = function(receiver) {
    return this._name;
  };
  function JsMirrorSystem(_cachedLibraries, isolate) {
    this._cachedLibraries = _cachedLibraries;
    this.isolate = isolate;
  }
  JsMirrorSystem.builtin$cls = "JsMirrorSystem";
  if (!"name" in JsMirrorSystem)
    JsMirrorSystem.name = "JsMirrorSystem";
  $desc = $collectedClasses.JsMirrorSystem;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsMirrorSystem.prototype = $desc;
  function JsMirrorSystem_computeLibrariesByName_closure() {
  }
  JsMirrorSystem_computeLibrariesByName_closure.builtin$cls = "JsMirrorSystem_computeLibrariesByName_closure";
  if (!"name" in JsMirrorSystem_computeLibrariesByName_closure)
    JsMirrorSystem_computeLibrariesByName_closure.name = "JsMirrorSystem_computeLibrariesByName_closure";
  $desc = $collectedClasses.JsMirrorSystem_computeLibrariesByName_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsMirrorSystem_computeLibrariesByName_closure.prototype = $desc;
  function JsMirror() {
  }
  JsMirror.builtin$cls = "JsMirror";
  if (!"name" in JsMirror)
    JsMirror.name = "JsMirror";
  $desc = $collectedClasses.JsMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsMirror.prototype = $desc;
  function JsIsolateMirror(_isolateContext) {
    this._isolateContext = _isolateContext;
  }
  JsIsolateMirror.builtin$cls = "JsIsolateMirror";
  if (!"name" in JsIsolateMirror)
    JsIsolateMirror.name = "JsIsolateMirror";
  $desc = $collectedClasses.JsIsolateMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsIsolateMirror.prototype = $desc;
  function JsIsolateMirror_rootLibrary_closure() {
  }
  JsIsolateMirror_rootLibrary_closure.builtin$cls = "JsIsolateMirror_rootLibrary_closure";
  if (!"name" in JsIsolateMirror_rootLibrary_closure)
    JsIsolateMirror_rootLibrary_closure.name = "JsIsolateMirror_rootLibrary_closure";
  $desc = $collectedClasses.JsIsolateMirror_rootLibrary_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsIsolateMirror_rootLibrary_closure.prototype = $desc;
  function JsDeclarationMirror(simpleName) {
    this.simpleName = simpleName;
  }
  JsDeclarationMirror.builtin$cls = "JsDeclarationMirror";
  if (!"name" in JsDeclarationMirror)
    JsDeclarationMirror.name = "JsDeclarationMirror";
  $desc = $collectedClasses.JsDeclarationMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsDeclarationMirror.prototype = $desc;
  JsDeclarationMirror.prototype.get$simpleName = function() {
    return this.simpleName;
  };
  function JsTypeVariableMirror(owner, _typeVariable, _metadataIndex, _cachedUpperBound, simpleName) {
    this.owner = owner;
    this._typeVariable = _typeVariable;
    this._metadataIndex = _metadataIndex;
    this._cachedUpperBound = _cachedUpperBound;
    this.simpleName = simpleName;
  }
  JsTypeVariableMirror.builtin$cls = "JsTypeVariableMirror";
  if (!"name" in JsTypeVariableMirror)
    JsTypeVariableMirror.name = "JsTypeVariableMirror";
  $desc = $collectedClasses.JsTypeVariableMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeVariableMirror.prototype = $desc;
  JsTypeVariableMirror.prototype.get$owner = function() {
    return this.owner;
  };
  function JsTypeMirror(simpleName) {
    this.simpleName = simpleName;
  }
  JsTypeMirror.builtin$cls = "JsTypeMirror";
  if (!"name" in JsTypeMirror)
    JsTypeMirror.name = "JsTypeMirror";
  $desc = $collectedClasses.JsTypeMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeMirror.prototype = $desc;
  function JsLibraryMirror(uri, _classes, _functions, _metadata, _compactFieldSpecification, _isRoot, _globalObject, _cachedFunctionMirrors, _cachedFields, _cachedClasses, _cachedFunctions, _cachedGetters, _cachedSetters, _cachedVariables, _cachedMembers, _cachedDeclarations, _cachedMetadata, simpleName) {
    this.uri = uri;
    this._classes = _classes;
    this._functions = _functions;
    this._metadata = _metadata;
    this._compactFieldSpecification = _compactFieldSpecification;
    this._isRoot = _isRoot;
    this._globalObject = _globalObject;
    this._cachedFunctionMirrors = _cachedFunctionMirrors;
    this._cachedFields = _cachedFields;
    this._cachedClasses = _cachedClasses;
    this._cachedFunctions = _cachedFunctions;
    this._cachedGetters = _cachedGetters;
    this._cachedSetters = _cachedSetters;
    this._cachedVariables = _cachedVariables;
    this._cachedMembers = _cachedMembers;
    this._cachedDeclarations = _cachedDeclarations;
    this._cachedMetadata = _cachedMetadata;
    this.simpleName = simpleName;
  }
  JsLibraryMirror.builtin$cls = "JsLibraryMirror";
  if (!"name" in JsLibraryMirror)
    JsLibraryMirror.name = "JsLibraryMirror";
  $desc = $collectedClasses.JsLibraryMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsLibraryMirror.prototype = $desc;
  JsLibraryMirror.prototype.get$uri = function() {
    return this.uri;
  };
  JsLibraryMirror.prototype.get$_isRoot = function() {
    return this._isRoot;
  };
  JsLibraryMirror.prototype.get$_globalObject = function() {
    return this._globalObject;
  };
  function JsDeclarationMirror_JsObjectMirror() {
  }
  JsDeclarationMirror_JsObjectMirror.builtin$cls = "JsDeclarationMirror_JsObjectMirror";
  if (!"name" in JsDeclarationMirror_JsObjectMirror)
    JsDeclarationMirror_JsObjectMirror.name = "JsDeclarationMirror_JsObjectMirror";
  $desc = $collectedClasses.JsDeclarationMirror_JsObjectMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsDeclarationMirror_JsObjectMirror.prototype = $desc;
  function JsLibraryMirror___members_addToResult(result_0) {
    this.result_0 = result_0;
  }
  JsLibraryMirror___members_addToResult.builtin$cls = "JsLibraryMirror___members_addToResult";
  if (!"name" in JsLibraryMirror___members_addToResult)
    JsLibraryMirror___members_addToResult.name = "JsLibraryMirror___members_addToResult";
  $desc = $collectedClasses.JsLibraryMirror___members_addToResult;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsLibraryMirror___members_addToResult.prototype = $desc;
  function JsLibraryMirror_declarations_addToResult(result_0) {
    this.result_0 = result_0;
  }
  JsLibraryMirror_declarations_addToResult.builtin$cls = "JsLibraryMirror_declarations_addToResult";
  if (!"name" in JsLibraryMirror_declarations_addToResult)
    JsLibraryMirror_declarations_addToResult.name = "JsLibraryMirror_declarations_addToResult";
  $desc = $collectedClasses.JsLibraryMirror_declarations_addToResult;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsLibraryMirror_declarations_addToResult.prototype = $desc;
  function filterMembers_closure(method_0) {
    this.method_0 = method_0;
  }
  filterMembers_closure.builtin$cls = "filterMembers_closure";
  if (!"name" in filterMembers_closure)
    filterMembers_closure.name = "filterMembers_closure";
  $desc = $collectedClasses.filterMembers_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  filterMembers_closure.prototype = $desc;
  function JsMixinApplication(superclass, mixin, _cachedSimpleName, _cachedInstanceMembers, simpleName) {
    this.superclass = superclass;
    this.mixin = mixin;
    this._cachedSimpleName = _cachedSimpleName;
    this._cachedInstanceMembers = _cachedInstanceMembers;
    this.simpleName = simpleName;
  }
  JsMixinApplication.builtin$cls = "JsMixinApplication";
  if (!"name" in JsMixinApplication)
    JsMixinApplication.name = "JsMixinApplication";
  $desc = $collectedClasses.JsMixinApplication;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsMixinApplication.prototype = $desc;
  JsMixinApplication.prototype.get$superclass = function() {
    return this.superclass;
  };
  function JsTypeMirror_JsObjectMirror() {
  }
  JsTypeMirror_JsObjectMirror.builtin$cls = "JsTypeMirror_JsObjectMirror";
  if (!"name" in JsTypeMirror_JsObjectMirror)
    JsTypeMirror_JsObjectMirror.name = "JsTypeMirror_JsObjectMirror";
  $desc = $collectedClasses.JsTypeMirror_JsObjectMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeMirror_JsObjectMirror.prototype = $desc;
  function JsObjectMirror() {
  }
  JsObjectMirror.builtin$cls = "JsObjectMirror";
  if (!"name" in JsObjectMirror)
    JsObjectMirror.name = "JsObjectMirror";
  $desc = $collectedClasses.JsObjectMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsObjectMirror.prototype = $desc;
  function JsInstanceMirror(reflectee) {
    this.reflectee = reflectee;
  }
  JsInstanceMirror.builtin$cls = "JsInstanceMirror";
  if (!"name" in JsInstanceMirror)
    JsInstanceMirror.name = "JsInstanceMirror";
  $desc = $collectedClasses.JsInstanceMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsInstanceMirror.prototype = $desc;
  JsInstanceMirror.prototype.get$reflectee = function() {
    return this.reflectee;
  };
  function JsInstanceMirror_invoke_closure(defaultArguments_0) {
    this.defaultArguments_0 = defaultArguments_0;
  }
  JsInstanceMirror_invoke_closure.builtin$cls = "JsInstanceMirror_invoke_closure";
  if (!"name" in JsInstanceMirror_invoke_closure)
    JsInstanceMirror_invoke_closure.name = "JsInstanceMirror_invoke_closure";
  $desc = $collectedClasses.JsInstanceMirror_invoke_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsInstanceMirror_invoke_closure.prototype = $desc;
  function JsTypeBoundClassMirror(_class, _typeArguments, _cachedTypeArguments, _cachedDeclarations, _cachedMembers, _cachedConstructors, _cachedVariables, _cachedGetters, _cachedSetters, _cachedMethodsMap, _cachedMethods, _superclass, _cachedSuperinterfaces, _cachedInstanceMembers, _cachedStaticMembers, simpleName) {
    this._class = _class;
    this._typeArguments = _typeArguments;
    this._cachedTypeArguments = _cachedTypeArguments;
    this._cachedDeclarations = _cachedDeclarations;
    this._cachedMembers = _cachedMembers;
    this._cachedConstructors = _cachedConstructors;
    this._cachedVariables = _cachedVariables;
    this._cachedGetters = _cachedGetters;
    this._cachedSetters = _cachedSetters;
    this._cachedMethodsMap = _cachedMethodsMap;
    this._cachedMethods = _cachedMethods;
    this._superclass = _superclass;
    this._cachedSuperinterfaces = _cachedSuperinterfaces;
    this._cachedInstanceMembers = _cachedInstanceMembers;
    this._cachedStaticMembers = _cachedStaticMembers;
    this.simpleName = simpleName;
  }
  JsTypeBoundClassMirror.builtin$cls = "JsTypeBoundClassMirror";
  if (!"name" in JsTypeBoundClassMirror)
    JsTypeBoundClassMirror.name = "JsTypeBoundClassMirror";
  $desc = $collectedClasses.JsTypeBoundClassMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeBoundClassMirror.prototype = $desc;
  function JsTypeBoundClassMirror_typeArguments_addTypeArgument(result_0) {
    this.result_0 = result_0;
  }
  JsTypeBoundClassMirror_typeArguments_addTypeArgument.builtin$cls = "JsTypeBoundClassMirror_typeArguments_addTypeArgument";
  if (!"name" in JsTypeBoundClassMirror_typeArguments_addTypeArgument)
    JsTypeBoundClassMirror_typeArguments_addTypeArgument.name = "JsTypeBoundClassMirror_typeArguments_addTypeArgument";
  $desc = $collectedClasses.JsTypeBoundClassMirror_typeArguments_addTypeArgument;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeBoundClassMirror_typeArguments_addTypeArgument.prototype = $desc;
  function JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure() {
  }
  JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure.builtin$cls = "JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure";
  if (!"name" in JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure)
    JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure.name = "JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure";
  $desc = $collectedClasses.JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure.prototype = $desc;
  function JsTypeBoundClassMirror_typeArguments_closure(addTypeArgument_1) {
    this.addTypeArgument_1 = addTypeArgument_1;
  }
  JsTypeBoundClassMirror_typeArguments_closure.builtin$cls = "JsTypeBoundClassMirror_typeArguments_closure";
  if (!"name" in JsTypeBoundClassMirror_typeArguments_closure)
    JsTypeBoundClassMirror_typeArguments_closure.name = "JsTypeBoundClassMirror_typeArguments_closure";
  $desc = $collectedClasses.JsTypeBoundClassMirror_typeArguments_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeBoundClassMirror_typeArguments_closure.prototype = $desc;
  function JsTypeBoundClassMirror_declarations_closure(result_0) {
    this.result_0 = result_0;
  }
  JsTypeBoundClassMirror_declarations_closure.builtin$cls = "JsTypeBoundClassMirror_declarations_closure";
  if (!"name" in JsTypeBoundClassMirror_declarations_closure)
    JsTypeBoundClassMirror_declarations_closure.name = "JsTypeBoundClassMirror_declarations_closure";
  $desc = $collectedClasses.JsTypeBoundClassMirror_declarations_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeBoundClassMirror_declarations_closure.prototype = $desc;
  function JsClassMirror(_mangledName, _jsConstructorOrInterceptor, _fieldsDescriptor, _fieldsMetadata, _jsConstructorCache, _metadata, _superclass, _cachedMethods, _cachedFields, _cachedConstructors, _cachedMethodsMap, _cachedGetters, _cachedSetters, _cachedVariables, _cachedMembers, _cachedDeclarations, _cachedMetadata, _cachedSuperinterfaces, _cachedTypeVariables, _cachedInstanceMembers, _cachedStaticMembers, _owner, simpleName) {
    this._mangledName = _mangledName;
    this._jsConstructorOrInterceptor = _jsConstructorOrInterceptor;
    this._fieldsDescriptor = _fieldsDescriptor;
    this._fieldsMetadata = _fieldsMetadata;
    this._jsConstructorCache = _jsConstructorCache;
    this._metadata = _metadata;
    this._superclass = _superclass;
    this._cachedMethods = _cachedMethods;
    this._cachedFields = _cachedFields;
    this._cachedConstructors = _cachedConstructors;
    this._cachedMethodsMap = _cachedMethodsMap;
    this._cachedGetters = _cachedGetters;
    this._cachedSetters = _cachedSetters;
    this._cachedVariables = _cachedVariables;
    this._cachedMembers = _cachedMembers;
    this._cachedDeclarations = _cachedDeclarations;
    this._cachedMetadata = _cachedMetadata;
    this._cachedSuperinterfaces = _cachedSuperinterfaces;
    this._cachedTypeVariables = _cachedTypeVariables;
    this._cachedInstanceMembers = _cachedInstanceMembers;
    this._cachedStaticMembers = _cachedStaticMembers;
    this._owner = _owner;
    this.simpleName = simpleName;
  }
  JsClassMirror.builtin$cls = "JsClassMirror";
  if (!"name" in JsClassMirror)
    JsClassMirror.name = "JsClassMirror";
  $desc = $collectedClasses.JsClassMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsClassMirror.prototype = $desc;
  JsClassMirror.prototype.get$_mangledName = function() {
    return this._mangledName;
  };
  JsClassMirror.prototype.get$_jsConstructorOrInterceptor = function() {
    return this._jsConstructorOrInterceptor;
  };
  function JsTypeMirror_JsObjectMirror0() {
  }
  JsTypeMirror_JsObjectMirror0.builtin$cls = "JsTypeMirror_JsObjectMirror0";
  if (!"name" in JsTypeMirror_JsObjectMirror0)
    JsTypeMirror_JsObjectMirror0.name = "JsTypeMirror_JsObjectMirror0";
  $desc = $collectedClasses.JsTypeMirror_JsObjectMirror0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypeMirror_JsObjectMirror0.prototype = $desc;
  function JsClassMirror_declarations_addToResult(result_0) {
    this.result_0 = result_0;
  }
  JsClassMirror_declarations_addToResult.builtin$cls = "JsClassMirror_declarations_addToResult";
  if (!"name" in JsClassMirror_declarations_addToResult)
    JsClassMirror_declarations_addToResult.name = "JsClassMirror_declarations_addToResult";
  $desc = $collectedClasses.JsClassMirror_declarations_addToResult;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsClassMirror_declarations_addToResult.prototype = $desc;
  function JsClassMirror_declarations_closure(result_1) {
    this.result_1 = result_1;
  }
  JsClassMirror_declarations_closure.builtin$cls = "JsClassMirror_declarations_closure";
  if (!"name" in JsClassMirror_declarations_closure)
    JsClassMirror_declarations_closure.name = "JsClassMirror_declarations_closure";
  $desc = $collectedClasses.JsClassMirror_declarations_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsClassMirror_declarations_closure.prototype = $desc;
  function JsClassMirror__getSuperinterfacesWithOwner_lookupType(owner_0) {
    this.owner_0 = owner_0;
  }
  JsClassMirror__getSuperinterfacesWithOwner_lookupType.builtin$cls = "JsClassMirror__getSuperinterfacesWithOwner_lookupType";
  if (!"name" in JsClassMirror__getSuperinterfacesWithOwner_lookupType)
    JsClassMirror__getSuperinterfacesWithOwner_lookupType.name = "JsClassMirror__getSuperinterfacesWithOwner_lookupType";
  $desc = $collectedClasses.JsClassMirror__getSuperinterfacesWithOwner_lookupType;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsClassMirror__getSuperinterfacesWithOwner_lookupType.prototype = $desc;
  function JsVariableMirror(_jsName, isFinal, isStatic, _metadataFunction, _owner, __js_mirrors$_type, _metadata, simpleName) {
    this._jsName = _jsName;
    this.isFinal = isFinal;
    this.isStatic = isStatic;
    this._metadataFunction = _metadataFunction;
    this._owner = _owner;
    this.__js_mirrors$_type = __js_mirrors$_type;
    this._metadata = _metadata;
    this.simpleName = simpleName;
  }
  JsVariableMirror.builtin$cls = "JsVariableMirror";
  if (!"name" in JsVariableMirror)
    JsVariableMirror.name = "JsVariableMirror";
  $desc = $collectedClasses.JsVariableMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsVariableMirror.prototype = $desc;
  JsVariableMirror.prototype.get$_jsName = function() {
    return this._jsName;
  };
  JsVariableMirror.prototype.get$isFinal = function(receiver) {
    return this.isFinal;
  };
  JsVariableMirror.prototype.get$isStatic = function() {
    return this.isStatic;
  };
  JsVariableMirror.prototype.get$__js_mirrors$_type = function(receiver) {
    return this.__js_mirrors$_type;
  };
  function JsClosureMirror(reflectee) {
    this.reflectee = reflectee;
  }
  JsClosureMirror.builtin$cls = "JsClosureMirror";
  if (!"name" in JsClosureMirror)
    JsClosureMirror.name = "JsClosureMirror";
  $desc = $collectedClasses.JsClosureMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsClosureMirror.prototype = $desc;
  function JsMethodMirror(_jsFunction, _parameterCount, isGetter, isSetter, isStatic, isConstructor, isOperator, _owner, _metadata, _returnType, _parameters, simpleName) {
    this._jsFunction = _jsFunction;
    this._parameterCount = _parameterCount;
    this.isGetter = isGetter;
    this.isSetter = isSetter;
    this.isStatic = isStatic;
    this.isConstructor = isConstructor;
    this.isOperator = isOperator;
    this._owner = _owner;
    this._metadata = _metadata;
    this._returnType = _returnType;
    this._parameters = _parameters;
    this.simpleName = simpleName;
  }
  JsMethodMirror.builtin$cls = "JsMethodMirror";
  if (!"name" in JsMethodMirror)
    JsMethodMirror.name = "JsMethodMirror";
  $desc = $collectedClasses.JsMethodMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsMethodMirror.prototype = $desc;
  JsMethodMirror.prototype.get$isGetter = function() {
    return this.isGetter;
  };
  JsMethodMirror.prototype.get$isSetter = function() {
    return this.isSetter;
  };
  JsMethodMirror.prototype.get$isStatic = function() {
    return this.isStatic;
  };
  JsMethodMirror.prototype.get$isConstructor = function() {
    return this.isConstructor;
  };
  JsMethodMirror.prototype.get$isOperator = function() {
    return this.isOperator;
  };
  function JsParameterMirror(owner, __js_mirrors$_type, isOptional, isNamed, _defaultValue, simpleName) {
    this.owner = owner;
    this.__js_mirrors$_type = __js_mirrors$_type;
    this.isOptional = isOptional;
    this.isNamed = isNamed;
    this._defaultValue = _defaultValue;
    this.simpleName = simpleName;
  }
  JsParameterMirror.builtin$cls = "JsParameterMirror";
  if (!"name" in JsParameterMirror)
    JsParameterMirror.name = "JsParameterMirror";
  $desc = $collectedClasses.JsParameterMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsParameterMirror.prototype = $desc;
  JsParameterMirror.prototype.get$owner = function() {
    return this.owner;
  };
  JsParameterMirror.prototype.get$__js_mirrors$_type = function(receiver) {
    return this.__js_mirrors$_type;
  };
  JsParameterMirror.prototype.get$isOptional = function() {
    return this.isOptional;
  };
  JsParameterMirror.prototype.get$isNamed = function() {
    return this.isNamed;
  };
  function JsTypedefMirror(_mangledName, referent, simpleName) {
    this._mangledName = _mangledName;
    this.referent = referent;
    this.simpleName = simpleName;
  }
  JsTypedefMirror.builtin$cls = "JsTypedefMirror";
  if (!"name" in JsTypedefMirror)
    JsTypedefMirror.name = "JsTypedefMirror";
  $desc = $collectedClasses.JsTypedefMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsTypedefMirror.prototype = $desc;
  JsTypedefMirror.prototype.get$_mangledName = function() {
    return this._mangledName;
  };
  function BrokenClassMirror() {
  }
  BrokenClassMirror.builtin$cls = "BrokenClassMirror";
  if (!"name" in BrokenClassMirror)
    BrokenClassMirror.name = "BrokenClassMirror";
  $desc = $collectedClasses.BrokenClassMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  BrokenClassMirror.prototype = $desc;
  function JsFunctionTypeMirror(_typeData, _cachedToString, _cachedReturnType, _cachedParameters, owner) {
    this._typeData = _typeData;
    this._cachedToString = _cachedToString;
    this._cachedReturnType = _cachedReturnType;
    this._cachedParameters = _cachedParameters;
    this.owner = owner;
  }
  JsFunctionTypeMirror.builtin$cls = "JsFunctionTypeMirror";
  if (!"name" in JsFunctionTypeMirror)
    JsFunctionTypeMirror.name = "JsFunctionTypeMirror";
  $desc = $collectedClasses.JsFunctionTypeMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsFunctionTypeMirror.prototype = $desc;
  JsFunctionTypeMirror.prototype.get$owner = function() {
    return this.owner;
  };
  JsFunctionTypeMirror.prototype.set$owner = function(v) {
    return this.owner = v;
  };
  function typeMirrorFromRuntimeTypeRepresentation_getTypeArgument(box_0) {
    this.box_0 = box_0;
  }
  typeMirrorFromRuntimeTypeRepresentation_getTypeArgument.builtin$cls = "typeMirrorFromRuntimeTypeRepresentation_getTypeArgument";
  if (!"name" in typeMirrorFromRuntimeTypeRepresentation_getTypeArgument)
    typeMirrorFromRuntimeTypeRepresentation_getTypeArgument.name = "typeMirrorFromRuntimeTypeRepresentation_getTypeArgument";
  $desc = $collectedClasses.typeMirrorFromRuntimeTypeRepresentation_getTypeArgument;
  if ($desc instanceof Array)
    $desc = $desc[1];
  typeMirrorFromRuntimeTypeRepresentation_getTypeArgument.prototype = $desc;
  function typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable(getTypeArgument_1) {
    this.getTypeArgument_1 = getTypeArgument_1;
  }
  typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable.builtin$cls = "typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable";
  if (!"name" in typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable)
    typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable.name = "typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable";
  $desc = $collectedClasses.typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable.prototype = $desc;
  function extractMetadata_closure() {
  }
  extractMetadata_closure.builtin$cls = "extractMetadata_closure";
  if (!"name" in extractMetadata_closure)
    extractMetadata_closure.name = "extractMetadata_closure";
  $desc = $collectedClasses.extractMetadata_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  extractMetadata_closure.prototype = $desc;
  function extractMetadata_closure0() {
  }
  extractMetadata_closure0.builtin$cls = "extractMetadata_closure0";
  if (!"name" in extractMetadata_closure0)
    extractMetadata_closure0.name = "extractMetadata_closure0";
  $desc = $collectedClasses.extractMetadata_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  extractMetadata_closure0.prototype = $desc;
  function UnmodifiableMapView(__js_mirrors$_source) {
    this.__js_mirrors$_source = __js_mirrors$_source;
  }
  UnmodifiableMapView.builtin$cls = "UnmodifiableMapView";
  if (!"name" in UnmodifiableMapView)
    UnmodifiableMapView.name = "UnmodifiableMapView";
  $desc = $collectedClasses.UnmodifiableMapView;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnmodifiableMapView.prototype = $desc;
  function computeReflectiveNames_closure(result_0) {
    this.result_0 = result_0;
  }
  computeReflectiveNames_closure.builtin$cls = "computeReflectiveNames_closure";
  if (!"name" in computeReflectiveNames_closure)
    computeReflectiveNames_closure.name = "computeReflectiveNames_closure";
  $desc = $collectedClasses.computeReflectiveNames_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  computeReflectiveNames_closure.prototype = $desc;
  function _AsyncError(error, stackTrace) {
    this.error = error;
    this.stackTrace = stackTrace;
  }
  _AsyncError.builtin$cls = "_AsyncError";
  if (!"name" in _AsyncError)
    _AsyncError.name = "_AsyncError";
  $desc = $collectedClasses._AsyncError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AsyncError.prototype = $desc;
  _AsyncError.prototype.get$error = function(receiver) {
    return this.error;
  };
  _AsyncError.prototype.get$stackTrace = function() {
    return this.stackTrace;
  };
  function _BroadcastStream(_controller) {
    this._controller = _controller;
  }
  _BroadcastStream.builtin$cls = "_BroadcastStream";
  if (!"name" in _BroadcastStream)
    _BroadcastStream.name = "_BroadcastStream";
  $desc = $collectedClasses._BroadcastStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BroadcastStream.prototype = $desc;
  function _BroadcastSubscription(_eventState, _async$_next, _async$_previous, _controller, _async$_onData, _onError, _onDone, _zone, _state, _cancelFuture, _pending) {
    this._eventState = _eventState;
    this._async$_next = _async$_next;
    this._async$_previous = _async$_previous;
    this._controller = _controller;
    this._async$_onData = _async$_onData;
    this._onError = _onError;
    this._onDone = _onDone;
    this._zone = _zone;
    this._state = _state;
    this._cancelFuture = _cancelFuture;
    this._pending = _pending;
  }
  _BroadcastSubscription.builtin$cls = "_BroadcastSubscription";
  if (!"name" in _BroadcastSubscription)
    _BroadcastSubscription.name = "_BroadcastSubscription";
  $desc = $collectedClasses._BroadcastSubscription;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BroadcastSubscription.prototype = $desc;
  _BroadcastSubscription.prototype.get$_eventState = function() {
    return this._eventState;
  };
  _BroadcastSubscription.prototype.set$_eventState = function(v) {
    return this._eventState = v;
  };
  _BroadcastSubscription.prototype.get$_async$_next = function() {
    return this._async$_next;
  };
  _BroadcastSubscription.prototype.set$_async$_next = function(v) {
    return this._async$_next = v;
  };
  _BroadcastSubscription.prototype.get$_async$_previous = function() {
    return this._async$_previous;
  };
  _BroadcastSubscription.prototype.set$_async$_previous = function(v) {
    return this._async$_previous = v;
  };
  function _BroadcastStreamController(_async$_next, _async$_previous) {
    this._async$_next = _async$_next;
    this._async$_previous = _async$_previous;
  }
  _BroadcastStreamController.builtin$cls = "_BroadcastStreamController";
  if (!"name" in _BroadcastStreamController)
    _BroadcastStreamController.name = "_BroadcastStreamController";
  $desc = $collectedClasses._BroadcastStreamController;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BroadcastStreamController.prototype = $desc;
  _BroadcastStreamController.prototype.get$_async$_next = function() {
    return this._async$_next;
  };
  _BroadcastStreamController.prototype.set$_async$_next = function(v) {
    return this._async$_next = v;
  };
  _BroadcastStreamController.prototype.get$_async$_previous = function() {
    return this._async$_previous;
  };
  _BroadcastStreamController.prototype.set$_async$_previous = function(v) {
    return this._async$_previous = v;
  };
  function _SyncBroadcastStreamController(_onListen, _onCancel, _state, _async$_next, _async$_previous, _addStreamState, _doneFuture) {
    this._onListen = _onListen;
    this._onCancel = _onCancel;
    this._state = _state;
    this._async$_next = _async$_next;
    this._async$_previous = _async$_previous;
    this._addStreamState = _addStreamState;
    this._doneFuture = _doneFuture;
  }
  _SyncBroadcastStreamController.builtin$cls = "_SyncBroadcastStreamController";
  if (!"name" in _SyncBroadcastStreamController)
    _SyncBroadcastStreamController.name = "_SyncBroadcastStreamController";
  $desc = $collectedClasses._SyncBroadcastStreamController;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SyncBroadcastStreamController.prototype = $desc;
  function _SyncBroadcastStreamController__sendData_closure(this_0, data_1) {
    this.this_0 = this_0;
    this.data_1 = data_1;
  }
  _SyncBroadcastStreamController__sendData_closure.builtin$cls = "_SyncBroadcastStreamController__sendData_closure";
  if (!"name" in _SyncBroadcastStreamController__sendData_closure)
    _SyncBroadcastStreamController__sendData_closure.name = "_SyncBroadcastStreamController__sendData_closure";
  $desc = $collectedClasses._SyncBroadcastStreamController__sendData_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SyncBroadcastStreamController__sendData_closure.prototype = $desc;
  function _SyncBroadcastStreamController__sendError_closure(this_0, error_1, stackTrace_2) {
    this.this_0 = this_0;
    this.error_1 = error_1;
    this.stackTrace_2 = stackTrace_2;
  }
  _SyncBroadcastStreamController__sendError_closure.builtin$cls = "_SyncBroadcastStreamController__sendError_closure";
  if (!"name" in _SyncBroadcastStreamController__sendError_closure)
    _SyncBroadcastStreamController__sendError_closure.name = "_SyncBroadcastStreamController__sendError_closure";
  $desc = $collectedClasses._SyncBroadcastStreamController__sendError_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SyncBroadcastStreamController__sendError_closure.prototype = $desc;
  function _SyncBroadcastStreamController__sendDone_closure(this_0) {
    this.this_0 = this_0;
  }
  _SyncBroadcastStreamController__sendDone_closure.builtin$cls = "_SyncBroadcastStreamController__sendDone_closure";
  if (!"name" in _SyncBroadcastStreamController__sendDone_closure)
    _SyncBroadcastStreamController__sendDone_closure.name = "_SyncBroadcastStreamController__sendDone_closure";
  $desc = $collectedClasses._SyncBroadcastStreamController__sendDone_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SyncBroadcastStreamController__sendDone_closure.prototype = $desc;
  function _AsyncBroadcastStreamController(_onListen, _onCancel, _state, _async$_next, _async$_previous, _addStreamState, _doneFuture) {
    this._onListen = _onListen;
    this._onCancel = _onCancel;
    this._state = _state;
    this._async$_next = _async$_next;
    this._async$_previous = _async$_previous;
    this._addStreamState = _addStreamState;
    this._doneFuture = _doneFuture;
  }
  _AsyncBroadcastStreamController.builtin$cls = "_AsyncBroadcastStreamController";
  if (!"name" in _AsyncBroadcastStreamController)
    _AsyncBroadcastStreamController.name = "_AsyncBroadcastStreamController";
  $desc = $collectedClasses._AsyncBroadcastStreamController;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AsyncBroadcastStreamController.prototype = $desc;
  function Future() {
  }
  Future.builtin$cls = "Future";
  if (!"name" in Future)
    Future.name = "Future";
  $desc = $collectedClasses.Future;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Future.prototype = $desc;
  function Future_wait_handleError(box_0, eagerError_1) {
    this.box_0 = box_0;
    this.eagerError_1 = eagerError_1;
  }
  Future_wait_handleError.builtin$cls = "Future_wait_handleError";
  if (!"name" in Future_wait_handleError)
    Future_wait_handleError.name = "Future_wait_handleError";
  $desc = $collectedClasses.Future_wait_handleError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Future_wait_handleError.prototype = $desc;
  function Future_wait_closure(box_0, eagerError_2, pos_3) {
    this.box_0 = box_0;
    this.eagerError_2 = eagerError_2;
    this.pos_3 = pos_3;
  }
  Future_wait_closure.builtin$cls = "Future_wait_closure";
  if (!"name" in Future_wait_closure)
    Future_wait_closure.name = "Future_wait_closure";
  $desc = $collectedClasses.Future_wait_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Future_wait_closure.prototype = $desc;
  function _Completer() {
  }
  _Completer.builtin$cls = "_Completer";
  if (!"name" in _Completer)
    _Completer.name = "_Completer";
  $desc = $collectedClasses._Completer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Completer.prototype = $desc;
  function _AsyncCompleter(future) {
    this.future = future;
  }
  _AsyncCompleter.builtin$cls = "_AsyncCompleter";
  if (!"name" in _AsyncCompleter)
    _AsyncCompleter.name = "_AsyncCompleter";
  $desc = $collectedClasses._AsyncCompleter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AsyncCompleter.prototype = $desc;
  function _SyncCompleter(future) {
    this.future = future;
  }
  _SyncCompleter.builtin$cls = "_SyncCompleter";
  if (!"name" in _SyncCompleter)
    _SyncCompleter.name = "_SyncCompleter";
  $desc = $collectedClasses._SyncCompleter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SyncCompleter.prototype = $desc;
  function _Future(_state, _zone, _resultOrListeners, _nextListener, _onValueCallback, _errorTestCallback, _onErrorCallback, _whenCompleteActionCallback) {
    this._state = _state;
    this._zone = _zone;
    this._resultOrListeners = _resultOrListeners;
    this._nextListener = _nextListener;
    this._onValueCallback = _onValueCallback;
    this._errorTestCallback = _errorTestCallback;
    this._onErrorCallback = _onErrorCallback;
    this._whenCompleteActionCallback = _whenCompleteActionCallback;
  }
  _Future.builtin$cls = "_Future";
  if (!"name" in _Future)
    _Future.name = "_Future";
  $desc = $collectedClasses._Future;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future.prototype = $desc;
  _Future.prototype.get$_zone = function() {
    return this._zone;
  };
  _Future.prototype.get$_nextListener = function() {
    return this._nextListener;
  };
  _Future.prototype.set$_nextListener = function(v) {
    return this._nextListener = v;
  };
  function _Future__addListener_closure(this_0, listener_1) {
    this.this_0 = this_0;
    this.listener_1 = listener_1;
  }
  _Future__addListener_closure.builtin$cls = "_Future__addListener_closure";
  if (!"name" in _Future__addListener_closure)
    _Future__addListener_closure.name = "_Future__addListener_closure";
  $desc = $collectedClasses._Future__addListener_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__addListener_closure.prototype = $desc;
  function _Future__chainFutures_closure(target_0) {
    this.target_0 = target_0;
  }
  _Future__chainFutures_closure.builtin$cls = "_Future__chainFutures_closure";
  if (!"name" in _Future__chainFutures_closure)
    _Future__chainFutures_closure.name = "_Future__chainFutures_closure";
  $desc = $collectedClasses._Future__chainFutures_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__chainFutures_closure.prototype = $desc;
  function _Future__chainFutures_closure0(target_1) {
    this.target_1 = target_1;
  }
  _Future__chainFutures_closure0.builtin$cls = "_Future__chainFutures_closure0";
  if (!"name" in _Future__chainFutures_closure0)
    _Future__chainFutures_closure0.name = "_Future__chainFutures_closure0";
  $desc = $collectedClasses._Future__chainFutures_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__chainFutures_closure0.prototype = $desc;
  function _Future__asyncComplete_closure(this_0, value_1) {
    this.this_0 = this_0;
    this.value_1 = value_1;
  }
  _Future__asyncComplete_closure.builtin$cls = "_Future__asyncComplete_closure";
  if (!"name" in _Future__asyncComplete_closure)
    _Future__asyncComplete_closure.name = "_Future__asyncComplete_closure";
  $desc = $collectedClasses._Future__asyncComplete_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__asyncComplete_closure.prototype = $desc;
  function _Future__asyncCompleteError_closure(this_0, error_1, stackTrace_2) {
    this.this_0 = this_0;
    this.error_1 = error_1;
    this.stackTrace_2 = stackTrace_2;
  }
  _Future__asyncCompleteError_closure.builtin$cls = "_Future__asyncCompleteError_closure";
  if (!"name" in _Future__asyncCompleteError_closure)
    _Future__asyncCompleteError_closure.name = "_Future__asyncCompleteError_closure";
  $desc = $collectedClasses._Future__asyncCompleteError_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__asyncCompleteError_closure.prototype = $desc;
  function _Future__propagateToListeners_closure(box_2, listener_3) {
    this.box_2 = box_2;
    this.listener_3 = listener_3;
  }
  _Future__propagateToListeners_closure.builtin$cls = "_Future__propagateToListeners_closure";
  if (!"name" in _Future__propagateToListeners_closure)
    _Future__propagateToListeners_closure.name = "_Future__propagateToListeners_closure";
  $desc = $collectedClasses._Future__propagateToListeners_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__propagateToListeners_closure.prototype = $desc;
  function _Future__propagateToListeners_closure0(box_2, box_1, hasError_4, listener_5) {
    this.box_2 = box_2;
    this.box_1 = box_1;
    this.hasError_4 = hasError_4;
    this.listener_5 = listener_5;
  }
  _Future__propagateToListeners_closure0.builtin$cls = "_Future__propagateToListeners_closure0";
  if (!"name" in _Future__propagateToListeners_closure0)
    _Future__propagateToListeners_closure0.name = "_Future__propagateToListeners_closure0";
  $desc = $collectedClasses._Future__propagateToListeners_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__propagateToListeners_closure0.prototype = $desc;
  function _Future__propagateToListeners__closure(box_2, listener_6) {
    this.box_2 = box_2;
    this.listener_6 = listener_6;
  }
  _Future__propagateToListeners__closure.builtin$cls = "_Future__propagateToListeners__closure";
  if (!"name" in _Future__propagateToListeners__closure)
    _Future__propagateToListeners__closure.name = "_Future__propagateToListeners__closure";
  $desc = $collectedClasses._Future__propagateToListeners__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__propagateToListeners__closure.prototype = $desc;
  function _Future__propagateToListeners__closure0(box_0, listener_7) {
    this.box_0 = box_0;
    this.listener_7 = listener_7;
  }
  _Future__propagateToListeners__closure0.builtin$cls = "_Future__propagateToListeners__closure0";
  if (!"name" in _Future__propagateToListeners__closure0)
    _Future__propagateToListeners__closure0.name = "_Future__propagateToListeners__closure0";
  $desc = $collectedClasses._Future__propagateToListeners__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Future__propagateToListeners__closure0.prototype = $desc;
  function Stream() {
  }
  Stream.builtin$cls = "Stream";
  if (!"name" in Stream)
    Stream.name = "Stream";
  $desc = $collectedClasses.Stream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream.prototype = $desc;
  function Stream_fold_closure(box_0, this_1, combine_2, result_3) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.combine_2 = combine_2;
    this.result_3 = result_3;
  }
  Stream_fold_closure.builtin$cls = "Stream_fold_closure";
  if (!"name" in Stream_fold_closure)
    Stream_fold_closure.name = "Stream_fold_closure";
  $desc = $collectedClasses.Stream_fold_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_fold_closure.prototype = $desc;
  function Stream_fold__closure(box_0, combine_4, element_5) {
    this.box_0 = box_0;
    this.combine_4 = combine_4;
    this.element_5 = element_5;
  }
  Stream_fold__closure.builtin$cls = "Stream_fold__closure";
  if (!"name" in Stream_fold__closure)
    Stream_fold__closure.name = "Stream_fold__closure";
  $desc = $collectedClasses.Stream_fold__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_fold__closure.prototype = $desc;
  function Stream_fold__closure0(box_0) {
    this.box_0 = box_0;
  }
  Stream_fold__closure0.builtin$cls = "Stream_fold__closure0";
  if (!"name" in Stream_fold__closure0)
    Stream_fold__closure0.name = "Stream_fold__closure0";
  $desc = $collectedClasses.Stream_fold__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_fold__closure0.prototype = $desc;
  function Stream_fold_closure1(result_6) {
    this.result_6 = result_6;
  }
  Stream_fold_closure1.builtin$cls = "Stream_fold_closure1";
  if (!"name" in Stream_fold_closure1)
    Stream_fold_closure1.name = "Stream_fold_closure1";
  $desc = $collectedClasses.Stream_fold_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_fold_closure1.prototype = $desc;
  function Stream_fold_closure0(box_0, result_7) {
    this.box_0 = box_0;
    this.result_7 = result_7;
  }
  Stream_fold_closure0.builtin$cls = "Stream_fold_closure0";
  if (!"name" in Stream_fold_closure0)
    Stream_fold_closure0.name = "Stream_fold_closure0";
  $desc = $collectedClasses.Stream_fold_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_fold_closure0.prototype = $desc;
  function Stream_join_closure(box_0, this_1, separator_2, result_3, buffer_4) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.separator_2 = separator_2;
    this.result_3 = result_3;
    this.buffer_4 = buffer_4;
  }
  Stream_join_closure.builtin$cls = "Stream_join_closure";
  if (!"name" in Stream_join_closure)
    Stream_join_closure.name = "Stream_join_closure";
  $desc = $collectedClasses.Stream_join_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_join_closure.prototype = $desc;
  function Stream_join_closure1(result_5) {
    this.result_5 = result_5;
  }
  Stream_join_closure1.builtin$cls = "Stream_join_closure1";
  if (!"name" in Stream_join_closure1)
    Stream_join_closure1.name = "Stream_join_closure1";
  $desc = $collectedClasses.Stream_join_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_join_closure1.prototype = $desc;
  function Stream_join_closure0(result_6, buffer_7) {
    this.result_6 = result_6;
    this.buffer_7 = buffer_7;
  }
  Stream_join_closure0.builtin$cls = "Stream_join_closure0";
  if (!"name" in Stream_join_closure0)
    Stream_join_closure0.name = "Stream_join_closure0";
  $desc = $collectedClasses.Stream_join_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_join_closure0.prototype = $desc;
  function Stream_contains_closure(box_0, this_1, needle_2, future_3) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.needle_2 = needle_2;
    this.future_3 = future_3;
  }
  Stream_contains_closure.builtin$cls = "Stream_contains_closure";
  if (!"name" in Stream_contains_closure)
    Stream_contains_closure.name = "Stream_contains_closure";
  $desc = $collectedClasses.Stream_contains_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_contains_closure.prototype = $desc;
  function Stream_contains__closure(needle_4, element_5) {
    this.needle_4 = needle_4;
    this.element_5 = element_5;
  }
  Stream_contains__closure.builtin$cls = "Stream_contains__closure";
  if (!"name" in Stream_contains__closure)
    Stream_contains__closure.name = "Stream_contains__closure";
  $desc = $collectedClasses.Stream_contains__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_contains__closure.prototype = $desc;
  function Stream_contains__closure0(box_0, future_6) {
    this.box_0 = box_0;
    this.future_6 = future_6;
  }
  Stream_contains__closure0.builtin$cls = "Stream_contains__closure0";
  if (!"name" in Stream_contains__closure0)
    Stream_contains__closure0.name = "Stream_contains__closure0";
  $desc = $collectedClasses.Stream_contains__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_contains__closure0.prototype = $desc;
  function Stream_contains_closure0(future_7) {
    this.future_7 = future_7;
  }
  Stream_contains_closure0.builtin$cls = "Stream_contains_closure0";
  if (!"name" in Stream_contains_closure0)
    Stream_contains_closure0.name = "Stream_contains_closure0";
  $desc = $collectedClasses.Stream_contains_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_contains_closure0.prototype = $desc;
  function Stream_forEach_closure(box_0, this_1, action_2, future_3) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.action_2 = action_2;
    this.future_3 = future_3;
  }
  Stream_forEach_closure.builtin$cls = "Stream_forEach_closure";
  if (!"name" in Stream_forEach_closure)
    Stream_forEach_closure.name = "Stream_forEach_closure";
  $desc = $collectedClasses.Stream_forEach_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_forEach_closure.prototype = $desc;
  function Stream_forEach__closure(action_4, element_5) {
    this.action_4 = action_4;
    this.element_5 = element_5;
  }
  Stream_forEach__closure.builtin$cls = "Stream_forEach__closure";
  if (!"name" in Stream_forEach__closure)
    Stream_forEach__closure.name = "Stream_forEach__closure";
  $desc = $collectedClasses.Stream_forEach__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_forEach__closure.prototype = $desc;
  function Stream_forEach__closure0() {
  }
  Stream_forEach__closure0.builtin$cls = "Stream_forEach__closure0";
  if (!"name" in Stream_forEach__closure0)
    Stream_forEach__closure0.name = "Stream_forEach__closure0";
  $desc = $collectedClasses.Stream_forEach__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_forEach__closure0.prototype = $desc;
  function Stream_forEach_closure0(future_6) {
    this.future_6 = future_6;
  }
  Stream_forEach_closure0.builtin$cls = "Stream_forEach_closure0";
  if (!"name" in Stream_forEach_closure0)
    Stream_forEach_closure0.name = "Stream_forEach_closure0";
  $desc = $collectedClasses.Stream_forEach_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_forEach_closure0.prototype = $desc;
  function Stream_any_closure(box_0, this_1, test_2, future_3) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.test_2 = test_2;
    this.future_3 = future_3;
  }
  Stream_any_closure.builtin$cls = "Stream_any_closure";
  if (!"name" in Stream_any_closure)
    Stream_any_closure.name = "Stream_any_closure";
  $desc = $collectedClasses.Stream_any_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_any_closure.prototype = $desc;
  function Stream_any__closure(test_4, element_5) {
    this.test_4 = test_4;
    this.element_5 = element_5;
  }
  Stream_any__closure.builtin$cls = "Stream_any__closure";
  if (!"name" in Stream_any__closure)
    Stream_any__closure.name = "Stream_any__closure";
  $desc = $collectedClasses.Stream_any__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_any__closure.prototype = $desc;
  function Stream_any__closure0(box_0, future_6) {
    this.box_0 = box_0;
    this.future_6 = future_6;
  }
  Stream_any__closure0.builtin$cls = "Stream_any__closure0";
  if (!"name" in Stream_any__closure0)
    Stream_any__closure0.name = "Stream_any__closure0";
  $desc = $collectedClasses.Stream_any__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_any__closure0.prototype = $desc;
  function Stream_any_closure0(future_7) {
    this.future_7 = future_7;
  }
  Stream_any_closure0.builtin$cls = "Stream_any_closure0";
  if (!"name" in Stream_any_closure0)
    Stream_any_closure0.name = "Stream_any_closure0";
  $desc = $collectedClasses.Stream_any_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_any_closure0.prototype = $desc;
  function Stream_length_closure(box_0) {
    this.box_0 = box_0;
  }
  Stream_length_closure.builtin$cls = "Stream_length_closure";
  if (!"name" in Stream_length_closure)
    Stream_length_closure.name = "Stream_length_closure";
  $desc = $collectedClasses.Stream_length_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_length_closure.prototype = $desc;
  function Stream_length_closure0(box_0, future_1) {
    this.box_0 = box_0;
    this.future_1 = future_1;
  }
  Stream_length_closure0.builtin$cls = "Stream_length_closure0";
  if (!"name" in Stream_length_closure0)
    Stream_length_closure0.name = "Stream_length_closure0";
  $desc = $collectedClasses.Stream_length_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_length_closure0.prototype = $desc;
  function Stream_isEmpty_closure(box_0, future_1) {
    this.box_0 = box_0;
    this.future_1 = future_1;
  }
  Stream_isEmpty_closure.builtin$cls = "Stream_isEmpty_closure";
  if (!"name" in Stream_isEmpty_closure)
    Stream_isEmpty_closure.name = "Stream_isEmpty_closure";
  $desc = $collectedClasses.Stream_isEmpty_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_isEmpty_closure.prototype = $desc;
  function Stream_isEmpty_closure0(future_2) {
    this.future_2 = future_2;
  }
  Stream_isEmpty_closure0.builtin$cls = "Stream_isEmpty_closure0";
  if (!"name" in Stream_isEmpty_closure0)
    Stream_isEmpty_closure0.name = "Stream_isEmpty_closure0";
  $desc = $collectedClasses.Stream_isEmpty_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_isEmpty_closure0.prototype = $desc;
  function Stream_toList_closure(this_0, result_1) {
    this.this_0 = this_0;
    this.result_1 = result_1;
  }
  Stream_toList_closure.builtin$cls = "Stream_toList_closure";
  if (!"name" in Stream_toList_closure)
    Stream_toList_closure.name = "Stream_toList_closure";
  $desc = $collectedClasses.Stream_toList_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_toList_closure.prototype = $desc;
  function Stream_toList_closure0(result_2, future_3) {
    this.result_2 = result_2;
    this.future_3 = future_3;
  }
  Stream_toList_closure0.builtin$cls = "Stream_toList_closure0";
  if (!"name" in Stream_toList_closure0)
    Stream_toList_closure0.name = "Stream_toList_closure0";
  $desc = $collectedClasses.Stream_toList_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_toList_closure0.prototype = $desc;
  function Stream_first_closure(box_0, this_1, future_2) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.future_2 = future_2;
  }
  Stream_first_closure.builtin$cls = "Stream_first_closure";
  if (!"name" in Stream_first_closure)
    Stream_first_closure.name = "Stream_first_closure";
  $desc = $collectedClasses.Stream_first_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_first_closure.prototype = $desc;
  function Stream_first_closure0(future_3) {
    this.future_3 = future_3;
  }
  Stream_first_closure0.builtin$cls = "Stream_first_closure0";
  if (!"name" in Stream_first_closure0)
    Stream_first_closure0.name = "Stream_first_closure0";
  $desc = $collectedClasses.Stream_first_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_first_closure0.prototype = $desc;
  function Stream_last_closure(box_0, this_1) {
    this.box_0 = box_0;
    this.this_1 = this_1;
  }
  Stream_last_closure.builtin$cls = "Stream_last_closure";
  if (!"name" in Stream_last_closure)
    Stream_last_closure.name = "Stream_last_closure";
  $desc = $collectedClasses.Stream_last_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_last_closure.prototype = $desc;
  function Stream_last_closure0(box_0, future_2) {
    this.box_0 = box_0;
    this.future_2 = future_2;
  }
  Stream_last_closure0.builtin$cls = "Stream_last_closure0";
  if (!"name" in Stream_last_closure0)
    Stream_last_closure0.name = "Stream_last_closure0";
  $desc = $collectedClasses.Stream_last_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_last_closure0.prototype = $desc;
  function Stream_firstWhere_closure(box_0, this_1, test_2, future_3) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.test_2 = test_2;
    this.future_3 = future_3;
  }
  Stream_firstWhere_closure.builtin$cls = "Stream_firstWhere_closure";
  if (!"name" in Stream_firstWhere_closure)
    Stream_firstWhere_closure.name = "Stream_firstWhere_closure";
  $desc = $collectedClasses.Stream_firstWhere_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_firstWhere_closure.prototype = $desc;
  function Stream_firstWhere__closure(test_4, value_5) {
    this.test_4 = test_4;
    this.value_5 = value_5;
  }
  Stream_firstWhere__closure.builtin$cls = "Stream_firstWhere__closure";
  if (!"name" in Stream_firstWhere__closure)
    Stream_firstWhere__closure.name = "Stream_firstWhere__closure";
  $desc = $collectedClasses.Stream_firstWhere__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_firstWhere__closure.prototype = $desc;
  function Stream_firstWhere__closure0(box_0, future_6, value_7) {
    this.box_0 = box_0;
    this.future_6 = future_6;
    this.value_7 = value_7;
  }
  Stream_firstWhere__closure0.builtin$cls = "Stream_firstWhere__closure0";
  if (!"name" in Stream_firstWhere__closure0)
    Stream_firstWhere__closure0.name = "Stream_firstWhere__closure0";
  $desc = $collectedClasses.Stream_firstWhere__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_firstWhere__closure0.prototype = $desc;
  function Stream_firstWhere_closure0(defaultValue_8, future_9) {
    this.defaultValue_8 = defaultValue_8;
    this.future_9 = future_9;
  }
  Stream_firstWhere_closure0.builtin$cls = "Stream_firstWhere_closure0";
  if (!"name" in Stream_firstWhere_closure0)
    Stream_firstWhere_closure0.name = "Stream_firstWhere_closure0";
  $desc = $collectedClasses.Stream_firstWhere_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_firstWhere_closure0.prototype = $desc;
  function Stream_elementAt_closure(box_0, this_1, future_2) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.future_2 = future_2;
  }
  Stream_elementAt_closure.builtin$cls = "Stream_elementAt_closure";
  if (!"name" in Stream_elementAt_closure)
    Stream_elementAt_closure.name = "Stream_elementAt_closure";
  $desc = $collectedClasses.Stream_elementAt_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_elementAt_closure.prototype = $desc;
  function Stream_elementAt_closure0(box_0, future_3) {
    this.box_0 = box_0;
    this.future_3 = future_3;
  }
  Stream_elementAt_closure0.builtin$cls = "Stream_elementAt_closure0";
  if (!"name" in Stream_elementAt_closure0)
    Stream_elementAt_closure0.name = "Stream_elementAt_closure0";
  $desc = $collectedClasses.Stream_elementAt_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stream_elementAt_closure0.prototype = $desc;
  function StreamSubscription() {
  }
  StreamSubscription.builtin$cls = "StreamSubscription";
  if (!"name" in StreamSubscription)
    StreamSubscription.name = "StreamSubscription";
  $desc = $collectedClasses.StreamSubscription;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StreamSubscription.prototype = $desc;
  function _StreamController() {
  }
  _StreamController.builtin$cls = "_StreamController";
  if (!"name" in _StreamController)
    _StreamController.name = "_StreamController";
  $desc = $collectedClasses._StreamController;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamController.prototype = $desc;
  function _StreamController__subscribe_closure(this_0) {
    this.this_0 = this_0;
  }
  _StreamController__subscribe_closure.builtin$cls = "_StreamController__subscribe_closure";
  if (!"name" in _StreamController__subscribe_closure)
    _StreamController__subscribe_closure.name = "_StreamController__subscribe_closure";
  $desc = $collectedClasses._StreamController__subscribe_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamController__subscribe_closure.prototype = $desc;
  function _StreamController__recordCancel_complete(this_0) {
    this.this_0 = this_0;
  }
  _StreamController__recordCancel_complete.builtin$cls = "_StreamController__recordCancel_complete";
  if (!"name" in _StreamController__recordCancel_complete)
    _StreamController__recordCancel_complete.name = "_StreamController__recordCancel_complete";
  $desc = $collectedClasses._StreamController__recordCancel_complete;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamController__recordCancel_complete.prototype = $desc;
  function _SyncStreamControllerDispatch() {
  }
  _SyncStreamControllerDispatch.builtin$cls = "_SyncStreamControllerDispatch";
  if (!"name" in _SyncStreamControllerDispatch)
    _SyncStreamControllerDispatch.name = "_SyncStreamControllerDispatch";
  $desc = $collectedClasses._SyncStreamControllerDispatch;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SyncStreamControllerDispatch.prototype = $desc;
  function _AsyncStreamControllerDispatch() {
  }
  _AsyncStreamControllerDispatch.builtin$cls = "_AsyncStreamControllerDispatch";
  if (!"name" in _AsyncStreamControllerDispatch)
    _AsyncStreamControllerDispatch.name = "_AsyncStreamControllerDispatch";
  $desc = $collectedClasses._AsyncStreamControllerDispatch;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AsyncStreamControllerDispatch.prototype = $desc;
  function _AsyncStreamController(_onListen, _onPause, _onResume, _onCancel, _varData, _state, _doneFuture) {
    this._onListen = _onListen;
    this._onPause = _onPause;
    this._onResume = _onResume;
    this._onCancel = _onCancel;
    this._varData = _varData;
    this._state = _state;
    this._doneFuture = _doneFuture;
  }
  _AsyncStreamController.builtin$cls = "_AsyncStreamController";
  if (!"name" in _AsyncStreamController)
    _AsyncStreamController.name = "_AsyncStreamController";
  $desc = $collectedClasses._AsyncStreamController;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AsyncStreamController.prototype = $desc;
  _AsyncStreamController.prototype.get$_onListen = function() {
    return this._onListen;
  };
  _AsyncStreamController.prototype.get$_onPause = function() {
    return this._onPause;
  };
  _AsyncStreamController.prototype.get$_onResume = function() {
    return this._onResume;
  };
  _AsyncStreamController.prototype.get$_onCancel = function() {
    return this._onCancel;
  };
  function _StreamController__AsyncStreamControllerDispatch() {
  }
  _StreamController__AsyncStreamControllerDispatch.builtin$cls = "_StreamController__AsyncStreamControllerDispatch";
  if (!"name" in _StreamController__AsyncStreamControllerDispatch)
    _StreamController__AsyncStreamControllerDispatch.name = "_StreamController__AsyncStreamControllerDispatch";
  $desc = $collectedClasses._StreamController__AsyncStreamControllerDispatch;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamController__AsyncStreamControllerDispatch.prototype = $desc;
  function _SyncStreamController(_onListen, _onPause, _onResume, _onCancel, _varData, _state, _doneFuture) {
    this._onListen = _onListen;
    this._onPause = _onPause;
    this._onResume = _onResume;
    this._onCancel = _onCancel;
    this._varData = _varData;
    this._state = _state;
    this._doneFuture = _doneFuture;
  }
  _SyncStreamController.builtin$cls = "_SyncStreamController";
  if (!"name" in _SyncStreamController)
    _SyncStreamController.name = "_SyncStreamController";
  $desc = $collectedClasses._SyncStreamController;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SyncStreamController.prototype = $desc;
  _SyncStreamController.prototype.get$_onListen = function() {
    return this._onListen;
  };
  _SyncStreamController.prototype.get$_onPause = function() {
    return this._onPause;
  };
  _SyncStreamController.prototype.get$_onResume = function() {
    return this._onResume;
  };
  _SyncStreamController.prototype.get$_onCancel = function() {
    return this._onCancel;
  };
  function _StreamController__SyncStreamControllerDispatch() {
  }
  _StreamController__SyncStreamControllerDispatch.builtin$cls = "_StreamController__SyncStreamControllerDispatch";
  if (!"name" in _StreamController__SyncStreamControllerDispatch)
    _StreamController__SyncStreamControllerDispatch.name = "_StreamController__SyncStreamControllerDispatch";
  $desc = $collectedClasses._StreamController__SyncStreamControllerDispatch;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamController__SyncStreamControllerDispatch.prototype = $desc;
  function _ControllerStream(_controller) {
    this._controller = _controller;
  }
  _ControllerStream.builtin$cls = "_ControllerStream";
  if (!"name" in _ControllerStream)
    _ControllerStream.name = "_ControllerStream";
  $desc = $collectedClasses._ControllerStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ControllerStream.prototype = $desc;
  function _ControllerSubscription(_controller, _async$_onData, _onError, _onDone, _zone, _state, _cancelFuture, _pending) {
    this._controller = _controller;
    this._async$_onData = _async$_onData;
    this._onError = _onError;
    this._onDone = _onDone;
    this._zone = _zone;
    this._state = _state;
    this._cancelFuture = _cancelFuture;
    this._pending = _pending;
  }
  _ControllerSubscription.builtin$cls = "_ControllerSubscription";
  if (!"name" in _ControllerSubscription)
    _ControllerSubscription.name = "_ControllerSubscription";
  $desc = $collectedClasses._ControllerSubscription;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ControllerSubscription.prototype = $desc;
  _ControllerSubscription.prototype.get$_controller = function() {
    return this._controller;
  };
  function _EventSink() {
  }
  _EventSink.builtin$cls = "_EventSink";
  if (!"name" in _EventSink)
    _EventSink.name = "_EventSink";
  $desc = $collectedClasses._EventSink;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _EventSink.prototype = $desc;
  function _BufferingStreamSubscription(_async$_onData, _onError, _onDone, _zone, _state, _cancelFuture, _pending) {
    this._async$_onData = _async$_onData;
    this._onError = _onError;
    this._onDone = _onDone;
    this._zone = _zone;
    this._state = _state;
    this._cancelFuture = _cancelFuture;
    this._pending = _pending;
  }
  _BufferingStreamSubscription.builtin$cls = "_BufferingStreamSubscription";
  if (!"name" in _BufferingStreamSubscription)
    _BufferingStreamSubscription.name = "_BufferingStreamSubscription";
  $desc = $collectedClasses._BufferingStreamSubscription;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BufferingStreamSubscription.prototype = $desc;
  _BufferingStreamSubscription.prototype.get$_onError = function() {
    return this._onError;
  };
  _BufferingStreamSubscription.prototype.get$_zone = function() {
    return this._zone;
  };
  function _BufferingStreamSubscription__sendError_sendError(this_0, error_1, stackTrace_2) {
    this.this_0 = this_0;
    this.error_1 = error_1;
    this.stackTrace_2 = stackTrace_2;
  }
  _BufferingStreamSubscription__sendError_sendError.builtin$cls = "_BufferingStreamSubscription__sendError_sendError";
  if (!"name" in _BufferingStreamSubscription__sendError_sendError)
    _BufferingStreamSubscription__sendError_sendError.name = "_BufferingStreamSubscription__sendError_sendError";
  $desc = $collectedClasses._BufferingStreamSubscription__sendError_sendError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BufferingStreamSubscription__sendError_sendError.prototype = $desc;
  function _BufferingStreamSubscription__sendDone_sendDone(this_0) {
    this.this_0 = this_0;
  }
  _BufferingStreamSubscription__sendDone_sendDone.builtin$cls = "_BufferingStreamSubscription__sendDone_sendDone";
  if (!"name" in _BufferingStreamSubscription__sendDone_sendDone)
    _BufferingStreamSubscription__sendDone_sendDone.name = "_BufferingStreamSubscription__sendDone_sendDone";
  $desc = $collectedClasses._BufferingStreamSubscription__sendDone_sendDone;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BufferingStreamSubscription__sendDone_sendDone.prototype = $desc;
  function _StreamImpl() {
  }
  _StreamImpl.builtin$cls = "_StreamImpl";
  if (!"name" in _StreamImpl)
    _StreamImpl.name = "_StreamImpl";
  $desc = $collectedClasses._StreamImpl;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamImpl.prototype = $desc;
  function _DelayedEvent(next) {
    this.next = next;
  }
  _DelayedEvent.builtin$cls = "_DelayedEvent";
  if (!"name" in _DelayedEvent)
    _DelayedEvent.name = "_DelayedEvent";
  $desc = $collectedClasses._DelayedEvent;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DelayedEvent.prototype = $desc;
  _DelayedEvent.prototype.get$next = function() {
    return this.next;
  };
  _DelayedEvent.prototype.set$next = function(v) {
    return this.next = v;
  };
  function _DelayedData(value, next) {
    this.value = value;
    this.next = next;
  }
  _DelayedData.builtin$cls = "_DelayedData";
  if (!"name" in _DelayedData)
    _DelayedData.name = "_DelayedData";
  $desc = $collectedClasses._DelayedData;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DelayedData.prototype = $desc;
  _DelayedData.prototype.get$value = function(receiver) {
    return this.value;
  };
  function _DelayedError(error, stackTrace, next) {
    this.error = error;
    this.stackTrace = stackTrace;
    this.next = next;
  }
  _DelayedError.builtin$cls = "_DelayedError";
  if (!"name" in _DelayedError)
    _DelayedError.name = "_DelayedError";
  $desc = $collectedClasses._DelayedError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DelayedError.prototype = $desc;
  _DelayedError.prototype.get$error = function(receiver) {
    return this.error;
  };
  _DelayedError.prototype.get$stackTrace = function() {
    return this.stackTrace;
  };
  function _DelayedDone() {
  }
  _DelayedDone.builtin$cls = "_DelayedDone";
  if (!"name" in _DelayedDone)
    _DelayedDone.name = "_DelayedDone";
  $desc = $collectedClasses._DelayedDone;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DelayedDone.prototype = $desc;
  function _PendingEvents() {
  }
  _PendingEvents.builtin$cls = "_PendingEvents";
  if (!"name" in _PendingEvents)
    _PendingEvents.name = "_PendingEvents";
  $desc = $collectedClasses._PendingEvents;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _PendingEvents.prototype = $desc;
  function _PendingEvents_schedule_closure(this_0, dispatch_1) {
    this.this_0 = this_0;
    this.dispatch_1 = dispatch_1;
  }
  _PendingEvents_schedule_closure.builtin$cls = "_PendingEvents_schedule_closure";
  if (!"name" in _PendingEvents_schedule_closure)
    _PendingEvents_schedule_closure.name = "_PendingEvents_schedule_closure";
  $desc = $collectedClasses._PendingEvents_schedule_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _PendingEvents_schedule_closure.prototype = $desc;
  function _StreamImplEvents(firstPendingEvent, lastPendingEvent, _state) {
    this.firstPendingEvent = firstPendingEvent;
    this.lastPendingEvent = lastPendingEvent;
    this._state = _state;
  }
  _StreamImplEvents.builtin$cls = "_StreamImplEvents";
  if (!"name" in _StreamImplEvents)
    _StreamImplEvents.name = "_StreamImplEvents";
  $desc = $collectedClasses._StreamImplEvents;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamImplEvents.prototype = $desc;
  function _cancelAndError_closure(future_0, error_1, stackTrace_2) {
    this.future_0 = future_0;
    this.error_1 = error_1;
    this.stackTrace_2 = stackTrace_2;
  }
  _cancelAndError_closure.builtin$cls = "_cancelAndError_closure";
  if (!"name" in _cancelAndError_closure)
    _cancelAndError_closure.name = "_cancelAndError_closure";
  $desc = $collectedClasses._cancelAndError_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _cancelAndError_closure.prototype = $desc;
  function _cancelAndErrorClosure_closure(subscription_0, future_1) {
    this.subscription_0 = subscription_0;
    this.future_1 = future_1;
  }
  _cancelAndErrorClosure_closure.builtin$cls = "_cancelAndErrorClosure_closure";
  if (!"name" in _cancelAndErrorClosure_closure)
    _cancelAndErrorClosure_closure.name = "_cancelAndErrorClosure_closure";
  $desc = $collectedClasses._cancelAndErrorClosure_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _cancelAndErrorClosure_closure.prototype = $desc;
  function _cancelAndValue_closure(future_0, value_1) {
    this.future_0 = future_0;
    this.value_1 = value_1;
  }
  _cancelAndValue_closure.builtin$cls = "_cancelAndValue_closure";
  if (!"name" in _cancelAndValue_closure)
    _cancelAndValue_closure.name = "_cancelAndValue_closure";
  $desc = $collectedClasses._cancelAndValue_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _cancelAndValue_closure.prototype = $desc;
  function _ForwardingStream() {
  }
  _ForwardingStream.builtin$cls = "_ForwardingStream";
  if (!"name" in _ForwardingStream)
    _ForwardingStream.name = "_ForwardingStream";
  $desc = $collectedClasses._ForwardingStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ForwardingStream.prototype = $desc;
  function _ForwardingStreamSubscription(_stream, _subscription, _async$_onData, _onError, _onDone, _zone, _state, _cancelFuture, _pending) {
    this._stream = _stream;
    this._subscription = _subscription;
    this._async$_onData = _async$_onData;
    this._onError = _onError;
    this._onDone = _onDone;
    this._zone = _zone;
    this._state = _state;
    this._cancelFuture = _cancelFuture;
    this._pending = _pending;
  }
  _ForwardingStreamSubscription.builtin$cls = "_ForwardingStreamSubscription";
  if (!"name" in _ForwardingStreamSubscription)
    _ForwardingStreamSubscription.name = "_ForwardingStreamSubscription";
  $desc = $collectedClasses._ForwardingStreamSubscription;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ForwardingStreamSubscription.prototype = $desc;
  function _WhereStream(_test, _async$_source) {
    this._test = _test;
    this._async$_source = _async$_source;
  }
  _WhereStream.builtin$cls = "_WhereStream";
  if (!"name" in _WhereStream)
    _WhereStream.name = "_WhereStream";
  $desc = $collectedClasses._WhereStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _WhereStream.prototype = $desc;
  function _MapStream(_transform, _async$_source) {
    this._transform = _transform;
    this._async$_source = _async$_source;
  }
  _MapStream.builtin$cls = "_MapStream";
  if (!"name" in _MapStream)
    _MapStream.name = "_MapStream";
  $desc = $collectedClasses._MapStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MapStream.prototype = $desc;
  function _TakeStream(_remaining, _async$_source) {
    this._remaining = _remaining;
    this._async$_source = _async$_source;
  }
  _TakeStream.builtin$cls = "_TakeStream";
  if (!"name" in _TakeStream)
    _TakeStream.name = "_TakeStream";
  $desc = $collectedClasses._TakeStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _TakeStream.prototype = $desc;
  function _SkipStream(_remaining, _async$_source) {
    this._remaining = _remaining;
    this._async$_source = _async$_source;
  }
  _SkipStream.builtin$cls = "_SkipStream";
  if (!"name" in _SkipStream)
    _SkipStream.name = "_SkipStream";
  $desc = $collectedClasses._SkipStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SkipStream.prototype = $desc;
  function Timer() {
  }
  Timer.builtin$cls = "Timer";
  if (!"name" in Timer)
    Timer.name = "Timer";
  $desc = $collectedClasses.Timer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Timer.prototype = $desc;
  function ZoneSpecification() {
  }
  ZoneSpecification.builtin$cls = "ZoneSpecification";
  if (!"name" in ZoneSpecification)
    ZoneSpecification.name = "ZoneSpecification";
  $desc = $collectedClasses.ZoneSpecification;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ZoneSpecification.prototype = $desc;
  function _ZoneSpecification(handleUncaughtError, run, runUnary, runBinary, registerCallback, registerUnaryCallback, registerBinaryCallback, scheduleMicrotask, createTimer, createPeriodicTimer, print, fork) {
    this.handleUncaughtError = handleUncaughtError;
    this.run = run;
    this.runUnary = runUnary;
    this.runBinary = runBinary;
    this.registerCallback = registerCallback;
    this.registerUnaryCallback = registerUnaryCallback;
    this.registerBinaryCallback = registerBinaryCallback;
    this.scheduleMicrotask = scheduleMicrotask;
    this.createTimer = createTimer;
    this.createPeriodicTimer = createPeriodicTimer;
    this.print = print;
    this.fork = fork;
  }
  _ZoneSpecification.builtin$cls = "_ZoneSpecification";
  if (!"name" in _ZoneSpecification)
    _ZoneSpecification.name = "_ZoneSpecification";
  $desc = $collectedClasses._ZoneSpecification;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ZoneSpecification.prototype = $desc;
  _ZoneSpecification.prototype.get$handleUncaughtError = function() {
    return this.handleUncaughtError;
  };
  _ZoneSpecification.prototype.get$run = function() {
    return this.run;
  };
  _ZoneSpecification.prototype.get$runUnary = function() {
    return this.runUnary;
  };
  _ZoneSpecification.prototype.get$runBinary = function() {
    return this.runBinary;
  };
  _ZoneSpecification.prototype.get$registerCallback = function() {
    return this.registerCallback;
  };
  _ZoneSpecification.prototype.get$registerUnaryCallback = function() {
    return this.registerUnaryCallback;
  };
  _ZoneSpecification.prototype.get$registerBinaryCallback = function() {
    return this.registerBinaryCallback;
  };
  _ZoneSpecification.prototype.get$scheduleMicrotask = function() {
    return this.scheduleMicrotask;
  };
  _ZoneSpecification.prototype.get$createTimer = function() {
    return this.createTimer;
  };
  _ZoneSpecification.prototype.get$print = function(receiver) {
    return this.print;
  };
  _ZoneSpecification.prototype.get$fork = function() {
    return this.fork;
  };
  function ZoneDelegate() {
  }
  ZoneDelegate.builtin$cls = "ZoneDelegate";
  if (!"name" in ZoneDelegate)
    ZoneDelegate.name = "ZoneDelegate";
  $desc = $collectedClasses.ZoneDelegate;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ZoneDelegate.prototype = $desc;
  function Zone() {
  }
  Zone.builtin$cls = "Zone";
  if (!"name" in Zone)
    Zone.name = "Zone";
  $desc = $collectedClasses.Zone;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Zone.prototype = $desc;
  function _ZoneDelegate(_degelationTarget) {
    this._degelationTarget = _degelationTarget;
  }
  _ZoneDelegate.builtin$cls = "_ZoneDelegate";
  if (!"name" in _ZoneDelegate)
    _ZoneDelegate.name = "_ZoneDelegate";
  $desc = $collectedClasses._ZoneDelegate;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ZoneDelegate.prototype = $desc;
  function _BaseZone() {
  }
  _BaseZone.builtin$cls = "_BaseZone";
  if (!"name" in _BaseZone)
    _BaseZone.name = "_BaseZone";
  $desc = $collectedClasses._BaseZone;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BaseZone.prototype = $desc;
  function _BaseZone_bindCallback_closure(this_0, registered_1) {
    this.this_0 = this_0;
    this.registered_1 = registered_1;
  }
  _BaseZone_bindCallback_closure.builtin$cls = "_BaseZone_bindCallback_closure";
  if (!"name" in _BaseZone_bindCallback_closure)
    _BaseZone_bindCallback_closure.name = "_BaseZone_bindCallback_closure";
  $desc = $collectedClasses._BaseZone_bindCallback_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BaseZone_bindCallback_closure.prototype = $desc;
  function _BaseZone_bindCallback_closure0(this_2, registered_3) {
    this.this_2 = this_2;
    this.registered_3 = registered_3;
  }
  _BaseZone_bindCallback_closure0.builtin$cls = "_BaseZone_bindCallback_closure0";
  if (!"name" in _BaseZone_bindCallback_closure0)
    _BaseZone_bindCallback_closure0.name = "_BaseZone_bindCallback_closure0";
  $desc = $collectedClasses._BaseZone_bindCallback_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BaseZone_bindCallback_closure0.prototype = $desc;
  function _BaseZone_bindUnaryCallback_closure(this_0, registered_1) {
    this.this_0 = this_0;
    this.registered_1 = registered_1;
  }
  _BaseZone_bindUnaryCallback_closure.builtin$cls = "_BaseZone_bindUnaryCallback_closure";
  if (!"name" in _BaseZone_bindUnaryCallback_closure)
    _BaseZone_bindUnaryCallback_closure.name = "_BaseZone_bindUnaryCallback_closure";
  $desc = $collectedClasses._BaseZone_bindUnaryCallback_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BaseZone_bindUnaryCallback_closure.prototype = $desc;
  function _BaseZone_bindUnaryCallback_closure0(this_2, registered_3) {
    this.this_2 = this_2;
    this.registered_3 = registered_3;
  }
  _BaseZone_bindUnaryCallback_closure0.builtin$cls = "_BaseZone_bindUnaryCallback_closure0";
  if (!"name" in _BaseZone_bindUnaryCallback_closure0)
    _BaseZone_bindUnaryCallback_closure0.name = "_BaseZone_bindUnaryCallback_closure0";
  $desc = $collectedClasses._BaseZone_bindUnaryCallback_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BaseZone_bindUnaryCallback_closure0.prototype = $desc;
  function _BaseZone_bindBinaryCallback_closure(this_0, registered_1) {
    this.this_0 = this_0;
    this.registered_1 = registered_1;
  }
  _BaseZone_bindBinaryCallback_closure.builtin$cls = "_BaseZone_bindBinaryCallback_closure";
  if (!"name" in _BaseZone_bindBinaryCallback_closure)
    _BaseZone_bindBinaryCallback_closure.name = "_BaseZone_bindBinaryCallback_closure";
  $desc = $collectedClasses._BaseZone_bindBinaryCallback_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BaseZone_bindBinaryCallback_closure.prototype = $desc;
  function _BaseZone_bindBinaryCallback_closure0(this_2, registered_3) {
    this.this_2 = this_2;
    this.registered_3 = registered_3;
  }
  _BaseZone_bindBinaryCallback_closure0.builtin$cls = "_BaseZone_bindBinaryCallback_closure0";
  if (!"name" in _BaseZone_bindBinaryCallback_closure0)
    _BaseZone_bindBinaryCallback_closure0.name = "_BaseZone_bindBinaryCallback_closure0";
  $desc = $collectedClasses._BaseZone_bindBinaryCallback_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BaseZone_bindBinaryCallback_closure0.prototype = $desc;
  function _CustomizedZone(parent, _specification, _map) {
    this.parent = parent;
    this._specification = _specification;
    this._map = _map;
  }
  _CustomizedZone.builtin$cls = "_CustomizedZone";
  if (!"name" in _CustomizedZone)
    _CustomizedZone.name = "_CustomizedZone";
  $desc = $collectedClasses._CustomizedZone;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _CustomizedZone.prototype = $desc;
  _CustomizedZone.prototype.get$parent = function(receiver) {
    return this.parent;
  };
  _CustomizedZone.prototype.get$_specification = function() {
    return this._specification;
  };
  function _rootHandleUncaughtError_closure(error_0, stackTrace_1) {
    this.error_0 = error_0;
    this.stackTrace_1 = stackTrace_1;
  }
  _rootHandleUncaughtError_closure.builtin$cls = "_rootHandleUncaughtError_closure";
  if (!"name" in _rootHandleUncaughtError_closure)
    _rootHandleUncaughtError_closure.name = "_rootHandleUncaughtError_closure";
  $desc = $collectedClasses._rootHandleUncaughtError_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _rootHandleUncaughtError_closure.prototype = $desc;
  function _rootHandleUncaughtError__closure(error_2, stackTrace_3) {
    this.error_2 = error_2;
    this.stackTrace_3 = stackTrace_3;
  }
  _rootHandleUncaughtError__closure.builtin$cls = "_rootHandleUncaughtError__closure";
  if (!"name" in _rootHandleUncaughtError__closure)
    _rootHandleUncaughtError__closure.name = "_rootHandleUncaughtError__closure";
  $desc = $collectedClasses._rootHandleUncaughtError__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _rootHandleUncaughtError__closure.prototype = $desc;
  function _rootFork_closure(copiedMap_0) {
    this.copiedMap_0 = copiedMap_0;
  }
  _rootFork_closure.builtin$cls = "_rootFork_closure";
  if (!"name" in _rootFork_closure)
    _rootFork_closure.name = "_rootFork_closure";
  $desc = $collectedClasses._rootFork_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _rootFork_closure.prototype = $desc;
  function _RootZoneSpecification() {
  }
  _RootZoneSpecification.builtin$cls = "_RootZoneSpecification";
  if (!"name" in _RootZoneSpecification)
    _RootZoneSpecification.name = "_RootZoneSpecification";
  $desc = $collectedClasses._RootZoneSpecification;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _RootZoneSpecification.prototype = $desc;
  function _RootZone() {
  }
  _RootZone.builtin$cls = "_RootZone";
  if (!"name" in _RootZone)
    _RootZone.name = "_RootZone";
  $desc = $collectedClasses._RootZone;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _RootZone.prototype = $desc;
  function _HashMap(_collection$_length, _strings, _nums, _rest, _keys) {
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._keys = _keys;
  }
  _HashMap.builtin$cls = "_HashMap";
  if (!"name" in _HashMap)
    _HashMap.name = "_HashMap";
  $desc = $collectedClasses._HashMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HashMap.prototype = $desc;
  function _HashMap_values_closure(this_0) {
    this.this_0 = this_0;
  }
  _HashMap_values_closure.builtin$cls = "_HashMap_values_closure";
  if (!"name" in _HashMap_values_closure)
    _HashMap_values_closure.name = "_HashMap_values_closure";
  $desc = $collectedClasses._HashMap_values_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HashMap_values_closure.prototype = $desc;
  function _HashMap_containsValue_closure(this_0, value_1) {
    this.this_0 = this_0;
    this.value_1 = value_1;
  }
  _HashMap_containsValue_closure.builtin$cls = "_HashMap_containsValue_closure";
  if (!"name" in _HashMap_containsValue_closure)
    _HashMap_containsValue_closure.name = "_HashMap_containsValue_closure";
  $desc = $collectedClasses._HashMap_containsValue_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HashMap_containsValue_closure.prototype = $desc;
  function _HashMap_addAll_closure(this_0) {
    this.this_0 = this_0;
  }
  _HashMap_addAll_closure.builtin$cls = "_HashMap_addAll_closure";
  if (!"name" in _HashMap_addAll_closure)
    _HashMap_addAll_closure.name = "_HashMap_addAll_closure";
  $desc = $collectedClasses._HashMap_addAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HashMap_addAll_closure.prototype = $desc;
  function _CustomHashMap(_equals, _hashCode, _validKey, _collection$_length, _strings, _nums, _rest, _keys) {
    this._equals = _equals;
    this._hashCode = _hashCode;
    this._validKey = _validKey;
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._keys = _keys;
  }
  _CustomHashMap.builtin$cls = "_CustomHashMap";
  if (!"name" in _CustomHashMap)
    _CustomHashMap.name = "_CustomHashMap";
  $desc = $collectedClasses._CustomHashMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _CustomHashMap.prototype = $desc;
  function _CustomHashMap_closure(K_0) {
    this.K_0 = K_0;
  }
  _CustomHashMap_closure.builtin$cls = "_CustomHashMap_closure";
  if (!"name" in _CustomHashMap_closure)
    _CustomHashMap_closure.name = "_CustomHashMap_closure";
  $desc = $collectedClasses._CustomHashMap_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _CustomHashMap_closure.prototype = $desc;
  function HashMapKeyIterable(_collection$_map) {
    this._collection$_map = _collection$_map;
  }
  HashMapKeyIterable.builtin$cls = "HashMapKeyIterable";
  if (!"name" in HashMapKeyIterable)
    HashMapKeyIterable.name = "HashMapKeyIterable";
  $desc = $collectedClasses.HashMapKeyIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HashMapKeyIterable.prototype = $desc;
  function HashMapKeyIterator(_collection$_map, _keys, _offset, _collection$_current) {
    this._collection$_map = _collection$_map;
    this._keys = _keys;
    this._offset = _offset;
    this._collection$_current = _collection$_current;
  }
  HashMapKeyIterator.builtin$cls = "HashMapKeyIterator";
  if (!"name" in HashMapKeyIterator)
    HashMapKeyIterator.name = "HashMapKeyIterator";
  $desc = $collectedClasses.HashMapKeyIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HashMapKeyIterator.prototype = $desc;
  function _LinkedHashMap(_collection$_length, _strings, _nums, _rest, _first, _last, _modifications) {
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._first = _first;
    this._last = _last;
    this._modifications = _modifications;
  }
  _LinkedHashMap.builtin$cls = "_LinkedHashMap";
  if (!"name" in _LinkedHashMap)
    _LinkedHashMap.name = "_LinkedHashMap";
  $desc = $collectedClasses._LinkedHashMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedHashMap.prototype = $desc;
  function _LinkedHashMap_values_closure(this_0) {
    this.this_0 = this_0;
  }
  _LinkedHashMap_values_closure.builtin$cls = "_LinkedHashMap_values_closure";
  if (!"name" in _LinkedHashMap_values_closure)
    _LinkedHashMap_values_closure.name = "_LinkedHashMap_values_closure";
  $desc = $collectedClasses._LinkedHashMap_values_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedHashMap_values_closure.prototype = $desc;
  function _LinkedHashMap_containsValue_closure(this_0, value_1) {
    this.this_0 = this_0;
    this.value_1 = value_1;
  }
  _LinkedHashMap_containsValue_closure.builtin$cls = "_LinkedHashMap_containsValue_closure";
  if (!"name" in _LinkedHashMap_containsValue_closure)
    _LinkedHashMap_containsValue_closure.name = "_LinkedHashMap_containsValue_closure";
  $desc = $collectedClasses._LinkedHashMap_containsValue_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedHashMap_containsValue_closure.prototype = $desc;
  function _LinkedHashMap_addAll_closure(this_0) {
    this.this_0 = this_0;
  }
  _LinkedHashMap_addAll_closure.builtin$cls = "_LinkedHashMap_addAll_closure";
  if (!"name" in _LinkedHashMap_addAll_closure)
    _LinkedHashMap_addAll_closure.name = "_LinkedHashMap_addAll_closure";
  $desc = $collectedClasses._LinkedHashMap_addAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedHashMap_addAll_closure.prototype = $desc;
  function _LinkedIdentityHashMap(_collection$_length, _strings, _nums, _rest, _first, _last, _modifications) {
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._first = _first;
    this._last = _last;
    this._modifications = _modifications;
  }
  _LinkedIdentityHashMap.builtin$cls = "_LinkedIdentityHashMap";
  if (!"name" in _LinkedIdentityHashMap)
    _LinkedIdentityHashMap.name = "_LinkedIdentityHashMap";
  $desc = $collectedClasses._LinkedIdentityHashMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedIdentityHashMap.prototype = $desc;
  function _LinkedCustomHashMap(_equals, _hashCode, _validKey, _collection$_length, _strings, _nums, _rest, _first, _last, _modifications) {
    this._equals = _equals;
    this._hashCode = _hashCode;
    this._validKey = _validKey;
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._first = _first;
    this._last = _last;
    this._modifications = _modifications;
  }
  _LinkedCustomHashMap.builtin$cls = "_LinkedCustomHashMap";
  if (!"name" in _LinkedCustomHashMap)
    _LinkedCustomHashMap.name = "_LinkedCustomHashMap";
  $desc = $collectedClasses._LinkedCustomHashMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedCustomHashMap.prototype = $desc;
  function _LinkedCustomHashMap_closure(K_0) {
    this.K_0 = K_0;
  }
  _LinkedCustomHashMap_closure.builtin$cls = "_LinkedCustomHashMap_closure";
  if (!"name" in _LinkedCustomHashMap_closure)
    _LinkedCustomHashMap_closure.name = "_LinkedCustomHashMap_closure";
  $desc = $collectedClasses._LinkedCustomHashMap_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedCustomHashMap_closure.prototype = $desc;
  function LinkedHashMapCell(_key, _collection$_value, _next, _previous) {
    this._key = _key;
    this._collection$_value = _collection$_value;
    this._next = _next;
    this._previous = _previous;
  }
  LinkedHashMapCell.builtin$cls = "LinkedHashMapCell";
  if (!"name" in LinkedHashMapCell)
    LinkedHashMapCell.name = "LinkedHashMapCell";
  $desc = $collectedClasses.LinkedHashMapCell;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkedHashMapCell.prototype = $desc;
  LinkedHashMapCell.prototype.get$_key = function() {
    return this._key;
  };
  LinkedHashMapCell.prototype.get$_collection$_value = function() {
    return this._collection$_value;
  };
  LinkedHashMapCell.prototype.set$_collection$_value = function(v) {
    return this._collection$_value = v;
  };
  LinkedHashMapCell.prototype.get$_next = function() {
    return this._next;
  };
  LinkedHashMapCell.prototype.set$_next = function(v) {
    return this._next = v;
  };
  LinkedHashMapCell.prototype.get$_previous = function() {
    return this._previous;
  };
  LinkedHashMapCell.prototype.set$_previous = function(v) {
    return this._previous = v;
  };
  function LinkedHashMapKeyIterable(_collection$_map) {
    this._collection$_map = _collection$_map;
  }
  LinkedHashMapKeyIterable.builtin$cls = "LinkedHashMapKeyIterable";
  if (!"name" in LinkedHashMapKeyIterable)
    LinkedHashMapKeyIterable.name = "LinkedHashMapKeyIterable";
  $desc = $collectedClasses.LinkedHashMapKeyIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkedHashMapKeyIterable.prototype = $desc;
  function LinkedHashMapKeyIterator(_collection$_map, _modifications, _cell, _collection$_current) {
    this._collection$_map = _collection$_map;
    this._modifications = _modifications;
    this._cell = _cell;
    this._collection$_current = _collection$_current;
  }
  LinkedHashMapKeyIterator.builtin$cls = "LinkedHashMapKeyIterator";
  if (!"name" in LinkedHashMapKeyIterator)
    LinkedHashMapKeyIterator.name = "LinkedHashMapKeyIterator";
  $desc = $collectedClasses.LinkedHashMapKeyIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkedHashMapKeyIterator.prototype = $desc;
  function _HashSet() {
  }
  _HashSet.builtin$cls = "_HashSet";
  if (!"name" in _HashSet)
    _HashSet.name = "_HashSet";
  $desc = $collectedClasses._HashSet;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HashSet.prototype = $desc;
  function _IdentityHashSet(_collection$_length, _strings, _nums, _rest, _elements) {
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._elements = _elements;
  }
  _IdentityHashSet.builtin$cls = "_IdentityHashSet";
  if (!"name" in _IdentityHashSet)
    _IdentityHashSet.name = "_IdentityHashSet";
  $desc = $collectedClasses._IdentityHashSet;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _IdentityHashSet.prototype = $desc;
  function HashSetIterator(_set, _elements, _offset, _collection$_current) {
    this._set = _set;
    this._elements = _elements;
    this._offset = _offset;
    this._collection$_current = _collection$_current;
  }
  HashSetIterator.builtin$cls = "HashSetIterator";
  if (!"name" in HashSetIterator)
    HashSetIterator.name = "HashSetIterator";
  $desc = $collectedClasses.HashSetIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HashSetIterator.prototype = $desc;
  function _LinkedHashSet(_collection$_length, _strings, _nums, _rest, _first, _last, _modifications) {
    this._collection$_length = _collection$_length;
    this._strings = _strings;
    this._nums = _nums;
    this._rest = _rest;
    this._first = _first;
    this._last = _last;
    this._modifications = _modifications;
  }
  _LinkedHashSet.builtin$cls = "_LinkedHashSet";
  if (!"name" in _LinkedHashSet)
    _LinkedHashSet.name = "_LinkedHashSet";
  $desc = $collectedClasses._LinkedHashSet;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LinkedHashSet.prototype = $desc;
  function LinkedHashSetCell(_collection$_element, _next, _previous) {
    this._collection$_element = _collection$_element;
    this._next = _next;
    this._previous = _previous;
  }
  LinkedHashSetCell.builtin$cls = "LinkedHashSetCell";
  if (!"name" in LinkedHashSetCell)
    LinkedHashSetCell.name = "LinkedHashSetCell";
  $desc = $collectedClasses.LinkedHashSetCell;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkedHashSetCell.prototype = $desc;
  LinkedHashSetCell.prototype.get$_collection$_element = function() {
    return this._collection$_element;
  };
  LinkedHashSetCell.prototype.get$_next = function() {
    return this._next;
  };
  LinkedHashSetCell.prototype.set$_next = function(v) {
    return this._next = v;
  };
  LinkedHashSetCell.prototype.get$_previous = function() {
    return this._previous;
  };
  LinkedHashSetCell.prototype.set$_previous = function(v) {
    return this._previous = v;
  };
  function LinkedHashSetIterator(_set, _modifications, _cell, _collection$_current) {
    this._set = _set;
    this._modifications = _modifications;
    this._cell = _cell;
    this._collection$_current = _collection$_current;
  }
  LinkedHashSetIterator.builtin$cls = "LinkedHashSetIterator";
  if (!"name" in LinkedHashSetIterator)
    LinkedHashSetIterator.name = "LinkedHashSetIterator";
  $desc = $collectedClasses.LinkedHashSetIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkedHashSetIterator.prototype = $desc;
  function UnmodifiableListView(_collection$_source) {
    this._collection$_source = _collection$_source;
  }
  UnmodifiableListView.builtin$cls = "UnmodifiableListView";
  if (!"name" in UnmodifiableListView)
    UnmodifiableListView.name = "UnmodifiableListView";
  $desc = $collectedClasses.UnmodifiableListView;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnmodifiableListView.prototype = $desc;
  function _HashSetBase() {
  }
  _HashSetBase.builtin$cls = "_HashSetBase";
  if (!"name" in _HashSetBase)
    _HashSetBase.name = "_HashSetBase";
  $desc = $collectedClasses._HashSetBase;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _HashSetBase.prototype = $desc;
  function IterableBase() {
  }
  IterableBase.builtin$cls = "IterableBase";
  if (!"name" in IterableBase)
    IterableBase.name = "IterableBase";
  $desc = $collectedClasses.IterableBase;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IterableBase.prototype = $desc;
  function ListBase() {
  }
  ListBase.builtin$cls = "ListBase";
  if (!"name" in ListBase)
    ListBase.name = "ListBase";
  $desc = $collectedClasses.ListBase;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListBase.prototype = $desc;
  function ListMixin() {
  }
  ListMixin.builtin$cls = "ListMixin";
  if (!"name" in ListMixin)
    ListMixin.name = "ListMixin";
  $desc = $collectedClasses.ListMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListMixin.prototype = $desc;
  function Maps_mapToString_closure(box_0, result_1) {
    this.box_0 = box_0;
    this.result_1 = result_1;
  }
  Maps_mapToString_closure.builtin$cls = "Maps_mapToString_closure";
  if (!"name" in Maps_mapToString_closure)
    Maps_mapToString_closure.name = "Maps_mapToString_closure";
  $desc = $collectedClasses.Maps_mapToString_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Maps_mapToString_closure.prototype = $desc;
  function ListQueue(_table, _head, _tail, _modificationCount) {
    this._table = _table;
    this._head = _head;
    this._tail = _tail;
    this._modificationCount = _modificationCount;
  }
  ListQueue.builtin$cls = "ListQueue";
  if (!"name" in ListQueue)
    ListQueue.name = "ListQueue";
  $desc = $collectedClasses.ListQueue;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListQueue.prototype = $desc;
  function _ListQueueIterator(_queue, _end, _modificationCount, _collection$_position, _collection$_current) {
    this._queue = _queue;
    this._end = _end;
    this._modificationCount = _modificationCount;
    this._collection$_position = _collection$_position;
    this._collection$_current = _collection$_current;
  }
  _ListQueueIterator.builtin$cls = "_ListQueueIterator";
  if (!"name" in _ListQueueIterator)
    _ListQueueIterator.name = "_ListQueueIterator";
  $desc = $collectedClasses._ListQueueIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ListQueueIterator.prototype = $desc;
  function _SplayTreeNode(key, left, right) {
    this.key = key;
    this.left = left;
    this.right = right;
  }
  _SplayTreeNode.builtin$cls = "_SplayTreeNode";
  if (!"name" in _SplayTreeNode)
    _SplayTreeNode.name = "_SplayTreeNode";
  $desc = $collectedClasses._SplayTreeNode;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTreeNode.prototype = $desc;
  _SplayTreeNode.prototype.get$key = function(receiver) {
    return this.key;
  };
  _SplayTreeNode.prototype.get$left = function(receiver) {
    return this.left;
  };
  _SplayTreeNode.prototype.get$right = function(receiver) {
    return this.right;
  };
  function _SplayTreeMapNode(value, key, left, right) {
    this.value = value;
    this.key = key;
    this.left = left;
    this.right = right;
  }
  _SplayTreeMapNode.builtin$cls = "_SplayTreeMapNode";
  if (!"name" in _SplayTreeMapNode)
    _SplayTreeMapNode.name = "_SplayTreeMapNode";
  $desc = $collectedClasses._SplayTreeMapNode;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTreeMapNode.prototype = $desc;
  _SplayTreeMapNode.prototype.get$value = function(receiver) {
    return this.value;
  };
  _SplayTreeMapNode.prototype.set$value = function(receiver, v) {
    return this.value = v;
  };
  function _SplayTree() {
  }
  _SplayTree.builtin$cls = "_SplayTree";
  if (!"name" in _SplayTree)
    _SplayTree.name = "_SplayTree";
  $desc = $collectedClasses._SplayTree;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTree.prototype = $desc;
  function SplayTreeMap(_comparator, _validKey, _root, _dummy, _count, _modificationCount, _splayCount) {
    this._comparator = _comparator;
    this._validKey = _validKey;
    this._root = _root;
    this._dummy = _dummy;
    this._count = _count;
    this._modificationCount = _modificationCount;
    this._splayCount = _splayCount;
  }
  SplayTreeMap.builtin$cls = "SplayTreeMap";
  if (!"name" in SplayTreeMap)
    SplayTreeMap.name = "SplayTreeMap";
  $desc = $collectedClasses.SplayTreeMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SplayTreeMap.prototype = $desc;
  function SplayTreeMap_closure(K_0) {
    this.K_0 = K_0;
  }
  SplayTreeMap_closure.builtin$cls = "SplayTreeMap_closure";
  if (!"name" in SplayTreeMap_closure)
    SplayTreeMap_closure.name = "SplayTreeMap_closure";
  $desc = $collectedClasses.SplayTreeMap_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SplayTreeMap_closure.prototype = $desc;
  function SplayTreeMap_addAll_closure(this_0) {
    this.this_0 = this_0;
  }
  SplayTreeMap_addAll_closure.builtin$cls = "SplayTreeMap_addAll_closure";
  if (!"name" in SplayTreeMap_addAll_closure)
    SplayTreeMap_addAll_closure.name = "SplayTreeMap_addAll_closure";
  $desc = $collectedClasses.SplayTreeMap_addAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SplayTreeMap_addAll_closure.prototype = $desc;
  function SplayTreeMap_containsValue_visit(this_0, value_1, initialSplayCount_2) {
    this.this_0 = this_0;
    this.value_1 = value_1;
    this.initialSplayCount_2 = initialSplayCount_2;
  }
  SplayTreeMap_containsValue_visit.builtin$cls = "SplayTreeMap_containsValue_visit";
  if (!"name" in SplayTreeMap_containsValue_visit)
    SplayTreeMap_containsValue_visit.name = "SplayTreeMap_containsValue_visit";
  $desc = $collectedClasses.SplayTreeMap_containsValue_visit;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SplayTreeMap_containsValue_visit.prototype = $desc;
  function _SplayTreeIterator() {
  }
  _SplayTreeIterator.builtin$cls = "_SplayTreeIterator";
  if (!"name" in _SplayTreeIterator)
    _SplayTreeIterator.name = "_SplayTreeIterator";
  $desc = $collectedClasses._SplayTreeIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTreeIterator.prototype = $desc;
  function _SplayTreeKeyIterable(_tree) {
    this._tree = _tree;
  }
  _SplayTreeKeyIterable.builtin$cls = "_SplayTreeKeyIterable";
  if (!"name" in _SplayTreeKeyIterable)
    _SplayTreeKeyIterable.name = "_SplayTreeKeyIterable";
  $desc = $collectedClasses._SplayTreeKeyIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTreeKeyIterable.prototype = $desc;
  function _SplayTreeValueIterable(_collection$_map) {
    this._collection$_map = _collection$_map;
  }
  _SplayTreeValueIterable.builtin$cls = "_SplayTreeValueIterable";
  if (!"name" in _SplayTreeValueIterable)
    _SplayTreeValueIterable.name = "_SplayTreeValueIterable";
  $desc = $collectedClasses._SplayTreeValueIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTreeValueIterable.prototype = $desc;
  function _SplayTreeKeyIterator(_tree, _workList, _modificationCount, _splayCount, _currentNode) {
    this._tree = _tree;
    this._workList = _workList;
    this._modificationCount = _modificationCount;
    this._splayCount = _splayCount;
    this._currentNode = _currentNode;
  }
  _SplayTreeKeyIterator.builtin$cls = "_SplayTreeKeyIterator";
  if (!"name" in _SplayTreeKeyIterator)
    _SplayTreeKeyIterator.name = "_SplayTreeKeyIterator";
  $desc = $collectedClasses._SplayTreeKeyIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTreeKeyIterator.prototype = $desc;
  function _SplayTreeValueIterator(_tree, _workList, _modificationCount, _splayCount, _currentNode) {
    this._tree = _tree;
    this._workList = _workList;
    this._modificationCount = _modificationCount;
    this._splayCount = _splayCount;
    this._currentNode = _currentNode;
  }
  _SplayTreeValueIterator.builtin$cls = "_SplayTreeValueIterator";
  if (!"name" in _SplayTreeValueIterator)
    _SplayTreeValueIterator.name = "_SplayTreeValueIterator";
  $desc = $collectedClasses._SplayTreeValueIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTreeValueIterator.prototype = $desc;
  function _SplayTreeNodeIterator(_tree, _workList, _modificationCount, _splayCount, _currentNode) {
    this._tree = _tree;
    this._workList = _workList;
    this._modificationCount = _modificationCount;
    this._splayCount = _splayCount;
    this._currentNode = _currentNode;
  }
  _SplayTreeNodeIterator.builtin$cls = "_SplayTreeNodeIterator";
  if (!"name" in _SplayTreeNodeIterator)
    _SplayTreeNodeIterator.name = "_SplayTreeNodeIterator";
  $desc = $collectedClasses._SplayTreeNodeIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SplayTreeNodeIterator.prototype = $desc;
  function _convertJsonToDart_closure() {
  }
  _convertJsonToDart_closure.builtin$cls = "_convertJsonToDart_closure";
  if (!"name" in _convertJsonToDart_closure)
    _convertJsonToDart_closure.name = "_convertJsonToDart_closure";
  $desc = $collectedClasses._convertJsonToDart_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _convertJsonToDart_closure.prototype = $desc;
  function _convertJsonToDart_walk(revive_0) {
    this.revive_0 = revive_0;
  }
  _convertJsonToDart_walk.builtin$cls = "_convertJsonToDart_walk";
  if (!"name" in _convertJsonToDart_walk)
    _convertJsonToDart_walk.name = "_convertJsonToDart_walk";
  $desc = $collectedClasses._convertJsonToDart_walk;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _convertJsonToDart_walk.prototype = $desc;
  function Codec() {
  }
  Codec.builtin$cls = "Codec";
  if (!"name" in Codec)
    Codec.name = "Codec";
  $desc = $collectedClasses.Codec;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Codec.prototype = $desc;
  function Converter() {
  }
  Converter.builtin$cls = "Converter";
  if (!"name" in Converter)
    Converter.name = "Converter";
  $desc = $collectedClasses.Converter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Converter.prototype = $desc;
  function Encoding() {
  }
  Encoding.builtin$cls = "Encoding";
  if (!"name" in Encoding)
    Encoding.name = "Encoding";
  $desc = $collectedClasses.Encoding;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Encoding.prototype = $desc;
  function JsonCodec() {
  }
  JsonCodec.builtin$cls = "JsonCodec";
  if (!"name" in JsonCodec)
    JsonCodec.name = "JsonCodec";
  $desc = $collectedClasses.JsonCodec;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsonCodec.prototype = $desc;
  function JsonDecoder(_reviver) {
    this._reviver = _reviver;
  }
  JsonDecoder.builtin$cls = "JsonDecoder";
  if (!"name" in JsonDecoder)
    JsonDecoder.name = "JsonDecoder";
  $desc = $collectedClasses.JsonDecoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsonDecoder.prototype = $desc;
  function Utf8Codec(_allowMalformed) {
    this._allowMalformed = _allowMalformed;
  }
  Utf8Codec.builtin$cls = "Utf8Codec";
  if (!"name" in Utf8Codec)
    Utf8Codec.name = "Utf8Codec";
  $desc = $collectedClasses.Utf8Codec;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Utf8Codec.prototype = $desc;
  function Utf8Encoder() {
  }
  Utf8Encoder.builtin$cls = "Utf8Encoder";
  if (!"name" in Utf8Encoder)
    Utf8Encoder.name = "Utf8Encoder";
  $desc = $collectedClasses.Utf8Encoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Utf8Encoder.prototype = $desc;
  function _Utf8Encoder(_carry, _bufferIndex, _buffer) {
    this._carry = _carry;
    this._bufferIndex = _bufferIndex;
    this._buffer = _buffer;
  }
  _Utf8Encoder.builtin$cls = "_Utf8Encoder";
  if (!"name" in _Utf8Encoder)
    _Utf8Encoder.name = "_Utf8Encoder";
  $desc = $collectedClasses._Utf8Encoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Utf8Encoder.prototype = $desc;
  function Utf8Decoder(_allowMalformed) {
    this._allowMalformed = _allowMalformed;
  }
  Utf8Decoder.builtin$cls = "Utf8Decoder";
  if (!"name" in Utf8Decoder)
    Utf8Decoder.name = "Utf8Decoder";
  $desc = $collectedClasses.Utf8Decoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Utf8Decoder.prototype = $desc;
  function _Utf8Decoder(_allowMalformed, _stringSink, _isFirstCharacter, _convert$_value, _expectedUnits, _extraUnits) {
    this._allowMalformed = _allowMalformed;
    this._stringSink = _stringSink;
    this._isFirstCharacter = _isFirstCharacter;
    this._convert$_value = _convert$_value;
    this._expectedUnits = _expectedUnits;
    this._extraUnits = _extraUnits;
  }
  _Utf8Decoder.builtin$cls = "_Utf8Decoder";
  if (!"name" in _Utf8Decoder)
    _Utf8Decoder.name = "_Utf8Decoder";
  $desc = $collectedClasses._Utf8Decoder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Utf8Decoder.prototype = $desc;
  function Function__toMangledNames_closure(result_0) {
    this.result_0 = result_0;
  }
  Function__toMangledNames_closure.builtin$cls = "Function__toMangledNames_closure";
  if (!"name" in Function__toMangledNames_closure)
    Function__toMangledNames_closure.name = "Function__toMangledNames_closure";
  $desc = $collectedClasses.Function__toMangledNames_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Function__toMangledNames_closure.prototype = $desc;
  function NoSuchMethodError_toString_closure(box_0) {
    this.box_0 = box_0;
  }
  NoSuchMethodError_toString_closure.builtin$cls = "NoSuchMethodError_toString_closure";
  if (!"name" in NoSuchMethodError_toString_closure)
    NoSuchMethodError_toString_closure.name = "NoSuchMethodError_toString_closure";
  $desc = $collectedClasses.NoSuchMethodError_toString_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NoSuchMethodError_toString_closure.prototype = $desc;
  function Deprecated(expires) {
    this.expires = expires;
  }
  Deprecated.builtin$cls = "Deprecated";
  if (!"name" in Deprecated)
    Deprecated.name = "Deprecated";
  $desc = $collectedClasses.Deprecated;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Deprecated.prototype = $desc;
  function bool() {
  }
  bool.builtin$cls = "bool";
  if (!"name" in bool)
    bool.name = "bool";
  $desc = $collectedClasses.bool;
  if ($desc instanceof Array)
    $desc = $desc[1];
  bool.prototype = $desc;
  function Comparable() {
  }
  Comparable.builtin$cls = "Comparable";
  if (!"name" in Comparable)
    Comparable.name = "Comparable";
  $desc = $collectedClasses.Comparable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Comparable.prototype = $desc;
  function DateTime(millisecondsSinceEpoch, isUtc) {
    this.millisecondsSinceEpoch = millisecondsSinceEpoch;
    this.isUtc = isUtc;
  }
  DateTime.builtin$cls = "DateTime";
  if (!"name" in DateTime)
    DateTime.name = "DateTime";
  $desc = $collectedClasses.DateTime;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DateTime.prototype = $desc;
  DateTime.prototype.get$millisecondsSinceEpoch = function() {
    return this.millisecondsSinceEpoch;
  };
  function DateTime_parse_parseIntOrZero() {
  }
  DateTime_parse_parseIntOrZero.builtin$cls = "DateTime_parse_parseIntOrZero";
  if (!"name" in DateTime_parse_parseIntOrZero)
    DateTime_parse_parseIntOrZero.name = "DateTime_parse_parseIntOrZero";
  $desc = $collectedClasses.DateTime_parse_parseIntOrZero;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DateTime_parse_parseIntOrZero.prototype = $desc;
  function DateTime_parse_parseDoubleOrZero() {
  }
  DateTime_parse_parseDoubleOrZero.builtin$cls = "DateTime_parse_parseDoubleOrZero";
  if (!"name" in DateTime_parse_parseDoubleOrZero)
    DateTime_parse_parseDoubleOrZero.name = "DateTime_parse_parseDoubleOrZero";
  $desc = $collectedClasses.DateTime_parse_parseDoubleOrZero;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DateTime_parse_parseDoubleOrZero.prototype = $desc;
  function DateTime_toString_fourDigits() {
  }
  DateTime_toString_fourDigits.builtin$cls = "DateTime_toString_fourDigits";
  if (!"name" in DateTime_toString_fourDigits)
    DateTime_toString_fourDigits.name = "DateTime_toString_fourDigits";
  $desc = $collectedClasses.DateTime_toString_fourDigits;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DateTime_toString_fourDigits.prototype = $desc;
  function DateTime_toString_threeDigits() {
  }
  DateTime_toString_threeDigits.builtin$cls = "DateTime_toString_threeDigits";
  if (!"name" in DateTime_toString_threeDigits)
    DateTime_toString_threeDigits.name = "DateTime_toString_threeDigits";
  $desc = $collectedClasses.DateTime_toString_threeDigits;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DateTime_toString_threeDigits.prototype = $desc;
  function DateTime_toString_twoDigits() {
  }
  DateTime_toString_twoDigits.builtin$cls = "DateTime_toString_twoDigits";
  if (!"name" in DateTime_toString_twoDigits)
    DateTime_toString_twoDigits.name = "DateTime_toString_twoDigits";
  $desc = $collectedClasses.DateTime_toString_twoDigits;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DateTime_toString_twoDigits.prototype = $desc;
  function Duration(_duration) {
    this._duration = _duration;
  }
  Duration.builtin$cls = "Duration";
  if (!"name" in Duration)
    Duration.name = "Duration";
  $desc = $collectedClasses.Duration;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Duration.prototype = $desc;
  Duration.prototype.get$_duration = function() {
    return this._duration;
  };
  function Duration_toString_sixDigits() {
  }
  Duration_toString_sixDigits.builtin$cls = "Duration_toString_sixDigits";
  if (!"name" in Duration_toString_sixDigits)
    Duration_toString_sixDigits.name = "Duration_toString_sixDigits";
  $desc = $collectedClasses.Duration_toString_sixDigits;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Duration_toString_sixDigits.prototype = $desc;
  function Duration_toString_twoDigits() {
  }
  Duration_toString_twoDigits.builtin$cls = "Duration_toString_twoDigits";
  if (!"name" in Duration_toString_twoDigits)
    Duration_toString_twoDigits.name = "Duration_toString_twoDigits";
  $desc = $collectedClasses.Duration_toString_twoDigits;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Duration_toString_twoDigits.prototype = $desc;
  function Error() {
  }
  Error.builtin$cls = "Error";
  if (!"name" in Error)
    Error.name = "Error";
  $desc = $collectedClasses.Error;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Error.prototype = $desc;
  function NullThrownError() {
  }
  NullThrownError.builtin$cls = "NullThrownError";
  if (!"name" in NullThrownError)
    NullThrownError.name = "NullThrownError";
  $desc = $collectedClasses.NullThrownError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NullThrownError.prototype = $desc;
  function ArgumentError(message) {
    this.message = message;
  }
  ArgumentError.builtin$cls = "ArgumentError";
  if (!"name" in ArgumentError)
    ArgumentError.name = "ArgumentError";
  $desc = $collectedClasses.ArgumentError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ArgumentError.prototype = $desc;
  ArgumentError.prototype.get$message = function(receiver) {
    return this.message;
  };
  function RangeError(message) {
    this.message = message;
  }
  RangeError.builtin$cls = "RangeError";
  if (!"name" in RangeError)
    RangeError.name = "RangeError";
  $desc = $collectedClasses.RangeError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RangeError.prototype = $desc;
  function NoSuchMethodError(_core$_receiver, _memberName, _core$_arguments, _namedArguments, _existingArgumentNames) {
    this._core$_receiver = _core$_receiver;
    this._memberName = _memberName;
    this._core$_arguments = _core$_arguments;
    this._namedArguments = _namedArguments;
    this._existingArgumentNames = _existingArgumentNames;
  }
  NoSuchMethodError.builtin$cls = "NoSuchMethodError";
  if (!"name" in NoSuchMethodError)
    NoSuchMethodError.name = "NoSuchMethodError";
  $desc = $collectedClasses.NoSuchMethodError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NoSuchMethodError.prototype = $desc;
  function UnsupportedError(message) {
    this.message = message;
  }
  UnsupportedError.builtin$cls = "UnsupportedError";
  if (!"name" in UnsupportedError)
    UnsupportedError.name = "UnsupportedError";
  $desc = $collectedClasses.UnsupportedError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnsupportedError.prototype = $desc;
  UnsupportedError.prototype.get$message = function(receiver) {
    return this.message;
  };
  function UnimplementedError(message) {
    this.message = message;
  }
  UnimplementedError.builtin$cls = "UnimplementedError";
  if (!"name" in UnimplementedError)
    UnimplementedError.name = "UnimplementedError";
  $desc = $collectedClasses.UnimplementedError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnimplementedError.prototype = $desc;
  UnimplementedError.prototype.get$message = function(receiver) {
    return this.message;
  };
  function StateError(message) {
    this.message = message;
  }
  StateError.builtin$cls = "StateError";
  if (!"name" in StateError)
    StateError.name = "StateError";
  $desc = $collectedClasses.StateError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StateError.prototype = $desc;
  StateError.prototype.get$message = function(receiver) {
    return this.message;
  };
  function ConcurrentModificationError(modifiedObject) {
    this.modifiedObject = modifiedObject;
  }
  ConcurrentModificationError.builtin$cls = "ConcurrentModificationError";
  if (!"name" in ConcurrentModificationError)
    ConcurrentModificationError.name = "ConcurrentModificationError";
  $desc = $collectedClasses.ConcurrentModificationError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ConcurrentModificationError.prototype = $desc;
  function StackOverflowError() {
  }
  StackOverflowError.builtin$cls = "StackOverflowError";
  if (!"name" in StackOverflowError)
    StackOverflowError.name = "StackOverflowError";
  $desc = $collectedClasses.StackOverflowError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StackOverflowError.prototype = $desc;
  function CyclicInitializationError(variableName) {
    this.variableName = variableName;
  }
  CyclicInitializationError.builtin$cls = "CyclicInitializationError";
  if (!"name" in CyclicInitializationError)
    CyclicInitializationError.name = "CyclicInitializationError";
  $desc = $collectedClasses.CyclicInitializationError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CyclicInitializationError.prototype = $desc;
  function _ExceptionImplementation(message) {
    this.message = message;
  }
  _ExceptionImplementation.builtin$cls = "_ExceptionImplementation";
  if (!"name" in _ExceptionImplementation)
    _ExceptionImplementation.name = "_ExceptionImplementation";
  $desc = $collectedClasses._ExceptionImplementation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ExceptionImplementation.prototype = $desc;
  _ExceptionImplementation.prototype.get$message = function(receiver) {
    return this.message;
  };
  function FormatException(message) {
    this.message = message;
  }
  FormatException.builtin$cls = "FormatException";
  if (!"name" in FormatException)
    FormatException.name = "FormatException";
  $desc = $collectedClasses.FormatException;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FormatException.prototype = $desc;
  FormatException.prototype.get$message = function(receiver) {
    return this.message;
  };
  function IntegerDivisionByZeroException() {
  }
  IntegerDivisionByZeroException.builtin$cls = "IntegerDivisionByZeroException";
  if (!"name" in IntegerDivisionByZeroException)
    IntegerDivisionByZeroException.name = "IntegerDivisionByZeroException";
  $desc = $collectedClasses.IntegerDivisionByZeroException;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IntegerDivisionByZeroException.prototype = $desc;
  function Expando(name) {
    this.name = name;
  }
  Expando.builtin$cls = "Expando";
  if (!"name" in Expando)
    Expando.name = "Expando";
  $desc = $collectedClasses.Expando;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Expando.prototype = $desc;
  Expando.prototype.get$name = function(receiver) {
    return this.name;
  };
  function Function() {
  }
  Function.builtin$cls = "Function";
  if (!"name" in Function)
    Function.name = "Function";
  $desc = $collectedClasses.Function;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Function.prototype = $desc;
  function Iterable() {
  }
  Iterable.builtin$cls = "Iterable";
  if (!"name" in Iterable)
    Iterable.name = "Iterable";
  $desc = $collectedClasses.Iterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Iterable.prototype = $desc;
  function Iterator() {
  }
  Iterator.builtin$cls = "Iterator";
  if (!"name" in Iterator)
    Iterator.name = "Iterator";
  $desc = $collectedClasses.Iterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Iterator.prototype = $desc;
  function Map() {
  }
  Map.builtin$cls = "Map";
  if (!"name" in Map)
    Map.name = "Map";
  $desc = $collectedClasses.Map;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Map.prototype = $desc;
  function Null() {
  }
  Null.builtin$cls = "Null";
  if (!"name" in Null)
    Null.name = "Null";
  $desc = $collectedClasses.Null;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Null.prototype = $desc;
  function Object() {
  }
  Object.builtin$cls = "Object";
  if (!"name" in Object)
    Object.name = "Object";
  $desc = $collectedClasses.Object;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Object.prototype = $desc;
  function Match() {
  }
  Match.builtin$cls = "Match";
  if (!"name" in Match)
    Match.name = "Match";
  $desc = $collectedClasses.Match;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Match.prototype = $desc;
  function StackTrace() {
  }
  StackTrace.builtin$cls = "StackTrace";
  if (!"name" in StackTrace)
    StackTrace.name = "StackTrace";
  $desc = $collectedClasses.StackTrace;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StackTrace.prototype = $desc;
  function Stopwatch(_core$_start, _stop) {
    this._core$_start = _core$_start;
    this._stop = _stop;
  }
  Stopwatch.builtin$cls = "Stopwatch";
  if (!"name" in Stopwatch)
    Stopwatch.name = "Stopwatch";
  $desc = $collectedClasses.Stopwatch;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Stopwatch.prototype = $desc;
  function RuneIterator(string, _core$_position, _nextPosition, _currentCodePoint) {
    this.string = string;
    this._core$_position = _core$_position;
    this._nextPosition = _nextPosition;
    this._currentCodePoint = _currentCodePoint;
  }
  RuneIterator.builtin$cls = "RuneIterator";
  if (!"name" in RuneIterator)
    RuneIterator.name = "RuneIterator";
  $desc = $collectedClasses.RuneIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RuneIterator.prototype = $desc;
  function StringBuffer(_contents) {
    this._contents = _contents;
  }
  StringBuffer.builtin$cls = "StringBuffer";
  if (!"name" in StringBuffer)
    StringBuffer.name = "StringBuffer";
  $desc = $collectedClasses.StringBuffer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StringBuffer.prototype = $desc;
  StringBuffer.prototype.get$_contents = function() {
    return this._contents;
  };
  function Symbol() {
  }
  Symbol.builtin$cls = "Symbol";
  if (!"name" in Symbol)
    Symbol.name = "Symbol";
  $desc = $collectedClasses.Symbol;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Symbol.prototype = $desc;
  function Type() {
  }
  Type.builtin$cls = "Type";
  if (!"name" in Type)
    Type.name = "Type";
  $desc = $collectedClasses.Type;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Type.prototype = $desc;
  function Uri(_host, _port, _path, scheme, userInfo, query, fragment, _pathSegments, _queryParameters) {
    this._host = _host;
    this._port = _port;
    this._path = _path;
    this.scheme = scheme;
    this.userInfo = userInfo;
    this.query = query;
    this.fragment = fragment;
    this._pathSegments = _pathSegments;
    this._queryParameters = _queryParameters;
  }
  Uri.builtin$cls = "Uri";
  if (!"name" in Uri)
    Uri.name = "Uri";
  $desc = $collectedClasses.Uri;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri.prototype = $desc;
  function Uri__checkNonWindowsPathReservedCharacters_closure(argumentError_0) {
    this.argumentError_0 = argumentError_0;
  }
  Uri__checkNonWindowsPathReservedCharacters_closure.builtin$cls = "Uri__checkNonWindowsPathReservedCharacters_closure";
  if (!"name" in Uri__checkNonWindowsPathReservedCharacters_closure)
    Uri__checkNonWindowsPathReservedCharacters_closure.name = "Uri__checkNonWindowsPathReservedCharacters_closure";
  $desc = $collectedClasses.Uri__checkNonWindowsPathReservedCharacters_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__checkNonWindowsPathReservedCharacters_closure.prototype = $desc;
  function Uri__makeScheme_isSchemeLowerCharacter() {
  }
  Uri__makeScheme_isSchemeLowerCharacter.builtin$cls = "Uri__makeScheme_isSchemeLowerCharacter";
  if (!"name" in Uri__makeScheme_isSchemeLowerCharacter)
    Uri__makeScheme_isSchemeLowerCharacter.name = "Uri__makeScheme_isSchemeLowerCharacter";
  $desc = $collectedClasses.Uri__makeScheme_isSchemeLowerCharacter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__makeScheme_isSchemeLowerCharacter.prototype = $desc;
  function Uri__makeScheme_isSchemeCharacter() {
  }
  Uri__makeScheme_isSchemeCharacter.builtin$cls = "Uri__makeScheme_isSchemeCharacter";
  if (!"name" in Uri__makeScheme_isSchemeCharacter)
    Uri__makeScheme_isSchemeCharacter.name = "Uri__makeScheme_isSchemeCharacter";
  $desc = $collectedClasses.Uri__makeScheme_isSchemeCharacter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__makeScheme_isSchemeCharacter.prototype = $desc;
  function Uri__makePath_closure() {
  }
  Uri__makePath_closure.builtin$cls = "Uri__makePath_closure";
  if (!"name" in Uri__makePath_closure)
    Uri__makePath_closure.name = "Uri__makePath_closure";
  $desc = $collectedClasses.Uri__makePath_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__makePath_closure.prototype = $desc;
  function Uri__makeQuery_closure(box_0, result_1) {
    this.box_0 = box_0;
    this.result_1 = result_1;
  }
  Uri__makeQuery_closure.builtin$cls = "Uri__makeQuery_closure";
  if (!"name" in Uri__makeQuery_closure)
    Uri__makeQuery_closure.name = "Uri__makeQuery_closure";
  $desc = $collectedClasses.Uri__makeQuery_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__makeQuery_closure.prototype = $desc;
  function Uri__normalize_isNormalizedHexDigit() {
  }
  Uri__normalize_isNormalizedHexDigit.builtin$cls = "Uri__normalize_isNormalizedHexDigit";
  if (!"name" in Uri__normalize_isNormalizedHexDigit)
    Uri__normalize_isNormalizedHexDigit.name = "Uri__normalize_isNormalizedHexDigit";
  $desc = $collectedClasses.Uri__normalize_isNormalizedHexDigit;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__normalize_isNormalizedHexDigit.prototype = $desc;
  function Uri__normalize_isLowerCaseHexDigit() {
  }
  Uri__normalize_isLowerCaseHexDigit.builtin$cls = "Uri__normalize_isLowerCaseHexDigit";
  if (!"name" in Uri__normalize_isLowerCaseHexDigit)
    Uri__normalize_isLowerCaseHexDigit.name = "Uri__normalize_isLowerCaseHexDigit";
  $desc = $collectedClasses.Uri__normalize_isLowerCaseHexDigit;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__normalize_isLowerCaseHexDigit.prototype = $desc;
  function Uri__normalize_isUnreserved() {
  }
  Uri__normalize_isUnreserved.builtin$cls = "Uri__normalize_isUnreserved";
  if (!"name" in Uri__normalize_isUnreserved)
    Uri__normalize_isUnreserved.name = "Uri__normalize_isUnreserved";
  $desc = $collectedClasses.Uri__normalize_isUnreserved;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__normalize_isUnreserved.prototype = $desc;
  function Uri__normalize_normalizeHexDigit(component_1, isNormalizedHexDigit_2, isLowerCaseHexDigit_3) {
    this.component_1 = component_1;
    this.isNormalizedHexDigit_2 = isNormalizedHexDigit_2;
    this.isLowerCaseHexDigit_3 = isLowerCaseHexDigit_3;
  }
  Uri__normalize_normalizeHexDigit.builtin$cls = "Uri__normalize_normalizeHexDigit";
  if (!"name" in Uri__normalize_normalizeHexDigit)
    Uri__normalize_normalizeHexDigit.name = "Uri__normalize_normalizeHexDigit";
  $desc = $collectedClasses.Uri__normalize_normalizeHexDigit;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__normalize_normalizeHexDigit.prototype = $desc;
  function Uri__normalize_decodeHexDigitPair(component_4) {
    this.component_4 = component_4;
  }
  Uri__normalize_decodeHexDigitPair.builtin$cls = "Uri__normalize_decodeHexDigitPair";
  if (!"name" in Uri__normalize_decodeHexDigitPair)
    Uri__normalize_decodeHexDigitPair.name = "Uri__normalize_decodeHexDigitPair";
  $desc = $collectedClasses.Uri__normalize_decodeHexDigitPair;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__normalize_decodeHexDigitPair.prototype = $desc;
  function Uri__normalize_fillResult(box_0, component_5) {
    this.box_0 = box_0;
    this.component_5 = component_5;
  }
  Uri__normalize_fillResult.builtin$cls = "Uri__normalize_fillResult";
  if (!"name" in Uri__normalize_fillResult)
    Uri__normalize_fillResult.name = "Uri__normalize_fillResult";
  $desc = $collectedClasses.Uri__normalize_fillResult;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__normalize_fillResult.prototype = $desc;
  function Uri_hashCode_combine() {
  }
  Uri_hashCode_combine.builtin$cls = "Uri_hashCode_combine";
  if (!"name" in Uri_hashCode_combine)
    Uri_hashCode_combine.name = "Uri_hashCode_combine";
  $desc = $collectedClasses.Uri_hashCode_combine;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri_hashCode_combine.prototype = $desc;
  function Uri_parseIPv4Address_error() {
  }
  Uri_parseIPv4Address_error.builtin$cls = "Uri_parseIPv4Address_error";
  if (!"name" in Uri_parseIPv4Address_error)
    Uri_parseIPv4Address_error.name = "Uri_parseIPv4Address_error";
  $desc = $collectedClasses.Uri_parseIPv4Address_error;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri_parseIPv4Address_error.prototype = $desc;
  function Uri_parseIPv4Address_closure(error_0) {
    this.error_0 = error_0;
  }
  Uri_parseIPv4Address_closure.builtin$cls = "Uri_parseIPv4Address_closure";
  if (!"name" in Uri_parseIPv4Address_closure)
    Uri_parseIPv4Address_closure.name = "Uri_parseIPv4Address_closure";
  $desc = $collectedClasses.Uri_parseIPv4Address_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri_parseIPv4Address_closure.prototype = $desc;
  function Uri_parseIPv6Address_error() {
  }
  Uri_parseIPv6Address_error.builtin$cls = "Uri_parseIPv6Address_error";
  if (!"name" in Uri_parseIPv6Address_error)
    Uri_parseIPv6Address_error.name = "Uri_parseIPv6Address_error";
  $desc = $collectedClasses.Uri_parseIPv6Address_error;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri_parseIPv6Address_error.prototype = $desc;
  function Uri_parseIPv6Address_parseHex(host_0, error_1) {
    this.host_0 = host_0;
    this.error_1 = error_1;
  }
  Uri_parseIPv6Address_parseHex.builtin$cls = "Uri_parseIPv6Address_parseHex";
  if (!"name" in Uri_parseIPv6Address_parseHex)
    Uri_parseIPv6Address_parseHex.name = "Uri_parseIPv6Address_parseHex";
  $desc = $collectedClasses.Uri_parseIPv6Address_parseHex;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri_parseIPv6Address_parseHex.prototype = $desc;
  function Uri_parseIPv6Address_closure(parts_2) {
    this.parts_2 = parts_2;
  }
  Uri_parseIPv6Address_closure.builtin$cls = "Uri_parseIPv6Address_closure";
  if (!"name" in Uri_parseIPv6Address_closure)
    Uri_parseIPv6Address_closure.name = "Uri_parseIPv6Address_closure";
  $desc = $collectedClasses.Uri_parseIPv6Address_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri_parseIPv6Address_closure.prototype = $desc;
  function Uri__uriEncode_byteToHex() {
  }
  Uri__uriEncode_byteToHex.builtin$cls = "Uri__uriEncode_byteToHex";
  if (!"name" in Uri__uriEncode_byteToHex)
    Uri__uriEncode_byteToHex.name = "Uri__uriEncode_byteToHex";
  $desc = $collectedClasses.Uri__uriEncode_byteToHex;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Uri__uriEncode_byteToHex.prototype = $desc;
  function Console() {
  }
  Console.builtin$cls = "Console";
  if (!"name" in Console)
    Console.name = "Console";
  $desc = $collectedClasses.Console;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Console.prototype = $desc;
  function Interceptor_CssStyleDeclarationBase() {
  }
  Interceptor_CssStyleDeclarationBase.builtin$cls = "Interceptor_CssStyleDeclarationBase";
  if (!"name" in Interceptor_CssStyleDeclarationBase)
    Interceptor_CssStyleDeclarationBase.name = "Interceptor_CssStyleDeclarationBase";
  $desc = $collectedClasses.Interceptor_CssStyleDeclarationBase;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Interceptor_CssStyleDeclarationBase.prototype = $desc;
  function CssStyleDeclarationBase() {
  }
  CssStyleDeclarationBase.builtin$cls = "CssStyleDeclarationBase";
  if (!"name" in CssStyleDeclarationBase)
    CssStyleDeclarationBase.name = "CssStyleDeclarationBase";
  $desc = $collectedClasses.CssStyleDeclarationBase;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CssStyleDeclarationBase.prototype = $desc;
  function _ChildrenElementList(_element, _childElements) {
    this._element = _element;
    this._childElements = _childElements;
  }
  _ChildrenElementList.builtin$cls = "_ChildrenElementList";
  if (!"name" in _ChildrenElementList)
    _ChildrenElementList.name = "_ChildrenElementList";
  $desc = $collectedClasses._ChildrenElementList;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ChildrenElementList.prototype = $desc;
  function _FrozenElementList(_nodeList, _elementList) {
    this._nodeList = _nodeList;
    this._elementList = _elementList;
  }
  _FrozenElementList.builtin$cls = "_FrozenElementList";
  if (!"name" in _FrozenElementList)
    _FrozenElementList.name = "_FrozenElementList";
  $desc = $collectedClasses._FrozenElementList;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _FrozenElementList.prototype = $desc;
  function _FrozenElementList$_wrap_closure() {
  }
  _FrozenElementList$_wrap_closure.builtin$cls = "_FrozenElementList$_wrap_closure";
  if (!"name" in _FrozenElementList$_wrap_closure)
    _FrozenElementList$_wrap_closure.name = "_FrozenElementList$_wrap_closure";
  $desc = $collectedClasses._FrozenElementList$_wrap_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _FrozenElementList$_wrap_closure.prototype = $desc;
  function _FrozenElementList_classes_closure(value_0) {
    this.value_0 = value_0;
  }
  _FrozenElementList_classes_closure.builtin$cls = "_FrozenElementList_classes_closure";
  if (!"name" in _FrozenElementList_classes_closure)
    _FrozenElementList_classes_closure.name = "_FrozenElementList_classes_closure";
  $desc = $collectedClasses._FrozenElementList_classes_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _FrozenElementList_classes_closure.prototype = $desc;
  function Element_Element$html_closure() {
  }
  Element_Element$html_closure.builtin$cls = "Element_Element$html_closure";
  if (!"name" in Element_Element$html_closure)
    Element_Element$html_closure.name = "Element_Element$html_closure";
  $desc = $collectedClasses.Element_Element$html_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Element_Element$html_closure.prototype = $desc;
  function Entry() {
  }
  Entry.builtin$cls = "Entry";
  if (!"name" in Entry)
    Entry.name = "Entry";
  $desc = $collectedClasses.Entry;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Entry.prototype = $desc;
  function Events(_ptr) {
    this._ptr = _ptr;
  }
  Events.builtin$cls = "Events";
  if (!"name" in Events)
    Events.name = "Events";
  $desc = $collectedClasses.Events;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Events.prototype = $desc;
  Events.prototype.get$_ptr = function() {
    return this._ptr;
  };
  function ElementEvents(html$ElementEvents$_ptr, _ptr) {
    this.html$ElementEvents$_ptr = html$ElementEvents$_ptr;
    this._ptr = _ptr;
  }
  ElementEvents.builtin$cls = "ElementEvents";
  if (!"name" in ElementEvents)
    ElementEvents.name = "ElementEvents";
  $desc = $collectedClasses.ElementEvents;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ElementEvents.prototype = $desc;
  ElementEvents.prototype.get$_ptr = function() {
    return this.html$ElementEvents$_ptr;
  };
  function Interceptor_ListMixin() {
  }
  Interceptor_ListMixin.builtin$cls = "Interceptor_ListMixin";
  if (!"name" in Interceptor_ListMixin)
    Interceptor_ListMixin.name = "Interceptor_ListMixin";
  $desc = $collectedClasses.Interceptor_ListMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Interceptor_ListMixin.prototype = $desc;
  function Interceptor_ListMixin_ImmutableListMixin() {
  }
  Interceptor_ListMixin_ImmutableListMixin.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin";
  if (!"name" in Interceptor_ListMixin_ImmutableListMixin)
    Interceptor_ListMixin_ImmutableListMixin.name = "Interceptor_ListMixin_ImmutableListMixin";
  $desc = $collectedClasses.Interceptor_ListMixin_ImmutableListMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Interceptor_ListMixin_ImmutableListMixin.prototype = $desc;
  function HttpRequest_getString_closure() {
  }
  HttpRequest_getString_closure.builtin$cls = "HttpRequest_getString_closure";
  if (!"name" in HttpRequest_getString_closure)
    HttpRequest_getString_closure.name = "HttpRequest_getString_closure";
  $desc = $collectedClasses.HttpRequest_getString_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HttpRequest_getString_closure.prototype = $desc;
  function HttpRequest_request_closure0(xhr_0) {
    this.xhr_0 = xhr_0;
  }
  HttpRequest_request_closure0.builtin$cls = "HttpRequest_request_closure0";
  if (!"name" in HttpRequest_request_closure0)
    HttpRequest_request_closure0.name = "HttpRequest_request_closure0";
  $desc = $collectedClasses.HttpRequest_request_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HttpRequest_request_closure0.prototype = $desc;
  function HttpRequest_request_closure(completer_1, xhr_2) {
    this.completer_1 = completer_1;
    this.xhr_2 = xhr_2;
  }
  HttpRequest_request_closure.builtin$cls = "HttpRequest_request_closure";
  if (!"name" in HttpRequest_request_closure)
    HttpRequest_request_closure.name = "HttpRequest_request_closure";
  $desc = $collectedClasses.HttpRequest_request_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HttpRequest_request_closure.prototype = $desc;
  function MutationObserver_observe_override(parsedOptions_0) {
    this.parsedOptions_0 = parsedOptions_0;
  }
  MutationObserver_observe_override.builtin$cls = "MutationObserver_observe_override";
  if (!"name" in MutationObserver_observe_override)
    MutationObserver_observe_override.name = "MutationObserver_observe_override";
  $desc = $collectedClasses.MutationObserver_observe_override;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MutationObserver_observe_override.prototype = $desc;
  function _ChildNodeListLazy(_this) {
    this._this = _this;
  }
  _ChildNodeListLazy.builtin$cls = "_ChildNodeListLazy";
  if (!"name" in _ChildNodeListLazy)
    _ChildNodeListLazy.name = "_ChildNodeListLazy";
  $desc = $collectedClasses._ChildNodeListLazy;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ChildNodeListLazy.prototype = $desc;
  function Interceptor_ListMixin0() {
  }
  Interceptor_ListMixin0.builtin$cls = "Interceptor_ListMixin0";
  if (!"name" in Interceptor_ListMixin0)
    Interceptor_ListMixin0.name = "Interceptor_ListMixin0";
  $desc = $collectedClasses.Interceptor_ListMixin0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Interceptor_ListMixin0.prototype = $desc;
  function Interceptor_ListMixin_ImmutableListMixin0() {
  }
  Interceptor_ListMixin_ImmutableListMixin0.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin0";
  if (!"name" in Interceptor_ListMixin_ImmutableListMixin0)
    Interceptor_ListMixin_ImmutableListMixin0.name = "Interceptor_ListMixin_ImmutableListMixin0";
  $desc = $collectedClasses.Interceptor_ListMixin_ImmutableListMixin0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Interceptor_ListMixin_ImmutableListMixin0.prototype = $desc;
  function Window_animationFrame_closure(completer_0) {
    this.completer_0 = completer_0;
  }
  Window_animationFrame_closure.builtin$cls = "Window_animationFrame_closure";
  if (!"name" in Window_animationFrame_closure)
    Window_animationFrame_closure.name = "Window_animationFrame_closure";
  $desc = $collectedClasses.Window_animationFrame_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Window_animationFrame_closure.prototype = $desc;
  function Interceptor_ListMixin1() {
  }
  Interceptor_ListMixin1.builtin$cls = "Interceptor_ListMixin1";
  if (!"name" in Interceptor_ListMixin1)
    Interceptor_ListMixin1.name = "Interceptor_ListMixin1";
  $desc = $collectedClasses.Interceptor_ListMixin1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Interceptor_ListMixin1.prototype = $desc;
  function Interceptor_ListMixin_ImmutableListMixin1() {
  }
  Interceptor_ListMixin_ImmutableListMixin1.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin1";
  if (!"name" in Interceptor_ListMixin_ImmutableListMixin1)
    Interceptor_ListMixin_ImmutableListMixin1.name = "Interceptor_ListMixin_ImmutableListMixin1";
  $desc = $collectedClasses.Interceptor_ListMixin_ImmutableListMixin1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Interceptor_ListMixin_ImmutableListMixin1.prototype = $desc;
  function Interceptor_ListMixin2() {
  }
  Interceptor_ListMixin2.builtin$cls = "Interceptor_ListMixin2";
  if (!"name" in Interceptor_ListMixin2)
    Interceptor_ListMixin2.name = "Interceptor_ListMixin2";
  $desc = $collectedClasses.Interceptor_ListMixin2;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Interceptor_ListMixin2.prototype = $desc;
  function Interceptor_ListMixin_ImmutableListMixin2() {
  }
  Interceptor_ListMixin_ImmutableListMixin2.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin2";
  if (!"name" in Interceptor_ListMixin_ImmutableListMixin2)
    Interceptor_ListMixin_ImmutableListMixin2.name = "Interceptor_ListMixin_ImmutableListMixin2";
  $desc = $collectedClasses.Interceptor_ListMixin_ImmutableListMixin2;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Interceptor_ListMixin_ImmutableListMixin2.prototype = $desc;
  function Interceptor_ListMixin3() {
  }
  Interceptor_ListMixin3.builtin$cls = "Interceptor_ListMixin3";
  if (!"name" in Interceptor_ListMixin3)
    Interceptor_ListMixin3.name = "Interceptor_ListMixin3";
  $desc = $collectedClasses.Interceptor_ListMixin3;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Interceptor_ListMixin3.prototype = $desc;
  function Interceptor_ListMixin_ImmutableListMixin3() {
  }
  Interceptor_ListMixin_ImmutableListMixin3.builtin$cls = "Interceptor_ListMixin_ImmutableListMixin3";
  if (!"name" in Interceptor_ListMixin_ImmutableListMixin3)
    Interceptor_ListMixin_ImmutableListMixin3.name = "Interceptor_ListMixin_ImmutableListMixin3";
  $desc = $collectedClasses.Interceptor_ListMixin_ImmutableListMixin3;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Interceptor_ListMixin_ImmutableListMixin3.prototype = $desc;
  function _AttributeMap() {
  }
  _AttributeMap.builtin$cls = "_AttributeMap";
  if (!"name" in _AttributeMap)
    _AttributeMap.name = "_AttributeMap";
  $desc = $collectedClasses._AttributeMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AttributeMap.prototype = $desc;
  function _AttributeMap_addAll_closure(this_0) {
    this.this_0 = this_0;
  }
  _AttributeMap_addAll_closure.builtin$cls = "_AttributeMap_addAll_closure";
  if (!"name" in _AttributeMap_addAll_closure)
    _AttributeMap_addAll_closure.name = "_AttributeMap_addAll_closure";
  $desc = $collectedClasses._AttributeMap_addAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AttributeMap_addAll_closure.prototype = $desc;
  function _ElementAttributeMap(_element) {
    this._element = _element;
  }
  _ElementAttributeMap.builtin$cls = "_ElementAttributeMap";
  if (!"name" in _ElementAttributeMap)
    _ElementAttributeMap.name = "_ElementAttributeMap";
  $desc = $collectedClasses._ElementAttributeMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ElementAttributeMap.prototype = $desc;
  function _DataAttributeMap(_attributes) {
    this._attributes = _attributes;
  }
  _DataAttributeMap.builtin$cls = "_DataAttributeMap";
  if (!"name" in _DataAttributeMap)
    _DataAttributeMap.name = "_DataAttributeMap";
  $desc = $collectedClasses._DataAttributeMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DataAttributeMap.prototype = $desc;
  function _DataAttributeMap_addAll_closure(this_0) {
    this.this_0 = this_0;
  }
  _DataAttributeMap_addAll_closure.builtin$cls = "_DataAttributeMap_addAll_closure";
  if (!"name" in _DataAttributeMap_addAll_closure)
    _DataAttributeMap_addAll_closure.name = "_DataAttributeMap_addAll_closure";
  $desc = $collectedClasses._DataAttributeMap_addAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DataAttributeMap_addAll_closure.prototype = $desc;
  function _DataAttributeMap_containsValue_closure(value_0) {
    this.value_0 = value_0;
  }
  _DataAttributeMap_containsValue_closure.builtin$cls = "_DataAttributeMap_containsValue_closure";
  if (!"name" in _DataAttributeMap_containsValue_closure)
    _DataAttributeMap_containsValue_closure.name = "_DataAttributeMap_containsValue_closure";
  $desc = $collectedClasses._DataAttributeMap_containsValue_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DataAttributeMap_containsValue_closure.prototype = $desc;
  function _DataAttributeMap_forEach_closure(this_0, f_1) {
    this.this_0 = this_0;
    this.f_1 = f_1;
  }
  _DataAttributeMap_forEach_closure.builtin$cls = "_DataAttributeMap_forEach_closure";
  if (!"name" in _DataAttributeMap_forEach_closure)
    _DataAttributeMap_forEach_closure.name = "_DataAttributeMap_forEach_closure";
  $desc = $collectedClasses._DataAttributeMap_forEach_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DataAttributeMap_forEach_closure.prototype = $desc;
  function _DataAttributeMap_keys_closure(this_0, keys_1) {
    this.this_0 = this_0;
    this.keys_1 = keys_1;
  }
  _DataAttributeMap_keys_closure.builtin$cls = "_DataAttributeMap_keys_closure";
  if (!"name" in _DataAttributeMap_keys_closure)
    _DataAttributeMap_keys_closure.name = "_DataAttributeMap_keys_closure";
  $desc = $collectedClasses._DataAttributeMap_keys_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DataAttributeMap_keys_closure.prototype = $desc;
  function _DataAttributeMap_values_closure(this_0, values_1) {
    this.this_0 = this_0;
    this.values_1 = values_1;
  }
  _DataAttributeMap_values_closure.builtin$cls = "_DataAttributeMap_values_closure";
  if (!"name" in _DataAttributeMap_values_closure)
    _DataAttributeMap_values_closure.name = "_DataAttributeMap_values_closure";
  $desc = $collectedClasses._DataAttributeMap_values_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DataAttributeMap_values_closure.prototype = $desc;
  function _MultiElementCssClassSet(_elementIterable, _elementCssClassSetIterable) {
    this._elementIterable = _elementIterable;
    this._elementCssClassSetIterable = _elementCssClassSetIterable;
  }
  _MultiElementCssClassSet.builtin$cls = "_MultiElementCssClassSet";
  if (!"name" in _MultiElementCssClassSet)
    _MultiElementCssClassSet.name = "_MultiElementCssClassSet";
  $desc = $collectedClasses._MultiElementCssClassSet;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MultiElementCssClassSet.prototype = $desc;
  function _MultiElementCssClassSet_closure() {
  }
  _MultiElementCssClassSet_closure.builtin$cls = "_MultiElementCssClassSet_closure";
  if (!"name" in _MultiElementCssClassSet_closure)
    _MultiElementCssClassSet_closure.name = "_MultiElementCssClassSet_closure";
  $desc = $collectedClasses._MultiElementCssClassSet_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MultiElementCssClassSet_closure.prototype = $desc;
  function _MultiElementCssClassSet_readClasses_closure(s_0) {
    this.s_0 = s_0;
  }
  _MultiElementCssClassSet_readClasses_closure.builtin$cls = "_MultiElementCssClassSet_readClasses_closure";
  if (!"name" in _MultiElementCssClassSet_readClasses_closure)
    _MultiElementCssClassSet_readClasses_closure.name = "_MultiElementCssClassSet_readClasses_closure";
  $desc = $collectedClasses._MultiElementCssClassSet_readClasses_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MultiElementCssClassSet_readClasses_closure.prototype = $desc;
  function _MultiElementCssClassSet_modify_closure(f_0) {
    this.f_0 = f_0;
  }
  _MultiElementCssClassSet_modify_closure.builtin$cls = "_MultiElementCssClassSet_modify_closure";
  if (!"name" in _MultiElementCssClassSet_modify_closure)
    _MultiElementCssClassSet_modify_closure.name = "_MultiElementCssClassSet_modify_closure";
  $desc = $collectedClasses._MultiElementCssClassSet_modify_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MultiElementCssClassSet_modify_closure.prototype = $desc;
  function _MultiElementCssClassSet_toggle_closure(value_0, shouldAdd_1) {
    this.value_0 = value_0;
    this.shouldAdd_1 = shouldAdd_1;
  }
  _MultiElementCssClassSet_toggle_closure.builtin$cls = "_MultiElementCssClassSet_toggle_closure";
  if (!"name" in _MultiElementCssClassSet_toggle_closure)
    _MultiElementCssClassSet_toggle_closure.name = "_MultiElementCssClassSet_toggle_closure";
  $desc = $collectedClasses._MultiElementCssClassSet_toggle_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MultiElementCssClassSet_toggle_closure.prototype = $desc;
  function _MultiElementCssClassSet_remove_closure(value_0) {
    this.value_0 = value_0;
  }
  _MultiElementCssClassSet_remove_closure.builtin$cls = "_MultiElementCssClassSet_remove_closure";
  if (!"name" in _MultiElementCssClassSet_remove_closure)
    _MultiElementCssClassSet_remove_closure.name = "_MultiElementCssClassSet_remove_closure";
  $desc = $collectedClasses._MultiElementCssClassSet_remove_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MultiElementCssClassSet_remove_closure.prototype = $desc;
  function _MultiElementCssClassSet__modifyWithReturnValue_closure(f_0) {
    this.f_0 = f_0;
  }
  _MultiElementCssClassSet__modifyWithReturnValue_closure.builtin$cls = "_MultiElementCssClassSet__modifyWithReturnValue_closure";
  if (!"name" in _MultiElementCssClassSet__modifyWithReturnValue_closure)
    _MultiElementCssClassSet__modifyWithReturnValue_closure.name = "_MultiElementCssClassSet__modifyWithReturnValue_closure";
  $desc = $collectedClasses._MultiElementCssClassSet__modifyWithReturnValue_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MultiElementCssClassSet__modifyWithReturnValue_closure.prototype = $desc;
  function _ElementCssClassSet(_element) {
    this._element = _element;
  }
  _ElementCssClassSet.builtin$cls = "_ElementCssClassSet";
  if (!"name" in _ElementCssClassSet)
    _ElementCssClassSet.name = "_ElementCssClassSet";
  $desc = $collectedClasses._ElementCssClassSet;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ElementCssClassSet.prototype = $desc;
  function _ContentCssRect(_element, left, top, width, height) {
    this._element = _element;
    this.left = left;
    this.top = top;
    this.width = width;
    this.height = height;
  }
  _ContentCssRect.builtin$cls = "_ContentCssRect";
  if (!"name" in _ContentCssRect)
    _ContentCssRect.name = "_ContentCssRect";
  $desc = $collectedClasses._ContentCssRect;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ContentCssRect.prototype = $desc;
  function _MarginCssRect(_element, left, top, width, height) {
    this._element = _element;
    this.left = left;
    this.top = top;
    this.width = width;
    this.height = height;
  }
  _MarginCssRect.builtin$cls = "_MarginCssRect";
  if (!"name" in _MarginCssRect)
    _MarginCssRect.name = "_MarginCssRect";
  $desc = $collectedClasses._MarginCssRect;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MarginCssRect.prototype = $desc;
  function CssRect() {
  }
  CssRect.builtin$cls = "CssRect";
  if (!"name" in CssRect)
    CssRect.name = "CssRect";
  $desc = $collectedClasses.CssRect;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CssRect.prototype = $desc;
  function Dimension(_html$_value, _unit) {
    this._html$_value = _html$_value;
    this._unit = _unit;
  }
  Dimension.builtin$cls = "Dimension";
  if (!"name" in Dimension)
    Dimension.name = "Dimension";
  $desc = $collectedClasses.Dimension;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Dimension.prototype = $desc;
  function EventStreamProvider(_eventType) {
    this._eventType = _eventType;
  }
  EventStreamProvider.builtin$cls = "EventStreamProvider";
  if (!"name" in EventStreamProvider)
    EventStreamProvider.name = "EventStreamProvider";
  $desc = $collectedClasses.EventStreamProvider;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EventStreamProvider.prototype = $desc;
  function _EventStream(_target, _eventType, _useCapture) {
    this._target = _target;
    this._eventType = _eventType;
    this._useCapture = _useCapture;
  }
  _EventStream.builtin$cls = "_EventStream";
  if (!"name" in _EventStream)
    _EventStream.name = "_EventStream";
  $desc = $collectedClasses._EventStream;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _EventStream.prototype = $desc;
  function _ElementEventStreamImpl(_target, _eventType, _useCapture) {
    this._target = _target;
    this._eventType = _eventType;
    this._useCapture = _useCapture;
  }
  _ElementEventStreamImpl.builtin$cls = "_ElementEventStreamImpl";
  if (!"name" in _ElementEventStreamImpl)
    _ElementEventStreamImpl.name = "_ElementEventStreamImpl";
  $desc = $collectedClasses._ElementEventStreamImpl;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ElementEventStreamImpl.prototype = $desc;
  function _ElementEventStreamImpl_matches_closure(selector_0) {
    this.selector_0 = selector_0;
  }
  _ElementEventStreamImpl_matches_closure.builtin$cls = "_ElementEventStreamImpl_matches_closure";
  if (!"name" in _ElementEventStreamImpl_matches_closure)
    _ElementEventStreamImpl_matches_closure.name = "_ElementEventStreamImpl_matches_closure";
  $desc = $collectedClasses._ElementEventStreamImpl_matches_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ElementEventStreamImpl_matches_closure.prototype = $desc;
  function _ElementEventStreamImpl_matches_closure0(selector_1) {
    this.selector_1 = selector_1;
  }
  _ElementEventStreamImpl_matches_closure0.builtin$cls = "_ElementEventStreamImpl_matches_closure0";
  if (!"name" in _ElementEventStreamImpl_matches_closure0)
    _ElementEventStreamImpl_matches_closure0.name = "_ElementEventStreamImpl_matches_closure0";
  $desc = $collectedClasses._ElementEventStreamImpl_matches_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ElementEventStreamImpl_matches_closure0.prototype = $desc;
  function _ElementListEventStreamImpl(_targetList, _useCapture, _eventType) {
    this._targetList = _targetList;
    this._useCapture = _useCapture;
    this._eventType = _eventType;
  }
  _ElementListEventStreamImpl.builtin$cls = "_ElementListEventStreamImpl";
  if (!"name" in _ElementListEventStreamImpl)
    _ElementListEventStreamImpl.name = "_ElementListEventStreamImpl";
  $desc = $collectedClasses._ElementListEventStreamImpl;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ElementListEventStreamImpl.prototype = $desc;
  function _ElementListEventStreamImpl_matches_closure(selector_0) {
    this.selector_0 = selector_0;
  }
  _ElementListEventStreamImpl_matches_closure.builtin$cls = "_ElementListEventStreamImpl_matches_closure";
  if (!"name" in _ElementListEventStreamImpl_matches_closure)
    _ElementListEventStreamImpl_matches_closure.name = "_ElementListEventStreamImpl_matches_closure";
  $desc = $collectedClasses._ElementListEventStreamImpl_matches_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ElementListEventStreamImpl_matches_closure.prototype = $desc;
  function _ElementListEventStreamImpl_matches_closure0(selector_1) {
    this.selector_1 = selector_1;
  }
  _ElementListEventStreamImpl_matches_closure0.builtin$cls = "_ElementListEventStreamImpl_matches_closure0";
  if (!"name" in _ElementListEventStreamImpl_matches_closure0)
    _ElementListEventStreamImpl_matches_closure0.name = "_ElementListEventStreamImpl_matches_closure0";
  $desc = $collectedClasses._ElementListEventStreamImpl_matches_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ElementListEventStreamImpl_matches_closure0.prototype = $desc;
  function _EventStreamSubscription(_pauseCount, _target, _eventType, _onData, _useCapture) {
    this._pauseCount = _pauseCount;
    this._target = _target;
    this._eventType = _eventType;
    this._onData = _onData;
    this._useCapture = _useCapture;
  }
  _EventStreamSubscription.builtin$cls = "_EventStreamSubscription";
  if (!"name" in _EventStreamSubscription)
    _EventStreamSubscription.name = "_EventStreamSubscription";
  $desc = $collectedClasses._EventStreamSubscription;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _EventStreamSubscription.prototype = $desc;
  function _StreamPool(_html$_controller, _subscriptions) {
    this._html$_controller = _html$_controller;
    this._subscriptions = _subscriptions;
  }
  _StreamPool.builtin$cls = "_StreamPool";
  if (!"name" in _StreamPool)
    _StreamPool.name = "_StreamPool";
  $desc = $collectedClasses._StreamPool;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamPool.prototype = $desc;
  function _StreamPool_add_closure(this_0, stream_1) {
    this.this_0 = this_0;
    this.stream_1 = stream_1;
  }
  _StreamPool_add_closure.builtin$cls = "_StreamPool_add_closure";
  if (!"name" in _StreamPool_add_closure)
    _StreamPool_add_closure.name = "_StreamPool_add_closure";
  $desc = $collectedClasses._StreamPool_add_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _StreamPool_add_closure.prototype = $desc;
  function _CustomEventStreamProvider(_eventTypeGetter) {
    this._eventTypeGetter = _eventTypeGetter;
  }
  _CustomEventStreamProvider.builtin$cls = "_CustomEventStreamProvider";
  if (!"name" in _CustomEventStreamProvider)
    _CustomEventStreamProvider.name = "_CustomEventStreamProvider";
  $desc = $collectedClasses._CustomEventStreamProvider;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _CustomEventStreamProvider.prototype = $desc;
  function _Html5NodeValidator(uriPolicy) {
    this.uriPolicy = uriPolicy;
  }
  _Html5NodeValidator.builtin$cls = "_Html5NodeValidator";
  if (!"name" in _Html5NodeValidator)
    _Html5NodeValidator.name = "_Html5NodeValidator";
  $desc = $collectedClasses._Html5NodeValidator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Html5NodeValidator.prototype = $desc;
  _Html5NodeValidator.prototype.get$uriPolicy = function() {
    return this.uriPolicy;
  };
  function ImmutableListMixin() {
  }
  ImmutableListMixin.builtin$cls = "ImmutableListMixin";
  if (!"name" in ImmutableListMixin)
    ImmutableListMixin.name = "ImmutableListMixin";
  $desc = $collectedClasses.ImmutableListMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ImmutableListMixin.prototype = $desc;
  function NodeValidatorBuilder(_validators) {
    this._validators = _validators;
  }
  NodeValidatorBuilder.builtin$cls = "NodeValidatorBuilder";
  if (!"name" in NodeValidatorBuilder)
    NodeValidatorBuilder.name = "NodeValidatorBuilder";
  $desc = $collectedClasses.NodeValidatorBuilder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NodeValidatorBuilder.prototype = $desc;
  function NodeValidatorBuilder_allowsElement_closure(element_0) {
    this.element_0 = element_0;
  }
  NodeValidatorBuilder_allowsElement_closure.builtin$cls = "NodeValidatorBuilder_allowsElement_closure";
  if (!"name" in NodeValidatorBuilder_allowsElement_closure)
    NodeValidatorBuilder_allowsElement_closure.name = "NodeValidatorBuilder_allowsElement_closure";
  $desc = $collectedClasses.NodeValidatorBuilder_allowsElement_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NodeValidatorBuilder_allowsElement_closure.prototype = $desc;
  function NodeValidatorBuilder_allowsAttribute_closure(element_0, attributeName_1, value_2) {
    this.element_0 = element_0;
    this.attributeName_1 = attributeName_1;
    this.value_2 = value_2;
  }
  NodeValidatorBuilder_allowsAttribute_closure.builtin$cls = "NodeValidatorBuilder_allowsAttribute_closure";
  if (!"name" in NodeValidatorBuilder_allowsAttribute_closure)
    NodeValidatorBuilder_allowsAttribute_closure.name = "NodeValidatorBuilder_allowsAttribute_closure";
  $desc = $collectedClasses.NodeValidatorBuilder_allowsAttribute_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NodeValidatorBuilder_allowsAttribute_closure.prototype = $desc;
  function _SimpleNodeValidator(uriPolicy) {
    this.uriPolicy = uriPolicy;
  }
  _SimpleNodeValidator.builtin$cls = "_SimpleNodeValidator";
  if (!"name" in _SimpleNodeValidator)
    _SimpleNodeValidator.name = "_SimpleNodeValidator";
  $desc = $collectedClasses._SimpleNodeValidator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SimpleNodeValidator.prototype = $desc;
  _SimpleNodeValidator.prototype.get$uriPolicy = function() {
    return this.uriPolicy;
  };
  function _TemplatingNodeValidator(_templateAttrs, allowedElements, allowedAttributes, allowedUriAttributes, uriPolicy) {
    this._templateAttrs = _templateAttrs;
    this.allowedElements = allowedElements;
    this.allowedAttributes = allowedAttributes;
    this.allowedUriAttributes = allowedUriAttributes;
    this.uriPolicy = uriPolicy;
  }
  _TemplatingNodeValidator.builtin$cls = "_TemplatingNodeValidator";
  if (!"name" in _TemplatingNodeValidator)
    _TemplatingNodeValidator.name = "_TemplatingNodeValidator";
  $desc = $collectedClasses._TemplatingNodeValidator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _TemplatingNodeValidator.prototype = $desc;
  function _TemplatingNodeValidator_closure() {
  }
  _TemplatingNodeValidator_closure.builtin$cls = "_TemplatingNodeValidator_closure";
  if (!"name" in _TemplatingNodeValidator_closure)
    _TemplatingNodeValidator_closure.name = "_TemplatingNodeValidator_closure";
  $desc = $collectedClasses._TemplatingNodeValidator_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _TemplatingNodeValidator_closure.prototype = $desc;
  function _SvgNodeValidator() {
  }
  _SvgNodeValidator.builtin$cls = "_SvgNodeValidator";
  if (!"name" in _SvgNodeValidator)
    _SvgNodeValidator.name = "_SvgNodeValidator";
  $desc = $collectedClasses._SvgNodeValidator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SvgNodeValidator.prototype = $desc;
  function FixedSizeListIterator(_array, _html$_length, _position, _html$_current) {
    this._array = _array;
    this._html$_length = _html$_length;
    this._position = _position;
    this._html$_current = _html$_current;
  }
  FixedSizeListIterator.builtin$cls = "FixedSizeListIterator";
  if (!"name" in FixedSizeListIterator)
    FixedSizeListIterator.name = "FixedSizeListIterator";
  $desc = $collectedClasses.FixedSizeListIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FixedSizeListIterator.prototype = $desc;
  function _callConstructor_closure(constructor_0, interceptor_1) {
    this.constructor_0 = constructor_0;
    this.interceptor_1 = interceptor_1;
  }
  _callConstructor_closure.builtin$cls = "_callConstructor_closure";
  if (!"name" in _callConstructor_closure)
    _callConstructor_closure.name = "_callConstructor_closure";
  $desc = $collectedClasses._callConstructor_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _callConstructor_closure.prototype = $desc;
  function _DOMWindowCrossFrame(_window) {
    this._window = _window;
  }
  _DOMWindowCrossFrame.builtin$cls = "_DOMWindowCrossFrame";
  if (!"name" in _DOMWindowCrossFrame)
    _DOMWindowCrossFrame.name = "_DOMWindowCrossFrame";
  $desc = $collectedClasses._DOMWindowCrossFrame;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DOMWindowCrossFrame.prototype = $desc;
  function _LocationCrossFrame(_location) {
    this._location = _location;
  }
  _LocationCrossFrame.builtin$cls = "_LocationCrossFrame";
  if (!"name" in _LocationCrossFrame)
    _LocationCrossFrame.name = "_LocationCrossFrame";
  $desc = $collectedClasses._LocationCrossFrame;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LocationCrossFrame.prototype = $desc;
  function _LocationWrapper(_ptr) {
    this._ptr = _ptr;
  }
  _LocationWrapper.builtin$cls = "_LocationWrapper";
  if (!"name" in _LocationWrapper)
    _LocationWrapper.name = "_LocationWrapper";
  $desc = $collectedClasses._LocationWrapper;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LocationWrapper.prototype = $desc;
  function NodeValidator() {
  }
  NodeValidator.builtin$cls = "NodeValidator";
  if (!"name" in NodeValidator)
    NodeValidator.name = "NodeValidator";
  $desc = $collectedClasses.NodeValidator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NodeValidator.prototype = $desc;
  function _SameOriginUriPolicy(_hiddenAnchor, _loc) {
    this._hiddenAnchor = _hiddenAnchor;
    this._loc = _loc;
  }
  _SameOriginUriPolicy.builtin$cls = "_SameOriginUriPolicy";
  if (!"name" in _SameOriginUriPolicy)
    _SameOriginUriPolicy.name = "_SameOriginUriPolicy";
  $desc = $collectedClasses._SameOriginUriPolicy;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SameOriginUriPolicy.prototype = $desc;
  function _ValidatingTreeSanitizer(validator) {
    this.validator = validator;
  }
  _ValidatingTreeSanitizer.builtin$cls = "_ValidatingTreeSanitizer";
  if (!"name" in _ValidatingTreeSanitizer)
    _ValidatingTreeSanitizer.name = "_ValidatingTreeSanitizer";
  $desc = $collectedClasses._ValidatingTreeSanitizer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ValidatingTreeSanitizer.prototype = $desc;
  function _ValidatingTreeSanitizer_sanitizeTree_walk(this_0) {
    this.this_0 = this_0;
  }
  _ValidatingTreeSanitizer_sanitizeTree_walk.builtin$cls = "_ValidatingTreeSanitizer_sanitizeTree_walk";
  if (!"name" in _ValidatingTreeSanitizer_sanitizeTree_walk)
    _ValidatingTreeSanitizer_sanitizeTree_walk.name = "_ValidatingTreeSanitizer_sanitizeTree_walk";
  $desc = $collectedClasses._ValidatingTreeSanitizer_sanitizeTree_walk;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ValidatingTreeSanitizer_sanitizeTree_walk.prototype = $desc;
  function _AttributeClassSet(_svg$_element) {
    this._svg$_element = _svg$_element;
  }
  _AttributeClassSet.builtin$cls = "_AttributeClassSet";
  if (!"name" in _AttributeClassSet)
    _AttributeClassSet.name = "_AttributeClassSet";
  $desc = $collectedClasses._AttributeClassSet;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AttributeClassSet.prototype = $desc;
  function JsObject(_jsObject) {
    this._jsObject = _jsObject;
  }
  JsObject.builtin$cls = "JsObject";
  if (!"name" in JsObject)
    JsObject.name = "JsObject";
  $desc = $collectedClasses.JsObject;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsObject.prototype = $desc;
  function JsFunction(_jsObject) {
    this._jsObject = _jsObject;
  }
  JsFunction.builtin$cls = "JsFunction";
  if (!"name" in JsFunction)
    JsFunction.name = "JsFunction";
  $desc = $collectedClasses.JsFunction;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsFunction.prototype = $desc;
  function JsArray(_jsObject) {
    this._jsObject = _jsObject;
  }
  JsArray.builtin$cls = "JsArray";
  if (!"name" in JsArray)
    JsArray.name = "JsArray";
  $desc = $collectedClasses.JsArray;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsArray.prototype = $desc;
  function JsObject_ListMixin() {
  }
  JsObject_ListMixin.builtin$cls = "JsObject_ListMixin";
  if (!"name" in JsObject_ListMixin)
    JsObject_ListMixin.name = "JsObject_ListMixin";
  $desc = $collectedClasses.JsObject_ListMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  JsObject_ListMixin.prototype = $desc;
  function _convertToJS_closure() {
  }
  _convertToJS_closure.builtin$cls = "_convertToJS_closure";
  if (!"name" in _convertToJS_closure)
    _convertToJS_closure.name = "_convertToJS_closure";
  $desc = $collectedClasses._convertToJS_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _convertToJS_closure.prototype = $desc;
  function _convertToJS_closure0() {
  }
  _convertToJS_closure0.builtin$cls = "_convertToJS_closure0";
  if (!"name" in _convertToJS_closure0)
    _convertToJS_closure0.name = "_convertToJS_closure0";
  $desc = $collectedClasses._convertToJS_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _convertToJS_closure0.prototype = $desc;
  function _wrapToDart_closure() {
  }
  _wrapToDart_closure.builtin$cls = "_wrapToDart_closure";
  if (!"name" in _wrapToDart_closure)
    _wrapToDart_closure.name = "_wrapToDart_closure";
  $desc = $collectedClasses._wrapToDart_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _wrapToDart_closure.prototype = $desc;
  function _wrapToDart_closure0() {
  }
  _wrapToDart_closure0.builtin$cls = "_wrapToDart_closure0";
  if (!"name" in _wrapToDart_closure0)
    _wrapToDart_closure0.name = "_wrapToDart_closure0";
  $desc = $collectedClasses._wrapToDart_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _wrapToDart_closure0.prototype = $desc;
  function _wrapToDart_closure1() {
  }
  _wrapToDart_closure1.builtin$cls = "_wrapToDart_closure1";
  if (!"name" in _wrapToDart_closure1)
    _wrapToDart_closure1.name = "_wrapToDart_closure1";
  $desc = $collectedClasses._wrapToDart_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _wrapToDart_closure1.prototype = $desc;
  function _RectangleBase() {
  }
  _RectangleBase.builtin$cls = "_RectangleBase";
  if (!"name" in _RectangleBase)
    _RectangleBase.name = "_RectangleBase";
  $desc = $collectedClasses._RectangleBase;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _RectangleBase.prototype = $desc;
  function MutableRectangle(left, top, width, height) {
    this.left = left;
    this.top = top;
    this.width = width;
    this.height = height;
  }
  MutableRectangle.builtin$cls = "MutableRectangle";
  if (!"name" in MutableRectangle)
    MutableRectangle.name = "MutableRectangle";
  $desc = $collectedClasses.MutableRectangle;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MutableRectangle.prototype = $desc;
  MutableRectangle.prototype.get$left = function(receiver) {
    return this.left;
  };
  MutableRectangle.prototype.get$top = function(receiver) {
    return this.top;
  };
  MutableRectangle.prototype.get$width = function(receiver) {
    return this.width;
  };
  MutableRectangle.prototype.get$height = function(receiver) {
    return this.height;
  };
  function Mirror() {
  }
  Mirror.builtin$cls = "Mirror";
  if (!"name" in Mirror)
    Mirror.name = "Mirror";
  $desc = $collectedClasses.Mirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Mirror.prototype = $desc;
  function DeclarationMirror() {
  }
  DeclarationMirror.builtin$cls = "DeclarationMirror";
  if (!"name" in DeclarationMirror)
    DeclarationMirror.name = "DeclarationMirror";
  $desc = $collectedClasses.DeclarationMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DeclarationMirror.prototype = $desc;
  function InstanceMirror() {
  }
  InstanceMirror.builtin$cls = "InstanceMirror";
  if (!"name" in InstanceMirror)
    InstanceMirror.name = "InstanceMirror";
  $desc = $collectedClasses.InstanceMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  InstanceMirror.prototype = $desc;
  function LibraryMirror() {
  }
  LibraryMirror.builtin$cls = "LibraryMirror";
  if (!"name" in LibraryMirror)
    LibraryMirror.name = "LibraryMirror";
  $desc = $collectedClasses.LibraryMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LibraryMirror.prototype = $desc;
  function TypeMirror() {
  }
  TypeMirror.builtin$cls = "TypeMirror";
  if (!"name" in TypeMirror)
    TypeMirror.name = "TypeMirror";
  $desc = $collectedClasses.TypeMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TypeMirror.prototype = $desc;
  function ClassMirror() {
  }
  ClassMirror.builtin$cls = "ClassMirror";
  if (!"name" in ClassMirror)
    ClassMirror.name = "ClassMirror";
  $desc = $collectedClasses.ClassMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ClassMirror.prototype = $desc;
  function TypeVariableMirror() {
  }
  TypeVariableMirror.builtin$cls = "TypeVariableMirror";
  if (!"name" in TypeVariableMirror)
    TypeVariableMirror.name = "TypeVariableMirror";
  $desc = $collectedClasses.TypeVariableMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TypeVariableMirror.prototype = $desc;
  function MethodMirror() {
  }
  MethodMirror.builtin$cls = "MethodMirror";
  if (!"name" in MethodMirror)
    MethodMirror.name = "MethodMirror";
  $desc = $collectedClasses.MethodMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MethodMirror.prototype = $desc;
  function VariableMirror() {
  }
  VariableMirror.builtin$cls = "VariableMirror";
  if (!"name" in VariableMirror)
    VariableMirror.name = "VariableMirror";
  $desc = $collectedClasses.VariableMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  VariableMirror.prototype = $desc;
  function ParameterMirror() {
  }
  ParameterMirror.builtin$cls = "ParameterMirror";
  if (!"name" in ParameterMirror)
    ParameterMirror.name = "ParameterMirror";
  $desc = $collectedClasses.ParameterMirror;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ParameterMirror.prototype = $desc;
  function MirrorsUsed(symbols, targets, metaTargets, override) {
    this.symbols = symbols;
    this.targets = targets;
    this.metaTargets = metaTargets;
    this.override = override;
  }
  MirrorsUsed.builtin$cls = "MirrorsUsed";
  if (!"name" in MirrorsUsed)
    MirrorsUsed.name = "MirrorsUsed";
  $desc = $collectedClasses.MirrorsUsed;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MirrorsUsed.prototype = $desc;
  function DefaultEquality() {
  }
  DefaultEquality.builtin$cls = "DefaultEquality";
  if (!"name" in DefaultEquality)
    DefaultEquality.name = "DefaultEquality";
  $desc = $collectedClasses.DefaultEquality;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DefaultEquality.prototype = $desc;
  function ListEquality(_elementEquality) {
    this._elementEquality = _elementEquality;
  }
  ListEquality.builtin$cls = "ListEquality";
  if (!"name" in ListEquality)
    ListEquality.name = "ListEquality";
  $desc = $collectedClasses.ListEquality;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListEquality.prototype = $desc;
  function UnmodifiableMapView0(_base) {
    this._base = _base;
  }
  UnmodifiableMapView0.builtin$cls = "UnmodifiableMapView0";
  if (!"name" in UnmodifiableMapView0)
    UnmodifiableMapView0.name = "UnmodifiableMapView0";
  $desc = $collectedClasses.UnmodifiableMapView0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnmodifiableMapView0.prototype = $desc;
  function DelegatingMap_UnmodifiableMapMixin() {
  }
  DelegatingMap_UnmodifiableMapMixin.builtin$cls = "DelegatingMap_UnmodifiableMapMixin";
  if (!"name" in DelegatingMap_UnmodifiableMapMixin)
    DelegatingMap_UnmodifiableMapMixin.name = "DelegatingMap_UnmodifiableMapMixin";
  $desc = $collectedClasses.DelegatingMap_UnmodifiableMapMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DelegatingMap_UnmodifiableMapMixin.prototype = $desc;
  function UnmodifiableMapMixin() {
  }
  UnmodifiableMapMixin.builtin$cls = "UnmodifiableMapMixin";
  if (!"name" in UnmodifiableMapMixin)
    UnmodifiableMapMixin.name = "UnmodifiableMapMixin";
  $desc = $collectedClasses.UnmodifiableMapMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnmodifiableMapMixin.prototype = $desc;
  function DelegatingMap() {
  }
  DelegatingMap.builtin$cls = "DelegatingMap";
  if (!"name" in DelegatingMap)
    DelegatingMap.name = "DelegatingMap";
  $desc = $collectedClasses.DelegatingMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DelegatingMap.prototype = $desc;
  function NativeTypedArray() {
  }
  NativeTypedArray.builtin$cls = "NativeTypedArray";
  if (!"name" in NativeTypedArray)
    NativeTypedArray.name = "NativeTypedArray";
  $desc = $collectedClasses.NativeTypedArray;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeTypedArray.prototype = $desc;
  function NativeTypedArrayOfDouble() {
  }
  NativeTypedArrayOfDouble.builtin$cls = "NativeTypedArrayOfDouble";
  if (!"name" in NativeTypedArrayOfDouble)
    NativeTypedArrayOfDouble.name = "NativeTypedArrayOfDouble";
  $desc = $collectedClasses.NativeTypedArrayOfDouble;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeTypedArrayOfDouble.prototype = $desc;
  function NativeTypedArray_ListMixin() {
  }
  NativeTypedArray_ListMixin.builtin$cls = "NativeTypedArray_ListMixin";
  if (!"name" in NativeTypedArray_ListMixin)
    NativeTypedArray_ListMixin.name = "NativeTypedArray_ListMixin";
  $desc = $collectedClasses.NativeTypedArray_ListMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeTypedArray_ListMixin.prototype = $desc;
  function NativeTypedArray_ListMixin_FixedLengthListMixin() {
  }
  NativeTypedArray_ListMixin_FixedLengthListMixin.builtin$cls = "NativeTypedArray_ListMixin_FixedLengthListMixin";
  if (!"name" in NativeTypedArray_ListMixin_FixedLengthListMixin)
    NativeTypedArray_ListMixin_FixedLengthListMixin.name = "NativeTypedArray_ListMixin_FixedLengthListMixin";
  $desc = $collectedClasses.NativeTypedArray_ListMixin_FixedLengthListMixin;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = $desc;
  function NativeTypedArrayOfInt() {
  }
  NativeTypedArrayOfInt.builtin$cls = "NativeTypedArrayOfInt";
  if (!"name" in NativeTypedArrayOfInt)
    NativeTypedArrayOfInt.name = "NativeTypedArrayOfInt";
  $desc = $collectedClasses.NativeTypedArrayOfInt;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeTypedArrayOfInt.prototype = $desc;
  function NativeTypedArray_ListMixin0() {
  }
  NativeTypedArray_ListMixin0.builtin$cls = "NativeTypedArray_ListMixin0";
  if (!"name" in NativeTypedArray_ListMixin0)
    NativeTypedArray_ListMixin0.name = "NativeTypedArray_ListMixin0";
  $desc = $collectedClasses.NativeTypedArray_ListMixin0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeTypedArray_ListMixin0.prototype = $desc;
  function NativeTypedArray_ListMixin_FixedLengthListMixin0() {
  }
  NativeTypedArray_ListMixin_FixedLengthListMixin0.builtin$cls = "NativeTypedArray_ListMixin_FixedLengthListMixin0";
  if (!"name" in NativeTypedArray_ListMixin_FixedLengthListMixin0)
    NativeTypedArray_ListMixin_FixedLengthListMixin0.name = "NativeTypedArray_ListMixin_FixedLengthListMixin0";
  $desc = $collectedClasses.NativeTypedArray_ListMixin_FixedLengthListMixin0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NativeTypedArray_ListMixin_FixedLengthListMixin0.prototype = $desc;
  function _convertDartToNative_PrepareForStructuredClone_findSlot(values_1, copies_2) {
    this.values_1 = values_1;
    this.copies_2 = copies_2;
  }
  _convertDartToNative_PrepareForStructuredClone_findSlot.builtin$cls = "_convertDartToNative_PrepareForStructuredClone_findSlot";
  if (!"name" in _convertDartToNative_PrepareForStructuredClone_findSlot)
    _convertDartToNative_PrepareForStructuredClone_findSlot.name = "_convertDartToNative_PrepareForStructuredClone_findSlot";
  $desc = $collectedClasses._convertDartToNative_PrepareForStructuredClone_findSlot;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _convertDartToNative_PrepareForStructuredClone_findSlot.prototype = $desc;
  function _convertDartToNative_PrepareForStructuredClone_readSlot(copies_3) {
    this.copies_3 = copies_3;
  }
  _convertDartToNative_PrepareForStructuredClone_readSlot.builtin$cls = "_convertDartToNative_PrepareForStructuredClone_readSlot";
  if (!"name" in _convertDartToNative_PrepareForStructuredClone_readSlot)
    _convertDartToNative_PrepareForStructuredClone_readSlot.name = "_convertDartToNative_PrepareForStructuredClone_readSlot";
  $desc = $collectedClasses._convertDartToNative_PrepareForStructuredClone_readSlot;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _convertDartToNative_PrepareForStructuredClone_readSlot.prototype = $desc;
  function _convertDartToNative_PrepareForStructuredClone_writeSlot(copies_4) {
    this.copies_4 = copies_4;
  }
  _convertDartToNative_PrepareForStructuredClone_writeSlot.builtin$cls = "_convertDartToNative_PrepareForStructuredClone_writeSlot";
  if (!"name" in _convertDartToNative_PrepareForStructuredClone_writeSlot)
    _convertDartToNative_PrepareForStructuredClone_writeSlot.name = "_convertDartToNative_PrepareForStructuredClone_writeSlot";
  $desc = $collectedClasses._convertDartToNative_PrepareForStructuredClone_writeSlot;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _convertDartToNative_PrepareForStructuredClone_writeSlot.prototype = $desc;
  function _convertDartToNative_PrepareForStructuredClone_cleanupSlots() {
  }
  _convertDartToNative_PrepareForStructuredClone_cleanupSlots.builtin$cls = "_convertDartToNative_PrepareForStructuredClone_cleanupSlots";
  if (!"name" in _convertDartToNative_PrepareForStructuredClone_cleanupSlots)
    _convertDartToNative_PrepareForStructuredClone_cleanupSlots.name = "_convertDartToNative_PrepareForStructuredClone_cleanupSlots";
  $desc = $collectedClasses._convertDartToNative_PrepareForStructuredClone_cleanupSlots;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _convertDartToNative_PrepareForStructuredClone_cleanupSlots.prototype = $desc;
  function _convertDartToNative_PrepareForStructuredClone_walk(findSlot_5, readSlot_6, writeSlot_7) {
    this.findSlot_5 = findSlot_5;
    this.readSlot_6 = readSlot_6;
    this.writeSlot_7 = writeSlot_7;
  }
  _convertDartToNative_PrepareForStructuredClone_walk.builtin$cls = "_convertDartToNative_PrepareForStructuredClone_walk";
  if (!"name" in _convertDartToNative_PrepareForStructuredClone_walk)
    _convertDartToNative_PrepareForStructuredClone_walk.name = "_convertDartToNative_PrepareForStructuredClone_walk";
  $desc = $collectedClasses._convertDartToNative_PrepareForStructuredClone_walk;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _convertDartToNative_PrepareForStructuredClone_walk.prototype = $desc;
  function _convertDartToNative_PrepareForStructuredClone_walk_closure(box_0, walk_8) {
    this.box_0 = box_0;
    this.walk_8 = walk_8;
  }
  _convertDartToNative_PrepareForStructuredClone_walk_closure.builtin$cls = "_convertDartToNative_PrepareForStructuredClone_walk_closure";
  if (!"name" in _convertDartToNative_PrepareForStructuredClone_walk_closure)
    _convertDartToNative_PrepareForStructuredClone_walk_closure.name = "_convertDartToNative_PrepareForStructuredClone_walk_closure";
  $desc = $collectedClasses._convertDartToNative_PrepareForStructuredClone_walk_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _convertDartToNative_PrepareForStructuredClone_walk_closure.prototype = $desc;
  function convertNativeToDart_AcceptStructuredClone_findSlot(values_0, copies_1) {
    this.values_0 = values_0;
    this.copies_1 = copies_1;
  }
  convertNativeToDart_AcceptStructuredClone_findSlot.builtin$cls = "convertNativeToDart_AcceptStructuredClone_findSlot";
  if (!"name" in convertNativeToDart_AcceptStructuredClone_findSlot)
    convertNativeToDart_AcceptStructuredClone_findSlot.name = "convertNativeToDart_AcceptStructuredClone_findSlot";
  $desc = $collectedClasses.convertNativeToDart_AcceptStructuredClone_findSlot;
  if ($desc instanceof Array)
    $desc = $desc[1];
  convertNativeToDart_AcceptStructuredClone_findSlot.prototype = $desc;
  function convertNativeToDart_AcceptStructuredClone_readSlot(copies_2) {
    this.copies_2 = copies_2;
  }
  convertNativeToDart_AcceptStructuredClone_readSlot.builtin$cls = "convertNativeToDart_AcceptStructuredClone_readSlot";
  if (!"name" in convertNativeToDart_AcceptStructuredClone_readSlot)
    convertNativeToDart_AcceptStructuredClone_readSlot.name = "convertNativeToDart_AcceptStructuredClone_readSlot";
  $desc = $collectedClasses.convertNativeToDart_AcceptStructuredClone_readSlot;
  if ($desc instanceof Array)
    $desc = $desc[1];
  convertNativeToDart_AcceptStructuredClone_readSlot.prototype = $desc;
  function convertNativeToDart_AcceptStructuredClone_writeSlot(copies_3) {
    this.copies_3 = copies_3;
  }
  convertNativeToDart_AcceptStructuredClone_writeSlot.builtin$cls = "convertNativeToDart_AcceptStructuredClone_writeSlot";
  if (!"name" in convertNativeToDart_AcceptStructuredClone_writeSlot)
    convertNativeToDart_AcceptStructuredClone_writeSlot.name = "convertNativeToDart_AcceptStructuredClone_writeSlot";
  $desc = $collectedClasses.convertNativeToDart_AcceptStructuredClone_writeSlot;
  if ($desc instanceof Array)
    $desc = $desc[1];
  convertNativeToDart_AcceptStructuredClone_writeSlot.prototype = $desc;
  function convertNativeToDart_AcceptStructuredClone_walk(mustCopy_4, findSlot_5, readSlot_6, writeSlot_7) {
    this.mustCopy_4 = mustCopy_4;
    this.findSlot_5 = findSlot_5;
    this.readSlot_6 = readSlot_6;
    this.writeSlot_7 = writeSlot_7;
  }
  convertNativeToDart_AcceptStructuredClone_walk.builtin$cls = "convertNativeToDart_AcceptStructuredClone_walk";
  if (!"name" in convertNativeToDart_AcceptStructuredClone_walk)
    convertNativeToDart_AcceptStructuredClone_walk.name = "convertNativeToDart_AcceptStructuredClone_walk";
  $desc = $collectedClasses.convertNativeToDart_AcceptStructuredClone_walk;
  if ($desc instanceof Array)
    $desc = $desc[1];
  convertNativeToDart_AcceptStructuredClone_walk.prototype = $desc;
  function CssClassSetImpl() {
  }
  CssClassSetImpl.builtin$cls = "CssClassSetImpl";
  if (!"name" in CssClassSetImpl)
    CssClassSetImpl.name = "CssClassSetImpl";
  $desc = $collectedClasses.CssClassSetImpl;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CssClassSetImpl.prototype = $desc;
  function CssClassSetImpl_add_closure(value_0) {
    this.value_0 = value_0;
  }
  CssClassSetImpl_add_closure.builtin$cls = "CssClassSetImpl_add_closure";
  if (!"name" in CssClassSetImpl_add_closure)
    CssClassSetImpl_add_closure.name = "CssClassSetImpl_add_closure";
  $desc = $collectedClasses.CssClassSetImpl_add_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CssClassSetImpl_add_closure.prototype = $desc;
  function CssClassSetImpl_addAll_closure(iterable_0) {
    this.iterable_0 = iterable_0;
  }
  CssClassSetImpl_addAll_closure.builtin$cls = "CssClassSetImpl_addAll_closure";
  if (!"name" in CssClassSetImpl_addAll_closure)
    CssClassSetImpl_addAll_closure.name = "CssClassSetImpl_addAll_closure";
  $desc = $collectedClasses.CssClassSetImpl_addAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CssClassSetImpl_addAll_closure.prototype = $desc;
  function CssClassSetImpl_clear_closure() {
  }
  CssClassSetImpl_clear_closure.builtin$cls = "CssClassSetImpl_clear_closure";
  if (!"name" in CssClassSetImpl_clear_closure)
    CssClassSetImpl_clear_closure.name = "CssClassSetImpl_clear_closure";
  $desc = $collectedClasses.CssClassSetImpl_clear_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CssClassSetImpl_clear_closure.prototype = $desc;
  function FilteredElementList(_html_common$_node, _childNodes) {
    this._html_common$_node = _html_common$_node;
    this._childNodes = _childNodes;
  }
  FilteredElementList.builtin$cls = "FilteredElementList";
  if (!"name" in FilteredElementList)
    FilteredElementList.name = "FilteredElementList";
  $desc = $collectedClasses.FilteredElementList;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FilteredElementList.prototype = $desc;
  function FilteredElementList__filtered_closure() {
  }
  FilteredElementList__filtered_closure.builtin$cls = "FilteredElementList__filtered_closure";
  if (!"name" in FilteredElementList__filtered_closure)
    FilteredElementList__filtered_closure.name = "FilteredElementList__filtered_closure";
  $desc = $collectedClasses.FilteredElementList__filtered_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FilteredElementList__filtered_closure.prototype = $desc;
  function FilteredElementList_removeRange_closure() {
  }
  FilteredElementList_removeRange_closure.builtin$cls = "FilteredElementList_removeRange_closure";
  if (!"name" in FilteredElementList_removeRange_closure)
    FilteredElementList_removeRange_closure.name = "FilteredElementList_removeRange_closure";
  $desc = $collectedClasses.FilteredElementList_removeRange_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  FilteredElementList_removeRange_closure.prototype = $desc;
  function DocsLocation(packageName, libraryName, memberName, subMemberName, anchor) {
    this.packageName = packageName;
    this.libraryName = libraryName;
    this.memberName = memberName;
    this.subMemberName = subMemberName;
    this.anchor = anchor;
  }
  DocsLocation.builtin$cls = "DocsLocation";
  if (!"name" in DocsLocation)
    DocsLocation.name = "DocsLocation";
  $desc = $collectedClasses.DocsLocation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DocsLocation.prototype = $desc;
  DocsLocation.prototype.get$packageName = function() {
    return this.packageName;
  };
  DocsLocation.prototype.get$memberName = function() {
    return this.memberName;
  };
  DocsLocation.prototype.set$subMemberName = function(v) {
    return this.subMemberName = v;
  };
  DocsLocation.prototype.set$anchor = function(v) {
    return this.anchor = v;
  };
  function DocsLocation__extractPieces__check(box_0, uri_1) {
    this.box_0 = box_0;
    this.uri_1 = uri_1;
  }
  DocsLocation__extractPieces__check.builtin$cls = "DocsLocation__extractPieces__check";
  if (!"name" in DocsLocation__extractPieces__check)
    DocsLocation__extractPieces__check.name = "DocsLocation__extractPieces__check";
  $desc = $collectedClasses.DocsLocation__extractPieces__check;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DocsLocation__extractPieces__check.prototype = $desc;
  function DocsLocation_componentNames_closure() {
  }
  DocsLocation_componentNames_closure.builtin$cls = "DocsLocation_componentNames_closure";
  if (!"name" in DocsLocation_componentNames_closure)
    DocsLocation_componentNames_closure.name = "DocsLocation_componentNames_closure";
  $desc = $collectedClasses.DocsLocation_componentNames_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DocsLocation_componentNames_closure.prototype = $desc;
  function DocsLocation_itemFromList_closure() {
  }
  DocsLocation_itemFromList_closure.builtin$cls = "DocsLocation_itemFromList_closure";
  if (!"name" in DocsLocation_itemFromList_closure)
    DocsLocation_itemFromList_closure.name = "DocsLocation_itemFromList_closure";
  $desc = $collectedClasses.DocsLocation_itemFromList_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DocsLocation_itemFromList_closure.prototype = $desc;
  function DocsLocation_itemFromList_closure0() {
  }
  DocsLocation_itemFromList_closure0.builtin$cls = "DocsLocation_itemFromList_closure0";
  if (!"name" in DocsLocation_itemFromList_closure0)
    DocsLocation_itemFromList_closure0.name = "DocsLocation_itemFromList_closure0";
  $desc = $collectedClasses.DocsLocation_itemFromList_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DocsLocation_itemFromList_closure0.prototype = $desc;
  function Logger(name, parent, _level, _children, children, _logging$_controller) {
    this.name = name;
    this.parent = parent;
    this._level = _level;
    this._children = _children;
    this.children = children;
    this._logging$_controller = _logging$_controller;
  }
  Logger.builtin$cls = "Logger";
  if (!"name" in Logger)
    Logger.name = "Logger";
  $desc = $collectedClasses.Logger;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Logger.prototype = $desc;
  Logger.prototype.get$name = function(receiver) {
    return this.name;
  };
  Logger.prototype.get$parent = function(receiver) {
    return this.parent;
  };
  Logger.prototype.get$_children = function(receiver) {
    return this._children;
  };
  Logger.prototype.get$children = function(receiver) {
    return this.children;
  };
  function Logger_Logger_closure(name_0) {
    this.name_0 = name_0;
  }
  Logger_Logger_closure.builtin$cls = "Logger_Logger_closure";
  if (!"name" in Logger_Logger_closure)
    Logger_Logger_closure.name = "Logger_Logger_closure";
  $desc = $collectedClasses.Logger_Logger_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Logger_Logger_closure.prototype = $desc;
  function Level(name, value) {
    this.name = name;
    this.value = value;
  }
  Level.builtin$cls = "Level";
  if (!"name" in Level)
    Level.name = "Level";
  $desc = $collectedClasses.Level;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Level.prototype = $desc;
  Level.prototype.get$name = function(receiver) {
    return this.name;
  };
  Level.prototype.get$value = function(receiver) {
    return this.value;
  };
  function LogRecord(level, message, loggerName, time, sequenceNumber, error, stackTrace) {
    this.level = level;
    this.message = message;
    this.loggerName = loggerName;
    this.time = time;
    this.sequenceNumber = sequenceNumber;
    this.error = error;
    this.stackTrace = stackTrace;
  }
  LogRecord.builtin$cls = "LogRecord";
  if (!"name" in LogRecord)
    LogRecord.name = "LogRecord";
  $desc = $collectedClasses.LogRecord;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LogRecord.prototype = $desc;
  LogRecord.prototype.get$level = function() {
    return this.level;
  };
  LogRecord.prototype.get$message = function(receiver) {
    return this.message;
  };
  LogRecord.prototype.get$error = function(receiver) {
    return this.error;
  };
  LogRecord.prototype.get$stackTrace = function() {
    return this.stackTrace;
  };
  function SupportedBrowser(browserName, minimumVersion) {
    this.browserName = browserName;
    this.minimumVersion = minimumVersion;
  }
  SupportedBrowser.builtin$cls = "SupportedBrowser";
  if (!"name" in SupportedBrowser)
    SupportedBrowser.name = "SupportedBrowser";
  $desc = $collectedClasses.SupportedBrowser;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SupportedBrowser.prototype = $desc;
  function Experimental() {
  }
  Experimental.builtin$cls = "Experimental";
  if (!"name" in Experimental)
    Experimental.name = "Experimental";
  $desc = $collectedClasses.Experimental;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Experimental.prototype = $desc;
  function DomName(name) {
    this.name = name;
  }
  DomName.builtin$cls = "DomName";
  if (!"name" in DomName)
    DomName.name = "DomName";
  $desc = $collectedClasses.DomName;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DomName.prototype = $desc;
  DomName.prototype.get$name = function(receiver) {
    return this.name;
  };
  function DocsEditable() {
  }
  DocsEditable.builtin$cls = "DocsEditable";
  if (!"name" in DocsEditable)
    DocsEditable.name = "DocsEditable";
  $desc = $collectedClasses.DocsEditable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DocsEditable.prototype = $desc;
  function Unstable() {
  }
  Unstable.builtin$cls = "Unstable";
  if (!"name" in Unstable)
    Unstable.name = "Unstable";
  $desc = $collectedClasses.Unstable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Unstable.prototype = $desc;
  function Tag(name, kind) {
    this.name = name;
    this.kind = kind;
  }
  Tag.builtin$cls = "Tag";
  if (!"name" in Tag)
    Tag.name = "Tag";
  $desc = $collectedClasses.Tag;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Tag.prototype = $desc;
  Tag.prototype.get$name = function(receiver) {
    return this.name;
  };
  Tag.prototype.get$kind = function(receiver) {
    return this.kind;
  };
  function Node0(tag, anchor) {
    this.tag = tag;
    this.anchor = anchor;
  }
  Node0.builtin$cls = "Node0";
  if (!"name" in Node0)
    Node0.name = "Node0";
  $desc = $collectedClasses.Node0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Node0.prototype = $desc;
  Node0.prototype.set$tag = function(receiver, v) {
    return this.tag = v;
  };
  Node0.prototype.set$anchor = function(v) {
    return this.anchor = v;
  };
  function SequenceNode(content, tag, anchor) {
    this.content = content;
    this.tag = tag;
    this.anchor = anchor;
  }
  SequenceNode.builtin$cls = "SequenceNode";
  if (!"name" in SequenceNode)
    SequenceNode.name = "SequenceNode";
  $desc = $collectedClasses.SequenceNode;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SequenceNode.prototype = $desc;
  SequenceNode.prototype.get$content = function(receiver) {
    return this.content;
  };
  SequenceNode.prototype.set$content = function(receiver, v) {
    return this.content = v;
  };
  function SequenceNode_toString_closure() {
  }
  SequenceNode_toString_closure.builtin$cls = "SequenceNode_toString_closure";
  if (!"name" in SequenceNode_toString_closure)
    SequenceNode_toString_closure.name = "SequenceNode_toString_closure";
  $desc = $collectedClasses.SequenceNode_toString_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SequenceNode_toString_closure.prototype = $desc;
  function AliasNode(tag, anchor) {
    this.tag = tag;
    this.anchor = anchor;
  }
  AliasNode.builtin$cls = "AliasNode";
  if (!"name" in AliasNode)
    AliasNode.name = "AliasNode";
  $desc = $collectedClasses.AliasNode;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AliasNode.prototype = $desc;
  function ScalarNode(_model$_content, value, tag, anchor) {
    this._model$_content = _model$_content;
    this.value = value;
    this.tag = tag;
    this.anchor = anchor;
  }
  ScalarNode.builtin$cls = "ScalarNode";
  if (!"name" in ScalarNode)
    ScalarNode.name = "ScalarNode";
  $desc = $collectedClasses.ScalarNode;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ScalarNode.prototype = $desc;
  ScalarNode.prototype.get$value = function(receiver) {
    return this.value;
  };
  function ScalarNode_canonicalContent_closure(this_0) {
    this.this_0 = this_0;
  }
  ScalarNode_canonicalContent_closure.builtin$cls = "ScalarNode_canonicalContent_closure";
  if (!"name" in ScalarNode_canonicalContent_closure)
    ScalarNode_canonicalContent_closure.name = "ScalarNode_canonicalContent_closure";
  $desc = $collectedClasses.ScalarNode_canonicalContent_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ScalarNode_canonicalContent_closure.prototype = $desc;
  function MappingNode(content, tag, anchor) {
    this.content = content;
    this.tag = tag;
    this.anchor = anchor;
  }
  MappingNode.builtin$cls = "MappingNode";
  if (!"name" in MappingNode)
    MappingNode.name = "MappingNode";
  $desc = $collectedClasses.MappingNode;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MappingNode.prototype = $desc;
  MappingNode.prototype.get$content = function(receiver) {
    return this.content;
  };
  MappingNode.prototype.set$content = function(receiver, v) {
    return this.content = v;
  };
  function MappingNode_toString_closure(this_0) {
    this.this_0 = this_0;
  }
  MappingNode_toString_closure.builtin$cls = "MappingNode_toString_closure";
  if (!"name" in MappingNode_toString_closure)
    MappingNode_toString_closure.name = "MappingNode_toString_closure";
  $desc = $collectedClasses.MappingNode_toString_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MappingNode_toString_closure.prototype = $desc;
  function ObservableLocationHash(_currentHash, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this._currentHash = _currentHash;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  ObservableLocationHash.builtin$cls = "ObservableLocationHash";
  if (!"name" in ObservableLocationHash)
    ObservableLocationHash.name = "ObservableLocationHash";
  $desc = $collectedClasses.ObservableLocationHash;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObservableLocationHash.prototype = $desc;
  function ChangeNotifier() {
  }
  ChangeNotifier.builtin$cls = "ChangeNotifier";
  if (!"name" in ChangeNotifier)
    ChangeNotifier.name = "ChangeNotifier";
  $desc = $collectedClasses.ChangeNotifier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ChangeNotifier.prototype = $desc;
  function ChangeRecord() {
  }
  ChangeRecord.builtin$cls = "ChangeRecord";
  if (!"name" in ChangeRecord)
    ChangeRecord.name = "ChangeRecord";
  $desc = $collectedClasses.ChangeRecord;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ChangeRecord.prototype = $desc;
  function PropertyChangeRecord(object, name, oldValue, newValue) {
    this.object = object;
    this.name = name;
    this.oldValue = oldValue;
    this.newValue = newValue;
  }
  PropertyChangeRecord.builtin$cls = "PropertyChangeRecord";
  if (!"name" in PropertyChangeRecord)
    PropertyChangeRecord.name = "PropertyChangeRecord";
  $desc = $collectedClasses.PropertyChangeRecord;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PropertyChangeRecord.prototype = $desc;
  PropertyChangeRecord.prototype.get$object = function() {
    return this.object;
  };
  PropertyChangeRecord.prototype.get$name = function(receiver) {
    return this.name;
  };
  PropertyChangeRecord.prototype.get$oldValue = function(receiver) {
    return this.oldValue;
  };
  PropertyChangeRecord.prototype.get$newValue = function(receiver) {
    return this.newValue;
  };
  function CompoundPathObserver(_compound_path_observer$_observers, _compound_path_observer$_subs, _compound_path_observer$_value, _compound_path_observer$_computeValue, _started, _scheduled, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this._compound_path_observer$_observers = _compound_path_observer$_observers;
    this._compound_path_observer$_subs = _compound_path_observer$_subs;
    this._compound_path_observer$_value = _compound_path_observer$_value;
    this._compound_path_observer$_computeValue = _compound_path_observer$_computeValue;
    this._started = _started;
    this._scheduled = _scheduled;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  CompoundPathObserver.builtin$cls = "CompoundPathObserver";
  if (!"name" in CompoundPathObserver)
    CompoundPathObserver.name = "CompoundPathObserver";
  $desc = $collectedClasses.CompoundPathObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CompoundPathObserver.prototype = $desc;
  function CompoundPathObserver__resolve_closure() {
  }
  CompoundPathObserver__resolve_closure.builtin$cls = "CompoundPathObserver__resolve_closure";
  if (!"name" in CompoundPathObserver__resolve_closure)
    CompoundPathObserver__resolve_closure.name = "CompoundPathObserver__resolve_closure";
  $desc = $collectedClasses.CompoundPathObserver__resolve_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CompoundPathObserver__resolve_closure.prototype = $desc;
  function dirtyCheckZoneSpec_enqueueDirtyCheck(box_0) {
    this.box_0 = box_0;
  }
  dirtyCheckZoneSpec_enqueueDirtyCheck.builtin$cls = "dirtyCheckZoneSpec_enqueueDirtyCheck";
  if (!"name" in dirtyCheckZoneSpec_enqueueDirtyCheck)
    dirtyCheckZoneSpec_enqueueDirtyCheck.name = "dirtyCheckZoneSpec_enqueueDirtyCheck";
  $desc = $collectedClasses.dirtyCheckZoneSpec_enqueueDirtyCheck;
  if ($desc instanceof Array)
    $desc = $desc[1];
  dirtyCheckZoneSpec_enqueueDirtyCheck.prototype = $desc;
  function dirtyCheckZoneSpec_enqueueDirtyCheck_closure(box_0) {
    this.box_0 = box_0;
  }
  dirtyCheckZoneSpec_enqueueDirtyCheck_closure.builtin$cls = "dirtyCheckZoneSpec_enqueueDirtyCheck_closure";
  if (!"name" in dirtyCheckZoneSpec_enqueueDirtyCheck_closure)
    dirtyCheckZoneSpec_enqueueDirtyCheck_closure.name = "dirtyCheckZoneSpec_enqueueDirtyCheck_closure";
  $desc = $collectedClasses.dirtyCheckZoneSpec_enqueueDirtyCheck_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  dirtyCheckZoneSpec_enqueueDirtyCheck_closure.prototype = $desc;
  function dirtyCheckZoneSpec_wrapCallback(enqueueDirtyCheck_1) {
    this.enqueueDirtyCheck_1 = enqueueDirtyCheck_1;
  }
  dirtyCheckZoneSpec_wrapCallback.builtin$cls = "dirtyCheckZoneSpec_wrapCallback";
  if (!"name" in dirtyCheckZoneSpec_wrapCallback)
    dirtyCheckZoneSpec_wrapCallback.name = "dirtyCheckZoneSpec_wrapCallback";
  $desc = $collectedClasses.dirtyCheckZoneSpec_wrapCallback;
  if ($desc instanceof Array)
    $desc = $desc[1];
  dirtyCheckZoneSpec_wrapCallback.prototype = $desc;
  function dirtyCheckZoneSpec_wrapCallback_closure(enqueueDirtyCheck_2, parent_3, zone_4, f_5) {
    this.enqueueDirtyCheck_2 = enqueueDirtyCheck_2;
    this.parent_3 = parent_3;
    this.zone_4 = zone_4;
    this.f_5 = f_5;
  }
  dirtyCheckZoneSpec_wrapCallback_closure.builtin$cls = "dirtyCheckZoneSpec_wrapCallback_closure";
  if (!"name" in dirtyCheckZoneSpec_wrapCallback_closure)
    dirtyCheckZoneSpec_wrapCallback_closure.name = "dirtyCheckZoneSpec_wrapCallback_closure";
  $desc = $collectedClasses.dirtyCheckZoneSpec_wrapCallback_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  dirtyCheckZoneSpec_wrapCallback_closure.prototype = $desc;
  function dirtyCheckZoneSpec_wrapUnaryCallback(enqueueDirtyCheck_6) {
    this.enqueueDirtyCheck_6 = enqueueDirtyCheck_6;
  }
  dirtyCheckZoneSpec_wrapUnaryCallback.builtin$cls = "dirtyCheckZoneSpec_wrapUnaryCallback";
  if (!"name" in dirtyCheckZoneSpec_wrapUnaryCallback)
    dirtyCheckZoneSpec_wrapUnaryCallback.name = "dirtyCheckZoneSpec_wrapUnaryCallback";
  $desc = $collectedClasses.dirtyCheckZoneSpec_wrapUnaryCallback;
  if ($desc instanceof Array)
    $desc = $desc[1];
  dirtyCheckZoneSpec_wrapUnaryCallback.prototype = $desc;
  function dirtyCheckZoneSpec_wrapUnaryCallback_closure(enqueueDirtyCheck_7, parent_8, zone_9, f_10) {
    this.enqueueDirtyCheck_7 = enqueueDirtyCheck_7;
    this.parent_8 = parent_8;
    this.zone_9 = zone_9;
    this.f_10 = f_10;
  }
  dirtyCheckZoneSpec_wrapUnaryCallback_closure.builtin$cls = "dirtyCheckZoneSpec_wrapUnaryCallback_closure";
  if (!"name" in dirtyCheckZoneSpec_wrapUnaryCallback_closure)
    dirtyCheckZoneSpec_wrapUnaryCallback_closure.name = "dirtyCheckZoneSpec_wrapUnaryCallback_closure";
  $desc = $collectedClasses.dirtyCheckZoneSpec_wrapUnaryCallback_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  dirtyCheckZoneSpec_wrapUnaryCallback_closure.prototype = $desc;
  function ListChangeRecord(object, _unmodifiableRemoved, _removed, _list_diff$_index, _addedCount) {
    this.object = object;
    this._unmodifiableRemoved = _unmodifiableRemoved;
    this._removed = _removed;
    this._list_diff$_index = _list_diff$_index;
    this._addedCount = _addedCount;
  }
  ListChangeRecord.builtin$cls = "ListChangeRecord";
  if (!"name" in ListChangeRecord)
    ListChangeRecord.name = "ListChangeRecord";
  $desc = $collectedClasses.ListChangeRecord;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListChangeRecord.prototype = $desc;
  ListChangeRecord.prototype.get$object = function() {
    return this.object;
  };
  ListChangeRecord.prototype.get$_removed = function() {
    return this._removed;
  };
  function ObservableProperty() {
  }
  ObservableProperty.builtin$cls = "ObservableProperty";
  if (!"name" in ObservableProperty)
    ObservableProperty.name = "ObservableProperty";
  $desc = $collectedClasses.ObservableProperty;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObservableProperty.prototype = $desc;
  function Reflectable() {
  }
  Reflectable.builtin$cls = "Reflectable";
  if (!"name" in Reflectable)
    Reflectable.name = "Reflectable";
  $desc = $collectedClasses.Reflectable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Reflectable.prototype = $desc;
  function Observable() {
  }
  Observable.builtin$cls = "Observable";
  if (!"name" in Observable)
    Observable.name = "Observable";
  $desc = $collectedClasses.Observable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Observable.prototype = $desc;
  function Observable_deliverChanges_closure(box_0, this_1) {
    this.box_0 = box_0;
    this.this_1 = this_1;
  }
  Observable_deliverChanges_closure.builtin$cls = "Observable_deliverChanges_closure";
  if (!"name" in Observable_deliverChanges_closure)
    Observable_deliverChanges_closure.name = "Observable_deliverChanges_closure";
  $desc = $collectedClasses.Observable_deliverChanges_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Observable_deliverChanges_closure.prototype = $desc;
  function ObservableBox(_observable_box$_value, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this._observable_box$_value = _observable_box$_value;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  ObservableBox.builtin$cls = "ObservableBox";
  if (!"name" in ObservableBox)
    ObservableBox.name = "ObservableBox";
  $desc = $collectedClasses.ObservableBox;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObservableBox.prototype = $desc;
  function ObservableList(_listRecords, _listChanges, _list, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this._listRecords = _listRecords;
    this._listChanges = _listChanges;
    this._list = _list;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  ObservableList.builtin$cls = "ObservableList";
  if (!"name" in ObservableList)
    ObservableList.name = "ObservableList";
  $desc = $collectedClasses.ObservableList;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObservableList.prototype = $desc;
  function ListBase_ChangeNotifier() {
  }
  ListBase_ChangeNotifier.builtin$cls = "ListBase_ChangeNotifier";
  if (!"name" in ListBase_ChangeNotifier)
    ListBase_ChangeNotifier.name = "ListBase_ChangeNotifier";
  $desc = $collectedClasses.ListBase_ChangeNotifier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ListBase_ChangeNotifier.prototype = $desc;
  function ObservableList_listChanges_closure(this_0) {
    this.this_0 = this_0;
  }
  ObservableList_listChanges_closure.builtin$cls = "ObservableList_listChanges_closure";
  if (!"name" in ObservableList_listChanges_closure)
    ObservableList_listChanges_closure.name = "ObservableList_listChanges_closure";
  $desc = $collectedClasses.ObservableList_listChanges_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObservableList_listChanges_closure.prototype = $desc;
  function MapChangeRecord(key, oldValue, newValue, isInsert, isRemove) {
    this.key = key;
    this.oldValue = oldValue;
    this.newValue = newValue;
    this.isInsert = isInsert;
    this.isRemove = isRemove;
  }
  MapChangeRecord.builtin$cls = "MapChangeRecord";
  if (!"name" in MapChangeRecord)
    MapChangeRecord.name = "MapChangeRecord";
  $desc = $collectedClasses.MapChangeRecord;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MapChangeRecord.prototype = $desc;
  MapChangeRecord.prototype.get$key = function(receiver) {
    return this.key;
  };
  MapChangeRecord.prototype.get$oldValue = function(receiver) {
    return this.oldValue;
  };
  MapChangeRecord.prototype.get$newValue = function(receiver) {
    return this.newValue;
  };
  function ObservableMap(_observable_map$_map, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this._observable_map$_map = _observable_map$_map;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  ObservableMap.builtin$cls = "ObservableMap";
  if (!"name" in ObservableMap)
    ObservableMap.name = "ObservableMap";
  $desc = $collectedClasses.ObservableMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObservableMap.prototype = $desc;
  function ObservableMap_addAll_closure(this_0) {
    this.this_0 = this_0;
  }
  ObservableMap_addAll_closure.builtin$cls = "ObservableMap_addAll_closure";
  if (!"name" in ObservableMap_addAll_closure)
    ObservableMap_addAll_closure.name = "ObservableMap_addAll_closure";
  $desc = $collectedClasses.ObservableMap_addAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObservableMap_addAll_closure.prototype = $desc;
  function ObservableMap_clear_closure(this_0) {
    this.this_0 = this_0;
  }
  ObservableMap_clear_closure.builtin$cls = "ObservableMap_clear_closure";
  if (!"name" in ObservableMap_clear_closure)
    ObservableMap_clear_closure.name = "ObservableMap_clear_closure";
  $desc = $collectedClasses.ObservableMap_clear_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObservableMap_clear_closure.prototype = $desc;
  function PathObserver(path, _isValid, _segments, _values, _subs, _computeValue, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this.path = path;
    this._isValid = _isValid;
    this._segments = _segments;
    this._values = _values;
    this._subs = _subs;
    this._computeValue = _computeValue;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  PathObserver.builtin$cls = "PathObserver";
  if (!"name" in PathObserver)
    PathObserver.name = "PathObserver";
  $desc = $collectedClasses.PathObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PathObserver.prototype = $desc;
  PathObserver.prototype.get$path = function(receiver) {
    return this.path;
  };
  function PathObserver_closure() {
  }
  PathObserver_closure.builtin$cls = "PathObserver_closure";
  if (!"name" in PathObserver_closure)
    PathObserver_closure.name = "PathObserver_closure";
  $desc = $collectedClasses.PathObserver_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PathObserver_closure.prototype = $desc;
  function PathObserver__observeIndex_closure(this_0, i_1, segment_2) {
    this.this_0 = this_0;
    this.i_1 = i_1;
    this.segment_2 = segment_2;
  }
  PathObserver__observeIndex_closure.builtin$cls = "PathObserver__observeIndex_closure";
  if (!"name" in PathObserver__observeIndex_closure)
    PathObserver__observeIndex_closure.name = "PathObserver__observeIndex_closure";
  $desc = $collectedClasses.PathObserver__observeIndex_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PathObserver__observeIndex_closure.prototype = $desc;
  function PathObserver__observeIndex_closure0(this_3, i_4, segment_5) {
    this.this_3 = this_3;
    this.i_4 = i_4;
    this.segment_5 = segment_5;
  }
  PathObserver__observeIndex_closure0.builtin$cls = "PathObserver__observeIndex_closure0";
  if (!"name" in PathObserver__observeIndex_closure0)
    PathObserver__observeIndex_closure0.name = "PathObserver__observeIndex_closure0";
  $desc = $collectedClasses.PathObserver__observeIndex_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PathObserver__observeIndex_closure0.prototype = $desc;
  function closure1() {
  }
  closure1.builtin$cls = "closure1";
  if (!"name" in closure1)
    closure1.name = "closure1";
  $desc = $collectedClasses.closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure1.prototype = $desc;
  function _toObservableDeep_closure(result_0) {
    this.result_0 = result_0;
  }
  _toObservableDeep_closure.builtin$cls = "_toObservableDeep_closure";
  if (!"name" in _toObservableDeep_closure)
    _toObservableDeep_closure.name = "_toObservableDeep_closure";
  $desc = $collectedClasses._toObservableDeep_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _toObservableDeep_closure.prototype = $desc;
  function Parser(_s, _pos, _len, _line, _column, _inBareDocument, _farthestLine, _farthestColumn, _farthestPos, _farthestContext, _contextStack, _errorAnnotations, _capturedString, _captureStart, _capturingAs) {
    this._s = _s;
    this._pos = _pos;
    this._len = _len;
    this._line = _line;
    this._column = _column;
    this._inBareDocument = _inBareDocument;
    this._farthestLine = _farthestLine;
    this._farthestColumn = _farthestColumn;
    this._farthestPos = _farthestPos;
    this._farthestContext = _farthestContext;
    this._contextStack = _contextStack;
    this._errorAnnotations = _errorAnnotations;
    this._capturedString = _capturedString;
    this._captureStart = _captureStart;
    this._capturingAs = _capturingAs;
  }
  Parser.builtin$cls = "Parser";
  if (!"name" in Parser)
    Parser.name = "Parser";
  $desc = $collectedClasses.Parser;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser.prototype = $desc;
  function Parser_consumeChar_closure(char_0) {
    this.char_0 = char_0;
  }
  Parser_consumeChar_closure.builtin$cls = "Parser_consumeChar_closure";
  if (!"name" in Parser_consumeChar_closure)
    Parser_consumeChar_closure.name = "Parser_consumeChar_closure";
  $desc = $collectedClasses.Parser_consumeChar_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_consumeChar_closure.prototype = $desc;
  function Parser_nAtOnce_closure(this_1, n_2, matcher_3) {
    this.this_1 = this_1;
    this.n_2 = n_2;
    this.matcher_3 = matcher_3;
  }
  Parser_nAtOnce_closure.builtin$cls = "Parser_nAtOnce_closure";
  if (!"name" in Parser_nAtOnce_closure)
    Parser_nAtOnce_closure.name = "Parser_nAtOnce_closure";
  $desc = $collectedClasses.Parser_nAtOnce_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nAtOnce_closure.prototype = $desc;
  function Parser_nAtOnce__closure(box_0, matcher_4) {
    this.box_0 = box_0;
    this.matcher_4 = matcher_4;
  }
  Parser_nAtOnce__closure.builtin$cls = "Parser_nAtOnce__closure";
  if (!"name" in Parser_nAtOnce__closure)
    Parser_nAtOnce__closure.name = "Parser_nAtOnce__closure";
  $desc = $collectedClasses.Parser_nAtOnce__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nAtOnce__closure.prototype = $desc;
  function Parser_rawString_closure(str_0) {
    this.str_0 = str_0;
  }
  Parser_rawString_closure.builtin$cls = "Parser_rawString_closure";
  if (!"name" in Parser_rawString_closure)
    Parser_rawString_closure.name = "Parser_rawString_closure";
  $desc = $collectedClasses.Parser_rawString_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_rawString_closure.prototype = $desc;
  function Parser_captureAs_closure(replacement_0) {
    this.replacement_0 = replacement_0;
  }
  Parser_captureAs_closure.builtin$cls = "Parser_captureAs_closure";
  if (!"name" in Parser_captureAs_closure)
    Parser_captureAs_closure.name = "Parser_captureAs_closure";
  $desc = $collectedClasses.Parser_captureAs_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_captureAs_closure.prototype = $desc;
  function Parser_map_closure(content_0) {
    this.content_0 = content_0;
  }
  Parser_map_closure.builtin$cls = "Parser_map_closure";
  if (!"name" in Parser_map_closure)
    Parser_map_closure.name = "Parser_map_closure";
  $desc = $collectedClasses.Parser_map_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_map_closure.prototype = $desc;
  function Parser_annotateError_closure(box_0, this_1, fn_2) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.fn_2 = fn_2;
  }
  Parser_annotateError_closure.builtin$cls = "Parser_annotateError_closure";
  if (!"name" in Parser_annotateError_closure)
    Parser_annotateError_closure.name = "Parser_annotateError_closure";
  $desc = $collectedClasses.Parser_annotateError_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_annotateError_closure.prototype = $desc;
  function Parser_blockScalarAdditionalIndentation_closure(box_0, this_1) {
    this.box_0 = box_0;
    this.this_1 = this_1;
  }
  Parser_blockScalarAdditionalIndentation_closure.builtin$cls = "Parser_blockScalarAdditionalIndentation_closure";
  if (!"name" in Parser_blockScalarAdditionalIndentation_closure)
    Parser_blockScalarAdditionalIndentation_closure.name = "Parser_blockScalarAdditionalIndentation_closure";
  $desc = $collectedClasses.Parser_blockScalarAdditionalIndentation_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_blockScalarAdditionalIndentation_closure.prototype = $desc;
  function Parser_blockScalarAdditionalIndentation__closure(this_2) {
    this.this_2 = this_2;
  }
  Parser_blockScalarAdditionalIndentation__closure.builtin$cls = "Parser_blockScalarAdditionalIndentation__closure";
  if (!"name" in Parser_blockScalarAdditionalIndentation__closure)
    Parser_blockScalarAdditionalIndentation__closure.name = "Parser_blockScalarAdditionalIndentation__closure";
  $desc = $collectedClasses.Parser_blockScalarAdditionalIndentation__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_blockScalarAdditionalIndentation__closure.prototype = $desc;
  function Parser_blockScalarAdditionalIndentation___closure(this_3) {
    this.this_3 = this_3;
  }
  Parser_blockScalarAdditionalIndentation___closure.builtin$cls = "Parser_blockScalarAdditionalIndentation___closure";
  if (!"name" in Parser_blockScalarAdditionalIndentation___closure)
    Parser_blockScalarAdditionalIndentation___closure.name = "Parser_blockScalarAdditionalIndentation___closure";
  $desc = $collectedClasses.Parser_blockScalarAdditionalIndentation___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_blockScalarAdditionalIndentation___closure.prototype = $desc;
  function Parser_c_indicator_closure(this_0, type_1) {
    this.this_0 = this_0;
    this.type_1 = type_1;
  }
  Parser_c_indicator_closure.builtin$cls = "Parser_c_indicator_closure";
  if (!"name" in Parser_c_indicator_closure)
    Parser_c_indicator_closure.name = "Parser_c_indicator_closure";
  $desc = $collectedClasses.Parser_c_indicator_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_indicator_closure.prototype = $desc;
  function Parser_b_break_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_b_break_closure.builtin$cls = "Parser_b_break_closure";
  if (!"name" in Parser_b_break_closure)
    Parser_b_break_closure.name = "Parser_b_break_closure";
  $desc = $collectedClasses.Parser_b_break_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_b_break_closure.prototype = $desc;
  function Parser_b_asLineFeed_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_b_asLineFeed_closure.builtin$cls = "Parser_b_asLineFeed_closure";
  if (!"name" in Parser_b_asLineFeed_closure)
    Parser_b_asLineFeed_closure.name = "Parser_b_asLineFeed_closure";
  $desc = $collectedClasses.Parser_b_asLineFeed_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_b_asLineFeed_closure.prototype = $desc;
  function Parser_b_nonContent_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_b_nonContent_closure.builtin$cls = "Parser_b_nonContent_closure";
  if (!"name" in Parser_b_nonContent_closure)
    Parser_b_nonContent_closure.name = "Parser_b_nonContent_closure";
  $desc = $collectedClasses.Parser_b_nonContent_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_b_nonContent_closure.prototype = $desc;
  function Parser_c_escape_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_c_escape_closure.builtin$cls = "Parser_c_escape_closure";
  if (!"name" in Parser_c_escape_closure)
    Parser_c_escape_closure.name = "Parser_c_escape_closure";
  $desc = $collectedClasses.Parser_c_escape_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_escape_closure.prototype = $desc;
  function Parser_ns_escNull_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_ns_escNull_closure.builtin$cls = "Parser_ns_escNull_closure";
  if (!"name" in Parser_ns_escNull_closure)
    Parser_ns_escNull_closure.name = "Parser_ns_escNull_closure";
  $desc = $collectedClasses.Parser_ns_escNull_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escNull_closure.prototype = $desc;
  function Parser_ns_escBell_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_ns_escBell_closure.builtin$cls = "Parser_ns_escBell_closure";
  if (!"name" in Parser_ns_escBell_closure)
    Parser_ns_escBell_closure.name = "Parser_ns_escBell_closure";
  $desc = $collectedClasses.Parser_ns_escBell_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escBell_closure.prototype = $desc;
  function Parser_ns_escBackspace_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_ns_escBackspace_closure.builtin$cls = "Parser_ns_escBackspace_closure";
  if (!"name" in Parser_ns_escBackspace_closure)
    Parser_ns_escBackspace_closure.name = "Parser_ns_escBackspace_closure";
  $desc = $collectedClasses.Parser_ns_escBackspace_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escBackspace_closure.prototype = $desc;
  function Parser_ns_escHorizontalTab_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_ns_escHorizontalTab_closure.builtin$cls = "Parser_ns_escHorizontalTab_closure";
  if (!"name" in Parser_ns_escHorizontalTab_closure)
    Parser_ns_escHorizontalTab_closure.name = "Parser_ns_escHorizontalTab_closure";
  $desc = $collectedClasses.Parser_ns_escHorizontalTab_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escHorizontalTab_closure.prototype = $desc;
  function Parser_ns_escHorizontalTab__closure() {
  }
  Parser_ns_escHorizontalTab__closure.builtin$cls = "Parser_ns_escHorizontalTab__closure";
  if (!"name" in Parser_ns_escHorizontalTab__closure)
    Parser_ns_escHorizontalTab__closure.name = "Parser_ns_escHorizontalTab__closure";
  $desc = $collectedClasses.Parser_ns_escHorizontalTab__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escHorizontalTab__closure.prototype = $desc;
  function Parser_ns_escLineFeed_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_ns_escLineFeed_closure.builtin$cls = "Parser_ns_escLineFeed_closure";
  if (!"name" in Parser_ns_escLineFeed_closure)
    Parser_ns_escLineFeed_closure.name = "Parser_ns_escLineFeed_closure";
  $desc = $collectedClasses.Parser_ns_escLineFeed_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escLineFeed_closure.prototype = $desc;
  function Parser_ns_escVerticalTab_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_ns_escVerticalTab_closure.builtin$cls = "Parser_ns_escVerticalTab_closure";
  if (!"name" in Parser_ns_escVerticalTab_closure)
    Parser_ns_escVerticalTab_closure.name = "Parser_ns_escVerticalTab_closure";
  $desc = $collectedClasses.Parser_ns_escVerticalTab_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escVerticalTab_closure.prototype = $desc;
  function Parser_ns_escFormFeed_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_ns_escFormFeed_closure.builtin$cls = "Parser_ns_escFormFeed_closure";
  if (!"name" in Parser_ns_escFormFeed_closure)
    Parser_ns_escFormFeed_closure.name = "Parser_ns_escFormFeed_closure";
  $desc = $collectedClasses.Parser_ns_escFormFeed_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escFormFeed_closure.prototype = $desc;
  function Parser_ns_escCarriageReturn_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_ns_escCarriageReturn_closure.builtin$cls = "Parser_ns_escCarriageReturn_closure";
  if (!"name" in Parser_ns_escCarriageReturn_closure)
    Parser_ns_escCarriageReturn_closure.name = "Parser_ns_escCarriageReturn_closure";
  $desc = $collectedClasses.Parser_ns_escCarriageReturn_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escCarriageReturn_closure.prototype = $desc;
  function Parser_ns_escEscape_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_ns_escEscape_closure.builtin$cls = "Parser_ns_escEscape_closure";
  if (!"name" in Parser_ns_escEscape_closure)
    Parser_ns_escEscape_closure.name = "Parser_ns_escEscape_closure";
  $desc = $collectedClasses.Parser_ns_escEscape_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escEscape_closure.prototype = $desc;
  function Parser_ns_escNextLine_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_ns_escNextLine_closure.builtin$cls = "Parser_ns_escNextLine_closure";
  if (!"name" in Parser_ns_escNextLine_closure)
    Parser_ns_escNextLine_closure.name = "Parser_ns_escNextLine_closure";
  $desc = $collectedClasses.Parser_ns_escNextLine_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escNextLine_closure.prototype = $desc;
  function Parser_ns_escNonBreakingSpace_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_ns_escNonBreakingSpace_closure.builtin$cls = "Parser_ns_escNonBreakingSpace_closure";
  if (!"name" in Parser_ns_escNonBreakingSpace_closure)
    Parser_ns_escNonBreakingSpace_closure.name = "Parser_ns_escNonBreakingSpace_closure";
  $desc = $collectedClasses.Parser_ns_escNonBreakingSpace_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escNonBreakingSpace_closure.prototype = $desc;
  function Parser_ns_escLineSeparator_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_ns_escLineSeparator_closure.builtin$cls = "Parser_ns_escLineSeparator_closure";
  if (!"name" in Parser_ns_escLineSeparator_closure)
    Parser_ns_escLineSeparator_closure.name = "Parser_ns_escLineSeparator_closure";
  $desc = $collectedClasses.Parser_ns_escLineSeparator_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escLineSeparator_closure.prototype = $desc;
  function Parser_ns_escParagraphSeparator_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_ns_escParagraphSeparator_closure.builtin$cls = "Parser_ns_escParagraphSeparator_closure";
  if (!"name" in Parser_ns_escParagraphSeparator_closure)
    Parser_ns_escParagraphSeparator_closure.name = "Parser_ns_escParagraphSeparator_closure";
  $desc = $collectedClasses.Parser_ns_escParagraphSeparator_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escParagraphSeparator_closure.prototype = $desc;
  function Parser_ns_escNBit_closure(this_0, char_1) {
    this.this_0 = this_0;
    this.char_1 = char_1;
  }
  Parser_ns_escNBit_closure.builtin$cls = "Parser_ns_escNBit_closure";
  if (!"name" in Parser_ns_escNBit_closure)
    Parser_ns_escNBit_closure.name = "Parser_ns_escNBit_closure";
  $desc = $collectedClasses.Parser_ns_escNBit_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escNBit_closure.prototype = $desc;
  function Parser_ns_escNBit_closure0(this_2, digits_3) {
    this.this_2 = this_2;
    this.digits_3 = digits_3;
  }
  Parser_ns_escNBit_closure0.builtin$cls = "Parser_ns_escNBit_closure0";
  if (!"name" in Parser_ns_escNBit_closure0)
    Parser_ns_escNBit_closure0.name = "Parser_ns_escNBit_closure0";
  $desc = $collectedClasses.Parser_ns_escNBit_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escNBit_closure0.prototype = $desc;
  function Parser_ns_escNBit__closure(this_4) {
    this.this_4 = this_4;
  }
  Parser_ns_escNBit__closure.builtin$cls = "Parser_ns_escNBit__closure";
  if (!"name" in Parser_ns_escNBit__closure)
    Parser_ns_escNBit__closure.name = "Parser_ns_escNBit__closure";
  $desc = $collectedClasses.Parser_ns_escNBit__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escNBit__closure.prototype = $desc;
  function Parser_ns_escNBit_closure1() {
  }
  Parser_ns_escNBit_closure1.builtin$cls = "Parser_ns_escNBit_closure1";
  if (!"name" in Parser_ns_escNBit_closure1)
    Parser_ns_escNBit_closure1.name = "Parser_ns_escNBit_closure1";
  $desc = $collectedClasses.Parser_ns_escNBit_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_escNBit_closure1.prototype = $desc;
  function Parser_c_ns_escChar_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_c_ns_escChar_closure.builtin$cls = "Parser_c_ns_escChar_closure";
  if (!"name" in Parser_c_ns_escChar_closure)
    Parser_c_ns_escChar_closure.name = "Parser_c_ns_escChar_closure";
  $desc = $collectedClasses.Parser_c_ns_escChar_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_ns_escChar_closure.prototype = $desc;
  function Parser_c_ns_escChar__closure(this_1) {
    this.this_1 = this_1;
  }
  Parser_c_ns_escChar__closure.builtin$cls = "Parser_c_ns_escChar__closure";
  if (!"name" in Parser_c_ns_escChar__closure)
    Parser_c_ns_escChar__closure.name = "Parser_c_ns_escChar__closure";
  $desc = $collectedClasses.Parser_c_ns_escChar__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_ns_escChar__closure.prototype = $desc;
  function Parser_s_indent_closure() {
  }
  Parser_s_indent_closure.builtin$cls = "Parser_s_indent_closure";
  if (!"name" in Parser_s_indent_closure)
    Parser_s_indent_closure.name = "Parser_s_indent_closure";
  $desc = $collectedClasses.Parser_s_indent_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_indent_closure.prototype = $desc;
  function Parser_s_indent_closure0(this_0) {
    this.this_0 = this_0;
  }
  Parser_s_indent_closure0.builtin$cls = "Parser_s_indent_closure0";
  if (!"name" in Parser_s_indent_closure0)
    Parser_s_indent_closure0.name = "Parser_s_indent_closure0";
  $desc = $collectedClasses.Parser_s_indent_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_indent_closure0.prototype = $desc;
  function Parser_s_indent__closure(this_1) {
    this.this_1 = this_1;
  }
  Parser_s_indent__closure.builtin$cls = "Parser_s_indent__closure";
  if (!"name" in Parser_s_indent__closure)
    Parser_s_indent__closure.name = "Parser_s_indent__closure";
  $desc = $collectedClasses.Parser_s_indent__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_indent__closure.prototype = $desc;
  function Parser_s_indentLessThan_closure(box_0, this_1, indent_2) {
    this.box_0 = box_0;
    this.this_1 = this_1;
    this.indent_2 = indent_2;
  }
  Parser_s_indentLessThan_closure.builtin$cls = "Parser_s_indentLessThan_closure";
  if (!"name" in Parser_s_indentLessThan_closure)
    Parser_s_indentLessThan_closure.name = "Parser_s_indentLessThan_closure";
  $desc = $collectedClasses.Parser_s_indentLessThan_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_indentLessThan_closure.prototype = $desc;
  function Parser_s_separateInLine_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_s_separateInLine_closure.builtin$cls = "Parser_s_separateInLine_closure";
  if (!"name" in Parser_s_separateInLine_closure)
    Parser_s_separateInLine_closure.name = "Parser_s_separateInLine_closure";
  $desc = $collectedClasses.Parser_s_separateInLine_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_separateInLine_closure.prototype = $desc;
  function Parser_s_separateInLine__closure(this_1) {
    this.this_1 = this_1;
  }
  Parser_s_separateInLine__closure.builtin$cls = "Parser_s_separateInLine__closure";
  if (!"name" in Parser_s_separateInLine__closure)
    Parser_s_separateInLine__closure.name = "Parser_s_separateInLine__closure";
  $desc = $collectedClasses.Parser_s_separateInLine__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_separateInLine__closure.prototype = $desc;
  function Parser_s_separateInLine___closure(this_2) {
    this.this_2 = this_2;
  }
  Parser_s_separateInLine___closure.builtin$cls = "Parser_s_separateInLine___closure";
  if (!"name" in Parser_s_separateInLine___closure)
    Parser_s_separateInLine___closure.name = "Parser_s_separateInLine___closure";
  $desc = $collectedClasses.Parser_s_separateInLine___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_separateInLine___closure.prototype = $desc;
  function Parser_s_linePrefix_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_s_linePrefix_closure.builtin$cls = "Parser_s_linePrefix_closure";
  if (!"name" in Parser_s_linePrefix_closure)
    Parser_s_linePrefix_closure.name = "Parser_s_linePrefix_closure";
  $desc = $collectedClasses.Parser_s_linePrefix_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_linePrefix_closure.prototype = $desc;
  function Parser_s_flowLinePrefix_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_s_flowLinePrefix_closure.builtin$cls = "Parser_s_flowLinePrefix_closure";
  if (!"name" in Parser_s_flowLinePrefix_closure)
    Parser_s_flowLinePrefix_closure.name = "Parser_s_flowLinePrefix_closure";
  $desc = $collectedClasses.Parser_s_flowLinePrefix_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_flowLinePrefix_closure.prototype = $desc;
  function Parser_l_empty_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_l_empty_closure.builtin$cls = "Parser_l_empty_closure";
  if (!"name" in Parser_l_empty_closure)
    Parser_l_empty_closure.name = "Parser_l_empty_closure";
  $desc = $collectedClasses.Parser_l_empty_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_empty_closure.prototype = $desc;
  function Parser_l_empty__closure(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_l_empty__closure.builtin$cls = "Parser_l_empty__closure";
  if (!"name" in Parser_l_empty__closure)
    Parser_l_empty__closure.name = "Parser_l_empty__closure";
  $desc = $collectedClasses.Parser_l_empty__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_empty__closure.prototype = $desc;
  function Parser_l_empty__closure0(this_6, indent_7) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
  }
  Parser_l_empty__closure0.builtin$cls = "Parser_l_empty__closure0";
  if (!"name" in Parser_l_empty__closure0)
    Parser_l_empty__closure0.name = "Parser_l_empty__closure0";
  $desc = $collectedClasses.Parser_l_empty__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_empty__closure0.prototype = $desc;
  function Parser_b_asSpace_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_b_asSpace_closure.builtin$cls = "Parser_b_asSpace_closure";
  if (!"name" in Parser_b_asSpace_closure)
    Parser_b_asSpace_closure.name = "Parser_b_asSpace_closure";
  $desc = $collectedClasses.Parser_b_asSpace_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_b_asSpace_closure.prototype = $desc;
  function Parser_b_l_trimmed_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_b_l_trimmed_closure.builtin$cls = "Parser_b_l_trimmed_closure";
  if (!"name" in Parser_b_l_trimmed_closure)
    Parser_b_l_trimmed_closure.name = "Parser_b_l_trimmed_closure";
  $desc = $collectedClasses.Parser_b_l_trimmed_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_b_l_trimmed_closure.prototype = $desc;
  function Parser_b_l_trimmed__closure(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_b_l_trimmed__closure.builtin$cls = "Parser_b_l_trimmed__closure";
  if (!"name" in Parser_b_l_trimmed__closure)
    Parser_b_l_trimmed__closure.name = "Parser_b_l_trimmed__closure";
  $desc = $collectedClasses.Parser_b_l_trimmed__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_b_l_trimmed__closure.prototype = $desc;
  function Parser_b_l_trimmed___closure(this_6, indent_7, ctx_8) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
    this.ctx_8 = ctx_8;
  }
  Parser_b_l_trimmed___closure.builtin$cls = "Parser_b_l_trimmed___closure";
  if (!"name" in Parser_b_l_trimmed___closure)
    Parser_b_l_trimmed___closure.name = "Parser_b_l_trimmed___closure";
  $desc = $collectedClasses.Parser_b_l_trimmed___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_b_l_trimmed___closure.prototype = $desc;
  function Parser_b_l_folded_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_b_l_folded_closure.builtin$cls = "Parser_b_l_folded_closure";
  if (!"name" in Parser_b_l_folded_closure)
    Parser_b_l_folded_closure.name = "Parser_b_l_folded_closure";
  $desc = $collectedClasses.Parser_b_l_folded_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_b_l_folded_closure.prototype = $desc;
  function Parser_s_flowFolded_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_s_flowFolded_closure.builtin$cls = "Parser_s_flowFolded_closure";
  if (!"name" in Parser_s_flowFolded_closure)
    Parser_s_flowFolded_closure.name = "Parser_s_flowFolded_closure";
  $desc = $collectedClasses.Parser_s_flowFolded_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_flowFolded_closure.prototype = $desc;
  function Parser_c_nb_commentText_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_c_nb_commentText_closure.builtin$cls = "Parser_c_nb_commentText_closure";
  if (!"name" in Parser_c_nb_commentText_closure)
    Parser_c_nb_commentText_closure.name = "Parser_c_nb_commentText_closure";
  $desc = $collectedClasses.Parser_c_nb_commentText_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_nb_commentText_closure.prototype = $desc;
  function Parser_l_comment_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_l_comment_closure.builtin$cls = "Parser_l_comment_closure";
  if (!"name" in Parser_l_comment_closure)
    Parser_l_comment_closure.name = "Parser_l_comment_closure";
  $desc = $collectedClasses.Parser_l_comment_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_comment_closure.prototype = $desc;
  function Parser_s_separateLines_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_s_separateLines_closure.builtin$cls = "Parser_s_separateLines_closure";
  if (!"name" in Parser_s_separateLines_closure)
    Parser_s_separateLines_closure.name = "Parser_s_separateLines_closure";
  $desc = $collectedClasses.Parser_s_separateLines_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_separateLines_closure.prototype = $desc;
  function Parser_c_ns_properties_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_c_ns_properties_closure.builtin$cls = "Parser_c_ns_properties_closure";
  if (!"name" in Parser_c_ns_properties_closure)
    Parser_c_ns_properties_closure.name = "Parser_c_ns_properties_closure";
  $desc = $collectedClasses.Parser_c_ns_properties_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_ns_properties_closure.prototype = $desc;
  function Parser_c_ns_properties_closure0(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_c_ns_properties_closure0.builtin$cls = "Parser_c_ns_properties_closure0";
  if (!"name" in Parser_c_ns_properties_closure0)
    Parser_c_ns_properties_closure0.name = "Parser_c_ns_properties_closure0";
  $desc = $collectedClasses.Parser_c_ns_properties_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_ns_properties_closure0.prototype = $desc;
  function Parser_ns_anchorName_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_ns_anchorName_closure.builtin$cls = "Parser_ns_anchorName_closure";
  if (!"name" in Parser_ns_anchorName_closure)
    Parser_ns_anchorName_closure.name = "Parser_ns_anchorName_closure";
  $desc = $collectedClasses.Parser_ns_anchorName_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_anchorName_closure.prototype = $desc;
  function Parser_ns_anchorName__closure(this_1) {
    this.this_1 = this_1;
  }
  Parser_ns_anchorName__closure.builtin$cls = "Parser_ns_anchorName__closure";
  if (!"name" in Parser_ns_anchorName__closure)
    Parser_ns_anchorName__closure.name = "Parser_ns_anchorName__closure";
  $desc = $collectedClasses.Parser_ns_anchorName__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_anchorName__closure.prototype = $desc;
  function Parser_nb_doubleChar_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_nb_doubleChar_closure.builtin$cls = "Parser_nb_doubleChar_closure";
  if (!"name" in Parser_nb_doubleChar_closure)
    Parser_nb_doubleChar_closure.name = "Parser_nb_doubleChar_closure";
  $desc = $collectedClasses.Parser_nb_doubleChar_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_doubleChar_closure.prototype = $desc;
  function Parser_nb_doubleChar__closure(this_1) {
    this.this_1 = this_1;
  }
  Parser_nb_doubleChar__closure.builtin$cls = "Parser_nb_doubleChar__closure";
  if (!"name" in Parser_nb_doubleChar__closure)
    Parser_nb_doubleChar__closure.name = "Parser_nb_doubleChar__closure";
  $desc = $collectedClasses.Parser_nb_doubleChar__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_doubleChar__closure.prototype = $desc;
  function Parser_c_doubleQuoted_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_c_doubleQuoted_closure.builtin$cls = "Parser_c_doubleQuoted_closure";
  if (!"name" in Parser_c_doubleQuoted_closure)
    Parser_c_doubleQuoted_closure.name = "Parser_c_doubleQuoted_closure";
  $desc = $collectedClasses.Parser_c_doubleQuoted_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_doubleQuoted_closure.prototype = $desc;
  function Parser_c_doubleQuoted__closure(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_c_doubleQuoted__closure.builtin$cls = "Parser_c_doubleQuoted__closure";
  if (!"name" in Parser_c_doubleQuoted__closure)
    Parser_c_doubleQuoted__closure.name = "Parser_c_doubleQuoted__closure";
  $desc = $collectedClasses.Parser_c_doubleQuoted__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_doubleQuoted__closure.prototype = $desc;
  function Parser_nb_doubleText_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_nb_doubleText_closure.builtin$cls = "Parser_nb_doubleText_closure";
  if (!"name" in Parser_nb_doubleText_closure)
    Parser_nb_doubleText_closure.name = "Parser_nb_doubleText_closure";
  $desc = $collectedClasses.Parser_nb_doubleText_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_doubleText_closure.prototype = $desc;
  function Parser_s_doubleEscaped_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_s_doubleEscaped_closure.builtin$cls = "Parser_s_doubleEscaped_closure";
  if (!"name" in Parser_s_doubleEscaped_closure)
    Parser_s_doubleEscaped_closure.name = "Parser_s_doubleEscaped_closure";
  $desc = $collectedClasses.Parser_s_doubleEscaped_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_doubleEscaped_closure.prototype = $desc;
  function Parser_s_doubleEscaped__closure(this_2) {
    this.this_2 = this_2;
  }
  Parser_s_doubleEscaped__closure.builtin$cls = "Parser_s_doubleEscaped__closure";
  if (!"name" in Parser_s_doubleEscaped__closure)
    Parser_s_doubleEscaped__closure.name = "Parser_s_doubleEscaped__closure";
  $desc = $collectedClasses.Parser_s_doubleEscaped__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_doubleEscaped__closure.prototype = $desc;
  function Parser_s_doubleEscaped__closure0(this_3) {
    this.this_3 = this_3;
  }
  Parser_s_doubleEscaped__closure0.builtin$cls = "Parser_s_doubleEscaped__closure0";
  if (!"name" in Parser_s_doubleEscaped__closure0)
    Parser_s_doubleEscaped__closure0.name = "Parser_s_doubleEscaped__closure0";
  $desc = $collectedClasses.Parser_s_doubleEscaped__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_doubleEscaped__closure0.prototype = $desc;
  function Parser_s_doubleEscaped__closure1(this_4, indent_5) {
    this.this_4 = this_4;
    this.indent_5 = indent_5;
  }
  Parser_s_doubleEscaped__closure1.builtin$cls = "Parser_s_doubleEscaped__closure1";
  if (!"name" in Parser_s_doubleEscaped__closure1)
    Parser_s_doubleEscaped__closure1.name = "Parser_s_doubleEscaped__closure1";
  $desc = $collectedClasses.Parser_s_doubleEscaped__closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_doubleEscaped__closure1.prototype = $desc;
  function Parser_s_doubleEscaped___closure(this_6, indent_7) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
  }
  Parser_s_doubleEscaped___closure.builtin$cls = "Parser_s_doubleEscaped___closure";
  if (!"name" in Parser_s_doubleEscaped___closure)
    Parser_s_doubleEscaped___closure.name = "Parser_s_doubleEscaped___closure";
  $desc = $collectedClasses.Parser_s_doubleEscaped___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_doubleEscaped___closure.prototype = $desc;
  function Parser_s_doubleBreak_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_s_doubleBreak_closure.builtin$cls = "Parser_s_doubleBreak_closure";
  if (!"name" in Parser_s_doubleBreak_closure)
    Parser_s_doubleBreak_closure.name = "Parser_s_doubleBreak_closure";
  $desc = $collectedClasses.Parser_s_doubleBreak_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_doubleBreak_closure.prototype = $desc;
  function Parser_s_doubleBreak_closure0(this_2, indent_3) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
  }
  Parser_s_doubleBreak_closure0.builtin$cls = "Parser_s_doubleBreak_closure0";
  if (!"name" in Parser_s_doubleBreak_closure0)
    Parser_s_doubleBreak_closure0.name = "Parser_s_doubleBreak_closure0";
  $desc = $collectedClasses.Parser_s_doubleBreak_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_doubleBreak_closure0.prototype = $desc;
  function Parser_nb_ns_doubleInLine_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_nb_ns_doubleInLine_closure.builtin$cls = "Parser_nb_ns_doubleInLine_closure";
  if (!"name" in Parser_nb_ns_doubleInLine_closure)
    Parser_nb_ns_doubleInLine_closure.name = "Parser_nb_ns_doubleInLine_closure";
  $desc = $collectedClasses.Parser_nb_ns_doubleInLine_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_ns_doubleInLine_closure.prototype = $desc;
  function Parser_nb_ns_doubleInLine__closure(this_1) {
    this.this_1 = this_1;
  }
  Parser_nb_ns_doubleInLine__closure.builtin$cls = "Parser_nb_ns_doubleInLine__closure";
  if (!"name" in Parser_nb_ns_doubleInLine__closure)
    Parser_nb_ns_doubleInLine__closure.name = "Parser_nb_ns_doubleInLine__closure";
  $desc = $collectedClasses.Parser_nb_ns_doubleInLine__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_ns_doubleInLine__closure.prototype = $desc;
  function Parser_nb_ns_doubleInLine___closure(this_2) {
    this.this_2 = this_2;
  }
  Parser_nb_ns_doubleInLine___closure.builtin$cls = "Parser_nb_ns_doubleInLine___closure";
  if (!"name" in Parser_nb_ns_doubleInLine___closure)
    Parser_nb_ns_doubleInLine___closure.name = "Parser_nb_ns_doubleInLine___closure";
  $desc = $collectedClasses.Parser_nb_ns_doubleInLine___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_ns_doubleInLine___closure.prototype = $desc;
  function Parser_s_doubleNextLine_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_s_doubleNextLine_closure.builtin$cls = "Parser_s_doubleNextLine_closure";
  if (!"name" in Parser_s_doubleNextLine_closure)
    Parser_s_doubleNextLine_closure.name = "Parser_s_doubleNextLine_closure";
  $desc = $collectedClasses.Parser_s_doubleNextLine_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_doubleNextLine_closure.prototype = $desc;
  function Parser_s_doubleNextLine__closure(this_2, indent_3) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
  }
  Parser_s_doubleNextLine__closure.builtin$cls = "Parser_s_doubleNextLine__closure";
  if (!"name" in Parser_s_doubleNextLine__closure)
    Parser_s_doubleNextLine__closure.name = "Parser_s_doubleNextLine__closure";
  $desc = $collectedClasses.Parser_s_doubleNextLine__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_doubleNextLine__closure.prototype = $desc;
  function Parser_s_doubleNextLine__closure0(this_4) {
    this.this_4 = this_4;
  }
  Parser_s_doubleNextLine__closure0.builtin$cls = "Parser_s_doubleNextLine__closure0";
  if (!"name" in Parser_s_doubleNextLine__closure0)
    Parser_s_doubleNextLine__closure0.name = "Parser_s_doubleNextLine__closure0";
  $desc = $collectedClasses.Parser_s_doubleNextLine__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_doubleNextLine__closure0.prototype = $desc;
  function Parser_s_doubleNextLine___closure(this_5) {
    this.this_5 = this_5;
  }
  Parser_s_doubleNextLine___closure.builtin$cls = "Parser_s_doubleNextLine___closure";
  if (!"name" in Parser_s_doubleNextLine___closure)
    Parser_s_doubleNextLine___closure.name = "Parser_s_doubleNextLine___closure";
  $desc = $collectedClasses.Parser_s_doubleNextLine___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_doubleNextLine___closure.prototype = $desc;
  function Parser_nb_doubleMultiLine_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_nb_doubleMultiLine_closure.builtin$cls = "Parser_nb_doubleMultiLine_closure";
  if (!"name" in Parser_nb_doubleMultiLine_closure)
    Parser_nb_doubleMultiLine_closure.name = "Parser_nb_doubleMultiLine_closure";
  $desc = $collectedClasses.Parser_nb_doubleMultiLine_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_doubleMultiLine_closure.prototype = $desc;
  function Parser_nb_doubleMultiLine_closure0(this_2) {
    this.this_2 = this_2;
  }
  Parser_nb_doubleMultiLine_closure0.builtin$cls = "Parser_nb_doubleMultiLine_closure0";
  if (!"name" in Parser_nb_doubleMultiLine_closure0)
    Parser_nb_doubleMultiLine_closure0.name = "Parser_nb_doubleMultiLine_closure0";
  $desc = $collectedClasses.Parser_nb_doubleMultiLine_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_doubleMultiLine_closure0.prototype = $desc;
  function Parser_nb_doubleMultiLine__closure(this_3) {
    this.this_3 = this_3;
  }
  Parser_nb_doubleMultiLine__closure.builtin$cls = "Parser_nb_doubleMultiLine__closure";
  if (!"name" in Parser_nb_doubleMultiLine__closure)
    Parser_nb_doubleMultiLine__closure.name = "Parser_nb_doubleMultiLine__closure";
  $desc = $collectedClasses.Parser_nb_doubleMultiLine__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_doubleMultiLine__closure.prototype = $desc;
  function Parser_c_quotedQuote_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_c_quotedQuote_closure.builtin$cls = "Parser_c_quotedQuote_closure";
  if (!"name" in Parser_c_quotedQuote_closure)
    Parser_c_quotedQuote_closure.name = "Parser_c_quotedQuote_closure";
  $desc = $collectedClasses.Parser_c_quotedQuote_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_quotedQuote_closure.prototype = $desc;
  function Parser_nb_singleChar_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_nb_singleChar_closure.builtin$cls = "Parser_nb_singleChar_closure";
  if (!"name" in Parser_nb_singleChar_closure)
    Parser_nb_singleChar_closure.name = "Parser_nb_singleChar_closure";
  $desc = $collectedClasses.Parser_nb_singleChar_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_singleChar_closure.prototype = $desc;
  function Parser_nb_singleChar__closure(this_1) {
    this.this_1 = this_1;
  }
  Parser_nb_singleChar__closure.builtin$cls = "Parser_nb_singleChar__closure";
  if (!"name" in Parser_nb_singleChar__closure)
    Parser_nb_singleChar__closure.name = "Parser_nb_singleChar__closure";
  $desc = $collectedClasses.Parser_nb_singleChar__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_singleChar__closure.prototype = $desc;
  function Parser_c_singleQuoted_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_c_singleQuoted_closure.builtin$cls = "Parser_c_singleQuoted_closure";
  if (!"name" in Parser_c_singleQuoted_closure)
    Parser_c_singleQuoted_closure.name = "Parser_c_singleQuoted_closure";
  $desc = $collectedClasses.Parser_c_singleQuoted_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_singleQuoted_closure.prototype = $desc;
  function Parser_c_singleQuoted__closure(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_c_singleQuoted__closure.builtin$cls = "Parser_c_singleQuoted__closure";
  if (!"name" in Parser_c_singleQuoted__closure)
    Parser_c_singleQuoted__closure.name = "Parser_c_singleQuoted__closure";
  $desc = $collectedClasses.Parser_c_singleQuoted__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_singleQuoted__closure.prototype = $desc;
  function Parser_nb_singleText_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_nb_singleText_closure.builtin$cls = "Parser_nb_singleText_closure";
  if (!"name" in Parser_nb_singleText_closure)
    Parser_nb_singleText_closure.name = "Parser_nb_singleText_closure";
  $desc = $collectedClasses.Parser_nb_singleText_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_singleText_closure.prototype = $desc;
  function Parser_nb_ns_singleInLine_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_nb_ns_singleInLine_closure.builtin$cls = "Parser_nb_ns_singleInLine_closure";
  if (!"name" in Parser_nb_ns_singleInLine_closure)
    Parser_nb_ns_singleInLine_closure.name = "Parser_nb_ns_singleInLine_closure";
  $desc = $collectedClasses.Parser_nb_ns_singleInLine_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_ns_singleInLine_closure.prototype = $desc;
  function Parser_nb_ns_singleInLine__closure(this_1) {
    this.this_1 = this_1;
  }
  Parser_nb_ns_singleInLine__closure.builtin$cls = "Parser_nb_ns_singleInLine__closure";
  if (!"name" in Parser_nb_ns_singleInLine__closure)
    Parser_nb_ns_singleInLine__closure.name = "Parser_nb_ns_singleInLine__closure";
  $desc = $collectedClasses.Parser_nb_ns_singleInLine__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_ns_singleInLine__closure.prototype = $desc;
  function Parser_nb_ns_singleInLine___closure(this_2) {
    this.this_2 = this_2;
  }
  Parser_nb_ns_singleInLine___closure.builtin$cls = "Parser_nb_ns_singleInLine___closure";
  if (!"name" in Parser_nb_ns_singleInLine___closure)
    Parser_nb_ns_singleInLine___closure.name = "Parser_nb_ns_singleInLine___closure";
  $desc = $collectedClasses.Parser_nb_ns_singleInLine___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_ns_singleInLine___closure.prototype = $desc;
  function Parser_s_singleNextLine_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_s_singleNextLine_closure.builtin$cls = "Parser_s_singleNextLine_closure";
  if (!"name" in Parser_s_singleNextLine_closure)
    Parser_s_singleNextLine_closure.name = "Parser_s_singleNextLine_closure";
  $desc = $collectedClasses.Parser_s_singleNextLine_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_singleNextLine_closure.prototype = $desc;
  function Parser_s_singleNextLine__closure(this_2, indent_3) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
  }
  Parser_s_singleNextLine__closure.builtin$cls = "Parser_s_singleNextLine__closure";
  if (!"name" in Parser_s_singleNextLine__closure)
    Parser_s_singleNextLine__closure.name = "Parser_s_singleNextLine__closure";
  $desc = $collectedClasses.Parser_s_singleNextLine__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_singleNextLine__closure.prototype = $desc;
  function Parser_s_singleNextLine__closure0(this_4) {
    this.this_4 = this_4;
  }
  Parser_s_singleNextLine__closure0.builtin$cls = "Parser_s_singleNextLine__closure0";
  if (!"name" in Parser_s_singleNextLine__closure0)
    Parser_s_singleNextLine__closure0.name = "Parser_s_singleNextLine__closure0";
  $desc = $collectedClasses.Parser_s_singleNextLine__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_singleNextLine__closure0.prototype = $desc;
  function Parser_s_singleNextLine___closure(this_5) {
    this.this_5 = this_5;
  }
  Parser_s_singleNextLine___closure.builtin$cls = "Parser_s_singleNextLine___closure";
  if (!"name" in Parser_s_singleNextLine___closure)
    Parser_s_singleNextLine___closure.name = "Parser_s_singleNextLine___closure";
  $desc = $collectedClasses.Parser_s_singleNextLine___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_singleNextLine___closure.prototype = $desc;
  function Parser_nb_singleMultiLine_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_nb_singleMultiLine_closure.builtin$cls = "Parser_nb_singleMultiLine_closure";
  if (!"name" in Parser_nb_singleMultiLine_closure)
    Parser_nb_singleMultiLine_closure.name = "Parser_nb_singleMultiLine_closure";
  $desc = $collectedClasses.Parser_nb_singleMultiLine_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_singleMultiLine_closure.prototype = $desc;
  function Parser_nb_singleMultiLine_closure0(this_2) {
    this.this_2 = this_2;
  }
  Parser_nb_singleMultiLine_closure0.builtin$cls = "Parser_nb_singleMultiLine_closure0";
  if (!"name" in Parser_nb_singleMultiLine_closure0)
    Parser_nb_singleMultiLine_closure0.name = "Parser_nb_singleMultiLine_closure0";
  $desc = $collectedClasses.Parser_nb_singleMultiLine_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_singleMultiLine_closure0.prototype = $desc;
  function Parser_nb_singleMultiLine__closure(this_3) {
    this.this_3 = this_3;
  }
  Parser_nb_singleMultiLine__closure.builtin$cls = "Parser_nb_singleMultiLine__closure";
  if (!"name" in Parser_nb_singleMultiLine__closure)
    Parser_nb_singleMultiLine__closure.name = "Parser_nb_singleMultiLine__closure";
  $desc = $collectedClasses.Parser_nb_singleMultiLine__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_singleMultiLine__closure.prototype = $desc;
  function Parser_ns_plain_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_ns_plain_closure.builtin$cls = "Parser_ns_plain_closure";
  if (!"name" in Parser_ns_plain_closure)
    Parser_ns_plain_closure.name = "Parser_ns_plain_closure";
  $desc = $collectedClasses.Parser_ns_plain_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_plain_closure.prototype = $desc;
  function Parser_ns_plain__closure(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_ns_plain__closure.builtin$cls = "Parser_ns_plain__closure";
  if (!"name" in Parser_ns_plain__closure)
    Parser_ns_plain__closure.name = "Parser_ns_plain__closure";
  $desc = $collectedClasses.Parser_ns_plain__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_plain__closure.prototype = $desc;
  function Parser_nb_ns_plainInLine_closure(this_0, ctx_1) {
    this.this_0 = this_0;
    this.ctx_1 = ctx_1;
  }
  Parser_nb_ns_plainInLine_closure.builtin$cls = "Parser_nb_ns_plainInLine_closure";
  if (!"name" in Parser_nb_ns_plainInLine_closure)
    Parser_nb_ns_plainInLine_closure.name = "Parser_nb_ns_plainInLine_closure";
  $desc = $collectedClasses.Parser_nb_ns_plainInLine_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_ns_plainInLine_closure.prototype = $desc;
  function Parser_nb_ns_plainInLine__closure(this_2, ctx_3) {
    this.this_2 = this_2;
    this.ctx_3 = ctx_3;
  }
  Parser_nb_ns_plainInLine__closure.builtin$cls = "Parser_nb_ns_plainInLine__closure";
  if (!"name" in Parser_nb_ns_plainInLine__closure)
    Parser_nb_ns_plainInLine__closure.name = "Parser_nb_ns_plainInLine__closure";
  $desc = $collectedClasses.Parser_nb_ns_plainInLine__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_ns_plainInLine__closure.prototype = $desc;
  function Parser_nb_ns_plainInLine___closure(this_4) {
    this.this_4 = this_4;
  }
  Parser_nb_ns_plainInLine___closure.builtin$cls = "Parser_nb_ns_plainInLine___closure";
  if (!"name" in Parser_nb_ns_plainInLine___closure)
    Parser_nb_ns_plainInLine___closure.name = "Parser_nb_ns_plainInLine___closure";
  $desc = $collectedClasses.Parser_nb_ns_plainInLine___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_nb_ns_plainInLine___closure.prototype = $desc;
  function Parser_s_ns_plainNextLine_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_s_ns_plainNextLine_closure.builtin$cls = "Parser_s_ns_plainNextLine_closure";
  if (!"name" in Parser_s_ns_plainNextLine_closure)
    Parser_s_ns_plainNextLine_closure.name = "Parser_s_ns_plainNextLine_closure";
  $desc = $collectedClasses.Parser_s_ns_plainNextLine_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_ns_plainNextLine_closure.prototype = $desc;
  function Parser_ns_plainMultiLine_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_ns_plainMultiLine_closure.builtin$cls = "Parser_ns_plainMultiLine_closure";
  if (!"name" in Parser_ns_plainMultiLine_closure)
    Parser_ns_plainMultiLine_closure.name = "Parser_ns_plainMultiLine_closure";
  $desc = $collectedClasses.Parser_ns_plainMultiLine_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_plainMultiLine_closure.prototype = $desc;
  function Parser_c_flowSequence_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_c_flowSequence_closure.builtin$cls = "Parser_c_flowSequence_closure";
  if (!"name" in Parser_c_flowSequence_closure)
    Parser_c_flowSequence_closure.name = "Parser_c_flowSequence_closure";
  $desc = $collectedClasses.Parser_c_flowSequence_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_flowSequence_closure.prototype = $desc;
  function Parser_c_flowSequence__closure(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_c_flowSequence__closure.builtin$cls = "Parser_c_flowSequence__closure";
  if (!"name" in Parser_c_flowSequence__closure)
    Parser_c_flowSequence__closure.name = "Parser_c_flowSequence__closure";
  $desc = $collectedClasses.Parser_c_flowSequence__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_flowSequence__closure.prototype = $desc;
  function Parser_c_flowSequence__closure0(this_6, indent_7, ctx_8) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
    this.ctx_8 = ctx_8;
  }
  Parser_c_flowSequence__closure0.builtin$cls = "Parser_c_flowSequence__closure0";
  if (!"name" in Parser_c_flowSequence__closure0)
    Parser_c_flowSequence__closure0.name = "Parser_c_flowSequence__closure0";
  $desc = $collectedClasses.Parser_c_flowSequence__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_flowSequence__closure0.prototype = $desc;
  function Parser_ns_s_flowSeqEntries_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_ns_s_flowSeqEntries_closure.builtin$cls = "Parser_ns_s_flowSeqEntries_closure";
  if (!"name" in Parser_ns_s_flowSeqEntries_closure)
    Parser_ns_s_flowSeqEntries_closure.name = "Parser_ns_s_flowSeqEntries_closure";
  $desc = $collectedClasses.Parser_ns_s_flowSeqEntries_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_s_flowSeqEntries_closure.prototype = $desc;
  function Parser_ns_s_flowSeqEntries_closure0(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_ns_s_flowSeqEntries_closure0.builtin$cls = "Parser_ns_s_flowSeqEntries_closure0";
  if (!"name" in Parser_ns_s_flowSeqEntries_closure0)
    Parser_ns_s_flowSeqEntries_closure0.name = "Parser_ns_s_flowSeqEntries_closure0";
  $desc = $collectedClasses.Parser_ns_s_flowSeqEntries_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_s_flowSeqEntries_closure0.prototype = $desc;
  function Parser_ns_s_flowSeqEntries_closure1(this_6, indent_7, ctx_8) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
    this.ctx_8 = ctx_8;
  }
  Parser_ns_s_flowSeqEntries_closure1.builtin$cls = "Parser_ns_s_flowSeqEntries_closure1";
  if (!"name" in Parser_ns_s_flowSeqEntries_closure1)
    Parser_ns_s_flowSeqEntries_closure1.name = "Parser_ns_s_flowSeqEntries_closure1";
  $desc = $collectedClasses.Parser_ns_s_flowSeqEntries_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_s_flowSeqEntries_closure1.prototype = $desc;
  function Parser_ns_flowSeqEntry_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_ns_flowSeqEntry_closure.builtin$cls = "Parser_ns_flowSeqEntry_closure";
  if (!"name" in Parser_ns_flowSeqEntry_closure)
    Parser_ns_flowSeqEntry_closure.name = "Parser_ns_flowSeqEntry_closure";
  $desc = $collectedClasses.Parser_ns_flowSeqEntry_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowSeqEntry_closure.prototype = $desc;
  function Parser_ns_flowSeqEntry_closure0(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_ns_flowSeqEntry_closure0.builtin$cls = "Parser_ns_flowSeqEntry_closure0";
  if (!"name" in Parser_ns_flowSeqEntry_closure0)
    Parser_ns_flowSeqEntry_closure0.name = "Parser_ns_flowSeqEntry_closure0";
  $desc = $collectedClasses.Parser_ns_flowSeqEntry_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowSeqEntry_closure0.prototype = $desc;
  function Parser_c_flowMapping_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_c_flowMapping_closure.builtin$cls = "Parser_c_flowMapping_closure";
  if (!"name" in Parser_c_flowMapping_closure)
    Parser_c_flowMapping_closure.name = "Parser_c_flowMapping_closure";
  $desc = $collectedClasses.Parser_c_flowMapping_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_flowMapping_closure.prototype = $desc;
  function Parser_c_flowMapping_closure0(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_c_flowMapping_closure0.builtin$cls = "Parser_c_flowMapping_closure0";
  if (!"name" in Parser_c_flowMapping_closure0)
    Parser_c_flowMapping_closure0.name = "Parser_c_flowMapping_closure0";
  $desc = $collectedClasses.Parser_c_flowMapping_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_flowMapping_closure0.prototype = $desc;
  function Parser_ns_s_flowMapEntries_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_ns_s_flowMapEntries_closure.builtin$cls = "Parser_ns_s_flowMapEntries_closure";
  if (!"name" in Parser_ns_s_flowMapEntries_closure)
    Parser_ns_s_flowMapEntries_closure.name = "Parser_ns_s_flowMapEntries_closure";
  $desc = $collectedClasses.Parser_ns_s_flowMapEntries_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_s_flowMapEntries_closure.prototype = $desc;
  function Parser_ns_s_flowMapEntries_closure0(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_ns_s_flowMapEntries_closure0.builtin$cls = "Parser_ns_s_flowMapEntries_closure0";
  if (!"name" in Parser_ns_s_flowMapEntries_closure0)
    Parser_ns_s_flowMapEntries_closure0.name = "Parser_ns_s_flowMapEntries_closure0";
  $desc = $collectedClasses.Parser_ns_s_flowMapEntries_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_s_flowMapEntries_closure0.prototype = $desc;
  function Parser_ns_flowMapEntry_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_ns_flowMapEntry_closure.builtin$cls = "Parser_ns_flowMapEntry_closure";
  if (!"name" in Parser_ns_flowMapEntry_closure)
    Parser_ns_flowMapEntry_closure.name = "Parser_ns_flowMapEntry_closure";
  $desc = $collectedClasses.Parser_ns_flowMapEntry_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowMapEntry_closure.prototype = $desc;
  function Parser_ns_flowMapEntry__closure(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_ns_flowMapEntry__closure.builtin$cls = "Parser_ns_flowMapEntry__closure";
  if (!"name" in Parser_ns_flowMapEntry__closure)
    Parser_ns_flowMapEntry__closure.name = "Parser_ns_flowMapEntry__closure";
  $desc = $collectedClasses.Parser_ns_flowMapEntry__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowMapEntry__closure.prototype = $desc;
  function Parser_ns_flowMapEntry_closure0(this_6, indent_7, ctx_8) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
    this.ctx_8 = ctx_8;
  }
  Parser_ns_flowMapEntry_closure0.builtin$cls = "Parser_ns_flowMapEntry_closure0";
  if (!"name" in Parser_ns_flowMapEntry_closure0)
    Parser_ns_flowMapEntry_closure0.name = "Parser_ns_flowMapEntry_closure0";
  $desc = $collectedClasses.Parser_ns_flowMapEntry_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowMapEntry_closure0.prototype = $desc;
  function Parser_ns_flowMapExplicitEntry_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_ns_flowMapExplicitEntry_closure.builtin$cls = "Parser_ns_flowMapExplicitEntry_closure";
  if (!"name" in Parser_ns_flowMapExplicitEntry_closure)
    Parser_ns_flowMapExplicitEntry_closure.name = "Parser_ns_flowMapExplicitEntry_closure";
  $desc = $collectedClasses.Parser_ns_flowMapExplicitEntry_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowMapExplicitEntry_closure.prototype = $desc;
  function Parser_ns_flowMapExplicitEntry_closure0(this_3) {
    this.this_3 = this_3;
  }
  Parser_ns_flowMapExplicitEntry_closure0.builtin$cls = "Parser_ns_flowMapExplicitEntry_closure0";
  if (!"name" in Parser_ns_flowMapExplicitEntry_closure0)
    Parser_ns_flowMapExplicitEntry_closure0.name = "Parser_ns_flowMapExplicitEntry_closure0";
  $desc = $collectedClasses.Parser_ns_flowMapExplicitEntry_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowMapExplicitEntry_closure0.prototype = $desc;
  function Parser_ns_flowMapImplicitEntry_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_ns_flowMapImplicitEntry_closure.builtin$cls = "Parser_ns_flowMapImplicitEntry_closure";
  if (!"name" in Parser_ns_flowMapImplicitEntry_closure)
    Parser_ns_flowMapImplicitEntry_closure.name = "Parser_ns_flowMapImplicitEntry_closure";
  $desc = $collectedClasses.Parser_ns_flowMapImplicitEntry_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowMapImplicitEntry_closure.prototype = $desc;
  function Parser_ns_flowMapImplicitEntry_closure0(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_ns_flowMapImplicitEntry_closure0.builtin$cls = "Parser_ns_flowMapImplicitEntry_closure0";
  if (!"name" in Parser_ns_flowMapImplicitEntry_closure0)
    Parser_ns_flowMapImplicitEntry_closure0.name = "Parser_ns_flowMapImplicitEntry_closure0";
  $desc = $collectedClasses.Parser_ns_flowMapImplicitEntry_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowMapImplicitEntry_closure0.prototype = $desc;
  function Parser_ns_flowMapImplicitEntry_closure1(this_6, indent_7, ctx_8) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
    this.ctx_8 = ctx_8;
  }
  Parser_ns_flowMapImplicitEntry_closure1.builtin$cls = "Parser_ns_flowMapImplicitEntry_closure1";
  if (!"name" in Parser_ns_flowMapImplicitEntry_closure1)
    Parser_ns_flowMapImplicitEntry_closure1.name = "Parser_ns_flowMapImplicitEntry_closure1";
  $desc = $collectedClasses.Parser_ns_flowMapImplicitEntry_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowMapImplicitEntry_closure1.prototype = $desc;
  function Parser_ns_flowMapYamlKeyEntry_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_ns_flowMapYamlKeyEntry_closure.builtin$cls = "Parser_ns_flowMapYamlKeyEntry_closure";
  if (!"name" in Parser_ns_flowMapYamlKeyEntry_closure)
    Parser_ns_flowMapYamlKeyEntry_closure.name = "Parser_ns_flowMapYamlKeyEntry_closure";
  $desc = $collectedClasses.Parser_ns_flowMapYamlKeyEntry_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowMapYamlKeyEntry_closure.prototype = $desc;
  function Parser_ns_flowMapYamlKeyEntry__closure(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_ns_flowMapYamlKeyEntry__closure.builtin$cls = "Parser_ns_flowMapYamlKeyEntry__closure";
  if (!"name" in Parser_ns_flowMapYamlKeyEntry__closure)
    Parser_ns_flowMapYamlKeyEntry__closure.name = "Parser_ns_flowMapYamlKeyEntry__closure";
  $desc = $collectedClasses.Parser_ns_flowMapYamlKeyEntry__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowMapYamlKeyEntry__closure.prototype = $desc;
  function Parser_ns_flowMapYamlKeyEntry___closure(this_6, indent_7, ctx_8) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
    this.ctx_8 = ctx_8;
  }
  Parser_ns_flowMapYamlKeyEntry___closure.builtin$cls = "Parser_ns_flowMapYamlKeyEntry___closure";
  if (!"name" in Parser_ns_flowMapYamlKeyEntry___closure)
    Parser_ns_flowMapYamlKeyEntry___closure.name = "Parser_ns_flowMapYamlKeyEntry___closure";
  $desc = $collectedClasses.Parser_ns_flowMapYamlKeyEntry___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowMapYamlKeyEntry___closure.prototype = $desc;
  function Parser_c_ns_flowMapSeparateValue_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_c_ns_flowMapSeparateValue_closure.builtin$cls = "Parser_c_ns_flowMapSeparateValue_closure";
  if (!"name" in Parser_c_ns_flowMapSeparateValue_closure)
    Parser_c_ns_flowMapSeparateValue_closure.name = "Parser_c_ns_flowMapSeparateValue_closure";
  $desc = $collectedClasses.Parser_c_ns_flowMapSeparateValue_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_ns_flowMapSeparateValue_closure.prototype = $desc;
  function Parser_c_ns_flowMapSeparateValue__closure(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_c_ns_flowMapSeparateValue__closure.builtin$cls = "Parser_c_ns_flowMapSeparateValue__closure";
  if (!"name" in Parser_c_ns_flowMapSeparateValue__closure)
    Parser_c_ns_flowMapSeparateValue__closure.name = "Parser_c_ns_flowMapSeparateValue__closure";
  $desc = $collectedClasses.Parser_c_ns_flowMapSeparateValue__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_ns_flowMapSeparateValue__closure.prototype = $desc;
  function Parser_c_ns_flowMapSeparateValue___closure(this_6, indent_7, ctx_8) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
    this.ctx_8 = ctx_8;
  }
  Parser_c_ns_flowMapSeparateValue___closure.builtin$cls = "Parser_c_ns_flowMapSeparateValue___closure";
  if (!"name" in Parser_c_ns_flowMapSeparateValue___closure)
    Parser_c_ns_flowMapSeparateValue___closure.name = "Parser_c_ns_flowMapSeparateValue___closure";
  $desc = $collectedClasses.Parser_c_ns_flowMapSeparateValue___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_ns_flowMapSeparateValue___closure.prototype = $desc;
  function Parser_c_ns_flowMapJsonKeyEntry_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_c_ns_flowMapJsonKeyEntry_closure.builtin$cls = "Parser_c_ns_flowMapJsonKeyEntry_closure";
  if (!"name" in Parser_c_ns_flowMapJsonKeyEntry_closure)
    Parser_c_ns_flowMapJsonKeyEntry_closure.name = "Parser_c_ns_flowMapJsonKeyEntry_closure";
  $desc = $collectedClasses.Parser_c_ns_flowMapJsonKeyEntry_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_ns_flowMapJsonKeyEntry_closure.prototype = $desc;
  function Parser_c_ns_flowMapJsonKeyEntry__closure(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_c_ns_flowMapJsonKeyEntry__closure.builtin$cls = "Parser_c_ns_flowMapJsonKeyEntry__closure";
  if (!"name" in Parser_c_ns_flowMapJsonKeyEntry__closure)
    Parser_c_ns_flowMapJsonKeyEntry__closure.name = "Parser_c_ns_flowMapJsonKeyEntry__closure";
  $desc = $collectedClasses.Parser_c_ns_flowMapJsonKeyEntry__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_ns_flowMapJsonKeyEntry__closure.prototype = $desc;
  function Parser_c_ns_flowMapJsonKeyEntry___closure(this_6, indent_7, ctx_8) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
    this.ctx_8 = ctx_8;
  }
  Parser_c_ns_flowMapJsonKeyEntry___closure.builtin$cls = "Parser_c_ns_flowMapJsonKeyEntry___closure";
  if (!"name" in Parser_c_ns_flowMapJsonKeyEntry___closure)
    Parser_c_ns_flowMapJsonKeyEntry___closure.name = "Parser_c_ns_flowMapJsonKeyEntry___closure";
  $desc = $collectedClasses.Parser_c_ns_flowMapJsonKeyEntry___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_ns_flowMapJsonKeyEntry___closure.prototype = $desc;
  function Parser_c_ns_flowMapAdjacentValue_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_c_ns_flowMapAdjacentValue_closure.builtin$cls = "Parser_c_ns_flowMapAdjacentValue_closure";
  if (!"name" in Parser_c_ns_flowMapAdjacentValue_closure)
    Parser_c_ns_flowMapAdjacentValue_closure.name = "Parser_c_ns_flowMapAdjacentValue_closure";
  $desc = $collectedClasses.Parser_c_ns_flowMapAdjacentValue_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_ns_flowMapAdjacentValue_closure.prototype = $desc;
  function Parser_c_ns_flowMapAdjacentValue__closure(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_c_ns_flowMapAdjacentValue__closure.builtin$cls = "Parser_c_ns_flowMapAdjacentValue__closure";
  if (!"name" in Parser_c_ns_flowMapAdjacentValue__closure)
    Parser_c_ns_flowMapAdjacentValue__closure.name = "Parser_c_ns_flowMapAdjacentValue__closure";
  $desc = $collectedClasses.Parser_c_ns_flowMapAdjacentValue__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_ns_flowMapAdjacentValue__closure.prototype = $desc;
  function Parser_c_ns_flowMapAdjacentValue___closure(this_6, indent_7, ctx_8) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
    this.ctx_8 = ctx_8;
  }
  Parser_c_ns_flowMapAdjacentValue___closure.builtin$cls = "Parser_c_ns_flowMapAdjacentValue___closure";
  if (!"name" in Parser_c_ns_flowMapAdjacentValue___closure)
    Parser_c_ns_flowMapAdjacentValue___closure.name = "Parser_c_ns_flowMapAdjacentValue___closure";
  $desc = $collectedClasses.Parser_c_ns_flowMapAdjacentValue___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_ns_flowMapAdjacentValue___closure.prototype = $desc;
  function Parser_ns_flowPair_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_ns_flowPair_closure.builtin$cls = "Parser_ns_flowPair_closure";
  if (!"name" in Parser_ns_flowPair_closure)
    Parser_ns_flowPair_closure.name = "Parser_ns_flowPair_closure";
  $desc = $collectedClasses.Parser_ns_flowPair_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowPair_closure.prototype = $desc;
  function Parser_ns_flowPair__closure(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_ns_flowPair__closure.builtin$cls = "Parser_ns_flowPair__closure";
  if (!"name" in Parser_ns_flowPair__closure)
    Parser_ns_flowPair__closure.name = "Parser_ns_flowPair__closure";
  $desc = $collectedClasses.Parser_ns_flowPair__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowPair__closure.prototype = $desc;
  function Parser_ns_flowPair_closure0(this_6, indent_7, ctx_8) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
    this.ctx_8 = ctx_8;
  }
  Parser_ns_flowPair_closure0.builtin$cls = "Parser_ns_flowPair_closure0";
  if (!"name" in Parser_ns_flowPair_closure0)
    Parser_ns_flowPair_closure0.name = "Parser_ns_flowPair_closure0";
  $desc = $collectedClasses.Parser_ns_flowPair_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowPair_closure0.prototype = $desc;
  function Parser_ns_flowPairEntry_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_ns_flowPairEntry_closure.builtin$cls = "Parser_ns_flowPairEntry_closure";
  if (!"name" in Parser_ns_flowPairEntry_closure)
    Parser_ns_flowPairEntry_closure.name = "Parser_ns_flowPairEntry_closure";
  $desc = $collectedClasses.Parser_ns_flowPairEntry_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowPairEntry_closure.prototype = $desc;
  function Parser_ns_flowPairEntry_closure0(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_ns_flowPairEntry_closure0.builtin$cls = "Parser_ns_flowPairEntry_closure0";
  if (!"name" in Parser_ns_flowPairEntry_closure0)
    Parser_ns_flowPairEntry_closure0.name = "Parser_ns_flowPairEntry_closure0";
  $desc = $collectedClasses.Parser_ns_flowPairEntry_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowPairEntry_closure0.prototype = $desc;
  function Parser_ns_flowPairEntry_closure1(this_6, indent_7, ctx_8) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
    this.ctx_8 = ctx_8;
  }
  Parser_ns_flowPairEntry_closure1.builtin$cls = "Parser_ns_flowPairEntry_closure1";
  if (!"name" in Parser_ns_flowPairEntry_closure1)
    Parser_ns_flowPairEntry_closure1.name = "Parser_ns_flowPairEntry_closure1";
  $desc = $collectedClasses.Parser_ns_flowPairEntry_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowPairEntry_closure1.prototype = $desc;
  function Parser_ns_flowPairYamlKeyEntry_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_ns_flowPairYamlKeyEntry_closure.builtin$cls = "Parser_ns_flowPairYamlKeyEntry_closure";
  if (!"name" in Parser_ns_flowPairYamlKeyEntry_closure)
    Parser_ns_flowPairYamlKeyEntry_closure.name = "Parser_ns_flowPairYamlKeyEntry_closure";
  $desc = $collectedClasses.Parser_ns_flowPairYamlKeyEntry_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowPairYamlKeyEntry_closure.prototype = $desc;
  function Parser_c_ns_flowPairJsonKeyEntry_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_c_ns_flowPairJsonKeyEntry_closure.builtin$cls = "Parser_c_ns_flowPairJsonKeyEntry_closure";
  if (!"name" in Parser_c_ns_flowPairJsonKeyEntry_closure)
    Parser_c_ns_flowPairJsonKeyEntry_closure.name = "Parser_c_ns_flowPairJsonKeyEntry_closure";
  $desc = $collectedClasses.Parser_c_ns_flowPairJsonKeyEntry_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_ns_flowPairJsonKeyEntry_closure.prototype = $desc;
  function Parser_ns_s_implicitYamlKey_closure(this_0, ctx_1) {
    this.this_0 = this_0;
    this.ctx_1 = ctx_1;
  }
  Parser_ns_s_implicitYamlKey_closure.builtin$cls = "Parser_ns_s_implicitYamlKey_closure";
  if (!"name" in Parser_ns_s_implicitYamlKey_closure)
    Parser_ns_s_implicitYamlKey_closure.name = "Parser_ns_s_implicitYamlKey_closure";
  $desc = $collectedClasses.Parser_ns_s_implicitYamlKey_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_s_implicitYamlKey_closure.prototype = $desc;
  function Parser_c_s_implicitJsonKey_closure(this_0, ctx_1) {
    this.this_0 = this_0;
    this.ctx_1 = ctx_1;
  }
  Parser_c_s_implicitJsonKey_closure.builtin$cls = "Parser_c_s_implicitJsonKey_closure";
  if (!"name" in Parser_c_s_implicitJsonKey_closure)
    Parser_c_s_implicitJsonKey_closure.name = "Parser_c_s_implicitJsonKey_closure";
  $desc = $collectedClasses.Parser_c_s_implicitJsonKey_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_s_implicitJsonKey_closure.prototype = $desc;
  function Parser_c_flowJsonContent_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_c_flowJsonContent_closure.builtin$cls = "Parser_c_flowJsonContent_closure";
  if (!"name" in Parser_c_flowJsonContent_closure)
    Parser_c_flowJsonContent_closure.name = "Parser_c_flowJsonContent_closure";
  $desc = $collectedClasses.Parser_c_flowJsonContent_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_flowJsonContent_closure.prototype = $desc;
  function Parser_c_flowJsonContent_closure0(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_c_flowJsonContent_closure0.builtin$cls = "Parser_c_flowJsonContent_closure0";
  if (!"name" in Parser_c_flowJsonContent_closure0)
    Parser_c_flowJsonContent_closure0.name = "Parser_c_flowJsonContent_closure0";
  $desc = $collectedClasses.Parser_c_flowJsonContent_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_flowJsonContent_closure0.prototype = $desc;
  function Parser_c_flowJsonContent_closure1(this_6, indent_7, ctx_8) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
    this.ctx_8 = ctx_8;
  }
  Parser_c_flowJsonContent_closure1.builtin$cls = "Parser_c_flowJsonContent_closure1";
  if (!"name" in Parser_c_flowJsonContent_closure1)
    Parser_c_flowJsonContent_closure1.name = "Parser_c_flowJsonContent_closure1";
  $desc = $collectedClasses.Parser_c_flowJsonContent_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_flowJsonContent_closure1.prototype = $desc;
  function Parser_c_flowJsonContent_closure2(this_9, indent_10, ctx_11) {
    this.this_9 = this_9;
    this.indent_10 = indent_10;
    this.ctx_11 = ctx_11;
  }
  Parser_c_flowJsonContent_closure2.builtin$cls = "Parser_c_flowJsonContent_closure2";
  if (!"name" in Parser_c_flowJsonContent_closure2)
    Parser_c_flowJsonContent_closure2.name = "Parser_c_flowJsonContent_closure2";
  $desc = $collectedClasses.Parser_c_flowJsonContent_closure2;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_flowJsonContent_closure2.prototype = $desc;
  function Parser_ns_flowContent_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_ns_flowContent_closure.builtin$cls = "Parser_ns_flowContent_closure";
  if (!"name" in Parser_ns_flowContent_closure)
    Parser_ns_flowContent_closure.name = "Parser_ns_flowContent_closure";
  $desc = $collectedClasses.Parser_ns_flowContent_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowContent_closure.prototype = $desc;
  function Parser_ns_flowContent_closure0(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_ns_flowContent_closure0.builtin$cls = "Parser_ns_flowContent_closure0";
  if (!"name" in Parser_ns_flowContent_closure0)
    Parser_ns_flowContent_closure0.name = "Parser_ns_flowContent_closure0";
  $desc = $collectedClasses.Parser_ns_flowContent_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowContent_closure0.prototype = $desc;
  function Parser_ns_flowYamlNode_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_ns_flowYamlNode_closure.builtin$cls = "Parser_ns_flowYamlNode_closure";
  if (!"name" in Parser_ns_flowYamlNode_closure)
    Parser_ns_flowYamlNode_closure.name = "Parser_ns_flowYamlNode_closure";
  $desc = $collectedClasses.Parser_ns_flowYamlNode_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowYamlNode_closure.prototype = $desc;
  function Parser_ns_flowYamlNode_closure0(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_ns_flowYamlNode_closure0.builtin$cls = "Parser_ns_flowYamlNode_closure0";
  if (!"name" in Parser_ns_flowYamlNode_closure0)
    Parser_ns_flowYamlNode_closure0.name = "Parser_ns_flowYamlNode_closure0";
  $desc = $collectedClasses.Parser_ns_flowYamlNode_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowYamlNode_closure0.prototype = $desc;
  function Parser_ns_flowYamlNode__closure(this_6, indent_7, ctx_8) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
    this.ctx_8 = ctx_8;
  }
  Parser_ns_flowYamlNode__closure.builtin$cls = "Parser_ns_flowYamlNode__closure";
  if (!"name" in Parser_ns_flowYamlNode__closure)
    Parser_ns_flowYamlNode__closure.name = "Parser_ns_flowYamlNode__closure";
  $desc = $collectedClasses.Parser_ns_flowYamlNode__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowYamlNode__closure.prototype = $desc;
  function Parser_ns_flowYamlNode___closure(this_9, indent_10, ctx_11) {
    this.this_9 = this_9;
    this.indent_10 = indent_10;
    this.ctx_11 = ctx_11;
  }
  Parser_ns_flowYamlNode___closure.builtin$cls = "Parser_ns_flowYamlNode___closure";
  if (!"name" in Parser_ns_flowYamlNode___closure)
    Parser_ns_flowYamlNode___closure.name = "Parser_ns_flowYamlNode___closure";
  $desc = $collectedClasses.Parser_ns_flowYamlNode___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowYamlNode___closure.prototype = $desc;
  function Parser_c_flowJsonNode_closure(this_1, indent_2, ctx_3) {
    this.this_1 = this_1;
    this.indent_2 = indent_2;
    this.ctx_3 = ctx_3;
  }
  Parser_c_flowJsonNode_closure.builtin$cls = "Parser_c_flowJsonNode_closure";
  if (!"name" in Parser_c_flowJsonNode_closure)
    Parser_c_flowJsonNode_closure.name = "Parser_c_flowJsonNode_closure";
  $desc = $collectedClasses.Parser_c_flowJsonNode_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_flowJsonNode_closure.prototype = $desc;
  function Parser_c_flowJsonNode__closure(box_0, this_4, indent_5, ctx_6) {
    this.box_0 = box_0;
    this.this_4 = this_4;
    this.indent_5 = indent_5;
    this.ctx_6 = ctx_6;
  }
  Parser_c_flowJsonNode__closure.builtin$cls = "Parser_c_flowJsonNode__closure";
  if (!"name" in Parser_c_flowJsonNode__closure)
    Parser_c_flowJsonNode__closure.name = "Parser_c_flowJsonNode__closure";
  $desc = $collectedClasses.Parser_c_flowJsonNode__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_flowJsonNode__closure.prototype = $desc;
  function Parser_c_flowJsonNode___closure(box_0, this_7, indent_8, ctx_9) {
    this.box_0 = box_0;
    this.this_7 = this_7;
    this.indent_8 = indent_8;
    this.ctx_9 = ctx_9;
  }
  Parser_c_flowJsonNode___closure.builtin$cls = "Parser_c_flowJsonNode___closure";
  if (!"name" in Parser_c_flowJsonNode___closure)
    Parser_c_flowJsonNode___closure.name = "Parser_c_flowJsonNode___closure";
  $desc = $collectedClasses.Parser_c_flowJsonNode___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_flowJsonNode___closure.prototype = $desc;
  function Parser_ns_flowNode_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_ns_flowNode_closure.builtin$cls = "Parser_ns_flowNode_closure";
  if (!"name" in Parser_ns_flowNode_closure)
    Parser_ns_flowNode_closure.name = "Parser_ns_flowNode_closure";
  $desc = $collectedClasses.Parser_ns_flowNode_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowNode_closure.prototype = $desc;
  function Parser_ns_flowNode_closure0(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_ns_flowNode_closure0.builtin$cls = "Parser_ns_flowNode_closure0";
  if (!"name" in Parser_ns_flowNode_closure0)
    Parser_ns_flowNode_closure0.name = "Parser_ns_flowNode_closure0";
  $desc = $collectedClasses.Parser_ns_flowNode_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowNode_closure0.prototype = $desc;
  function Parser_ns_flowNode__closure(this_6, indent_7, ctx_8) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
    this.ctx_8 = ctx_8;
  }
  Parser_ns_flowNode__closure.builtin$cls = "Parser_ns_flowNode__closure";
  if (!"name" in Parser_ns_flowNode__closure)
    Parser_ns_flowNode__closure.name = "Parser_ns_flowNode__closure";
  $desc = $collectedClasses.Parser_ns_flowNode__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowNode__closure.prototype = $desc;
  function Parser_ns_flowNode___closure(this_9, indent_10, ctx_11) {
    this.this_9 = this_9;
    this.indent_10 = indent_10;
    this.ctx_11 = ctx_11;
  }
  Parser_ns_flowNode___closure.builtin$cls = "Parser_ns_flowNode___closure";
  if (!"name" in Parser_ns_flowNode___closure)
    Parser_ns_flowNode___closure.name = "Parser_ns_flowNode___closure";
  $desc = $collectedClasses.Parser_ns_flowNode___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowNode___closure.prototype = $desc;
  function Parser_ns_flowNode____closure(this_12, indent_13, ctx_14) {
    this.this_12 = this_12;
    this.indent_13 = indent_13;
    this.ctx_14 = ctx_14;
  }
  Parser_ns_flowNode____closure.builtin$cls = "Parser_ns_flowNode____closure";
  if (!"name" in Parser_ns_flowNode____closure)
    Parser_ns_flowNode____closure.name = "Parser_ns_flowNode____closure";
  $desc = $collectedClasses.Parser_ns_flowNode____closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_flowNode____closure.prototype = $desc;
  function Parser_c_b_blockHeader_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_c_b_blockHeader_closure.builtin$cls = "Parser_c_b_blockHeader_closure";
  if (!"name" in Parser_c_b_blockHeader_closure)
    Parser_c_b_blockHeader_closure.name = "Parser_c_b_blockHeader_closure";
  $desc = $collectedClasses.Parser_c_b_blockHeader_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_b_blockHeader_closure.prototype = $desc;
  function Parser_l_stripEmpty_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_l_stripEmpty_closure.builtin$cls = "Parser_l_stripEmpty_closure";
  if (!"name" in Parser_l_stripEmpty_closure)
    Parser_l_stripEmpty_closure.name = "Parser_l_stripEmpty_closure";
  $desc = $collectedClasses.Parser_l_stripEmpty_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_stripEmpty_closure.prototype = $desc;
  function Parser_l_stripEmpty__closure(this_2, indent_3) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
  }
  Parser_l_stripEmpty__closure.builtin$cls = "Parser_l_stripEmpty__closure";
  if (!"name" in Parser_l_stripEmpty__closure)
    Parser_l_stripEmpty__closure.name = "Parser_l_stripEmpty__closure";
  $desc = $collectedClasses.Parser_l_stripEmpty__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_stripEmpty__closure.prototype = $desc;
  function Parser_l_stripEmpty___closure(this_4, indent_5) {
    this.this_4 = this_4;
    this.indent_5 = indent_5;
  }
  Parser_l_stripEmpty___closure.builtin$cls = "Parser_l_stripEmpty___closure";
  if (!"name" in Parser_l_stripEmpty___closure)
    Parser_l_stripEmpty___closure.name = "Parser_l_stripEmpty___closure";
  $desc = $collectedClasses.Parser_l_stripEmpty___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_stripEmpty___closure.prototype = $desc;
  function Parser_l_stripEmpty__closure0(this_6, indent_7) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
  }
  Parser_l_stripEmpty__closure0.builtin$cls = "Parser_l_stripEmpty__closure0";
  if (!"name" in Parser_l_stripEmpty__closure0)
    Parser_l_stripEmpty__closure0.name = "Parser_l_stripEmpty__closure0";
  $desc = $collectedClasses.Parser_l_stripEmpty__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_stripEmpty__closure0.prototype = $desc;
  function Parser_l_keepEmpty_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_l_keepEmpty_closure.builtin$cls = "Parser_l_keepEmpty_closure";
  if (!"name" in Parser_l_keepEmpty_closure)
    Parser_l_keepEmpty_closure.name = "Parser_l_keepEmpty_closure";
  $desc = $collectedClasses.Parser_l_keepEmpty_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_keepEmpty_closure.prototype = $desc;
  function Parser_l_keepEmpty__closure0(this_2, indent_3) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
  }
  Parser_l_keepEmpty__closure0.builtin$cls = "Parser_l_keepEmpty__closure0";
  if (!"name" in Parser_l_keepEmpty__closure0)
    Parser_l_keepEmpty__closure0.name = "Parser_l_keepEmpty__closure0";
  $desc = $collectedClasses.Parser_l_keepEmpty__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_keepEmpty__closure0.prototype = $desc;
  function Parser_l_keepEmpty_closure0(this_4, indent_5) {
    this.this_4 = this_4;
    this.indent_5 = indent_5;
  }
  Parser_l_keepEmpty_closure0.builtin$cls = "Parser_l_keepEmpty_closure0";
  if (!"name" in Parser_l_keepEmpty_closure0)
    Parser_l_keepEmpty_closure0.name = "Parser_l_keepEmpty_closure0";
  $desc = $collectedClasses.Parser_l_keepEmpty_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_keepEmpty_closure0.prototype = $desc;
  function Parser_l_keepEmpty__closure(this_6, indent_7) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
  }
  Parser_l_keepEmpty__closure.builtin$cls = "Parser_l_keepEmpty__closure";
  if (!"name" in Parser_l_keepEmpty__closure)
    Parser_l_keepEmpty__closure.name = "Parser_l_keepEmpty__closure";
  $desc = $collectedClasses.Parser_l_keepEmpty__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_keepEmpty__closure.prototype = $desc;
  function Parser_l_trailComments_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_l_trailComments_closure.builtin$cls = "Parser_l_trailComments_closure";
  if (!"name" in Parser_l_trailComments_closure)
    Parser_l_trailComments_closure.name = "Parser_l_trailComments_closure";
  $desc = $collectedClasses.Parser_l_trailComments_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_trailComments_closure.prototype = $desc;
  function Parser_c_l_literal_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_c_l_literal_closure.builtin$cls = "Parser_c_l_literal_closure";
  if (!"name" in Parser_c_l_literal_closure)
    Parser_c_l_literal_closure.name = "Parser_c_l_literal_closure";
  $desc = $collectedClasses.Parser_c_l_literal_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_l_literal_closure.prototype = $desc;
  function Parser_l_nb_literalText_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_l_nb_literalText_closure.builtin$cls = "Parser_l_nb_literalText_closure";
  if (!"name" in Parser_l_nb_literalText_closure)
    Parser_l_nb_literalText_closure.name = "Parser_l_nb_literalText_closure";
  $desc = $collectedClasses.Parser_l_nb_literalText_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_nb_literalText_closure.prototype = $desc;
  function Parser_l_nb_literalText__closure(this_2, indent_3) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
  }
  Parser_l_nb_literalText__closure.builtin$cls = "Parser_l_nb_literalText__closure";
  if (!"name" in Parser_l_nb_literalText__closure)
    Parser_l_nb_literalText__closure.name = "Parser_l_nb_literalText__closure";
  $desc = $collectedClasses.Parser_l_nb_literalText__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_nb_literalText__closure.prototype = $desc;
  function Parser_l_nb_literalText___closure(this_4, indent_5) {
    this.this_4 = this_4;
    this.indent_5 = indent_5;
  }
  Parser_l_nb_literalText___closure.builtin$cls = "Parser_l_nb_literalText___closure";
  if (!"name" in Parser_l_nb_literalText___closure)
    Parser_l_nb_literalText___closure.name = "Parser_l_nb_literalText___closure";
  $desc = $collectedClasses.Parser_l_nb_literalText___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_nb_literalText___closure.prototype = $desc;
  function Parser_l_nb_literalText__closure0(this_6, indent_7) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
  }
  Parser_l_nb_literalText__closure0.builtin$cls = "Parser_l_nb_literalText__closure0";
  if (!"name" in Parser_l_nb_literalText__closure0)
    Parser_l_nb_literalText__closure0.name = "Parser_l_nb_literalText__closure0";
  $desc = $collectedClasses.Parser_l_nb_literalText__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_nb_literalText__closure0.prototype = $desc;
  function Parser_l_nb_literalText__closure1(this_8) {
    this.this_8 = this_8;
  }
  Parser_l_nb_literalText__closure1.builtin$cls = "Parser_l_nb_literalText__closure1";
  if (!"name" in Parser_l_nb_literalText__closure1)
    Parser_l_nb_literalText__closure1.name = "Parser_l_nb_literalText__closure1";
  $desc = $collectedClasses.Parser_l_nb_literalText__closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_nb_literalText__closure1.prototype = $desc;
  function Parser_b_nb_literalNext_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_b_nb_literalNext_closure.builtin$cls = "Parser_b_nb_literalNext_closure";
  if (!"name" in Parser_b_nb_literalNext_closure)
    Parser_b_nb_literalNext_closure.name = "Parser_b_nb_literalNext_closure";
  $desc = $collectedClasses.Parser_b_nb_literalNext_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_b_nb_literalNext_closure.prototype = $desc;
  function Parser_l_literalContent_closure(this_0, indent_1, chomping_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.chomping_2 = chomping_2;
  }
  Parser_l_literalContent_closure.builtin$cls = "Parser_l_literalContent_closure";
  if (!"name" in Parser_l_literalContent_closure)
    Parser_l_literalContent_closure.name = "Parser_l_literalContent_closure";
  $desc = $collectedClasses.Parser_l_literalContent_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_literalContent_closure.prototype = $desc;
  function Parser_l_literalContent__closure(this_3, indent_4, chomping_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.chomping_5 = chomping_5;
  }
  Parser_l_literalContent__closure.builtin$cls = "Parser_l_literalContent__closure";
  if (!"name" in Parser_l_literalContent__closure)
    Parser_l_literalContent__closure.name = "Parser_l_literalContent__closure";
  $desc = $collectedClasses.Parser_l_literalContent__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_literalContent__closure.prototype = $desc;
  function Parser_l_literalContent___closure(this_6, indent_7) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
  }
  Parser_l_literalContent___closure.builtin$cls = "Parser_l_literalContent___closure";
  if (!"name" in Parser_l_literalContent___closure)
    Parser_l_literalContent___closure.name = "Parser_l_literalContent___closure";
  $desc = $collectedClasses.Parser_l_literalContent___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_literalContent___closure.prototype = $desc;
  function Parser_c_l_folded_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_c_l_folded_closure.builtin$cls = "Parser_c_l_folded_closure";
  if (!"name" in Parser_c_l_folded_closure)
    Parser_c_l_folded_closure.name = "Parser_c_l_folded_closure";
  $desc = $collectedClasses.Parser_c_l_folded_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_l_folded_closure.prototype = $desc;
  function Parser_s_nb_foldedText_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_s_nb_foldedText_closure.builtin$cls = "Parser_s_nb_foldedText_closure";
  if (!"name" in Parser_s_nb_foldedText_closure)
    Parser_s_nb_foldedText_closure.name = "Parser_s_nb_foldedText_closure";
  $desc = $collectedClasses.Parser_s_nb_foldedText_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_nb_foldedText_closure.prototype = $desc;
  function Parser_s_nb_foldedText__closure(this_2, indent_3) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
  }
  Parser_s_nb_foldedText__closure.builtin$cls = "Parser_s_nb_foldedText__closure";
  if (!"name" in Parser_s_nb_foldedText__closure)
    Parser_s_nb_foldedText__closure.name = "Parser_s_nb_foldedText__closure";
  $desc = $collectedClasses.Parser_s_nb_foldedText__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_nb_foldedText__closure.prototype = $desc;
  function Parser_s_nb_foldedText__closure0(this_4) {
    this.this_4 = this_4;
  }
  Parser_s_nb_foldedText__closure0.builtin$cls = "Parser_s_nb_foldedText__closure0";
  if (!"name" in Parser_s_nb_foldedText__closure0)
    Parser_s_nb_foldedText__closure0.name = "Parser_s_nb_foldedText__closure0";
  $desc = $collectedClasses.Parser_s_nb_foldedText__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_nb_foldedText__closure0.prototype = $desc;
  function Parser_l_nb_foldedLines_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_l_nb_foldedLines_closure.builtin$cls = "Parser_l_nb_foldedLines_closure";
  if (!"name" in Parser_l_nb_foldedLines_closure)
    Parser_l_nb_foldedLines_closure.name = "Parser_l_nb_foldedLines_closure";
  $desc = $collectedClasses.Parser_l_nb_foldedLines_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_nb_foldedLines_closure.prototype = $desc;
  function Parser_l_nb_foldedLines__closure(this_2, indent_3) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
  }
  Parser_l_nb_foldedLines__closure.builtin$cls = "Parser_l_nb_foldedLines__closure";
  if (!"name" in Parser_l_nb_foldedLines__closure)
    Parser_l_nb_foldedLines__closure.name = "Parser_l_nb_foldedLines__closure";
  $desc = $collectedClasses.Parser_l_nb_foldedLines__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_nb_foldedLines__closure.prototype = $desc;
  function Parser_s_nb_spacedText_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_s_nb_spacedText_closure.builtin$cls = "Parser_s_nb_spacedText_closure";
  if (!"name" in Parser_s_nb_spacedText_closure)
    Parser_s_nb_spacedText_closure.name = "Parser_s_nb_spacedText_closure";
  $desc = $collectedClasses.Parser_s_nb_spacedText_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_nb_spacedText_closure.prototype = $desc;
  function Parser_s_nb_spacedText__closure(this_2, indent_3) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
  }
  Parser_s_nb_spacedText__closure.builtin$cls = "Parser_s_nb_spacedText__closure";
  if (!"name" in Parser_s_nb_spacedText__closure)
    Parser_s_nb_spacedText__closure.name = "Parser_s_nb_spacedText__closure";
  $desc = $collectedClasses.Parser_s_nb_spacedText__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_nb_spacedText__closure.prototype = $desc;
  function Parser_s_nb_spacedText__closure0(this_4) {
    this.this_4 = this_4;
  }
  Parser_s_nb_spacedText__closure0.builtin$cls = "Parser_s_nb_spacedText__closure0";
  if (!"name" in Parser_s_nb_spacedText__closure0)
    Parser_s_nb_spacedText__closure0.name = "Parser_s_nb_spacedText__closure0";
  $desc = $collectedClasses.Parser_s_nb_spacedText__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_nb_spacedText__closure0.prototype = $desc;
  function Parser_b_l_spaced_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_b_l_spaced_closure.builtin$cls = "Parser_b_l_spaced_closure";
  if (!"name" in Parser_b_l_spaced_closure)
    Parser_b_l_spaced_closure.name = "Parser_b_l_spaced_closure";
  $desc = $collectedClasses.Parser_b_l_spaced_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_b_l_spaced_closure.prototype = $desc;
  function Parser_b_l_spaced__closure(this_2, indent_3) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
  }
  Parser_b_l_spaced__closure.builtin$cls = "Parser_b_l_spaced__closure";
  if (!"name" in Parser_b_l_spaced__closure)
    Parser_b_l_spaced__closure.name = "Parser_b_l_spaced__closure";
  $desc = $collectedClasses.Parser_b_l_spaced__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_b_l_spaced__closure.prototype = $desc;
  function Parser_l_nb_spacedLines_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_l_nb_spacedLines_closure.builtin$cls = "Parser_l_nb_spacedLines_closure";
  if (!"name" in Parser_l_nb_spacedLines_closure)
    Parser_l_nb_spacedLines_closure.name = "Parser_l_nb_spacedLines_closure";
  $desc = $collectedClasses.Parser_l_nb_spacedLines_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_nb_spacedLines_closure.prototype = $desc;
  function Parser_l_nb_spacedLines__closure(this_2, indent_3) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
  }
  Parser_l_nb_spacedLines__closure.builtin$cls = "Parser_l_nb_spacedLines__closure";
  if (!"name" in Parser_l_nb_spacedLines__closure)
    Parser_l_nb_spacedLines__closure.name = "Parser_l_nb_spacedLines__closure";
  $desc = $collectedClasses.Parser_l_nb_spacedLines__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_nb_spacedLines__closure.prototype = $desc;
  function Parser_l_nb_sameLines_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_l_nb_sameLines_closure.builtin$cls = "Parser_l_nb_sameLines_closure";
  if (!"name" in Parser_l_nb_sameLines_closure)
    Parser_l_nb_sameLines_closure.name = "Parser_l_nb_sameLines_closure";
  $desc = $collectedClasses.Parser_l_nb_sameLines_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_nb_sameLines_closure.prototype = $desc;
  function Parser_l_nb_sameLines__closure(this_2, indent_3) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
  }
  Parser_l_nb_sameLines__closure.builtin$cls = "Parser_l_nb_sameLines__closure";
  if (!"name" in Parser_l_nb_sameLines__closure)
    Parser_l_nb_sameLines__closure.name = "Parser_l_nb_sameLines__closure";
  $desc = $collectedClasses.Parser_l_nb_sameLines__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_nb_sameLines__closure.prototype = $desc;
  function Parser_l_nb_sameLines___closure(this_4, indent_5) {
    this.this_4 = this_4;
    this.indent_5 = indent_5;
  }
  Parser_l_nb_sameLines___closure.builtin$cls = "Parser_l_nb_sameLines___closure";
  if (!"name" in Parser_l_nb_sameLines___closure)
    Parser_l_nb_sameLines___closure.name = "Parser_l_nb_sameLines___closure";
  $desc = $collectedClasses.Parser_l_nb_sameLines___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_nb_sameLines___closure.prototype = $desc;
  function Parser_l_nb_sameLines__closure0(this_6, indent_7) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
  }
  Parser_l_nb_sameLines__closure0.builtin$cls = "Parser_l_nb_sameLines__closure0";
  if (!"name" in Parser_l_nb_sameLines__closure0)
    Parser_l_nb_sameLines__closure0.name = "Parser_l_nb_sameLines__closure0";
  $desc = $collectedClasses.Parser_l_nb_sameLines__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_nb_sameLines__closure0.prototype = $desc;
  function Parser_l_nb_sameLines__closure1(this_8, indent_9) {
    this.this_8 = this_8;
    this.indent_9 = indent_9;
  }
  Parser_l_nb_sameLines__closure1.builtin$cls = "Parser_l_nb_sameLines__closure1";
  if (!"name" in Parser_l_nb_sameLines__closure1)
    Parser_l_nb_sameLines__closure1.name = "Parser_l_nb_sameLines__closure1";
  $desc = $collectedClasses.Parser_l_nb_sameLines__closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_nb_sameLines__closure1.prototype = $desc;
  function Parser_l_nb_diffLines_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_l_nb_diffLines_closure.builtin$cls = "Parser_l_nb_diffLines_closure";
  if (!"name" in Parser_l_nb_diffLines_closure)
    Parser_l_nb_diffLines_closure.name = "Parser_l_nb_diffLines_closure";
  $desc = $collectedClasses.Parser_l_nb_diffLines_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_nb_diffLines_closure.prototype = $desc;
  function Parser_l_nb_diffLines__closure(this_2, indent_3) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
  }
  Parser_l_nb_diffLines__closure.builtin$cls = "Parser_l_nb_diffLines__closure";
  if (!"name" in Parser_l_nb_diffLines__closure)
    Parser_l_nb_diffLines__closure.name = "Parser_l_nb_diffLines__closure";
  $desc = $collectedClasses.Parser_l_nb_diffLines__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_nb_diffLines__closure.prototype = $desc;
  function Parser_l_foldedContent_closure(this_0, indent_1, chomping_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.chomping_2 = chomping_2;
  }
  Parser_l_foldedContent_closure.builtin$cls = "Parser_l_foldedContent_closure";
  if (!"name" in Parser_l_foldedContent_closure)
    Parser_l_foldedContent_closure.name = "Parser_l_foldedContent_closure";
  $desc = $collectedClasses.Parser_l_foldedContent_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_foldedContent_closure.prototype = $desc;
  function Parser_l_foldedContent__closure(this_3, indent_4, chomping_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.chomping_5 = chomping_5;
  }
  Parser_l_foldedContent__closure.builtin$cls = "Parser_l_foldedContent__closure";
  if (!"name" in Parser_l_foldedContent__closure)
    Parser_l_foldedContent__closure.name = "Parser_l_foldedContent__closure";
  $desc = $collectedClasses.Parser_l_foldedContent__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_foldedContent__closure.prototype = $desc;
  function Parser_l_blockSequence_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_l_blockSequence_closure.builtin$cls = "Parser_l_blockSequence_closure";
  if (!"name" in Parser_l_blockSequence_closure)
    Parser_l_blockSequence_closure.name = "Parser_l_blockSequence_closure";
  $desc = $collectedClasses.Parser_l_blockSequence_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_blockSequence_closure.prototype = $desc;
  function Parser_l_blockSequence__closure(this_2, indent_3, additionalIndent_4) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
    this.additionalIndent_4 = additionalIndent_4;
  }
  Parser_l_blockSequence__closure.builtin$cls = "Parser_l_blockSequence__closure";
  if (!"name" in Parser_l_blockSequence__closure)
    Parser_l_blockSequence__closure.name = "Parser_l_blockSequence__closure";
  $desc = $collectedClasses.Parser_l_blockSequence__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_blockSequence__closure.prototype = $desc;
  function Parser_l_blockSequence___closure(this_5, indent_6, additionalIndent_7) {
    this.this_5 = this_5;
    this.indent_6 = indent_6;
    this.additionalIndent_7 = additionalIndent_7;
  }
  Parser_l_blockSequence___closure.builtin$cls = "Parser_l_blockSequence___closure";
  if (!"name" in Parser_l_blockSequence___closure)
    Parser_l_blockSequence___closure.name = "Parser_l_blockSequence___closure";
  $desc = $collectedClasses.Parser_l_blockSequence___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_blockSequence___closure.prototype = $desc;
  function Parser_c_l_blockSeqEntry_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_c_l_blockSeqEntry_closure.builtin$cls = "Parser_c_l_blockSeqEntry_closure";
  if (!"name" in Parser_c_l_blockSeqEntry_closure)
    Parser_c_l_blockSeqEntry_closure.name = "Parser_c_l_blockSeqEntry_closure";
  $desc = $collectedClasses.Parser_c_l_blockSeqEntry_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_l_blockSeqEntry_closure.prototype = $desc;
  function Parser_s_l_blockIndented_closure(this_0, indent_1, additionalIndent_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.additionalIndent_2 = additionalIndent_2;
  }
  Parser_s_l_blockIndented_closure.builtin$cls = "Parser_s_l_blockIndented_closure";
  if (!"name" in Parser_s_l_blockIndented_closure)
    Parser_s_l_blockIndented_closure.name = "Parser_s_l_blockIndented_closure";
  $desc = $collectedClasses.Parser_s_l_blockIndented_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockIndented_closure.prototype = $desc;
  function Parser_s_l_blockIndented__closure(this_3, indent_4, additionalIndent_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.additionalIndent_5 = additionalIndent_5;
  }
  Parser_s_l_blockIndented__closure.builtin$cls = "Parser_s_l_blockIndented__closure";
  if (!"name" in Parser_s_l_blockIndented__closure)
    Parser_s_l_blockIndented__closure.name = "Parser_s_l_blockIndented__closure";
  $desc = $collectedClasses.Parser_s_l_blockIndented__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockIndented__closure.prototype = $desc;
  function Parser_s_l_blockIndented___closure(this_6, indent_7, additionalIndent_8) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
    this.additionalIndent_8 = additionalIndent_8;
  }
  Parser_s_l_blockIndented___closure.builtin$cls = "Parser_s_l_blockIndented___closure";
  if (!"name" in Parser_s_l_blockIndented___closure)
    Parser_s_l_blockIndented___closure.name = "Parser_s_l_blockIndented___closure";
  $desc = $collectedClasses.Parser_s_l_blockIndented___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockIndented___closure.prototype = $desc;
  function Parser_s_l_blockIndented___closure0(this_9, indent_10, additionalIndent_11) {
    this.this_9 = this_9;
    this.indent_10 = indent_10;
    this.additionalIndent_11 = additionalIndent_11;
  }
  Parser_s_l_blockIndented___closure0.builtin$cls = "Parser_s_l_blockIndented___closure0";
  if (!"name" in Parser_s_l_blockIndented___closure0)
    Parser_s_l_blockIndented___closure0.name = "Parser_s_l_blockIndented___closure0";
  $desc = $collectedClasses.Parser_s_l_blockIndented___closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockIndented___closure0.prototype = $desc;
  function Parser_s_l_blockIndented_closure0(this_12, indent_13, ctx_14) {
    this.this_12 = this_12;
    this.indent_13 = indent_13;
    this.ctx_14 = ctx_14;
  }
  Parser_s_l_blockIndented_closure0.builtin$cls = "Parser_s_l_blockIndented_closure0";
  if (!"name" in Parser_s_l_blockIndented_closure0)
    Parser_s_l_blockIndented_closure0.name = "Parser_s_l_blockIndented_closure0";
  $desc = $collectedClasses.Parser_s_l_blockIndented_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockIndented_closure0.prototype = $desc;
  function Parser_s_l_blockIndented_closure1(this_15) {
    this.this_15 = this_15;
  }
  Parser_s_l_blockIndented_closure1.builtin$cls = "Parser_s_l_blockIndented_closure1";
  if (!"name" in Parser_s_l_blockIndented_closure1)
    Parser_s_l_blockIndented_closure1.name = "Parser_s_l_blockIndented_closure1";
  $desc = $collectedClasses.Parser_s_l_blockIndented_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockIndented_closure1.prototype = $desc;
  function Parser_ns_l_compactSequence_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_ns_l_compactSequence_closure.builtin$cls = "Parser_ns_l_compactSequence_closure";
  if (!"name" in Parser_ns_l_compactSequence_closure)
    Parser_ns_l_compactSequence_closure.name = "Parser_ns_l_compactSequence_closure";
  $desc = $collectedClasses.Parser_ns_l_compactSequence_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_l_compactSequence_closure.prototype = $desc;
  function Parser_ns_l_compactSequence__closure(this_2, indent_3) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
  }
  Parser_ns_l_compactSequence__closure.builtin$cls = "Parser_ns_l_compactSequence__closure";
  if (!"name" in Parser_ns_l_compactSequence__closure)
    Parser_ns_l_compactSequence__closure.name = "Parser_ns_l_compactSequence__closure";
  $desc = $collectedClasses.Parser_ns_l_compactSequence__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_l_compactSequence__closure.prototype = $desc;
  function Parser_ns_l_compactSequence___closure(this_4, indent_5) {
    this.this_4 = this_4;
    this.indent_5 = indent_5;
  }
  Parser_ns_l_compactSequence___closure.builtin$cls = "Parser_ns_l_compactSequence___closure";
  if (!"name" in Parser_ns_l_compactSequence___closure)
    Parser_ns_l_compactSequence___closure.name = "Parser_ns_l_compactSequence___closure";
  $desc = $collectedClasses.Parser_ns_l_compactSequence___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_l_compactSequence___closure.prototype = $desc;
  function Parser_l_blockMapping_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_l_blockMapping_closure.builtin$cls = "Parser_l_blockMapping_closure";
  if (!"name" in Parser_l_blockMapping_closure)
    Parser_l_blockMapping_closure.name = "Parser_l_blockMapping_closure";
  $desc = $collectedClasses.Parser_l_blockMapping_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_blockMapping_closure.prototype = $desc;
  function Parser_l_blockMapping__closure(this_2, indent_3, additionalIndent_4) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
    this.additionalIndent_4 = additionalIndent_4;
  }
  Parser_l_blockMapping__closure.builtin$cls = "Parser_l_blockMapping__closure";
  if (!"name" in Parser_l_blockMapping__closure)
    Parser_l_blockMapping__closure.name = "Parser_l_blockMapping__closure";
  $desc = $collectedClasses.Parser_l_blockMapping__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_blockMapping__closure.prototype = $desc;
  function Parser_l_blockMapping___closure(this_5, indent_6, additionalIndent_7) {
    this.this_5 = this_5;
    this.indent_6 = indent_6;
    this.additionalIndent_7 = additionalIndent_7;
  }
  Parser_l_blockMapping___closure.builtin$cls = "Parser_l_blockMapping___closure";
  if (!"name" in Parser_l_blockMapping___closure)
    Parser_l_blockMapping___closure.name = "Parser_l_blockMapping___closure";
  $desc = $collectedClasses.Parser_l_blockMapping___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_blockMapping___closure.prototype = $desc;
  function Parser_ns_l_blockMapEntry_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_ns_l_blockMapEntry_closure.builtin$cls = "Parser_ns_l_blockMapEntry_closure";
  if (!"name" in Parser_ns_l_blockMapEntry_closure)
    Parser_ns_l_blockMapEntry_closure.name = "Parser_ns_l_blockMapEntry_closure";
  $desc = $collectedClasses.Parser_ns_l_blockMapEntry_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_l_blockMapEntry_closure.prototype = $desc;
  function Parser_ns_l_blockMapEntry_closure0(this_2, indent_3) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
  }
  Parser_ns_l_blockMapEntry_closure0.builtin$cls = "Parser_ns_l_blockMapEntry_closure0";
  if (!"name" in Parser_ns_l_blockMapEntry_closure0)
    Parser_ns_l_blockMapEntry_closure0.name = "Parser_ns_l_blockMapEntry_closure0";
  $desc = $collectedClasses.Parser_ns_l_blockMapEntry_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_l_blockMapEntry_closure0.prototype = $desc;
  function Parser_c_l_blockMapExplicitEntry_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_c_l_blockMapExplicitEntry_closure.builtin$cls = "Parser_c_l_blockMapExplicitEntry_closure";
  if (!"name" in Parser_c_l_blockMapExplicitEntry_closure)
    Parser_c_l_blockMapExplicitEntry_closure.name = "Parser_c_l_blockMapExplicitEntry_closure";
  $desc = $collectedClasses.Parser_c_l_blockMapExplicitEntry_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_l_blockMapExplicitEntry_closure.prototype = $desc;
  function Parser_c_l_blockMapExplicitKey_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_c_l_blockMapExplicitKey_closure.builtin$cls = "Parser_c_l_blockMapExplicitKey_closure";
  if (!"name" in Parser_c_l_blockMapExplicitKey_closure)
    Parser_c_l_blockMapExplicitKey_closure.name = "Parser_c_l_blockMapExplicitKey_closure";
  $desc = $collectedClasses.Parser_c_l_blockMapExplicitKey_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_l_blockMapExplicitKey_closure.prototype = $desc;
  function Parser_l_blockMapExplicitValue_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_l_blockMapExplicitValue_closure.builtin$cls = "Parser_l_blockMapExplicitValue_closure";
  if (!"name" in Parser_l_blockMapExplicitValue_closure)
    Parser_l_blockMapExplicitValue_closure.name = "Parser_l_blockMapExplicitValue_closure";
  $desc = $collectedClasses.Parser_l_blockMapExplicitValue_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_blockMapExplicitValue_closure.prototype = $desc;
  function Parser_ns_l_blockMapImplicitEntry_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_ns_l_blockMapImplicitEntry_closure.builtin$cls = "Parser_ns_l_blockMapImplicitEntry_closure";
  if (!"name" in Parser_ns_l_blockMapImplicitEntry_closure)
    Parser_ns_l_blockMapImplicitEntry_closure.name = "Parser_ns_l_blockMapImplicitEntry_closure";
  $desc = $collectedClasses.Parser_ns_l_blockMapImplicitEntry_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_l_blockMapImplicitEntry_closure.prototype = $desc;
  function Parser_ns_s_blockMapImplicitKey_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_ns_s_blockMapImplicitKey_closure.builtin$cls = "Parser_ns_s_blockMapImplicitKey_closure";
  if (!"name" in Parser_ns_s_blockMapImplicitKey_closure)
    Parser_ns_s_blockMapImplicitKey_closure.name = "Parser_ns_s_blockMapImplicitKey_closure";
  $desc = $collectedClasses.Parser_ns_s_blockMapImplicitKey_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_s_blockMapImplicitKey_closure.prototype = $desc;
  function Parser_ns_s_blockMapImplicitKey__closure(this_1) {
    this.this_1 = this_1;
  }
  Parser_ns_s_blockMapImplicitKey__closure.builtin$cls = "Parser_ns_s_blockMapImplicitKey__closure";
  if (!"name" in Parser_ns_s_blockMapImplicitKey__closure)
    Parser_ns_s_blockMapImplicitKey__closure.name = "Parser_ns_s_blockMapImplicitKey__closure";
  $desc = $collectedClasses.Parser_ns_s_blockMapImplicitKey__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_s_blockMapImplicitKey__closure.prototype = $desc;
  function Parser_ns_s_blockMapImplicitKey__closure0(this_2) {
    this.this_2 = this_2;
  }
  Parser_ns_s_blockMapImplicitKey__closure0.builtin$cls = "Parser_ns_s_blockMapImplicitKey__closure0";
  if (!"name" in Parser_ns_s_blockMapImplicitKey__closure0)
    Parser_ns_s_blockMapImplicitKey__closure0.name = "Parser_ns_s_blockMapImplicitKey__closure0";
  $desc = $collectedClasses.Parser_ns_s_blockMapImplicitKey__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_s_blockMapImplicitKey__closure0.prototype = $desc;
  function Parser_c_l_blockMapImplicitValue_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_c_l_blockMapImplicitValue_closure.builtin$cls = "Parser_c_l_blockMapImplicitValue_closure";
  if (!"name" in Parser_c_l_blockMapImplicitValue_closure)
    Parser_c_l_blockMapImplicitValue_closure.name = "Parser_c_l_blockMapImplicitValue_closure";
  $desc = $collectedClasses.Parser_c_l_blockMapImplicitValue_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_l_blockMapImplicitValue_closure.prototype = $desc;
  function Parser_c_l_blockMapImplicitValue__closure(this_2, indent_3) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
  }
  Parser_c_l_blockMapImplicitValue__closure.builtin$cls = "Parser_c_l_blockMapImplicitValue__closure";
  if (!"name" in Parser_c_l_blockMapImplicitValue__closure)
    Parser_c_l_blockMapImplicitValue__closure.name = "Parser_c_l_blockMapImplicitValue__closure";
  $desc = $collectedClasses.Parser_c_l_blockMapImplicitValue__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_l_blockMapImplicitValue__closure.prototype = $desc;
  function Parser_c_l_blockMapImplicitValue___closure(this_4, indent_5) {
    this.this_4 = this_4;
    this.indent_5 = indent_5;
  }
  Parser_c_l_blockMapImplicitValue___closure.builtin$cls = "Parser_c_l_blockMapImplicitValue___closure";
  if (!"name" in Parser_c_l_blockMapImplicitValue___closure)
    Parser_c_l_blockMapImplicitValue___closure.name = "Parser_c_l_blockMapImplicitValue___closure";
  $desc = $collectedClasses.Parser_c_l_blockMapImplicitValue___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_l_blockMapImplicitValue___closure.prototype = $desc;
  function Parser_c_l_blockMapImplicitValue___closure0(this_6) {
    this.this_6 = this_6;
  }
  Parser_c_l_blockMapImplicitValue___closure0.builtin$cls = "Parser_c_l_blockMapImplicitValue___closure0";
  if (!"name" in Parser_c_l_blockMapImplicitValue___closure0)
    Parser_c_l_blockMapImplicitValue___closure0.name = "Parser_c_l_blockMapImplicitValue___closure0";
  $desc = $collectedClasses.Parser_c_l_blockMapImplicitValue___closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_l_blockMapImplicitValue___closure0.prototype = $desc;
  function Parser_ns_l_compactMapping_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_ns_l_compactMapping_closure.builtin$cls = "Parser_ns_l_compactMapping_closure";
  if (!"name" in Parser_ns_l_compactMapping_closure)
    Parser_ns_l_compactMapping_closure.name = "Parser_ns_l_compactMapping_closure";
  $desc = $collectedClasses.Parser_ns_l_compactMapping_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_l_compactMapping_closure.prototype = $desc;
  function Parser_ns_l_compactMapping__closure(this_2, indent_3) {
    this.this_2 = this_2;
    this.indent_3 = indent_3;
  }
  Parser_ns_l_compactMapping__closure.builtin$cls = "Parser_ns_l_compactMapping__closure";
  if (!"name" in Parser_ns_l_compactMapping__closure)
    Parser_ns_l_compactMapping__closure.name = "Parser_ns_l_compactMapping__closure";
  $desc = $collectedClasses.Parser_ns_l_compactMapping__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_l_compactMapping__closure.prototype = $desc;
  function Parser_ns_l_compactMapping___closure(this_4, indent_5) {
    this.this_4 = this_4;
    this.indent_5 = indent_5;
  }
  Parser_ns_l_compactMapping___closure.builtin$cls = "Parser_ns_l_compactMapping___closure";
  if (!"name" in Parser_ns_l_compactMapping___closure)
    Parser_ns_l_compactMapping___closure.name = "Parser_ns_l_compactMapping___closure";
  $desc = $collectedClasses.Parser_ns_l_compactMapping___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_ns_l_compactMapping___closure.prototype = $desc;
  function Parser_s_l_blockNode_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_s_l_blockNode_closure.builtin$cls = "Parser_s_l_blockNode_closure";
  if (!"name" in Parser_s_l_blockNode_closure)
    Parser_s_l_blockNode_closure.name = "Parser_s_l_blockNode_closure";
  $desc = $collectedClasses.Parser_s_l_blockNode_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockNode_closure.prototype = $desc;
  function Parser_s_l_blockNode_closure0(this_3, indent_4) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
  }
  Parser_s_l_blockNode_closure0.builtin$cls = "Parser_s_l_blockNode_closure0";
  if (!"name" in Parser_s_l_blockNode_closure0)
    Parser_s_l_blockNode_closure0.name = "Parser_s_l_blockNode_closure0";
  $desc = $collectedClasses.Parser_s_l_blockNode_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockNode_closure0.prototype = $desc;
  function Parser_s_l_flowInBlock_closure(this_0, indent_1) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
  }
  Parser_s_l_flowInBlock_closure.builtin$cls = "Parser_s_l_flowInBlock_closure";
  if (!"name" in Parser_s_l_flowInBlock_closure)
    Parser_s_l_flowInBlock_closure.name = "Parser_s_l_flowInBlock_closure";
  $desc = $collectedClasses.Parser_s_l_flowInBlock_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_flowInBlock_closure.prototype = $desc;
  function Parser_s_l_blockInBlock_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_s_l_blockInBlock_closure.builtin$cls = "Parser_s_l_blockInBlock_closure";
  if (!"name" in Parser_s_l_blockInBlock_closure)
    Parser_s_l_blockInBlock_closure.name = "Parser_s_l_blockInBlock_closure";
  $desc = $collectedClasses.Parser_s_l_blockInBlock_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockInBlock_closure.prototype = $desc;
  function Parser_s_l_blockInBlock_closure0(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_s_l_blockInBlock_closure0.builtin$cls = "Parser_s_l_blockInBlock_closure0";
  if (!"name" in Parser_s_l_blockInBlock_closure0)
    Parser_s_l_blockInBlock_closure0.name = "Parser_s_l_blockInBlock_closure0";
  $desc = $collectedClasses.Parser_s_l_blockInBlock_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockInBlock_closure0.prototype = $desc;
  function Parser_s_l_blockScalar_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_s_l_blockScalar_closure.builtin$cls = "Parser_s_l_blockScalar_closure";
  if (!"name" in Parser_s_l_blockScalar_closure)
    Parser_s_l_blockScalar_closure.name = "Parser_s_l_blockScalar_closure";
  $desc = $collectedClasses.Parser_s_l_blockScalar_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockScalar_closure.prototype = $desc;
  function Parser_s_l_blockScalar__closure(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_s_l_blockScalar__closure.builtin$cls = "Parser_s_l_blockScalar__closure";
  if (!"name" in Parser_s_l_blockScalar__closure)
    Parser_s_l_blockScalar__closure.name = "Parser_s_l_blockScalar__closure";
  $desc = $collectedClasses.Parser_s_l_blockScalar__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockScalar__closure.prototype = $desc;
  function Parser_s_l_blockScalar__closure0(this_6, indent_7) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
  }
  Parser_s_l_blockScalar__closure0.builtin$cls = "Parser_s_l_blockScalar__closure0";
  if (!"name" in Parser_s_l_blockScalar__closure0)
    Parser_s_l_blockScalar__closure0.name = "Parser_s_l_blockScalar__closure0";
  $desc = $collectedClasses.Parser_s_l_blockScalar__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockScalar__closure0.prototype = $desc;
  function Parser_s_l_blockScalar__closure1(this_8, indent_9) {
    this.this_8 = this_8;
    this.indent_9 = indent_9;
  }
  Parser_s_l_blockScalar__closure1.builtin$cls = "Parser_s_l_blockScalar__closure1";
  if (!"name" in Parser_s_l_blockScalar__closure1)
    Parser_s_l_blockScalar__closure1.name = "Parser_s_l_blockScalar__closure1";
  $desc = $collectedClasses.Parser_s_l_blockScalar__closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockScalar__closure1.prototype = $desc;
  function Parser_s_l_blockCollection_closure(this_0, indent_1, ctx_2) {
    this.this_0 = this_0;
    this.indent_1 = indent_1;
    this.ctx_2 = ctx_2;
  }
  Parser_s_l_blockCollection_closure.builtin$cls = "Parser_s_l_blockCollection_closure";
  if (!"name" in Parser_s_l_blockCollection_closure)
    Parser_s_l_blockCollection_closure.name = "Parser_s_l_blockCollection_closure";
  $desc = $collectedClasses.Parser_s_l_blockCollection_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockCollection_closure.prototype = $desc;
  function Parser_s_l_blockCollection__closure(this_3, indent_4, ctx_5) {
    this.this_3 = this_3;
    this.indent_4 = indent_4;
    this.ctx_5 = ctx_5;
  }
  Parser_s_l_blockCollection__closure.builtin$cls = "Parser_s_l_blockCollection__closure";
  if (!"name" in Parser_s_l_blockCollection__closure)
    Parser_s_l_blockCollection__closure.name = "Parser_s_l_blockCollection__closure";
  $desc = $collectedClasses.Parser_s_l_blockCollection__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockCollection__closure.prototype = $desc;
  function Parser_s_l_blockCollection__closure0(this_6, indent_7, ctx_8) {
    this.this_6 = this_6;
    this.indent_7 = indent_7;
    this.ctx_8 = ctx_8;
  }
  Parser_s_l_blockCollection__closure0.builtin$cls = "Parser_s_l_blockCollection__closure0";
  if (!"name" in Parser_s_l_blockCollection__closure0)
    Parser_s_l_blockCollection__closure0.name = "Parser_s_l_blockCollection__closure0";
  $desc = $collectedClasses.Parser_s_l_blockCollection__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockCollection__closure0.prototype = $desc;
  function Parser_s_l_blockCollection__closure1(this_9, indent_10) {
    this.this_9 = this_9;
    this.indent_10 = indent_10;
  }
  Parser_s_l_blockCollection__closure1.builtin$cls = "Parser_s_l_blockCollection__closure1";
  if (!"name" in Parser_s_l_blockCollection__closure1)
    Parser_s_l_blockCollection__closure1.name = "Parser_s_l_blockCollection__closure1";
  $desc = $collectedClasses.Parser_s_l_blockCollection__closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_s_l_blockCollection__closure1.prototype = $desc;
  function Parser_l_documentSuffix_closure(this_0) {
    this.this_0 = this_0;
  }
  Parser_l_documentSuffix_closure.builtin$cls = "Parser_l_documentSuffix_closure";
  if (!"name" in Parser_l_documentSuffix_closure)
    Parser_l_documentSuffix_closure.name = "Parser_l_documentSuffix_closure";
  $desc = $collectedClasses.Parser_l_documentSuffix_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_documentSuffix_closure.prototype = $desc;
  function Parser_c_forbidden_closure(box_0, this_1) {
    this.box_0 = box_0;
    this.this_1 = this_1;
  }
  Parser_c_forbidden_closure.builtin$cls = "Parser_c_forbidden_closure";
  if (!"name" in Parser_c_forbidden_closure)
    Parser_c_forbidden_closure.name = "Parser_c_forbidden_closure";
  $desc = $collectedClasses.Parser_c_forbidden_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_c_forbidden_closure.prototype = $desc;
  function Parser_l_yamlStream_closure(this_0, docs_1) {
    this.this_0 = this_0;
    this.docs_1 = docs_1;
  }
  Parser_l_yamlStream_closure.builtin$cls = "Parser_l_yamlStream_closure";
  if (!"name" in Parser_l_yamlStream_closure)
    Parser_l_yamlStream_closure.name = "Parser_l_yamlStream_closure";
  $desc = $collectedClasses.Parser_l_yamlStream_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser_l_yamlStream_closure.prototype = $desc;
  function SyntaxError(_line, _column, _msg) {
    this._line = _line;
    this._column = _column;
    this._msg = _msg;
  }
  SyntaxError.builtin$cls = "SyntaxError";
  if (!"name" in SyntaxError)
    SyntaxError.name = "SyntaxError";
  $desc = $collectedClasses.SyntaxError;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SyntaxError.prototype = $desc;
  function _Pair(first, last) {
    this.first = first;
    this.last = last;
  }
  _Pair.builtin$cls = "_Pair";
  if (!"name" in _Pair)
    _Pair.name = "_Pair";
  $desc = $collectedClasses._Pair;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Pair.prototype = $desc;
  _Pair.prototype.get$first = function(receiver) {
    return this.first;
  };
  _Pair.prototype.get$last = function(receiver) {
    return this.last;
  };
  function _BlockHeader(additionalIndent, chomping) {
    this.additionalIndent = additionalIndent;
    this.chomping = chomping;
  }
  _BlockHeader.builtin$cls = "_BlockHeader";
  if (!"name" in _BlockHeader)
    _BlockHeader.name = "_BlockHeader";
  $desc = $collectedClasses._BlockHeader;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BlockHeader.prototype = $desc;
  _BlockHeader.prototype.get$additionalIndent = function() {
    return this.additionalIndent;
  };
  _BlockHeader.prototype.get$chomping = function() {
    return this.chomping;
  };
  function _Range(start, end) {
    this.start = start;
    this.end = end;
  }
  _Range.builtin$cls = "_Range";
  if (!"name" in _Range)
    _Range.name = "_Range";
  $desc = $collectedClasses._Range;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Range.prototype = $desc;
  function _RangeMap(_parser$_contents) {
    this._parser$_contents = _parser$_contents;
  }
  _RangeMap.builtin$cls = "_RangeMap";
  if (!"name" in _RangeMap)
    _RangeMap.name = "_RangeMap";
  $desc = $collectedClasses._RangeMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _RangeMap.prototype = $desc;
  function Context(style, current) {
    this.style = style;
    this.current = current;
  }
  Context.builtin$cls = "Context";
  if (!"name" in Context)
    Context.name = "Context";
  $desc = $collectedClasses.Context;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Context.prototype = $desc;
  function Context_join_closure() {
  }
  Context_join_closure.builtin$cls = "Context_join_closure";
  if (!"name" in Context_join_closure)
    Context_join_closure.name = "Context_join_closure";
  $desc = $collectedClasses.Context_join_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Context_join_closure.prototype = $desc;
  function Context_joinAll_closure() {
  }
  Context_joinAll_closure.builtin$cls = "Context_joinAll_closure";
  if (!"name" in Context_joinAll_closure)
    Context_joinAll_closure.name = "Context_joinAll_closure";
  $desc = $collectedClasses.Context_joinAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Context_joinAll_closure.prototype = $desc;
  function Context_split_closure() {
  }
  Context_split_closure.builtin$cls = "Context_split_closure";
  if (!"name" in Context_split_closure)
    Context_split_closure.name = "Context_split_closure";
  $desc = $collectedClasses.Context_split_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Context_split_closure.prototype = $desc;
  function _validateArgList_closure() {
  }
  _validateArgList_closure.builtin$cls = "_validateArgList_closure";
  if (!"name" in _validateArgList_closure)
    _validateArgList_closure.name = "_validateArgList_closure";
  $desc = $collectedClasses._validateArgList_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _validateArgList_closure.prototype = $desc;
  function ParsedPath(style, root, isRootRelative, parts, separators) {
    this.style = style;
    this.root = root;
    this.isRootRelative = isRootRelative;
    this.parts = parts;
    this.separators = separators;
  }
  ParsedPath.builtin$cls = "ParsedPath";
  if (!"name" in ParsedPath)
    ParsedPath.name = "ParsedPath";
  $desc = $collectedClasses.ParsedPath;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ParsedPath.prototype = $desc;
  function Style(relativeRootPattern) {
    this.relativeRootPattern = relativeRootPattern;
  }
  Style.builtin$cls = "Style";
  if (!"name" in Style)
    Style.name = "Style";
  $desc = $collectedClasses.Style;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Style.prototype = $desc;
  Style.prototype.get$relativeRootPattern = function() {
    return this.relativeRootPattern;
  };
  function PosixStyle(name, separator, separatorPattern, needsSeparatorPattern, rootPattern, relativeRootPattern) {
    this.name = name;
    this.separator = separator;
    this.separatorPattern = separatorPattern;
    this.needsSeparatorPattern = needsSeparatorPattern;
    this.rootPattern = rootPattern;
    this.relativeRootPattern = relativeRootPattern;
  }
  PosixStyle.builtin$cls = "PosixStyle";
  if (!"name" in PosixStyle)
    PosixStyle.name = "PosixStyle";
  $desc = $collectedClasses.PosixStyle;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PosixStyle.prototype = $desc;
  PosixStyle.prototype.get$name = function(receiver) {
    return this.name;
  };
  PosixStyle.prototype.get$separator = function() {
    return this.separator;
  };
  PosixStyle.prototype.get$separatorPattern = function() {
    return this.separatorPattern;
  };
  PosixStyle.prototype.get$needsSeparatorPattern = function() {
    return this.needsSeparatorPattern;
  };
  PosixStyle.prototype.get$rootPattern = function() {
    return this.rootPattern;
  };
  function UrlStyle(name, separator, separatorPattern, needsSeparatorPattern, rootPattern, url0$UrlStyle$relativeRootPattern, relativeRootPattern) {
    this.name = name;
    this.separator = separator;
    this.separatorPattern = separatorPattern;
    this.needsSeparatorPattern = needsSeparatorPattern;
    this.rootPattern = rootPattern;
    this.url0$UrlStyle$relativeRootPattern = url0$UrlStyle$relativeRootPattern;
    this.relativeRootPattern = relativeRootPattern;
  }
  UrlStyle.builtin$cls = "UrlStyle";
  if (!"name" in UrlStyle)
    UrlStyle.name = "UrlStyle";
  $desc = $collectedClasses.UrlStyle;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UrlStyle.prototype = $desc;
  UrlStyle.prototype.get$name = function(receiver) {
    return this.name;
  };
  UrlStyle.prototype.get$separator = function() {
    return this.separator;
  };
  UrlStyle.prototype.get$separatorPattern = function() {
    return this.separatorPattern;
  };
  UrlStyle.prototype.get$needsSeparatorPattern = function() {
    return this.needsSeparatorPattern;
  };
  UrlStyle.prototype.get$rootPattern = function() {
    return this.rootPattern;
  };
  UrlStyle.prototype.get$relativeRootPattern = function() {
    return this.url0$UrlStyle$relativeRootPattern;
  };
  function WindowsStyle(name, separator, separatorPattern, needsSeparatorPattern, rootPattern, windows$WindowsStyle$relativeRootPattern, relativeRootPattern) {
    this.name = name;
    this.separator = separator;
    this.separatorPattern = separatorPattern;
    this.needsSeparatorPattern = needsSeparatorPattern;
    this.rootPattern = rootPattern;
    this.windows$WindowsStyle$relativeRootPattern = windows$WindowsStyle$relativeRootPattern;
    this.relativeRootPattern = relativeRootPattern;
  }
  WindowsStyle.builtin$cls = "WindowsStyle";
  if (!"name" in WindowsStyle)
    WindowsStyle.name = "WindowsStyle";
  $desc = $collectedClasses.WindowsStyle;
  if ($desc instanceof Array)
    $desc = $desc[1];
  WindowsStyle.prototype = $desc;
  WindowsStyle.prototype.get$name = function(receiver) {
    return this.name;
  };
  WindowsStyle.prototype.get$separator = function() {
    return this.separator;
  };
  WindowsStyle.prototype.get$separatorPattern = function() {
    return this.separatorPattern;
  };
  WindowsStyle.prototype.get$needsSeparatorPattern = function() {
    return this.needsSeparatorPattern;
  };
  WindowsStyle.prototype.get$rootPattern = function() {
    return this.rootPattern;
  };
  WindowsStyle.prototype.get$relativeRootPattern = function() {
    return this.windows$WindowsStyle$relativeRootPattern;
  };
  function _preventFlashOfUnstyledContent_closure() {
  }
  _preventFlashOfUnstyledContent_closure.builtin$cls = "_preventFlashOfUnstyledContent_closure";
  if (!"name" in _preventFlashOfUnstyledContent_closure)
    _preventFlashOfUnstyledContent_closure.name = "_preventFlashOfUnstyledContent_closure";
  $desc = $collectedClasses._preventFlashOfUnstyledContent_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _preventFlashOfUnstyledContent_closure.prototype = $desc;
  function PolymerDeclaration(_type, _supertype, _super, _polymer$_name, _publish, _publishLC, _observe, _instanceAttributes, _sheets, _styles, _eventDelegates, _templateDelegates) {
    this._type = _type;
    this._supertype = _supertype;
    this._super = _super;
    this._polymer$_name = _polymer$_name;
    this._publish = _publish;
    this._publishLC = _publishLC;
    this._observe = _observe;
    this._instanceAttributes = _instanceAttributes;
    this._sheets = _sheets;
    this._styles = _styles;
    this._eventDelegates = _eventDelegates;
    this._templateDelegates = _templateDelegates;
  }
  PolymerDeclaration.builtin$cls = "PolymerDeclaration";
  if (!"name" in PolymerDeclaration)
    PolymerDeclaration.name = "PolymerDeclaration";
  $desc = $collectedClasses.PolymerDeclaration;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolymerDeclaration.prototype = $desc;
  PolymerDeclaration.prototype.get$_publish = function(receiver) {
    return receiver._publish;
  };
  PolymerDeclaration.prototype.get$_publishLC = function(receiver) {
    return receiver._publishLC;
  };
  PolymerDeclaration.prototype.get$_observe = function(receiver) {
    return receiver._observe;
  };
  PolymerDeclaration.prototype.get$_instanceAttributes = function(receiver) {
    return receiver._instanceAttributes;
  };
  PolymerDeclaration.prototype.get$_eventDelegates = function(receiver) {
    return receiver._eventDelegates;
  };
  function PolymerDeclaration_waitingForExtendee_closure() {
  }
  PolymerDeclaration_waitingForExtendee_closure.builtin$cls = "PolymerDeclaration_waitingForExtendee_closure";
  if (!"name" in PolymerDeclaration_waitingForExtendee_closure)
    PolymerDeclaration_waitingForExtendee_closure.name = "PolymerDeclaration_waitingForExtendee_closure";
  $desc = $collectedClasses.PolymerDeclaration_waitingForExtendee_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolymerDeclaration_waitingForExtendee_closure.prototype = $desc;
  function PolymerDeclaration_accumulateInstanceAttributes_closure(this_0) {
    this.this_0 = this_0;
  }
  PolymerDeclaration_accumulateInstanceAttributes_closure.builtin$cls = "PolymerDeclaration_accumulateInstanceAttributes_closure";
  if (!"name" in PolymerDeclaration_accumulateInstanceAttributes_closure)
    PolymerDeclaration_accumulateInstanceAttributes_closure.name = "PolymerDeclaration_accumulateInstanceAttributes_closure";
  $desc = $collectedClasses.PolymerDeclaration_accumulateInstanceAttributes_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolymerDeclaration_accumulateInstanceAttributes_closure.prototype = $desc;
  function PolymerDeclaration_addAttributeDelegates_closure(delegates_0) {
    this.delegates_0 = delegates_0;
  }
  PolymerDeclaration_addAttributeDelegates_closure.builtin$cls = "PolymerDeclaration_addAttributeDelegates_closure";
  if (!"name" in PolymerDeclaration_addAttributeDelegates_closure)
    PolymerDeclaration_addAttributeDelegates_closure.name = "PolymerDeclaration_addAttributeDelegates_closure";
  $desc = $collectedClasses.PolymerDeclaration_addAttributeDelegates_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolymerDeclaration_addAttributeDelegates_closure.prototype = $desc;
  function PolymerDeclaration_installLocalSheets_closure() {
  }
  PolymerDeclaration_installLocalSheets_closure.builtin$cls = "PolymerDeclaration_installLocalSheets_closure";
  if (!"name" in PolymerDeclaration_installLocalSheets_closure)
    PolymerDeclaration_installLocalSheets_closure.name = "PolymerDeclaration_installLocalSheets_closure";
  $desc = $collectedClasses.PolymerDeclaration_installLocalSheets_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolymerDeclaration_installLocalSheets_closure.prototype = $desc;
  function PolymerDeclaration_cssTextForScope_matcher(selector_0) {
    this.selector_0 = selector_0;
  }
  PolymerDeclaration_cssTextForScope_matcher.builtin$cls = "PolymerDeclaration_cssTextForScope_matcher";
  if (!"name" in PolymerDeclaration_cssTextForScope_matcher)
    PolymerDeclaration_cssTextForScope_matcher.name = "PolymerDeclaration_cssTextForScope_matcher";
  $desc = $collectedClasses.PolymerDeclaration_cssTextForScope_matcher;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolymerDeclaration_cssTextForScope_matcher.prototype = $desc;
  function PolymerDeclaration__lowerCaseMap_closure(map_0) {
    this.map_0 = map_0;
  }
  PolymerDeclaration__lowerCaseMap_closure.builtin$cls = "PolymerDeclaration__lowerCaseMap_closure";
  if (!"name" in PolymerDeclaration__lowerCaseMap_closure)
    PolymerDeclaration__lowerCaseMap_closure.name = "PolymerDeclaration__lowerCaseMap_closure";
  $desc = $collectedClasses.PolymerDeclaration__lowerCaseMap_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolymerDeclaration__lowerCaseMap_closure.prototype = $desc;
  function closure4() {
  }
  closure4.builtin$cls = "closure4";
  if (!"name" in closure4)
    closure4.name = "closure4";
  $desc = $collectedClasses.closure4;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure4.prototype = $desc;
  function _closure7(map_0) {
    this.map_0 = map_0;
  }
  _closure7.builtin$cls = "_closure7";
  if (!"name" in _closure7)
    _closure7.name = "_closure7";
  $desc = $collectedClasses._closure7;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _closure7.prototype = $desc;
  function PublishedProperty() {
  }
  PublishedProperty.builtin$cls = "PublishedProperty";
  if (!"name" in PublishedProperty)
    PublishedProperty.name = "PublishedProperty";
  $desc = $collectedClasses.PublishedProperty;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PublishedProperty.prototype = $desc;
  function Polymer(polymer$Polymer$syntax, polymer$Polymer$$) {
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  Polymer.builtin$cls = "Polymer";
  if (!"name" in Polymer)
    Polymer.name = "Polymer";
  $desc = $collectedClasses.Polymer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Polymer.prototype = $desc;
  Polymer.prototype.get$syntax = function(receiver) {
    return receiver.polymer$Polymer$syntax;
  };
  Polymer.prototype.get$$$ = function(receiver) {
    return receiver.polymer$Polymer$$;
  };
  Polymer.prototype.get$$$.$reflectable = 1;
  function Polymer_onMutation_closure(completer_0) {
    this.completer_0 = completer_0;
  }
  Polymer_onMutation_closure.builtin$cls = "Polymer_onMutation_closure";
  if (!"name" in Polymer_onMutation_closure)
    Polymer_onMutation_closure.name = "Polymer_onMutation_closure";
  $desc = $collectedClasses.Polymer_onMutation_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Polymer_onMutation_closure.prototype = $desc;
  function Polymer_copyInstanceAttributes_closure(this_0) {
    this.this_0 = this_0;
  }
  Polymer_copyInstanceAttributes_closure.builtin$cls = "Polymer_copyInstanceAttributes_closure";
  if (!"name" in Polymer_copyInstanceAttributes_closure)
    Polymer_copyInstanceAttributes_closure.name = "Polymer_copyInstanceAttributes_closure";
  $desc = $collectedClasses.Polymer_copyInstanceAttributes_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Polymer_copyInstanceAttributes_closure.prototype = $desc;
  function Polymer_copyInstanceAttributes__closure(value_1) {
    this.value_1 = value_1;
  }
  Polymer_copyInstanceAttributes__closure.builtin$cls = "Polymer_copyInstanceAttributes__closure";
  if (!"name" in Polymer_copyInstanceAttributes__closure)
    Polymer_copyInstanceAttributes__closure.name = "Polymer_copyInstanceAttributes__closure";
  $desc = $collectedClasses.Polymer_copyInstanceAttributes__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Polymer_copyInstanceAttributes__closure.prototype = $desc;
  function Polymer_cancelUnbindAll_closure() {
  }
  Polymer_cancelUnbindAll_closure.builtin$cls = "Polymer_cancelUnbindAll_closure";
  if (!"name" in Polymer_cancelUnbindAll_closure)
    Polymer_cancelUnbindAll_closure.name = "Polymer_cancelUnbindAll_closure";
  $desc = $collectedClasses.Polymer_cancelUnbindAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Polymer_cancelUnbindAll_closure.prototype = $desc;
  function Polymer__unbindNodeTree_closure() {
  }
  Polymer__unbindNodeTree_closure.builtin$cls = "Polymer__unbindNodeTree_closure";
  if (!"name" in Polymer__unbindNodeTree_closure)
    Polymer__unbindNodeTree_closure.name = "Polymer__unbindNodeTree_closure";
  $desc = $collectedClasses.Polymer__unbindNodeTree_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Polymer__unbindNodeTree_closure.prototype = $desc;
  function Polymer_notifyPropertyChanges_closure(c_0) {
    this.c_0 = c_0;
  }
  Polymer_notifyPropertyChanges_closure.builtin$cls = "Polymer_notifyPropertyChanges_closure";
  if (!"name" in Polymer_notifyPropertyChanges_closure)
    Polymer_notifyPropertyChanges_closure.name = "Polymer_notifyPropertyChanges_closure";
  $desc = $collectedClasses.Polymer_notifyPropertyChanges_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Polymer_notifyPropertyChanges_closure.prototype = $desc;
  function Polymer_notifyPropertyChanges_closure0(this_1, changes_2, observe_3, publish_4) {
    this.this_1 = this_1;
    this.changes_2 = changes_2;
    this.observe_3 = observe_3;
    this.publish_4 = publish_4;
  }
  Polymer_notifyPropertyChanges_closure0.builtin$cls = "Polymer_notifyPropertyChanges_closure0";
  if (!"name" in Polymer_notifyPropertyChanges_closure0)
    Polymer_notifyPropertyChanges_closure0.name = "Polymer_notifyPropertyChanges_closure0";
  $desc = $collectedClasses.Polymer_notifyPropertyChanges_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Polymer_notifyPropertyChanges_closure0.prototype = $desc;
  function Polymer_observeArrayValue_closure(this_0, old_1, callbackName_2) {
    this.this_0 = this_0;
    this.old_1 = old_1;
    this.callbackName_2 = callbackName_2;
  }
  Polymer_observeArrayValue_closure.builtin$cls = "Polymer_observeArrayValue_closure";
  if (!"name" in Polymer_observeArrayValue_closure)
    Polymer_observeArrayValue_closure.name = "Polymer_observeArrayValue_closure";
  $desc = $collectedClasses.Polymer_observeArrayValue_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Polymer_observeArrayValue_closure.prototype = $desc;
  function Polymer_prepareBinding_closure(path_0, name_1) {
    this.path_0 = path_0;
    this.name_1 = name_1;
  }
  Polymer_prepareBinding_closure.builtin$cls = "Polymer_prepareBinding_closure";
  if (!"name" in Polymer_prepareBinding_closure)
    Polymer_prepareBinding_closure.name = "Polymer_prepareBinding_closure";
  $desc = $collectedClasses.Polymer_prepareBinding_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Polymer_prepareBinding_closure.prototype = $desc;
  function Polymer_prepareBinding__closure(path_2, model_3, node_4) {
    this.path_2 = path_2;
    this.model_3 = model_3;
    this.node_4 = node_4;
  }
  Polymer_prepareBinding__closure.builtin$cls = "Polymer_prepareBinding__closure";
  if (!"name" in Polymer_prepareBinding__closure)
    Polymer_prepareBinding__closure.name = "Polymer_prepareBinding__closure";
  $desc = $collectedClasses.Polymer_prepareBinding__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Polymer_prepareBinding__closure.prototype = $desc;
  function Polymer__invokeMethod_closure() {
  }
  Polymer__invokeMethod_closure.builtin$cls = "Polymer__invokeMethod_closure";
  if (!"name" in Polymer__invokeMethod_closure)
    Polymer__invokeMethod_closure.name = "Polymer__invokeMethod_closure";
  $desc = $collectedClasses.Polymer__invokeMethod_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Polymer__invokeMethod_closure.prototype = $desc;
  function Polymer_unveilElements_closure() {
  }
  Polymer_unveilElements_closure.builtin$cls = "Polymer_unveilElements_closure";
  if (!"name" in Polymer_unveilElements_closure)
    Polymer_unveilElements_closure.name = "Polymer_unveilElements_closure";
  $desc = $collectedClasses.Polymer_unveilElements_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Polymer_unveilElements_closure.prototype = $desc;
  function Polymer_unveilElements__closure(nodes_0) {
    this.nodes_0 = nodes_0;
  }
  Polymer_unveilElements__closure.builtin$cls = "Polymer_unveilElements__closure";
  if (!"name" in Polymer_unveilElements__closure)
    Polymer_unveilElements__closure.name = "Polymer_unveilElements__closure";
  $desc = $collectedClasses.Polymer_unveilElements__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Polymer_unveilElements__closure.prototype = $desc;
  function _PolymerBinding(_polymer$_target, _property, _sub, _lastValue, _node_binding$_node, _model, _observer, _pathSub, property, path) {
    this._polymer$_target = _polymer$_target;
    this._property = _property;
    this._sub = _sub;
    this._lastValue = _lastValue;
    this._node_binding$_node = _node_binding$_node;
    this._model = _model;
    this._observer = _observer;
    this._pathSub = _pathSub;
    this.property = property;
    this.path = path;
  }
  _PolymerBinding.builtin$cls = "_PolymerBinding";
  if (!"name" in _PolymerBinding)
    _PolymerBinding.name = "_PolymerBinding";
  $desc = $collectedClasses._PolymerBinding;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _PolymerBinding.prototype = $desc;
  function PolymerElement(change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  PolymerElement.builtin$cls = "PolymerElement";
  if (!"name" in PolymerElement)
    PolymerElement.name = "PolymerElement";
  $desc = $collectedClasses.PolymerElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolymerElement.prototype = $desc;
  function HtmlElement_Polymer(polymer$Polymer$syntax, polymer$Polymer$$) {
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  HtmlElement_Polymer.builtin$cls = "HtmlElement_Polymer";
  if (!"name" in HtmlElement_Polymer)
    HtmlElement_Polymer.name = "HtmlElement_Polymer";
  $desc = $collectedClasses.HtmlElement_Polymer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HtmlElement_Polymer.prototype = $desc;
  Polymer.prototype.get$syntax = function(receiver) {
    return receiver.polymer$Polymer$syntax;
  };
  Polymer.prototype.get$$$ = function(receiver) {
    return receiver.polymer$Polymer$$;
  };
  Polymer.prototype.get$$$.$reflectable = 1;
  function HtmlElement_Polymer_ChangeNotifier() {
  }
  HtmlElement_Polymer_ChangeNotifier.builtin$cls = "HtmlElement_Polymer_ChangeNotifier";
  if (!"name" in HtmlElement_Polymer_ChangeNotifier)
    HtmlElement_Polymer_ChangeNotifier.name = "HtmlElement_Polymer_ChangeNotifier";
  $desc = $collectedClasses.HtmlElement_Polymer_ChangeNotifier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HtmlElement_Polymer_ChangeNotifier.prototype = $desc;
  function _PropertyValue(oldValue, newValue) {
    this.oldValue = oldValue;
    this.newValue = newValue;
  }
  _PropertyValue.builtin$cls = "_PropertyValue";
  if (!"name" in _PropertyValue)
    _PropertyValue.name = "_PropertyValue";
  $desc = $collectedClasses._PropertyValue;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _PropertyValue.prototype = $desc;
  _PropertyValue.prototype.get$oldValue = function(receiver) {
    return this.oldValue;
  };
  _PropertyValue.prototype.get$newValue = function(receiver) {
    return this.newValue;
  };
  _PropertyValue.prototype.set$newValue = function(receiver, v) {
    return this.newValue = v;
  };
  function _PolymerExpressionsWithEventDelegate(globals) {
    this.globals = globals;
  }
  _PolymerExpressionsWithEventDelegate.builtin$cls = "_PolymerExpressionsWithEventDelegate";
  if (!"name" in _PolymerExpressionsWithEventDelegate)
    _PolymerExpressionsWithEventDelegate.name = "_PolymerExpressionsWithEventDelegate";
  $desc = $collectedClasses._PolymerExpressionsWithEventDelegate;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _PolymerExpressionsWithEventDelegate.prototype = $desc;
  function _Job(_callback, _timer) {
    this._callback = _callback;
    this._timer = _timer;
  }
  _Job.builtin$cls = "_Job";
  if (!"name" in _Job)
    _Job.name = "_Job";
  $desc = $collectedClasses._Job;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Job.prototype = $desc;
  function CustomTag(tagName) {
    this.tagName = tagName;
  }
  CustomTag.builtin$cls = "CustomTag";
  if (!"name" in CustomTag)
    CustomTag.name = "CustomTag";
  $desc = $collectedClasses.CustomTag;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CustomTag.prototype = $desc;
  CustomTag.prototype.get$tagName = function(receiver) {
    return this.tagName;
  };
  function _initPolymerOptimized_closure() {
  }
  _initPolymerOptimized_closure.builtin$cls = "_initPolymerOptimized_closure";
  if (!"name" in _initPolymerOptimized_closure)
    _initPolymerOptimized_closure.name = "_initPolymerOptimized_closure";
  $desc = $collectedClasses._initPolymerOptimized_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _initPolymerOptimized_closure.prototype = $desc;
  function _loadLibrary_closure() {
  }
  _loadLibrary_closure.builtin$cls = "_loadLibrary_closure";
  if (!"name" in _loadLibrary_closure)
    _loadLibrary_closure.name = "_loadLibrary_closure";
  $desc = $collectedClasses._loadLibrary_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _loadLibrary_closure.prototype = $desc;
  function _loadLibrary_closure0() {
  }
  _loadLibrary_closure0.builtin$cls = "_loadLibrary_closure0";
  if (!"name" in _loadLibrary_closure0)
    _loadLibrary_closure0.name = "_loadLibrary_closure0";
  $desc = $collectedClasses._loadLibrary_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _loadLibrary_closure0.prototype = $desc;
  function _maybeInvoke_closure() {
  }
  _maybeInvoke_closure.builtin$cls = "_maybeInvoke_closure";
  if (!"name" in _maybeInvoke_closure)
    _maybeInvoke_closure.name = "_maybeInvoke_closure";
  $desc = $collectedClasses._maybeInvoke_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _maybeInvoke_closure.prototype = $desc;
  function _InitMethodAnnotation() {
  }
  _InitMethodAnnotation.builtin$cls = "_InitMethodAnnotation";
  if (!"name" in _InitMethodAnnotation)
    _InitMethodAnnotation.name = "_InitMethodAnnotation";
  $desc = $collectedClasses._InitMethodAnnotation;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _InitMethodAnnotation.prototype = $desc;
  function closure0() {
  }
  closure0.builtin$cls = "closure0";
  if (!"name" in closure0)
    closure0.name = "closure0";
  $desc = $collectedClasses.closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure0.prototype = $desc;
  function _closure() {
  }
  _closure.builtin$cls = "_closure";
  if (!"name" in _closure)
    _closure.name = "_closure";
  $desc = $collectedClasses._closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _closure.prototype = $desc;
  function _closure0() {
  }
  _closure0.builtin$cls = "_closure0";
  if (!"name" in _closure0)
    _closure0.name = "_closure0";
  $desc = $collectedClasses._closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _closure0.prototype = $desc;
  function _closure1() {
  }
  _closure1.builtin$cls = "_closure1";
  if (!"name" in _closure1)
    _closure1.name = "_closure1";
  $desc = $collectedClasses._closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _closure1.prototype = $desc;
  function _closure2() {
  }
  _closure2.builtin$cls = "_closure2";
  if (!"name" in _closure2)
    _closure2.name = "_closure2";
  $desc = $collectedClasses._closure2;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _closure2.prototype = $desc;
  function _closure3() {
  }
  _closure3.builtin$cls = "_closure3";
  if (!"name" in _closure3)
    _closure3.name = "_closure3";
  $desc = $collectedClasses._closure3;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _closure3.prototype = $desc;
  function __closure0(def_0) {
    this.def_0 = def_0;
  }
  __closure0.builtin$cls = "__closure0";
  if (!"name" in __closure0)
    __closure0.name = "__closure0";
  $desc = $collectedClasses.__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  __closure0.prototype = $desc;
  function _closure4() {
  }
  _closure4.builtin$cls = "_closure4";
  if (!"name" in _closure4)
    _closure4.name = "_closure4";
  $desc = $collectedClasses._closure4;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _closure4.prototype = $desc;
  function __closure(def_1) {
    this.def_1 = def_1;
  }
  __closure.builtin$cls = "__closure";
  if (!"name" in __closure)
    __closure.name = "__closure";
  $desc = $collectedClasses.__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  __closure.prototype = $desc;
  function _classAttributeConverter_closure(v_0) {
    this.v_0 = v_0;
  }
  _classAttributeConverter_closure.builtin$cls = "_classAttributeConverter_closure";
  if (!"name" in _classAttributeConverter_closure)
    _classAttributeConverter_closure.name = "_classAttributeConverter_closure";
  $desc = $collectedClasses._classAttributeConverter_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _classAttributeConverter_closure.prototype = $desc;
  function _styleAttributeConverter_closure(v_0) {
    this.v_0 = v_0;
  }
  _styleAttributeConverter_closure.builtin$cls = "_styleAttributeConverter_closure";
  if (!"name" in _styleAttributeConverter_closure)
    _styleAttributeConverter_closure.name = "_styleAttributeConverter_closure";
  $desc = $collectedClasses._styleAttributeConverter_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _styleAttributeConverter_closure.prototype = $desc;
  function PolymerExpressions() {
  }
  PolymerExpressions.builtin$cls = "PolymerExpressions";
  if (!"name" in PolymerExpressions)
    PolymerExpressions.name = "PolymerExpressions";
  $desc = $collectedClasses.PolymerExpressions;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolymerExpressions.prototype = $desc;
  function PolymerExpressions_prepareBinding_closure(this_0, name_1, expr_2) {
    this.this_0 = this_0;
    this.name_1 = name_1;
    this.expr_2 = expr_2;
  }
  PolymerExpressions_prepareBinding_closure.builtin$cls = "PolymerExpressions_prepareBinding_closure";
  if (!"name" in PolymerExpressions_prepareBinding_closure)
    PolymerExpressions_prepareBinding_closure.name = "PolymerExpressions_prepareBinding_closure";
  $desc = $collectedClasses.PolymerExpressions_prepareBinding_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolymerExpressions_prepareBinding_closure.prototype = $desc;
  function PolymerExpressions_prepareInstanceModel_closure(this_0) {
    this.this_0 = this_0;
  }
  PolymerExpressions_prepareInstanceModel_closure.builtin$cls = "PolymerExpressions_prepareInstanceModel_closure";
  if (!"name" in PolymerExpressions_prepareInstanceModel_closure)
    PolymerExpressions_prepareInstanceModel_closure.name = "PolymerExpressions_prepareInstanceModel_closure";
  $desc = $collectedClasses.PolymerExpressions_prepareInstanceModel_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolymerExpressions_prepareInstanceModel_closure.prototype = $desc;
  function _Binding(_scope, _polymer_expressions$_expr, _converter, _polymer_expressions$_value, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this._scope = _scope;
    this._polymer_expressions$_expr = _polymer_expressions$_expr;
    this._converter = _converter;
    this._polymer_expressions$_value = _polymer_expressions$_value;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  _Binding.builtin$cls = "_Binding";
  if (!"name" in _Binding)
    _Binding.name = "_Binding";
  $desc = $collectedClasses._Binding;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Binding.prototype = $desc;
  function _Binding_closure(this_0) {
    this.this_0 = this_0;
  }
  _Binding_closure.builtin$cls = "_Binding_closure";
  if (!"name" in _Binding_closure)
    _Binding_closure.name = "_Binding_closure";
  $desc = $collectedClasses._Binding_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Binding_closure.prototype = $desc;
  function _Binding__setValue_closure(this_0, v_1) {
    this.this_0 = this_0;
    this.v_1 = v_1;
  }
  _Binding__setValue_closure.builtin$cls = "_Binding__setValue_closure";
  if (!"name" in _Binding__setValue_closure)
    _Binding__setValue_closure.name = "_Binding__setValue_closure";
  $desc = $collectedClasses._Binding__setValue_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _Binding__setValue_closure.prototype = $desc;
  function StreamBinding(stream, _observable_box$_value, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this.stream = stream;
    this._observable_box$_value = _observable_box$_value;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  StreamBinding.builtin$cls = "StreamBinding";
  if (!"name" in StreamBinding)
    StreamBinding.name = "StreamBinding";
  $desc = $collectedClasses.StreamBinding;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StreamBinding.prototype = $desc;
  function StreamBinding_closure(T_0, this_1) {
    this.T_0 = T_0;
    this.this_1 = this_1;
  }
  StreamBinding_closure.builtin$cls = "StreamBinding_closure";
  if (!"name" in StreamBinding_closure)
    StreamBinding_closure.name = "StreamBinding_closure";
  $desc = $collectedClasses.StreamBinding_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  StreamBinding_closure.prototype = $desc;
  function closure5() {
  }
  closure5.builtin$cls = "closure5";
  if (!"name" in closure5)
    closure5.name = "closure5";
  $desc = $collectedClasses.closure5;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure5.prototype = $desc;
  function closure6() {
  }
  closure6.builtin$cls = "closure6";
  if (!"name" in closure6)
    closure6.name = "closure6";
  $desc = $collectedClasses.closure6;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure6.prototype = $desc;
  function closure7() {
  }
  closure7.builtin$cls = "closure7";
  if (!"name" in closure7)
    closure7.name = "closure7";
  $desc = $collectedClasses.closure7;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure7.prototype = $desc;
  function closure8() {
  }
  closure8.builtin$cls = "closure8";
  if (!"name" in closure8)
    closure8.name = "closure8";
  $desc = $collectedClasses.closure8;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure8.prototype = $desc;
  function closure9() {
  }
  closure9.builtin$cls = "closure9";
  if (!"name" in closure9)
    closure9.name = "closure9";
  $desc = $collectedClasses.closure9;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure9.prototype = $desc;
  function closure10() {
  }
  closure10.builtin$cls = "closure10";
  if (!"name" in closure10)
    closure10.name = "closure10";
  $desc = $collectedClasses.closure10;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure10.prototype = $desc;
  function closure11() {
  }
  closure11.builtin$cls = "closure11";
  if (!"name" in closure11)
    closure11.name = "closure11";
  $desc = $collectedClasses.closure11;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure11.prototype = $desc;
  function closure12() {
  }
  closure12.builtin$cls = "closure12";
  if (!"name" in closure12)
    closure12.name = "closure12";
  $desc = $collectedClasses.closure12;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure12.prototype = $desc;
  function closure13() {
  }
  closure13.builtin$cls = "closure13";
  if (!"name" in closure13)
    closure13.name = "closure13";
  $desc = $collectedClasses.closure13;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure13.prototype = $desc;
  function closure14() {
  }
  closure14.builtin$cls = "closure14";
  if (!"name" in closure14)
    closure14.name = "closure14";
  $desc = $collectedClasses.closure14;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure14.prototype = $desc;
  function closure15() {
  }
  closure15.builtin$cls = "closure15";
  if (!"name" in closure15)
    closure15.name = "closure15";
  $desc = $collectedClasses.closure15;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure15.prototype = $desc;
  function closure16() {
  }
  closure16.builtin$cls = "closure16";
  if (!"name" in closure16)
    closure16.name = "closure16";
  $desc = $collectedClasses.closure16;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure16.prototype = $desc;
  function closure17() {
  }
  closure17.builtin$cls = "closure17";
  if (!"name" in closure17)
    closure17.name = "closure17";
  $desc = $collectedClasses.closure17;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure17.prototype = $desc;
  function closure18() {
  }
  closure18.builtin$cls = "closure18";
  if (!"name" in closure18)
    closure18.name = "closure18";
  $desc = $collectedClasses.closure18;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure18.prototype = $desc;
  function closure19() {
  }
  closure19.builtin$cls = "closure19";
  if (!"name" in closure19)
    closure19.name = "closure19";
  $desc = $collectedClasses.closure19;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure19.prototype = $desc;
  function closure20() {
  }
  closure20.builtin$cls = "closure20";
  if (!"name" in closure20)
    closure20.name = "closure20";
  $desc = $collectedClasses.closure20;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure20.prototype = $desc;
  function assign_notAssignable(box_0) {
    this.box_0 = box_0;
  }
  assign_notAssignable.builtin$cls = "assign_notAssignable";
  if (!"name" in assign_notAssignable)
    assign_notAssignable.name = "assign_notAssignable";
  $desc = $collectedClasses.assign_notAssignable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  assign_notAssignable.prototype = $desc;
  function Scope(parent, model, _variables, __modelMirror) {
    this.parent = parent;
    this.model = model;
    this._variables = _variables;
    this.__modelMirror = __modelMirror;
  }
  Scope.builtin$cls = "Scope";
  if (!"name" in Scope)
    Scope.name = "Scope";
  $desc = $collectedClasses.Scope;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Scope.prototype = $desc;
  Scope.prototype.get$parent = function(receiver) {
    return this.parent;
  };
  function ExpressionObserver(_parent, _eval$_value) {
    this._parent = _parent;
    this._eval$_value = _eval$_value;
  }
  ExpressionObserver.builtin$cls = "ExpressionObserver";
  if (!"name" in ExpressionObserver)
    ExpressionObserver.name = "ExpressionObserver";
  $desc = $collectedClasses.ExpressionObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ExpressionObserver.prototype = $desc;
  ExpressionObserver.prototype.set$_parent = function(v) {
    return this._parent = v;
  };
  ExpressionObserver.prototype.get$_eval$_value = function() {
    return this._eval$_value;
  };
  function Updater(scope) {
    this.scope = scope;
  }
  Updater.builtin$cls = "Updater";
  if (!"name" in Updater)
    Updater.name = "Updater";
  $desc = $collectedClasses.Updater;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Updater.prototype = $desc;
  function ObserverBuilder(scope, parents) {
    this.scope = scope;
    this.parents = parents;
  }
  ObserverBuilder.builtin$cls = "ObserverBuilder";
  if (!"name" in ObserverBuilder)
    ObserverBuilder.name = "ObserverBuilder";
  $desc = $collectedClasses.ObserverBuilder;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObserverBuilder.prototype = $desc;
  function ObserverBuilder_visitInvoke_closure(invoke_0) {
    this.invoke_0 = invoke_0;
  }
  ObserverBuilder_visitInvoke_closure.builtin$cls = "ObserverBuilder_visitInvoke_closure";
  if (!"name" in ObserverBuilder_visitInvoke_closure)
    ObserverBuilder_visitInvoke_closure.name = "ObserverBuilder_visitInvoke_closure";
  $desc = $collectedClasses.ObserverBuilder_visitInvoke_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObserverBuilder_visitInvoke_closure.prototype = $desc;
  function ObserverBuilder_visitMapLiteral_closure(map_0) {
    this.map_0 = map_0;
  }
  ObserverBuilder_visitMapLiteral_closure.builtin$cls = "ObserverBuilder_visitMapLiteral_closure";
  if (!"name" in ObserverBuilder_visitMapLiteral_closure)
    ObserverBuilder_visitMapLiteral_closure.name = "ObserverBuilder_visitMapLiteral_closure";
  $desc = $collectedClasses.ObserverBuilder_visitMapLiteral_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ObserverBuilder_visitMapLiteral_closure.prototype = $desc;
  function EmptyObserver(_eval$_expr, _parent, _eval$_subscription, _eval$_value, _eval$_controller) {
    this._eval$_expr = _eval$_expr;
    this._parent = _parent;
    this._eval$_subscription = _eval$_subscription;
    this._eval$_value = _eval$_value;
    this._eval$_controller = _eval$_controller;
  }
  EmptyObserver.builtin$cls = "EmptyObserver";
  if (!"name" in EmptyObserver)
    EmptyObserver.name = "EmptyObserver";
  $desc = $collectedClasses.EmptyObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EmptyObserver.prototype = $desc;
  function LiteralObserver(_eval$_expr, _parent, _eval$_subscription, _eval$_value, _eval$_controller) {
    this._eval$_expr = _eval$_expr;
    this._parent = _parent;
    this._eval$_subscription = _eval$_subscription;
    this._eval$_value = _eval$_value;
    this._eval$_controller = _eval$_controller;
  }
  LiteralObserver.builtin$cls = "LiteralObserver";
  if (!"name" in LiteralObserver)
    LiteralObserver.name = "LiteralObserver";
  $desc = $collectedClasses.LiteralObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LiteralObserver.prototype = $desc;
  function MapLiteralObserver(entries, _eval$_expr, _parent, _eval$_subscription, _eval$_value, _eval$_controller) {
    this.entries = entries;
    this._eval$_expr = _eval$_expr;
    this._parent = _parent;
    this._eval$_subscription = _eval$_subscription;
    this._eval$_value = _eval$_value;
    this._eval$_controller = _eval$_controller;
  }
  MapLiteralObserver.builtin$cls = "MapLiteralObserver";
  if (!"name" in MapLiteralObserver)
    MapLiteralObserver.name = "MapLiteralObserver";
  $desc = $collectedClasses.MapLiteralObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MapLiteralObserver.prototype = $desc;
  MapLiteralObserver.prototype.get$entries = function(receiver) {
    return this.entries;
  };
  function MapLiteralObserver__updateSelf_closure() {
  }
  MapLiteralObserver__updateSelf_closure.builtin$cls = "MapLiteralObserver__updateSelf_closure";
  if (!"name" in MapLiteralObserver__updateSelf_closure)
    MapLiteralObserver__updateSelf_closure.name = "MapLiteralObserver__updateSelf_closure";
  $desc = $collectedClasses.MapLiteralObserver__updateSelf_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MapLiteralObserver__updateSelf_closure.prototype = $desc;
  function MapLiteralEntryObserver(key, entryValue, _eval$_expr, _parent, _eval$_subscription, _eval$_value, _eval$_controller) {
    this.key = key;
    this.entryValue = entryValue;
    this._eval$_expr = _eval$_expr;
    this._parent = _parent;
    this._eval$_subscription = _eval$_subscription;
    this._eval$_value = _eval$_value;
    this._eval$_controller = _eval$_controller;
  }
  MapLiteralEntryObserver.builtin$cls = "MapLiteralEntryObserver";
  if (!"name" in MapLiteralEntryObserver)
    MapLiteralEntryObserver.name = "MapLiteralEntryObserver";
  $desc = $collectedClasses.MapLiteralEntryObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MapLiteralEntryObserver.prototype = $desc;
  MapLiteralEntryObserver.prototype.get$key = function(receiver) {
    return this.key;
  };
  MapLiteralEntryObserver.prototype.get$entryValue = function() {
    return this.entryValue;
  };
  function IdentifierObserver(_eval$_expr, _parent, _eval$_subscription, _eval$_value, _eval$_controller) {
    this._eval$_expr = _eval$_expr;
    this._parent = _parent;
    this._eval$_subscription = _eval$_subscription;
    this._eval$_value = _eval$_value;
    this._eval$_controller = _eval$_controller;
  }
  IdentifierObserver.builtin$cls = "IdentifierObserver";
  if (!"name" in IdentifierObserver)
    IdentifierObserver.name = "IdentifierObserver";
  $desc = $collectedClasses.IdentifierObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IdentifierObserver.prototype = $desc;
  function IdentifierObserver__updateSelf_closure(this_0, scope_1, symbol_2) {
    this.this_0 = this_0;
    this.scope_1 = scope_1;
    this.symbol_2 = symbol_2;
  }
  IdentifierObserver__updateSelf_closure.builtin$cls = "IdentifierObserver__updateSelf_closure";
  if (!"name" in IdentifierObserver__updateSelf_closure)
    IdentifierObserver__updateSelf_closure.name = "IdentifierObserver__updateSelf_closure";
  $desc = $collectedClasses.IdentifierObserver__updateSelf_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IdentifierObserver__updateSelf_closure.prototype = $desc;
  function IdentifierObserver__updateSelf__closure(symbol_3) {
    this.symbol_3 = symbol_3;
  }
  IdentifierObserver__updateSelf__closure.builtin$cls = "IdentifierObserver__updateSelf__closure";
  if (!"name" in IdentifierObserver__updateSelf__closure)
    IdentifierObserver__updateSelf__closure.name = "IdentifierObserver__updateSelf__closure";
  $desc = $collectedClasses.IdentifierObserver__updateSelf__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IdentifierObserver__updateSelf__closure.prototype = $desc;
  function UnaryObserver(child, _eval$_expr, _parent, _eval$_subscription, _eval$_value, _eval$_controller) {
    this.child = child;
    this._eval$_expr = _eval$_expr;
    this._parent = _parent;
    this._eval$_subscription = _eval$_subscription;
    this._eval$_value = _eval$_value;
    this._eval$_controller = _eval$_controller;
  }
  UnaryObserver.builtin$cls = "UnaryObserver";
  if (!"name" in UnaryObserver)
    UnaryObserver.name = "UnaryObserver";
  $desc = $collectedClasses.UnaryObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnaryObserver.prototype = $desc;
  UnaryObserver.prototype.get$child = function() {
    return this.child;
  };
  function BinaryObserver(left, right, _eval$_expr, _parent, _eval$_subscription, _eval$_value, _eval$_controller) {
    this.left = left;
    this.right = right;
    this._eval$_expr = _eval$_expr;
    this._parent = _parent;
    this._eval$_subscription = _eval$_subscription;
    this._eval$_value = _eval$_value;
    this._eval$_controller = _eval$_controller;
  }
  BinaryObserver.builtin$cls = "BinaryObserver";
  if (!"name" in BinaryObserver)
    BinaryObserver.name = "BinaryObserver";
  $desc = $collectedClasses.BinaryObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  BinaryObserver.prototype = $desc;
  BinaryObserver.prototype.get$left = function(receiver) {
    return this.left;
  };
  BinaryObserver.prototype.get$right = function(receiver) {
    return this.right;
  };
  function BinaryObserver__updateSelf_closure(this_0, scope_1) {
    this.this_0 = this_0;
    this.scope_1 = scope_1;
  }
  BinaryObserver__updateSelf_closure.builtin$cls = "BinaryObserver__updateSelf_closure";
  if (!"name" in BinaryObserver__updateSelf_closure)
    BinaryObserver__updateSelf_closure.name = "BinaryObserver__updateSelf_closure";
  $desc = $collectedClasses.BinaryObserver__updateSelf_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  BinaryObserver__updateSelf_closure.prototype = $desc;
  function GetterObserver(receiver, _eval$_expr, _parent, _eval$_subscription, _eval$_value, _eval$_controller) {
    this.receiver = receiver;
    this._eval$_expr = _eval$_expr;
    this._parent = _parent;
    this._eval$_subscription = _eval$_subscription;
    this._eval$_value = _eval$_value;
    this._eval$_controller = _eval$_controller;
  }
  GetterObserver.builtin$cls = "GetterObserver";
  if (!"name" in GetterObserver)
    GetterObserver.name = "GetterObserver";
  $desc = $collectedClasses.GetterObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  GetterObserver.prototype = $desc;
  GetterObserver.prototype.get$receiver = function() {
    return this.receiver;
  };
  function GetterObserver__updateSelf_closure(this_0, scope_1, symbol_2) {
    this.this_0 = this_0;
    this.scope_1 = scope_1;
    this.symbol_2 = symbol_2;
  }
  GetterObserver__updateSelf_closure.builtin$cls = "GetterObserver__updateSelf_closure";
  if (!"name" in GetterObserver__updateSelf_closure)
    GetterObserver__updateSelf_closure.name = "GetterObserver__updateSelf_closure";
  $desc = $collectedClasses.GetterObserver__updateSelf_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  GetterObserver__updateSelf_closure.prototype = $desc;
  function GetterObserver__updateSelf__closure(symbol_3) {
    this.symbol_3 = symbol_3;
  }
  GetterObserver__updateSelf__closure.builtin$cls = "GetterObserver__updateSelf__closure";
  if (!"name" in GetterObserver__updateSelf__closure)
    GetterObserver__updateSelf__closure.name = "GetterObserver__updateSelf__closure";
  $desc = $collectedClasses.GetterObserver__updateSelf__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  GetterObserver__updateSelf__closure.prototype = $desc;
  function IndexObserver(receiver, argument, _eval$_expr, _parent, _eval$_subscription, _eval$_value, _eval$_controller) {
    this.receiver = receiver;
    this.argument = argument;
    this._eval$_expr = _eval$_expr;
    this._parent = _parent;
    this._eval$_subscription = _eval$_subscription;
    this._eval$_value = _eval$_value;
    this._eval$_controller = _eval$_controller;
  }
  IndexObserver.builtin$cls = "IndexObserver";
  if (!"name" in IndexObserver)
    IndexObserver.name = "IndexObserver";
  $desc = $collectedClasses.IndexObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IndexObserver.prototype = $desc;
  IndexObserver.prototype.get$receiver = function() {
    return this.receiver;
  };
  IndexObserver.prototype.get$argument = function() {
    return this.argument;
  };
  function IndexObserver__updateSelf_closure(this_0, scope_1, key_2) {
    this.this_0 = this_0;
    this.scope_1 = scope_1;
    this.key_2 = key_2;
  }
  IndexObserver__updateSelf_closure.builtin$cls = "IndexObserver__updateSelf_closure";
  if (!"name" in IndexObserver__updateSelf_closure)
    IndexObserver__updateSelf_closure.name = "IndexObserver__updateSelf_closure";
  $desc = $collectedClasses.IndexObserver__updateSelf_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IndexObserver__updateSelf_closure.prototype = $desc;
  function IndexObserver__updateSelf__closure(key_3) {
    this.key_3 = key_3;
  }
  IndexObserver__updateSelf__closure.builtin$cls = "IndexObserver__updateSelf__closure";
  if (!"name" in IndexObserver__updateSelf__closure)
    IndexObserver__updateSelf__closure.name = "IndexObserver__updateSelf__closure";
  $desc = $collectedClasses.IndexObserver__updateSelf__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IndexObserver__updateSelf__closure.prototype = $desc;
  function InvokeObserver(receiver, arguments, _eval$_expr, _parent, _eval$_subscription, _eval$_value, _eval$_controller) {
    this.receiver = receiver;
    this.arguments = arguments;
    this._eval$_expr = _eval$_expr;
    this._parent = _parent;
    this._eval$_subscription = _eval$_subscription;
    this._eval$_value = _eval$_value;
    this._eval$_controller = _eval$_controller;
  }
  InvokeObserver.builtin$cls = "InvokeObserver";
  if (!"name" in InvokeObserver)
    InvokeObserver.name = "InvokeObserver";
  $desc = $collectedClasses.InvokeObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  InvokeObserver.prototype = $desc;
  InvokeObserver.prototype.get$receiver = function() {
    return this.receiver;
  };
  InvokeObserver.prototype.get$arguments = function() {
    return this.arguments;
  };
  function InvokeObserver__updateSelf_closure() {
  }
  InvokeObserver__updateSelf_closure.builtin$cls = "InvokeObserver__updateSelf_closure";
  if (!"name" in InvokeObserver__updateSelf_closure)
    InvokeObserver__updateSelf_closure.name = "InvokeObserver__updateSelf_closure";
  $desc = $collectedClasses.InvokeObserver__updateSelf_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  InvokeObserver__updateSelf_closure.prototype = $desc;
  function InvokeObserver__updateSelf_closure0(this_0, scope_1, symbol_2) {
    this.this_0 = this_0;
    this.scope_1 = scope_1;
    this.symbol_2 = symbol_2;
  }
  InvokeObserver__updateSelf_closure0.builtin$cls = "InvokeObserver__updateSelf_closure0";
  if (!"name" in InvokeObserver__updateSelf_closure0)
    InvokeObserver__updateSelf_closure0.name = "InvokeObserver__updateSelf_closure0";
  $desc = $collectedClasses.InvokeObserver__updateSelf_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  InvokeObserver__updateSelf_closure0.prototype = $desc;
  function InvokeObserver__updateSelf__closure(symbol_3) {
    this.symbol_3 = symbol_3;
  }
  InvokeObserver__updateSelf__closure.builtin$cls = "InvokeObserver__updateSelf__closure";
  if (!"name" in InvokeObserver__updateSelf__closure)
    InvokeObserver__updateSelf__closure.name = "InvokeObserver__updateSelf__closure";
  $desc = $collectedClasses.InvokeObserver__updateSelf__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  InvokeObserver__updateSelf__closure.prototype = $desc;
  function InObserver(left, right, _eval$_expr, _parent, _eval$_subscription, _eval$_value, _eval$_controller) {
    this.left = left;
    this.right = right;
    this._eval$_expr = _eval$_expr;
    this._parent = _parent;
    this._eval$_subscription = _eval$_subscription;
    this._eval$_value = _eval$_value;
    this._eval$_controller = _eval$_controller;
  }
  InObserver.builtin$cls = "InObserver";
  if (!"name" in InObserver)
    InObserver.name = "InObserver";
  $desc = $collectedClasses.InObserver;
  if ($desc instanceof Array)
    $desc = $desc[1];
  InObserver.prototype = $desc;
  InObserver.prototype.get$left = function(receiver) {
    return this.left;
  };
  InObserver.prototype.get$right = function(receiver) {
    return this.right;
  };
  function InObserver__updateSelf_closure(this_0, scope_1) {
    this.this_0 = this_0;
    this.scope_1 = scope_1;
  }
  InObserver__updateSelf_closure.builtin$cls = "InObserver__updateSelf_closure";
  if (!"name" in InObserver__updateSelf_closure)
    InObserver__updateSelf_closure.name = "InObserver__updateSelf_closure";
  $desc = $collectedClasses.InObserver__updateSelf_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  InObserver__updateSelf_closure.prototype = $desc;
  function Comprehension(identifier, iterable) {
    this.identifier = identifier;
    this.iterable = iterable;
  }
  Comprehension.builtin$cls = "Comprehension";
  if (!"name" in Comprehension)
    Comprehension.name = "Comprehension";
  $desc = $collectedClasses.Comprehension;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Comprehension.prototype = $desc;
  function Method0(mirror, symbol) {
    this.mirror = mirror;
    this.symbol = symbol;
  }
  Method0.builtin$cls = "Method0";
  if (!"name" in Method0)
    Method0.name = "Method0";
  $desc = $collectedClasses.Method0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Method0.prototype = $desc;
  function EvalException(message) {
    this.message = message;
  }
  EvalException.builtin$cls = "EvalException";
  if (!"name" in EvalException)
    EvalException.name = "EvalException";
  $desc = $collectedClasses.EvalException;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EvalException.prototype = $desc;
  EvalException.prototype.get$message = function(receiver) {
    return this.message;
  };
  function AstFactory() {
  }
  AstFactory.builtin$cls = "AstFactory";
  if (!"name" in AstFactory)
    AstFactory.name = "AstFactory";
  $desc = $collectedClasses.AstFactory;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AstFactory.prototype = $desc;
  function Expression() {
  }
  Expression.builtin$cls = "Expression";
  if (!"name" in Expression)
    Expression.name = "Expression";
  $desc = $collectedClasses.Expression;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Expression.prototype = $desc;
  function EmptyExpression() {
  }
  EmptyExpression.builtin$cls = "EmptyExpression";
  if (!"name" in EmptyExpression)
    EmptyExpression.name = "EmptyExpression";
  $desc = $collectedClasses.EmptyExpression;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EmptyExpression.prototype = $desc;
  function Literal(value) {
    this.value = value;
  }
  Literal.builtin$cls = "Literal";
  if (!"name" in Literal)
    Literal.name = "Literal";
  $desc = $collectedClasses.Literal;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Literal.prototype = $desc;
  Literal.prototype.get$value = function(receiver) {
    return this.value;
  };
  function MapLiteral(entries) {
    this.entries = entries;
  }
  MapLiteral.builtin$cls = "MapLiteral";
  if (!"name" in MapLiteral)
    MapLiteral.name = "MapLiteral";
  $desc = $collectedClasses.MapLiteral;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MapLiteral.prototype = $desc;
  MapLiteral.prototype.get$entries = function(receiver) {
    return this.entries;
  };
  function MapLiteralEntry(key, entryValue) {
    this.key = key;
    this.entryValue = entryValue;
  }
  MapLiteralEntry.builtin$cls = "MapLiteralEntry";
  if (!"name" in MapLiteralEntry)
    MapLiteralEntry.name = "MapLiteralEntry";
  $desc = $collectedClasses.MapLiteralEntry;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MapLiteralEntry.prototype = $desc;
  MapLiteralEntry.prototype.get$key = function(receiver) {
    return this.key;
  };
  MapLiteralEntry.prototype.get$entryValue = function() {
    return this.entryValue;
  };
  function ParenthesizedExpression(child) {
    this.child = child;
  }
  ParenthesizedExpression.builtin$cls = "ParenthesizedExpression";
  if (!"name" in ParenthesizedExpression)
    ParenthesizedExpression.name = "ParenthesizedExpression";
  $desc = $collectedClasses.ParenthesizedExpression;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ParenthesizedExpression.prototype = $desc;
  function Identifier(value) {
    this.value = value;
  }
  Identifier.builtin$cls = "Identifier";
  if (!"name" in Identifier)
    Identifier.name = "Identifier";
  $desc = $collectedClasses.Identifier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Identifier.prototype = $desc;
  Identifier.prototype.get$value = function(receiver) {
    return this.value;
  };
  function UnaryOperator(operator, child) {
    this.operator = operator;
    this.child = child;
  }
  UnaryOperator.builtin$cls = "UnaryOperator";
  if (!"name" in UnaryOperator)
    UnaryOperator.name = "UnaryOperator";
  $desc = $collectedClasses.UnaryOperator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  UnaryOperator.prototype = $desc;
  UnaryOperator.prototype.get$operator = function(receiver) {
    return this.operator;
  };
  UnaryOperator.prototype.get$child = function() {
    return this.child;
  };
  function BinaryOperator(operator, left, right) {
    this.operator = operator;
    this.left = left;
    this.right = right;
  }
  BinaryOperator.builtin$cls = "BinaryOperator";
  if (!"name" in BinaryOperator)
    BinaryOperator.name = "BinaryOperator";
  $desc = $collectedClasses.BinaryOperator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  BinaryOperator.prototype = $desc;
  BinaryOperator.prototype.get$operator = function(receiver) {
    return this.operator;
  };
  BinaryOperator.prototype.get$left = function(receiver) {
    return this.left;
  };
  BinaryOperator.prototype.get$right = function(receiver) {
    return this.right;
  };
  function InExpression(left, right) {
    this.left = left;
    this.right = right;
  }
  InExpression.builtin$cls = "InExpression";
  if (!"name" in InExpression)
    InExpression.name = "InExpression";
  $desc = $collectedClasses.InExpression;
  if ($desc instanceof Array)
    $desc = $desc[1];
  InExpression.prototype = $desc;
  InExpression.prototype.get$left = function(receiver) {
    return this.left;
  };
  InExpression.prototype.get$right = function(receiver) {
    return this.right;
  };
  function Index(receiver, argument) {
    this.receiver = receiver;
    this.argument = argument;
  }
  Index.builtin$cls = "Index";
  if (!"name" in Index)
    Index.name = "Index";
  $desc = $collectedClasses.Index;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Index.prototype = $desc;
  Index.prototype.get$receiver = function() {
    return this.receiver;
  };
  Index.prototype.get$argument = function() {
    return this.argument;
  };
  function Getter(receiver, name) {
    this.receiver = receiver;
    this.name = name;
  }
  Getter.builtin$cls = "Getter";
  if (!"name" in Getter)
    Getter.name = "Getter";
  $desc = $collectedClasses.Getter;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Getter.prototype = $desc;
  Getter.prototype.get$receiver = function() {
    return this.receiver;
  };
  Getter.prototype.get$name = function(receiver) {
    return this.name;
  };
  function Invoke(receiver, method, arguments) {
    this.receiver = receiver;
    this.method = method;
    this.arguments = arguments;
  }
  Invoke.builtin$cls = "Invoke";
  if (!"name" in Invoke)
    Invoke.name = "Invoke";
  $desc = $collectedClasses.Invoke;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Invoke.prototype = $desc;
  Invoke.prototype.get$receiver = function() {
    return this.receiver;
  };
  Invoke.prototype.get$method = function(receiver) {
    return this.method;
  };
  Invoke.prototype.get$arguments = function() {
    return this.arguments;
  };
  function _hashList_closure() {
  }
  _hashList_closure.builtin$cls = "_hashList_closure";
  if (!"name" in _hashList_closure)
    _hashList_closure.name = "_hashList_closure";
  $desc = $collectedClasses._hashList_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _hashList_closure.prototype = $desc;
  function Parser0(_astFactory, _tokenizer, _tokens, _parser0$_iterator) {
    this._astFactory = _astFactory;
    this._tokenizer = _tokenizer;
    this._tokens = _tokens;
    this._parser0$_iterator = _parser0$_iterator;
  }
  Parser0.builtin$cls = "Parser0";
  if (!"name" in Parser0)
    Parser0.name = "Parser0";
  $desc = $collectedClasses.Parser0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Parser0.prototype = $desc;
  function IndexedValue(index, value) {
    this.index = index;
    this.value = value;
  }
  IndexedValue.builtin$cls = "IndexedValue";
  if (!"name" in IndexedValue)
    IndexedValue.name = "IndexedValue";
  $desc = $collectedClasses.IndexedValue;
  if ($desc instanceof Array)
    $desc = $desc[1];
  IndexedValue.prototype = $desc;
  IndexedValue.prototype.get$index = function(receiver) {
    return this.index;
  };
  IndexedValue.prototype.get$index.$reflectable = 1;
  IndexedValue.prototype.get$value = function(receiver) {
    return this.value;
  };
  IndexedValue.prototype.get$value.$reflectable = 1;
  function EnumerateIterable(_globals$_iterable) {
    this._globals$_iterable = _globals$_iterable;
  }
  EnumerateIterable.builtin$cls = "EnumerateIterable";
  if (!"name" in EnumerateIterable)
    EnumerateIterable.name = "EnumerateIterable";
  $desc = $collectedClasses.EnumerateIterable;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EnumerateIterable.prototype = $desc;
  function EnumerateIterator(_globals$_iterator, _globals$_index, _globals$_current) {
    this._globals$_iterator = _globals$_iterator;
    this._globals$_index = _globals$_index;
    this._globals$_current = _globals$_current;
  }
  EnumerateIterator.builtin$cls = "EnumerateIterator";
  if (!"name" in EnumerateIterator)
    EnumerateIterator.name = "EnumerateIterator";
  $desc = $collectedClasses.EnumerateIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  EnumerateIterator.prototype = $desc;
  function Token(kind, value, precedence) {
    this.kind = kind;
    this.value = value;
    this.precedence = precedence;
  }
  Token.builtin$cls = "Token";
  if (!"name" in Token)
    Token.name = "Token";
  $desc = $collectedClasses.Token;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Token.prototype = $desc;
  Token.prototype.get$kind = function(receiver) {
    return this.kind;
  };
  Token.prototype.get$value = function(receiver) {
    return this.value;
  };
  Token.prototype.get$precedence = function() {
    return this.precedence;
  };
  function Tokenizer(_tokenizer$_tokens, _sb, _tokenizer$_iterator, _tokenizer$_next) {
    this._tokenizer$_tokens = _tokenizer$_tokens;
    this._sb = _sb;
    this._tokenizer$_iterator = _tokenizer$_iterator;
    this._tokenizer$_next = _tokenizer$_next;
  }
  Tokenizer.builtin$cls = "Tokenizer";
  if (!"name" in Tokenizer)
    Tokenizer.name = "Tokenizer";
  $desc = $collectedClasses.Tokenizer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Tokenizer.prototype = $desc;
  function ParseException(message) {
    this.message = message;
  }
  ParseException.builtin$cls = "ParseException";
  if (!"name" in ParseException)
    ParseException.name = "ParseException";
  $desc = $collectedClasses.ParseException;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ParseException.prototype = $desc;
  ParseException.prototype.get$message = function(receiver) {
    return this.message;
  };
  function Visitor0() {
  }
  Visitor0.builtin$cls = "Visitor0";
  if (!"name" in Visitor0)
    Visitor0.name = "Visitor0";
  $desc = $collectedClasses.Visitor0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Visitor0.prototype = $desc;
  function RecursiveVisitor() {
  }
  RecursiveVisitor.builtin$cls = "RecursiveVisitor";
  if (!"name" in RecursiveVisitor)
    RecursiveVisitor.name = "RecursiveVisitor";
  $desc = $collectedClasses.RecursiveVisitor;
  if ($desc instanceof Array)
    $desc = $desc[1];
  RecursiveVisitor.prototype = $desc;
  function SearchResult(element, type, score, position) {
    this.element = element;
    this.type = type;
    this.score = score;
    this.position = position;
  }
  SearchResult.builtin$cls = "SearchResult";
  if (!"name" in SearchResult)
    SearchResult.name = "SearchResult";
  $desc = $collectedClasses.SearchResult;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SearchResult.prototype = $desc;
  SearchResult.prototype.get$element = function() {
    return this.element;
  };
  SearchResult.prototype.get$element.$reflectable = 1;
  SearchResult.prototype.set$element = function(v) {
    return this.element = v;
  };
  SearchResult.prototype.set$element.$reflectable = 1;
  SearchResult.prototype.get$type = function(receiver) {
    return this.type;
  };
  SearchResult.prototype.get$type.$reflectable = 1;
  SearchResult.prototype.set$type = function(receiver, v) {
    return this.type = v;
  };
  SearchResult.prototype.set$type.$reflectable = 1;
  SearchResult.prototype.get$score = function() {
    return this.score;
  };
  SearchResult.prototype.get$score.$reflectable = 1;
  SearchResult.prototype.set$score = function(v) {
    return this.score = v;
  };
  SearchResult.prototype.set$score.$reflectable = 1;
  SearchResult.prototype.get$position = function(receiver) {
    return this.position;
  };
  SearchResult.prototype.get$position.$reflectable = 1;
  SearchResult.prototype.set$position = function(receiver, v) {
    return this.position = v;
  };
  SearchResult.prototype.set$position.$reflectable = 1;
  function Hit(name, lower, type) {
    this.name = name;
    this.lower = lower;
    this.type = type;
  }
  Hit.builtin$cls = "Hit";
  if (!"name" in Hit)
    Hit.name = "Hit";
  $desc = $collectedClasses.Hit;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Hit.prototype = $desc;
  Hit.prototype.get$name = function(receiver) {
    return this.name;
  };
  Hit.prototype.get$lower = function(receiver) {
    return this.lower;
  };
  Hit.prototype.get$type = function(receiver) {
    return this.type;
  };
  function _splitQueryTerms_closure() {
  }
  _splitQueryTerms_closure.builtin$cls = "_splitQueryTerms_closure";
  if (!"name" in _splitQueryTerms_closure)
    _splitQueryTerms_closure.name = "_splitQueryTerms_closure";
  $desc = $collectedClasses._splitQueryTerms_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _splitQueryTerms_closure.prototype = $desc;
  function _splitQueryTerms_closure0() {
  }
  _splitQueryTerms_closure0.builtin$cls = "_splitQueryTerms_closure0";
  if (!"name" in _splitQueryTerms_closure0)
    _splitQueryTerms_closure0.name = "_splitQueryTerms_closure0";
  $desc = $collectedClasses._splitQueryTerms_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _splitQueryTerms_closure0.prototype = $desc;
  function _splitQueryTerms_closure1() {
  }
  _splitQueryTerms_closure1.builtin$cls = "_splitQueryTerms_closure1";
  if (!"name" in _splitQueryTerms_closure1)
    _splitQueryTerms_closure1.name = "_splitQueryTerms_closure1";
  $desc = $collectedClasses._splitQueryTerms_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _splitQueryTerms_closure1.prototype = $desc;
  function lookupSearchResults_closure(lower_1) {
    this.lower_1 = lower_1;
  }
  lookupSearchResults_closure.builtin$cls = "lookupSearchResults_closure";
  if (!"name" in lookupSearchResults_closure)
    lookupSearchResults_closure.name = "lookupSearchResults_closure";
  $desc = $collectedClasses.lookupSearchResults_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  lookupSearchResults_closure.prototype = $desc;
  function lookupSearchResults_closure0(box_0, r_2) {
    this.box_0 = box_0;
    this.r_2 = r_2;
  }
  lookupSearchResults_closure0.builtin$cls = "lookupSearchResults_closure0";
  if (!"name" in lookupSearchResults_closure0)
    lookupSearchResults_closure0.name = "lookupSearchResults_closure0";
  $desc = $collectedClasses.lookupSearchResults_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  lookupSearchResults_closure0.prototype = $desc;
  function lookupSearchResults_closure1(box_0, r_3, location_4, qualifiedNameParts_5) {
    this.box_0 = box_0;
    this.r_3 = r_3;
    this.location_4 = location_4;
    this.qualifiedNameParts_5 = qualifiedNameParts_5;
  }
  lookupSearchResults_closure1.builtin$cls = "lookupSearchResults_closure1";
  if (!"name" in lookupSearchResults_closure1)
    lookupSearchResults_closure1.name = "lookupSearchResults_closure1";
  $desc = $collectedClasses.lookupSearchResults_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  lookupSearchResults_closure1.prototype = $desc;
  function SearchIndex(_search$_map, _onLoad) {
    this._search$_map = _search$_map;
    this._onLoad = _onLoad;
  }
  SearchIndex.builtin$cls = "SearchIndex";
  if (!"name" in SearchIndex)
    SearchIndex.name = "SearchIndex";
  $desc = $collectedClasses.SearchIndex;
  if ($desc instanceof Array)
    $desc = $desc[1];
  SearchIndex.prototype = $desc;
  function _ElementExtension(_node, _bindings, _templateInstance) {
    this._node = _node;
    this._bindings = _bindings;
    this._templateInstance = _templateInstance;
  }
  _ElementExtension.builtin$cls = "_ElementExtension";
  if (!"name" in _ElementExtension)
    _ElementExtension.name = "_ElementExtension";
  $desc = $collectedClasses._ElementExtension;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ElementExtension.prototype = $desc;
  function _AttributeBinding(conditional, _node_binding$_node, _model, _observer, _pathSub, property, path) {
    this.conditional = conditional;
    this._node_binding$_node = _node_binding$_node;
    this._model = _model;
    this._observer = _observer;
    this._pathSub = _pathSub;
    this.property = property;
    this.path = path;
  }
  _AttributeBinding.builtin$cls = "_AttributeBinding";
  if (!"name" in _AttributeBinding)
    _AttributeBinding.name = "_AttributeBinding";
  $desc = $collectedClasses._AttributeBinding;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _AttributeBinding.prototype = $desc;
  function _OptionValueBinding(_eventSub, _node_binding$_node, _model, _observer, _pathSub, property, path) {
    this._eventSub = _eventSub;
    this._node_binding$_node = _node_binding$_node;
    this._model = _model;
    this._observer = _observer;
    this._pathSub = _pathSub;
    this.property = property;
    this.path = path;
  }
  _OptionValueBinding.builtin$cls = "_OptionValueBinding";
  if (!"name" in _OptionValueBinding)
    _OptionValueBinding.name = "_OptionValueBinding";
  $desc = $collectedClasses._OptionValueBinding;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _OptionValueBinding.prototype = $desc;
  function _InputBinding() {
  }
  _InputBinding.builtin$cls = "_InputBinding";
  if (!"name" in _InputBinding)
    _InputBinding.name = "_InputBinding";
  $desc = $collectedClasses._InputBinding;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _InputBinding.prototype = $desc;
  function closure2() {
  }
  closure2.builtin$cls = "closure2";
  if (!"name" in closure2)
    closure2.name = "closure2";
  $desc = $collectedClasses.closure2;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure2.prototype = $desc;
  function _closure5(fired_0) {
    this.fired_0 = fired_0;
  }
  _closure5.builtin$cls = "_closure5";
  if (!"name" in _closure5)
    _closure5.name = "_closure5";
  $desc = $collectedClasses._closure5;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _closure5.prototype = $desc;
  function _closure6(fired_1) {
    this.fired_1 = fired_1;
  }
  _closure6.builtin$cls = "_closure6";
  if (!"name" in _closure6)
    _closure6.name = "_closure6";
  $desc = $collectedClasses._closure6;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _closure6.prototype = $desc;
  function _ValueBinding(_eventSub, _node_binding$_node, _model, _observer, _pathSub, property, path) {
    this._eventSub = _eventSub;
    this._node_binding$_node = _node_binding$_node;
    this._model = _model;
    this._observer = _observer;
    this._pathSub = _pathSub;
    this.property = property;
    this.path = path;
  }
  _ValueBinding.builtin$cls = "_ValueBinding";
  if (!"name" in _ValueBinding)
    _ValueBinding.name = "_ValueBinding";
  $desc = $collectedClasses._ValueBinding;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _ValueBinding.prototype = $desc;
  function _CheckedBinding(_eventSub, _node_binding$_node, _model, _observer, _pathSub, property, path) {
    this._eventSub = _eventSub;
    this._node_binding$_node = _node_binding$_node;
    this._model = _model;
    this._observer = _observer;
    this._pathSub = _pathSub;
    this.property = property;
    this.path = path;
  }
  _CheckedBinding.builtin$cls = "_CheckedBinding";
  if (!"name" in _CheckedBinding)
    _CheckedBinding.name = "_CheckedBinding";
  $desc = $collectedClasses._CheckedBinding;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _CheckedBinding.prototype = $desc;
  function _CheckedBinding__getAssociatedRadioButtons_closure(element_0) {
    this.element_0 = element_0;
  }
  _CheckedBinding__getAssociatedRadioButtons_closure.builtin$cls = "_CheckedBinding__getAssociatedRadioButtons_closure";
  if (!"name" in _CheckedBinding__getAssociatedRadioButtons_closure)
    _CheckedBinding__getAssociatedRadioButtons_closure.name = "_CheckedBinding__getAssociatedRadioButtons_closure";
  $desc = $collectedClasses._CheckedBinding__getAssociatedRadioButtons_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _CheckedBinding__getAssociatedRadioButtons_closure.prototype = $desc;
  function _CheckedBinding__getAssociatedRadioButtons_closure0(element_1) {
    this.element_1 = element_1;
  }
  _CheckedBinding__getAssociatedRadioButtons_closure0.builtin$cls = "_CheckedBinding__getAssociatedRadioButtons_closure0";
  if (!"name" in _CheckedBinding__getAssociatedRadioButtons_closure0)
    _CheckedBinding__getAssociatedRadioButtons_closure0.name = "_CheckedBinding__getAssociatedRadioButtons_closure0";
  $desc = $collectedClasses._CheckedBinding__getAssociatedRadioButtons_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _CheckedBinding__getAssociatedRadioButtons_closure0.prototype = $desc;
  function _SelectBinding(_onMutation, _eventSub, _node_binding$_node, _model, _observer, _pathSub, property, path) {
    this._onMutation = _onMutation;
    this._eventSub = _eventSub;
    this._node_binding$_node = _node_binding$_node;
    this._model = _model;
    this._observer = _observer;
    this._pathSub = _pathSub;
    this.property = property;
    this.path = path;
  }
  _SelectBinding.builtin$cls = "_SelectBinding";
  if (!"name" in _SelectBinding)
    _SelectBinding.name = "_SelectBinding";
  $desc = $collectedClasses._SelectBinding;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SelectBinding.prototype = $desc;
  function _SelectBinding_valueChanged_closure(this_0) {
    this.this_0 = this_0;
  }
  _SelectBinding_valueChanged_closure.builtin$cls = "_SelectBinding_valueChanged_closure";
  if (!"name" in _SelectBinding_valueChanged_closure)
    _SelectBinding_valueChanged_closure.name = "_SelectBinding_valueChanged_closure";
  $desc = $collectedClasses._SelectBinding_valueChanged_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SelectBinding_valueChanged_closure.prototype = $desc;
  function _SelectBinding__toInt_closure() {
  }
  _SelectBinding__toInt_closure.builtin$cls = "_SelectBinding__toInt_closure";
  if (!"name" in _SelectBinding__toInt_closure)
    _SelectBinding__toInt_closure.name = "_SelectBinding__toInt_closure";
  $desc = $collectedClasses._SelectBinding__toInt_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SelectBinding__toInt_closure.prototype = $desc;
  function _InputElementExtension(_node, _bindings, _templateInstance) {
    this._node = _node;
    this._bindings = _bindings;
    this._templateInstance = _templateInstance;
  }
  _InputElementExtension.builtin$cls = "_InputElementExtension";
  if (!"name" in _InputElementExtension)
    _InputElementExtension.name = "_InputElementExtension";
  $desc = $collectedClasses._InputElementExtension;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _InputElementExtension.prototype = $desc;
  function _InstanceBindingMap(bindings, children, templateRef, numChildren) {
    this.bindings = bindings;
    this.children = children;
    this.templateRef = templateRef;
    this.numChildren = numChildren;
  }
  _InstanceBindingMap.builtin$cls = "_InstanceBindingMap";
  if (!"name" in _InstanceBindingMap)
    _InstanceBindingMap.name = "_InstanceBindingMap";
  $desc = $collectedClasses._InstanceBindingMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _InstanceBindingMap.prototype = $desc;
  _InstanceBindingMap.prototype.get$bindings = function(receiver) {
    return this.bindings;
  };
  _InstanceBindingMap.prototype.get$children = function(receiver) {
    return this.children;
  };
  _InstanceBindingMap.prototype.get$templateRef = function() {
    return this.templateRef;
  };
  _InstanceBindingMap.prototype.get$numChildren = function() {
    return this.numChildren;
  };
  function NodeBindExtension(_node, _bindings, _templateInstance) {
    this._node = _node;
    this._bindings = _bindings;
    this._templateInstance = _templateInstance;
  }
  NodeBindExtension.builtin$cls = "NodeBindExtension";
  if (!"name" in NodeBindExtension)
    NodeBindExtension.name = "NodeBindExtension";
  $desc = $collectedClasses.NodeBindExtension;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NodeBindExtension.prototype = $desc;
  NodeBindExtension.prototype.get$_node = function() {
    return this._node;
  };
  NodeBindExtension.prototype.set$_templateInstance = function(v) {
    return this._templateInstance = v;
  };
  function TemplateInstance(firstNode, lastNode, model) {
    this.firstNode = firstNode;
    this.lastNode = lastNode;
    this.model = model;
  }
  TemplateInstance.builtin$cls = "TemplateInstance";
  if (!"name" in TemplateInstance)
    TemplateInstance.name = "TemplateInstance";
  $desc = $collectedClasses.TemplateInstance;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TemplateInstance.prototype = $desc;
  function _SelectElementExtension(_node, _bindings, _templateInstance) {
    this._node = _node;
    this._bindings = _bindings;
    this._templateInstance = _templateInstance;
  }
  _SelectElementExtension.builtin$cls = "_SelectElementExtension";
  if (!"name" in _SelectElementExtension)
    _SelectElementExtension.name = "_SelectElementExtension";
  $desc = $collectedClasses._SelectElementExtension;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _SelectElementExtension.prototype = $desc;
  function TemplateBindExtension(_template_binding$_model, _bindingDelegate, _template_binding$_iterator, _template_binding$_scheduled, _templateInstanceRef, _content, _templateIsDecorated, _stagingDocument, _bindingMap, _node, _bindings, _templateInstance) {
    this._template_binding$_model = _template_binding$_model;
    this._bindingDelegate = _bindingDelegate;
    this._template_binding$_iterator = _template_binding$_iterator;
    this._template_binding$_scheduled = _template_binding$_scheduled;
    this._templateInstanceRef = _templateInstanceRef;
    this._content = _content;
    this._templateIsDecorated = _templateIsDecorated;
    this._stagingDocument = _stagingDocument;
    this._bindingMap = _bindingMap;
    this._node = _node;
    this._bindings = _bindings;
    this._templateInstance = _templateInstance;
  }
  TemplateBindExtension.builtin$cls = "TemplateBindExtension";
  if (!"name" in TemplateBindExtension)
    TemplateBindExtension.name = "TemplateBindExtension";
  $desc = $collectedClasses.TemplateBindExtension;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TemplateBindExtension.prototype = $desc;
  TemplateBindExtension.prototype.set$_bindingDelegate = function(v) {
    return this._bindingDelegate = v;
  };
  TemplateBindExtension.prototype.get$_template_binding$_iterator = function() {
    return this._template_binding$_iterator;
  };
  TemplateBindExtension.prototype.set$_templateInstanceRef = function(v) {
    return this._templateInstanceRef = v;
  };
  TemplateBindExtension.prototype.set$_content = function(v) {
    return this._content = v;
  };
  TemplateBindExtension.prototype.set$_templateIsDecorated = function(v) {
    return this._templateIsDecorated = v;
  };
  TemplateBindExtension.prototype.get$_bindingMap = function() {
    return this._bindingMap;
  };
  TemplateBindExtension.prototype.set$_bindingMap = function(v) {
    return this._bindingMap = v;
  };
  function TemplateBindExtension_bootstrap__bootstrap() {
  }
  TemplateBindExtension_bootstrap__bootstrap.builtin$cls = "TemplateBindExtension_bootstrap__bootstrap";
  if (!"name" in TemplateBindExtension_bootstrap__bootstrap)
    TemplateBindExtension_bootstrap__bootstrap.name = "TemplateBindExtension_bootstrap__bootstrap";
  $desc = $collectedClasses.TemplateBindExtension_bootstrap__bootstrap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TemplateBindExtension_bootstrap__bootstrap.prototype = $desc;
  function closure3() {
  }
  closure3.builtin$cls = "closure3";
  if (!"name" in closure3)
    closure3.name = "closure3";
  $desc = $collectedClasses.closure3;
  if ($desc instanceof Array)
    $desc = $desc[1];
  closure3.prototype = $desc;
  function _TemplateBinding(_ext, _template_binding$_model, property, path) {
    this._ext = _ext;
    this._template_binding$_model = _template_binding$_model;
    this.property = property;
    this.path = path;
  }
  _TemplateBinding.builtin$cls = "_TemplateBinding";
  if (!"name" in _TemplateBinding)
    _TemplateBinding.name = "_TemplateBinding";
  $desc = $collectedClasses._TemplateBinding;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _TemplateBinding.prototype = $desc;
  _TemplateBinding.prototype.get$path = function(receiver) {
    return this.path;
  };
  function _parseAttributeBindings_closure(box_0, element_1, delegate_2, isTemplateNode_3) {
    this.box_0 = box_0;
    this.element_1 = element_1;
    this.delegate_2 = delegate_2;
    this.isTemplateNode_3 = isTemplateNode_3;
  }
  _parseAttributeBindings_closure.builtin$cls = "_parseAttributeBindings_closure";
  if (!"name" in _parseAttributeBindings_closure)
    _parseAttributeBindings_closure.name = "_parseAttributeBindings_closure";
  $desc = $collectedClasses._parseAttributeBindings_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _parseAttributeBindings_closure.prototype = $desc;
  function _MustacheTokens(tokens, _combinator) {
    this.tokens = tokens;
    this._combinator = _combinator;
  }
  _MustacheTokens.builtin$cls = "_MustacheTokens";
  if (!"name" in _MustacheTokens)
    _MustacheTokens.name = "_MustacheTokens";
  $desc = $collectedClasses._MustacheTokens;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _MustacheTokens.prototype = $desc;
  _MustacheTokens.prototype.get$tokens = function() {
    return this.tokens;
  };
  function _TemplateIterator(_templateExt, terminators, iteratedValue, closed, depsChanging, hasRepeat, hasBind, hasIf, repeatModel, bindModel, ifModel, repeatPath, bindPath, ifPath, _valueSub, _listSub, _initPrepareFunctions, _instanceModelFn, _instancePositionChangedFn) {
    this._templateExt = _templateExt;
    this.terminators = terminators;
    this.iteratedValue = iteratedValue;
    this.closed = closed;
    this.depsChanging = depsChanging;
    this.hasRepeat = hasRepeat;
    this.hasBind = hasBind;
    this.hasIf = hasIf;
    this.repeatModel = repeatModel;
    this.bindModel = bindModel;
    this.ifModel = ifModel;
    this.repeatPath = repeatPath;
    this.bindPath = bindPath;
    this.ifPath = ifPath;
    this._valueSub = _valueSub;
    this._listSub = _listSub;
    this._initPrepareFunctions = _initPrepareFunctions;
    this._instanceModelFn = _instanceModelFn;
    this._instancePositionChangedFn = _instancePositionChangedFn;
  }
  _TemplateIterator.builtin$cls = "_TemplateIterator";
  if (!"name" in _TemplateIterator)
    _TemplateIterator.name = "_TemplateIterator";
  $desc = $collectedClasses._TemplateIterator;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _TemplateIterator.prototype = $desc;
  function _TemplateIterator_resolve_closure() {
  }
  _TemplateIterator_resolve_closure.builtin$cls = "_TemplateIterator_resolve_closure";
  if (!"name" in _TemplateIterator_resolve_closure)
    _TemplateIterator_resolve_closure.name = "_TemplateIterator_resolve_closure";
  $desc = $collectedClasses._TemplateIterator_resolve_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _TemplateIterator_resolve_closure.prototype = $desc;
  function _TemplateIterator_resolve_valueFn(isRepeat_0) {
    this.isRepeat_0 = isRepeat_0;
  }
  _TemplateIterator_resolve_valueFn.builtin$cls = "_TemplateIterator_resolve_valueFn";
  if (!"name" in _TemplateIterator_resolve_valueFn)
    _TemplateIterator_resolve_valueFn.name = "_TemplateIterator_resolve_valueFn";
  $desc = $collectedClasses._TemplateIterator_resolve_valueFn;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _TemplateIterator_resolve_valueFn.prototype = $desc;
  function _TemplateIterator_resolve_closure0(this_1) {
    this.this_1 = this_1;
  }
  _TemplateIterator_resolve_closure0.builtin$cls = "_TemplateIterator_resolve_closure0";
  if (!"name" in _TemplateIterator_resolve_closure0)
    _TemplateIterator_resolve_closure0.name = "_TemplateIterator_resolve_closure0";
  $desc = $collectedClasses._TemplateIterator_resolve_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _TemplateIterator_resolve_closure0.prototype = $desc;
  function _BoundNodes(nodes, bound) {
    this.nodes = nodes;
    this.bound = bound;
  }
  _BoundNodes.builtin$cls = "_BoundNodes";
  if (!"name" in _BoundNodes)
    _BoundNodes.name = "_BoundNodes";
  $desc = $collectedClasses._BoundNodes;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _BoundNodes.prototype = $desc;
  _BoundNodes.prototype.get$nodes = function(receiver) {
    return this.nodes;
  };
  _BoundNodes.prototype.get$bound = function(receiver) {
    return this.bound;
  };
  function _TextExtension(_node, _bindings, _templateInstance) {
    this._node = _node;
    this._bindings = _bindings;
    this._templateInstance = _templateInstance;
  }
  _TextExtension.builtin$cls = "_TextExtension";
  if (!"name" in _TextExtension)
    _TextExtension.name = "_TextExtension";
  $desc = $collectedClasses._TextExtension;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _TextExtension.prototype = $desc;
  function _TextBinding(_node_binding$_node, _model, _observer, _pathSub, property, path) {
    this._node_binding$_node = _node_binding$_node;
    this._model = _model;
    this._observer = _observer;
    this._pathSub = _pathSub;
    this.property = property;
    this.path = path;
  }
  _TextBinding.builtin$cls = "_TextBinding";
  if (!"name" in _TextBinding)
    _TextBinding.name = "_TextBinding";
  $desc = $collectedClasses._TextBinding;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _TextBinding.prototype = $desc;
  function _TextAreaElementExtension(_node, _bindings, _templateInstance) {
    this._node = _node;
    this._bindings = _bindings;
    this._templateInstance = _templateInstance;
  }
  _TextAreaElementExtension.builtin$cls = "_TextAreaElementExtension";
  if (!"name" in _TextAreaElementExtension)
    _TextAreaElementExtension.name = "_TextAreaElementExtension";
  $desc = $collectedClasses._TextAreaElementExtension;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _TextAreaElementExtension.prototype = $desc;
  function BindingDelegate() {
  }
  BindingDelegate.builtin$cls = "BindingDelegate";
  if (!"name" in BindingDelegate)
    BindingDelegate.name = "BindingDelegate";
  $desc = $collectedClasses.BindingDelegate;
  if ($desc instanceof Array)
    $desc = $desc[1];
  BindingDelegate.prototype = $desc;
  function NodeBinding(_node_binding$_node, path) {
    this._node_binding$_node = _node_binding$_node;
    this.path = path;
  }
  NodeBinding.builtin$cls = "NodeBinding";
  if (!"name" in NodeBinding)
    NodeBinding.name = "NodeBinding";
  $desc = $collectedClasses.NodeBinding;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NodeBinding.prototype = $desc;
  NodeBinding.prototype.get$_node_binding$_node = function() {
    return this._node_binding$_node;
  };
  NodeBinding.prototype.get$path = function(receiver) {
    return this.path;
  };
  function NodeBinding_closure(this_0) {
    this.this_0 = this_0;
  }
  NodeBinding_closure.builtin$cls = "NodeBinding_closure";
  if (!"name" in NodeBinding_closure)
    NodeBinding_closure.name = "NodeBinding_closure";
  $desc = $collectedClasses.NodeBinding_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NodeBinding_closure.prototype = $desc;
  function hashCodeFor_closure(obj_0) {
    this.obj_0 = obj_0;
  }
  hashCodeFor_closure.builtin$cls = "hashCodeFor_closure";
  if (!"name" in hashCodeFor_closure)
    hashCodeFor_closure.name = "hashCodeFor_closure";
  $desc = $collectedClasses.hashCodeFor_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  hashCodeFor_closure.prototype = $desc;
  function Visitor() {
  }
  Visitor.builtin$cls = "Visitor";
  if (!"name" in Visitor)
    Visitor.name = "Visitor";
  $desc = $collectedClasses.Visitor;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Visitor.prototype = $desc;
  function Visitor_visitSequence_closure(this_0) {
    this.this_0 = this_0;
  }
  Visitor_visitSequence_closure.builtin$cls = "Visitor_visitSequence_closure";
  if (!"name" in Visitor_visitSequence_closure)
    Visitor_visitSequence_closure.name = "Visitor_visitSequence_closure";
  $desc = $collectedClasses.Visitor_visitSequence_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Visitor_visitSequence_closure.prototype = $desc;
  function AnnotationElement(_annotations$__$annotations, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._annotations$__$annotations = _annotations$__$annotations;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  AnnotationElement.builtin$cls = "AnnotationElement";
  if (!"name" in AnnotationElement)
    AnnotationElement.name = "AnnotationElement";
  $desc = $collectedClasses.AnnotationElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnnotationElement.prototype = $desc;
  AnnotationElement.prototype.get$_annotations$__$annotations = function(receiver) {
    return receiver._annotations$__$annotations;
  };
  AnnotationElement.prototype.get$_annotations$__$annotations.$reflectable = 1;
  AnnotationElement.prototype.set$_annotations$__$annotations = function(receiver, v) {
    return receiver._annotations$__$annotations = v;
  };
  AnnotationElement.prototype.set$_annotations$__$annotations.$reflectable = 1;
  function PolymerElement_ChangeNotifier() {
  }
  PolymerElement_ChangeNotifier.builtin$cls = "PolymerElement_ChangeNotifier";
  if (!"name" in PolymerElement_ChangeNotifier)
    PolymerElement_ChangeNotifier.name = "PolymerElement_ChangeNotifier";
  $desc = $collectedClasses.PolymerElement_ChangeNotifier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolymerElement_ChangeNotifier.prototype = $desc;
  function Viewer(_app$__$isDesktop, finished, _app$__$homePage, _showPkgLibraries, _app$__$libraries, _currentPage, _app$__$isPanel, _isPanel, _app$__$isMinimap, _isMinimap, _app$__$isInherited, _app$__$showObjectMembers, _hash, _loadIndicator, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records) {
    this._app$__$isDesktop = _app$__$isDesktop;
    this.finished = finished;
    this._app$__$homePage = _app$__$homePage;
    this._showPkgLibraries = _showPkgLibraries;
    this._app$__$libraries = _app$__$libraries;
    this._currentPage = _currentPage;
    this._app$__$isPanel = _app$__$isPanel;
    this._isPanel = _isPanel;
    this._app$__$isMinimap = _app$__$isMinimap;
    this._isMinimap = _isMinimap;
    this._app$__$isInherited = _app$__$isInherited;
    this._app$__$showObjectMembers = _app$__$showObjectMembers;
    this._hash = _hash;
    this._loadIndicator = _loadIndicator;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
  }
  Viewer.builtin$cls = "Viewer";
  if (!"name" in Viewer)
    Viewer.name = "Viewer";
  $desc = $collectedClasses.Viewer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Viewer.prototype = $desc;
  function Viewer__updateLibraries_closure() {
  }
  Viewer__updateLibraries_closure.builtin$cls = "Viewer__updateLibraries_closure";
  if (!"name" in Viewer__updateLibraries_closure)
    Viewer__updateLibraries_closure.name = "Viewer__updateLibraries_closure";
  $desc = $collectedClasses.Viewer__updateLibraries_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Viewer__updateLibraries_closure.prototype = $desc;
  function Viewer$__closure(this_0) {
    this.this_0 = this_0;
  }
  Viewer$__closure.builtin$cls = "Viewer$__closure";
  if (!"name" in Viewer$__closure)
    Viewer$__closure.name = "Viewer$__closure";
  $desc = $collectedClasses.Viewer$__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Viewer$__closure.prototype = $desc;
  function Viewer$__closure0() {
  }
  Viewer$__closure0.builtin$cls = "Viewer$__closure0";
  if (!"name" in Viewer$__closure0)
    Viewer$__closure0.name = "Viewer$__closure0";
  $desc = $collectedClasses.Viewer$__closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Viewer$__closure0.prototype = $desc;
  function Viewer__scrollScreen_closure() {
  }
  Viewer__scrollScreen_closure.builtin$cls = "Viewer__scrollScreen_closure";
  if (!"name" in Viewer__scrollScreen_closure)
    Viewer__scrollScreen_closure.name = "Viewer__scrollScreen_closure";
  $desc = $collectedClasses.Viewer__scrollScreen_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Viewer__scrollScreen_closure.prototype = $desc;
  function Viewer__scrollScreen_closure0(box_0, this_1) {
    this.box_0 = box_0;
    this.this_1 = this_1;
  }
  Viewer__scrollScreen_closure0.builtin$cls = "Viewer__scrollScreen_closure0";
  if (!"name" in Viewer__scrollScreen_closure0)
    Viewer__scrollScreen_closure0.name = "Viewer__scrollScreen_closure0";
  $desc = $collectedClasses.Viewer__scrollScreen_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Viewer__scrollScreen_closure0.prototype = $desc;
  function Viewer_queryEverywhere_closure() {
  }
  Viewer_queryEverywhere_closure.builtin$cls = "Viewer_queryEverywhere_closure";
  if (!"name" in Viewer_queryEverywhere_closure)
    Viewer_queryEverywhere_closure.name = "Viewer_queryEverywhere_closure";
  $desc = $collectedClasses.Viewer_queryEverywhere_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Viewer_queryEverywhere_closure.prototype = $desc;
  function Viewer__loadAndUpdatePage_closure(this_0, location_1) {
    this.this_0 = this_0;
    this.location_1 = location_1;
  }
  Viewer__loadAndUpdatePage_closure.builtin$cls = "Viewer__loadAndUpdatePage_closure";
  if (!"name" in Viewer__loadAndUpdatePage_closure)
    Viewer__loadAndUpdatePage_closure.name = "Viewer__loadAndUpdatePage_closure";
  $desc = $collectedClasses.Viewer__loadAndUpdatePage_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Viewer__loadAndUpdatePage_closure.prototype = $desc;
  function Viewer__loadAndUpdatePage_closure0(this_2, location_3, destination_4) {
    this.this_2 = this_2;
    this.location_3 = location_3;
    this.destination_4 = destination_4;
  }
  Viewer__loadAndUpdatePage_closure0.builtin$cls = "Viewer__loadAndUpdatePage_closure0";
  if (!"name" in Viewer__loadAndUpdatePage_closure0)
    Viewer__loadAndUpdatePage_closure0.name = "Viewer__loadAndUpdatePage_closure0";
  $desc = $collectedClasses.Viewer__loadAndUpdatePage_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Viewer__loadAndUpdatePage_closure0.prototype = $desc;
  function Viewer_getItem_closure(this_0, location_1) {
    this.this_0 = this_0;
    this.location_1 = location_1;
  }
  Viewer_getItem_closure.builtin$cls = "Viewer_getItem_closure";
  if (!"name" in Viewer_getItem_closure)
    Viewer_getItem_closure.name = "Viewer_getItem_closure";
  $desc = $collectedClasses.Viewer_getItem_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Viewer_getItem_closure.prototype = $desc;
  function Viewer_getItem_closure0(this_2, location_3) {
    this.this_2 = this_2;
    this.location_3 = location_3;
  }
  Viewer_getItem_closure0.builtin$cls = "Viewer_getItem_closure0";
  if (!"name" in Viewer_getItem_closure0)
    Viewer_getItem_closure0.name = "Viewer_getItem_closure0";
  $desc = $collectedClasses.Viewer_getItem_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Viewer_getItem_closure0.prototype = $desc;
  function Viewer_getMember_closure(this_0, lib_1, member_2) {
    this.this_0 = this_0;
    this.lib_1 = lib_1;
    this.member_2 = member_2;
  }
  Viewer_getMember_closure.builtin$cls = "Viewer_getMember_closure";
  if (!"name" in Viewer_getMember_closure)
    Viewer_getMember_closure.name = "Viewer_getMember_closure";
  $desc = $collectedClasses.Viewer_getMember_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Viewer_getMember_closure.prototype = $desc;
  function Viewer_getMember__closure(this_3, lib_4, member_5, mem_6) {
    this.this_3 = this_3;
    this.lib_4 = lib_4;
    this.member_5 = member_5;
    this.mem_6 = mem_6;
  }
  Viewer_getMember__closure.builtin$cls = "Viewer_getMember__closure";
  if (!"name" in Viewer_getMember__closure)
    Viewer_getMember__closure.name = "Viewer_getMember__closure";
  $desc = $collectedClasses.Viewer_getMember__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Viewer_getMember__closure.prototype = $desc;
  function Viewer_getMember___closure(lib_7, member_8) {
    this.lib_7 = lib_7;
    this.member_8 = member_8;
  }
  Viewer_getMember___closure.builtin$cls = "Viewer_getMember___closure";
  if (!"name" in Viewer_getMember___closure)
    Viewer_getMember___closure.name = "Viewer_getMember___closure";
  $desc = $collectedClasses.Viewer_getMember___closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Viewer_getMember___closure.prototype = $desc;
  function Viewer_getMember_closure0(lib_9, member_10) {
    this.lib_9 = lib_9;
    this.member_10 = member_10;
  }
  Viewer_getMember_closure0.builtin$cls = "Viewer_getMember_closure0";
  if (!"name" in Viewer_getMember_closure0)
    Viewer_getMember_closure0.name = "Viewer_getMember_closure0";
  $desc = $collectedClasses.Viewer_getMember_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Viewer_getMember_closure0.prototype = $desc;
  function _init_closure() {
  }
  _init_closure.builtin$cls = "_init_closure";
  if (!"name" in _init_closure)
    _init_closure.name = "_init_closure";
  $desc = $collectedClasses._init_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _init_closure.prototype = $desc;
  function _init_closure0() {
  }
  _init_closure0.builtin$cls = "_init_closure0";
  if (!"name" in _init_closure0)
    _init_closure0.name = "_init_closure0";
  $desc = $collectedClasses._init_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _init_closure0.prototype = $desc;
  function _init_closure1() {
  }
  _init_closure1.builtin$cls = "_init_closure1";
  if (!"name" in _init_closure1)
    _init_closure1.name = "_init_closure1";
  $desc = $collectedClasses._init_closure1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _init_closure1.prototype = $desc;
  function concat_closure() {
  }
  concat_closure.builtin$cls = "concat_closure";
  if (!"name" in concat_closure)
    concat_closure.name = "concat_closure";
  $desc = $collectedClasses.concat_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  concat_closure.prototype = $desc;
  function _DefaultSyntaxWithEvents() {
  }
  _DefaultSyntaxWithEvents.builtin$cls = "_DefaultSyntaxWithEvents";
  if (!"name" in _DefaultSyntaxWithEvents)
    _DefaultSyntaxWithEvents.name = "_DefaultSyntaxWithEvents";
  $desc = $collectedClasses._DefaultSyntaxWithEvents;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _DefaultSyntaxWithEvents.prototype = $desc;
  function Breadcrumbs(_breadcrumbs$__$breadcrumbs, _breadcrumbs$__$lastCrumb, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._breadcrumbs$__$breadcrumbs = _breadcrumbs$__$breadcrumbs;
    this._breadcrumbs$__$lastCrumb = _breadcrumbs$__$lastCrumb;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  Breadcrumbs.builtin$cls = "Breadcrumbs";
  if (!"name" in Breadcrumbs)
    Breadcrumbs.name = "Breadcrumbs";
  $desc = $collectedClasses.Breadcrumbs;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Breadcrumbs.prototype = $desc;
  Breadcrumbs.prototype.get$_breadcrumbs$__$breadcrumbs = function(receiver) {
    return receiver._breadcrumbs$__$breadcrumbs;
  };
  Breadcrumbs.prototype.get$_breadcrumbs$__$breadcrumbs.$reflectable = 1;
  Breadcrumbs.prototype.set$_breadcrumbs$__$breadcrumbs = function(receiver, v) {
    return receiver._breadcrumbs$__$breadcrumbs = v;
  };
  Breadcrumbs.prototype.set$_breadcrumbs$__$breadcrumbs.$reflectable = 1;
  Breadcrumbs.prototype.get$_breadcrumbs$__$lastCrumb = function(receiver) {
    return receiver._breadcrumbs$__$lastCrumb;
  };
  Breadcrumbs.prototype.get$_breadcrumbs$__$lastCrumb.$reflectable = 1;
  Breadcrumbs.prototype.set$_breadcrumbs$__$lastCrumb = function(receiver, v) {
    return receiver._breadcrumbs$__$lastCrumb = v;
  };
  Breadcrumbs.prototype.set$_breadcrumbs$__$lastCrumb.$reflectable = 1;
  function PolymerElement_ChangeNotifier0() {
  }
  PolymerElement_ChangeNotifier0.builtin$cls = "PolymerElement_ChangeNotifier0";
  if (!"name" in PolymerElement_ChangeNotifier0)
    PolymerElement_ChangeNotifier0.name = "PolymerElement_ChangeNotifier0";
  $desc = $collectedClasses.PolymerElement_ChangeNotifier0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolymerElement_ChangeNotifier0.prototype = $desc;
  function Breadcrumbs_enteredView_closure(this_0) {
    this.this_0 = this_0;
  }
  Breadcrumbs_enteredView_closure.builtin$cls = "Breadcrumbs_enteredView_closure";
  if (!"name" in Breadcrumbs_enteredView_closure)
    Breadcrumbs_enteredView_closure.name = "Breadcrumbs_enteredView_closure";
  $desc = $collectedClasses.Breadcrumbs_enteredView_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Breadcrumbs_enteredView_closure.prototype = $desc;
  function CategoryElement(_category$__$category, _category$__$items, _category$__$variables, _category$__$methods, _category$__$hasItems, _category$__$title, _category$__$stylizedName, _category$__$accordionStyle, _category$__$divClass, _category$__$caretStyle, _category$__$lineHeight, __isExpanded, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._category$__$category = _category$__$category;
    this._category$__$items = _category$__$items;
    this._category$__$variables = _category$__$variables;
    this._category$__$methods = _category$__$methods;
    this._category$__$hasItems = _category$__$hasItems;
    this._category$__$title = _category$__$title;
    this._category$__$stylizedName = _category$__$stylizedName;
    this._category$__$accordionStyle = _category$__$accordionStyle;
    this._category$__$divClass = _category$__$divClass;
    this._category$__$caretStyle = _category$__$caretStyle;
    this._category$__$lineHeight = _category$__$lineHeight;
    this.__isExpanded = __isExpanded;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  CategoryElement.builtin$cls = "CategoryElement";
  if (!"name" in CategoryElement)
    CategoryElement.name = "CategoryElement";
  $desc = $collectedClasses.CategoryElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CategoryElement.prototype = $desc;
  CategoryElement.prototype.get$_category$__$category = function(receiver) {
    return receiver._category$__$category;
  };
  CategoryElement.prototype.get$_category$__$category.$reflectable = 1;
  CategoryElement.prototype.set$_category$__$category = function(receiver, v) {
    return receiver._category$__$category = v;
  };
  CategoryElement.prototype.set$_category$__$category.$reflectable = 1;
  CategoryElement.prototype.get$_category$__$items = function(receiver) {
    return receiver._category$__$items;
  };
  CategoryElement.prototype.get$_category$__$items.$reflectable = 1;
  CategoryElement.prototype.set$_category$__$items = function(receiver, v) {
    return receiver._category$__$items = v;
  };
  CategoryElement.prototype.set$_category$__$items.$reflectable = 1;
  CategoryElement.prototype.get$_category$__$variables = function(receiver) {
    return receiver._category$__$variables;
  };
  CategoryElement.prototype.get$_category$__$variables.$reflectable = 1;
  CategoryElement.prototype.set$_category$__$variables = function(receiver, v) {
    return receiver._category$__$variables = v;
  };
  CategoryElement.prototype.set$_category$__$variables.$reflectable = 1;
  CategoryElement.prototype.get$_category$__$methods = function(receiver) {
    return receiver._category$__$methods;
  };
  CategoryElement.prototype.get$_category$__$methods.$reflectable = 1;
  CategoryElement.prototype.set$_category$__$methods = function(receiver, v) {
    return receiver._category$__$methods = v;
  };
  CategoryElement.prototype.set$_category$__$methods.$reflectable = 1;
  CategoryElement.prototype.get$_category$__$hasItems = function(receiver) {
    return receiver._category$__$hasItems;
  };
  CategoryElement.prototype.get$_category$__$hasItems.$reflectable = 1;
  CategoryElement.prototype.set$_category$__$hasItems = function(receiver, v) {
    return receiver._category$__$hasItems = v;
  };
  CategoryElement.prototype.set$_category$__$hasItems.$reflectable = 1;
  CategoryElement.prototype.get$_category$__$title = function(receiver) {
    return receiver._category$__$title;
  };
  CategoryElement.prototype.get$_category$__$title.$reflectable = 1;
  CategoryElement.prototype.set$_category$__$title = function(receiver, v) {
    return receiver._category$__$title = v;
  };
  CategoryElement.prototype.set$_category$__$title.$reflectable = 1;
  CategoryElement.prototype.get$_category$__$stylizedName = function(receiver) {
    return receiver._category$__$stylizedName;
  };
  CategoryElement.prototype.get$_category$__$stylizedName.$reflectable = 1;
  CategoryElement.prototype.set$_category$__$stylizedName = function(receiver, v) {
    return receiver._category$__$stylizedName = v;
  };
  CategoryElement.prototype.set$_category$__$stylizedName.$reflectable = 1;
  CategoryElement.prototype.get$_category$__$accordionStyle = function(receiver) {
    return receiver._category$__$accordionStyle;
  };
  CategoryElement.prototype.get$_category$__$accordionStyle.$reflectable = 1;
  CategoryElement.prototype.set$_category$__$accordionStyle = function(receiver, v) {
    return receiver._category$__$accordionStyle = v;
  };
  CategoryElement.prototype.set$_category$__$accordionStyle.$reflectable = 1;
  CategoryElement.prototype.get$_category$__$divClass = function(receiver) {
    return receiver._category$__$divClass;
  };
  CategoryElement.prototype.get$_category$__$divClass.$reflectable = 1;
  CategoryElement.prototype.set$_category$__$divClass = function(receiver, v) {
    return receiver._category$__$divClass = v;
  };
  CategoryElement.prototype.set$_category$__$divClass.$reflectable = 1;
  CategoryElement.prototype.get$_category$__$caretStyle = function(receiver) {
    return receiver._category$__$caretStyle;
  };
  CategoryElement.prototype.get$_category$__$caretStyle.$reflectable = 1;
  CategoryElement.prototype.set$_category$__$caretStyle = function(receiver, v) {
    return receiver._category$__$caretStyle = v;
  };
  CategoryElement.prototype.set$_category$__$caretStyle.$reflectable = 1;
  CategoryElement.prototype.get$_category$__$lineHeight = function(receiver) {
    return receiver._category$__$lineHeight;
  };
  CategoryElement.prototype.get$_category$__$lineHeight.$reflectable = 1;
  CategoryElement.prototype.set$_category$__$lineHeight = function(receiver, v) {
    return receiver._category$__$lineHeight = v;
  };
  CategoryElement.prototype.set$_category$__$lineHeight.$reflectable = 1;
  CategoryElement.prototype.get$__isExpanded = function(receiver) {
    return receiver.__isExpanded;
  };
  CategoryElement.prototype.get$__isExpanded.$reflectable = 1;
  CategoryElement.prototype.set$__isExpanded = function(receiver, v) {
    return receiver.__isExpanded = v;
  };
  CategoryElement.prototype.set$__isExpanded.$reflectable = 1;
  function DartdocElement_ChangeNotifier() {
  }
  DartdocElement_ChangeNotifier.builtin$cls = "DartdocElement_ChangeNotifier";
  if (!"name" in DartdocElement_ChangeNotifier)
    DartdocElement_ChangeNotifier.name = "DartdocElement_ChangeNotifier";
  $desc = $collectedClasses.DartdocElement_ChangeNotifier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DartdocElement_ChangeNotifier.prototype = $desc;
  function CategoryElement$created_closure(this_0) {
    this.this_0 = this_0;
  }
  CategoryElement$created_closure.builtin$cls = "CategoryElement$created_closure";
  if (!"name" in CategoryElement$created_closure)
    CategoryElement$created_closure.name = "CategoryElement$created_closure";
  $desc = $collectedClasses.CategoryElement$created_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CategoryElement$created_closure.prototype = $desc;
  function CategoryElement$created__closure() {
  }
  CategoryElement$created__closure.builtin$cls = "CategoryElement$created__closure";
  if (!"name" in CategoryElement$created__closure)
    CategoryElement$created__closure.name = "CategoryElement$created__closure";
  $desc = $collectedClasses.CategoryElement$created__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CategoryElement$created__closure.prototype = $desc;
  function ClassElement(lazyConstructors, lazyOperators, lazyInstanceFunctions, lazyStaticFunctions, lazyInstanceVariables, lazyStaticVariables, _loader, _item, _member$__$idName, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this.lazyConstructors = lazyConstructors;
    this.lazyOperators = lazyOperators;
    this.lazyInstanceFunctions = lazyInstanceFunctions;
    this.lazyStaticFunctions = lazyStaticFunctions;
    this.lazyInstanceVariables = lazyInstanceVariables;
    this.lazyStaticVariables = lazyStaticVariables;
    this._loader = _loader;
    this._item = _item;
    this._member$__$idName = _member$__$idName;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  ClassElement.builtin$cls = "ClassElement";
  if (!"name" in ClassElement)
    ClassElement.name = "ClassElement";
  $desc = $collectedClasses.ClassElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ClassElement.prototype = $desc;
  ClassElement.prototype.get$lazyConstructors = function(receiver) {
    return receiver.lazyConstructors;
  };
  ClassElement.prototype.get$lazyConstructors.$reflectable = 1;
  ClassElement.prototype.get$lazyOperators = function(receiver) {
    return receiver.lazyOperators;
  };
  ClassElement.prototype.get$lazyOperators.$reflectable = 1;
  ClassElement.prototype.get$lazyInstanceFunctions = function(receiver) {
    return receiver.lazyInstanceFunctions;
  };
  ClassElement.prototype.get$lazyInstanceFunctions.$reflectable = 1;
  ClassElement.prototype.get$lazyStaticFunctions = function(receiver) {
    return receiver.lazyStaticFunctions;
  };
  ClassElement.prototype.get$lazyStaticFunctions.$reflectable = 1;
  ClassElement.prototype.get$lazyInstanceVariables = function(receiver) {
    return receiver.lazyInstanceVariables;
  };
  ClassElement.prototype.get$lazyInstanceVariables.$reflectable = 1;
  ClassElement.prototype.get$lazyStaticVariables = function(receiver) {
    return receiver.lazyStaticVariables;
  };
  ClassElement.prototype.get$lazyStaticVariables.$reflectable = 1;
  ClassElement.prototype.get$_loader = function(receiver) {
    return receiver._loader;
  };
  ClassElement.prototype.get$_loader.$reflectable = 1;
  ClassElement.prototype.set$_loader = function(receiver, v) {
    return receiver._loader = v;
  };
  ClassElement.prototype.set$_loader.$reflectable = 1;
  function ClassElement$created_closure(this_0) {
    this.this_0 = this_0;
  }
  ClassElement$created_closure.builtin$cls = "ClassElement$created_closure";
  if (!"name" in ClassElement$created_closure)
    ClassElement$created_closure.name = "ClassElement$created_closure";
  $desc = $collectedClasses.ClassElement$created_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ClassElement$created_closure.prototype = $desc;
  function ClassElement$created__closure() {
  }
  ClassElement$created__closure.builtin$cls = "ClassElement$created__closure";
  if (!"name" in ClassElement$created__closure)
    ClassElement$created__closure.name = "ClassElement$created__closure";
  $desc = $collectedClasses.ClassElement$created__closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ClassElement$created__closure.prototype = $desc;
  function ClassElement__loadCategories_closure() {
  }
  ClassElement__loadCategories_closure.builtin$cls = "ClassElement__loadCategories_closure";
  if (!"name" in ClassElement__loadCategories_closure)
    ClassElement__loadCategories_closure.name = "ClassElement__loadCategories_closure";
  $desc = $collectedClasses.ClassElement__loadCategories_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ClassElement__loadCategories_closure.prototype = $desc;
  function ClassElement_addSubclasses_closure(this_0) {
    this.this_0 = this_0;
  }
  ClassElement_addSubclasses_closure.builtin$cls = "ClassElement_addSubclasses_closure";
  if (!"name" in ClassElement_addSubclasses_closure)
    ClassElement_addSubclasses_closure.name = "ClassElement_addSubclasses_closure";
  $desc = $collectedClasses.ClassElement_addSubclasses_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ClassElement_addSubclasses_closure.prototype = $desc;
  function ClassElement_makeLinks_closure(this_1, hidden_2) {
    this.this_1 = this_1;
    this.hidden_2 = hidden_2;
  }
  ClassElement_makeLinks_closure.builtin$cls = "ClassElement_makeLinks_closure";
  if (!"name" in ClassElement_makeLinks_closure)
    ClassElement_makeLinks_closure.name = "ClassElement_makeLinks_closure";
  $desc = $collectedClasses.ClassElement_makeLinks_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ClassElement_makeLinks_closure.prototype = $desc;
  function ClassElement_makeLinks_closure0(box_0, hidden_3) {
    this.box_0 = box_0;
    this.hidden_3 = hidden_3;
  }
  ClassElement_makeLinks_closure0.builtin$cls = "ClassElement_makeLinks_closure0";
  if (!"name" in ClassElement_makeLinks_closure0)
    ClassElement_makeLinks_closure0.name = "ClassElement_makeLinks_closure0";
  $desc = $collectedClasses.ClassElement_makeLinks_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ClassElement_makeLinks_closure0.prototype = $desc;
  function CommentElement(_comment$__$item, _comment$__$preview, _commentElement, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._comment$__$item = _comment$__$item;
    this._comment$__$preview = _comment$__$preview;
    this._commentElement = _commentElement;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  CommentElement.builtin$cls = "CommentElement";
  if (!"name" in CommentElement)
    CommentElement.name = "CommentElement";
  $desc = $collectedClasses.CommentElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  CommentElement.prototype = $desc;
  CommentElement.prototype.get$_comment$__$item = function(receiver) {
    return receiver._comment$__$item;
  };
  CommentElement.prototype.get$_comment$__$item.$reflectable = 1;
  CommentElement.prototype.set$_comment$__$item = function(receiver, v) {
    return receiver._comment$__$item = v;
  };
  CommentElement.prototype.set$_comment$__$item.$reflectable = 1;
  CommentElement.prototype.get$_comment$__$preview = function(receiver) {
    return receiver._comment$__$preview;
  };
  CommentElement.prototype.get$_comment$__$preview.$reflectable = 1;
  CommentElement.prototype.set$_comment$__$preview = function(receiver, v) {
    return receiver._comment$__$preview = v;
  };
  CommentElement.prototype.set$_comment$__$preview.$reflectable = 1;
  CommentElement.prototype.get$_commentElement = function(receiver) {
    return receiver._commentElement;
  };
  CommentElement.prototype.get$_commentElement.$reflectable = 1;
  CommentElement.prototype.set$_commentElement = function(receiver, v) {
    return receiver._commentElement = v;
  };
  CommentElement.prototype.set$_commentElement.$reflectable = 1;
  function DivElement_Polymer(polymer$Polymer$syntax, polymer$Polymer$$) {
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  DivElement_Polymer.builtin$cls = "DivElement_Polymer";
  if (!"name" in DivElement_Polymer)
    DivElement_Polymer.name = "DivElement_Polymer";
  $desc = $collectedClasses.DivElement_Polymer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DivElement_Polymer.prototype = $desc;
  Polymer.prototype.get$syntax = function(receiver) {
    return receiver.polymer$Polymer$syntax;
  };
  Polymer.prototype.get$$$ = function(receiver) {
    return receiver.polymer$Polymer$$;
  };
  Polymer.prototype.get$$$.$reflectable = 1;
  function DivElement_Polymer_ChangeNotifier() {
  }
  DivElement_Polymer_ChangeNotifier.builtin$cls = "DivElement_Polymer_ChangeNotifier";
  if (!"name" in DivElement_Polymer_ChangeNotifier)
    DivElement_Polymer_ChangeNotifier.name = "DivElement_Polymer_ChangeNotifier";
  $desc = $collectedClasses.DivElement_Polymer_ChangeNotifier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DivElement_Polymer_ChangeNotifier.prototype = $desc;
  function HomeElement(_item, _member$__$idName, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._item = _item;
    this._member$__$idName = _member$__$idName;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  HomeElement.builtin$cls = "HomeElement";
  if (!"name" in HomeElement)
    HomeElement.name = "HomeElement";
  $desc = $collectedClasses.HomeElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  HomeElement.prototype = $desc;
  function ItemElement(_item, _member$__$idName, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._item = _item;
    this._member$__$idName = _member$__$idName;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  ItemElement.builtin$cls = "ItemElement";
  if (!"name" in ItemElement)
    ItemElement.name = "ItemElement";
  $desc = $collectedClasses.ItemElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ItemElement.prototype = $desc;
  function LazyListLoader(_copier, _itemsPerFrame, _canceled) {
    this._copier = _copier;
    this._itemsPerFrame = _itemsPerFrame;
    this._canceled = _canceled;
  }
  LazyListLoader.builtin$cls = "LazyListLoader";
  if (!"name" in LazyListLoader)
    LazyListLoader.name = "LazyListLoader";
  $desc = $collectedClasses.LazyListLoader;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LazyListLoader.prototype = $desc;
  function _LazyListCopier(list, offset, src, dest) {
    this.list = list;
    this.offset = offset;
    this.src = src;
    this.dest = dest;
  }
  _LazyListCopier.builtin$cls = "_LazyListCopier";
  if (!"name" in _LazyListCopier)
    _LazyListCopier.name = "_LazyListCopier";
  $desc = $collectedClasses._LazyListCopier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _LazyListCopier.prototype = $desc;
  _LazyListCopier.prototype.get$src = function(receiver) {
    return this.src;
  };
  function LibraryElement(lazyOperators, lazyVariables, lazyFunctions, lazyClasses, lazyTypedefs, lazyErrors, _library$_loader, _item, _member$__$idName, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this.lazyOperators = lazyOperators;
    this.lazyVariables = lazyVariables;
    this.lazyFunctions = lazyFunctions;
    this.lazyClasses = lazyClasses;
    this.lazyTypedefs = lazyTypedefs;
    this.lazyErrors = lazyErrors;
    this._library$_loader = _library$_loader;
    this._item = _item;
    this._member$__$idName = _member$__$idName;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  LibraryElement.builtin$cls = "LibraryElement";
  if (!"name" in LibraryElement)
    LibraryElement.name = "LibraryElement";
  $desc = $collectedClasses.LibraryElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LibraryElement.prototype = $desc;
  LibraryElement.prototype.get$lazyOperators = function(receiver) {
    return receiver.lazyOperators;
  };
  LibraryElement.prototype.get$lazyOperators.$reflectable = 1;
  LibraryElement.prototype.get$lazyVariables = function(receiver) {
    return receiver.lazyVariables;
  };
  LibraryElement.prototype.get$lazyVariables.$reflectable = 1;
  LibraryElement.prototype.get$lazyFunctions = function(receiver) {
    return receiver.lazyFunctions;
  };
  LibraryElement.prototype.get$lazyFunctions.$reflectable = 1;
  LibraryElement.prototype.get$lazyClasses = function(receiver) {
    return receiver.lazyClasses;
  };
  LibraryElement.prototype.get$lazyClasses.$reflectable = 1;
  LibraryElement.prototype.get$lazyTypedefs = function(receiver) {
    return receiver.lazyTypedefs;
  };
  LibraryElement.prototype.get$lazyTypedefs.$reflectable = 1;
  LibraryElement.prototype.get$lazyErrors = function(receiver) {
    return receiver.lazyErrors;
  };
  LibraryElement.prototype.get$lazyErrors.$reflectable = 1;
  LibraryElement.prototype.get$_library$_loader = function(receiver) {
    return receiver._library$_loader;
  };
  LibraryElement.prototype.get$_library$_loader.$reflectable = 1;
  LibraryElement.prototype.set$_library$_loader = function(receiver, v) {
    return receiver._library$_loader = v;
  };
  LibraryElement.prototype.set$_library$_loader.$reflectable = 1;
  function LibraryPanel(_pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  LibraryPanel.builtin$cls = "LibraryPanel";
  if (!"name" in LibraryPanel)
    LibraryPanel.name = "LibraryPanel";
  $desc = $collectedClasses.LibraryPanel;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LibraryPanel.prototype = $desc;
  function LibraryPanel_shadowRootReady_closure(this_0) {
    this.this_0 = this_0;
  }
  LibraryPanel_shadowRootReady_closure.builtin$cls = "LibraryPanel_shadowRootReady_closure";
  if (!"name" in LibraryPanel_shadowRootReady_closure)
    LibraryPanel_shadowRootReady_closure.name = "LibraryPanel_shadowRootReady_closure";
  $desc = $collectedClasses.LibraryPanel_shadowRootReady_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LibraryPanel_shadowRootReady_closure.prototype = $desc;
  function LinkElement0(_link$__$type, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._link$__$type = _link$__$type;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  LinkElement0.builtin$cls = "LinkElement0";
  if (!"name" in LinkElement0)
    LinkElement0.name = "LinkElement0";
  $desc = $collectedClasses.LinkElement0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  LinkElement0.prototype = $desc;
  LinkElement0.prototype.get$_link$__$type = function(receiver) {
    return receiver._link$__$type;
  };
  LinkElement0.prototype.get$_link$__$type.$reflectable = 1;
  LinkElement0.prototype.set$_link$__$type = function(receiver, v) {
    return receiver._link$__$type = v;
  };
  LinkElement0.prototype.set$_link$__$type.$reflectable = 1;
  function PolymerElement_ChangeNotifier1() {
  }
  PolymerElement_ChangeNotifier1.builtin$cls = "PolymerElement_ChangeNotifier1";
  if (!"name" in PolymerElement_ChangeNotifier1)
    PolymerElement_ChangeNotifier1.name = "PolymerElement_ChangeNotifier1";
  $desc = $collectedClasses.PolymerElement_ChangeNotifier1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolymerElement_ChangeNotifier1.prototype = $desc;
  function MainElement(_main$__$pageContentClass, _main$__$shouldShowLibraryPanel, _main$__$shouldShowLibraryMinimap, _main$__$shouldShowClassMinimap, _main$__$showOrHideLibraries, _main$__$showOrHideMinimap, _main$__$showOrHideInherited, _main$__$showOrHideObjectMembers, _main$__$showOrHidePackages, _openedAt, originalPadding, _buildIdentifier, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._main$__$pageContentClass = _main$__$pageContentClass;
    this._main$__$shouldShowLibraryPanel = _main$__$shouldShowLibraryPanel;
    this._main$__$shouldShowLibraryMinimap = _main$__$shouldShowLibraryMinimap;
    this._main$__$shouldShowClassMinimap = _main$__$shouldShowClassMinimap;
    this._main$__$showOrHideLibraries = _main$__$showOrHideLibraries;
    this._main$__$showOrHideMinimap = _main$__$showOrHideMinimap;
    this._main$__$showOrHideInherited = _main$__$showOrHideInherited;
    this._main$__$showOrHideObjectMembers = _main$__$showOrHideObjectMembers;
    this._main$__$showOrHidePackages = _main$__$showOrHidePackages;
    this._openedAt = _openedAt;
    this.originalPadding = originalPadding;
    this._buildIdentifier = _buildIdentifier;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  MainElement.builtin$cls = "MainElement";
  if (!"name" in MainElement)
    MainElement.name = "MainElement";
  $desc = $collectedClasses.MainElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MainElement.prototype = $desc;
  MainElement.prototype.get$_main$__$pageContentClass = function(receiver) {
    return receiver._main$__$pageContentClass;
  };
  MainElement.prototype.get$_main$__$pageContentClass.$reflectable = 1;
  MainElement.prototype.set$_main$__$pageContentClass = function(receiver, v) {
    return receiver._main$__$pageContentClass = v;
  };
  MainElement.prototype.set$_main$__$pageContentClass.$reflectable = 1;
  MainElement.prototype.get$_main$__$shouldShowLibraryPanel = function(receiver) {
    return receiver._main$__$shouldShowLibraryPanel;
  };
  MainElement.prototype.get$_main$__$shouldShowLibraryPanel.$reflectable = 1;
  MainElement.prototype.set$_main$__$shouldShowLibraryPanel = function(receiver, v) {
    return receiver._main$__$shouldShowLibraryPanel = v;
  };
  MainElement.prototype.set$_main$__$shouldShowLibraryPanel.$reflectable = 1;
  MainElement.prototype.get$_main$__$shouldShowLibraryMinimap = function(receiver) {
    return receiver._main$__$shouldShowLibraryMinimap;
  };
  MainElement.prototype.get$_main$__$shouldShowLibraryMinimap.$reflectable = 1;
  MainElement.prototype.set$_main$__$shouldShowLibraryMinimap = function(receiver, v) {
    return receiver._main$__$shouldShowLibraryMinimap = v;
  };
  MainElement.prototype.set$_main$__$shouldShowLibraryMinimap.$reflectable = 1;
  MainElement.prototype.get$_main$__$shouldShowClassMinimap = function(receiver) {
    return receiver._main$__$shouldShowClassMinimap;
  };
  MainElement.prototype.get$_main$__$shouldShowClassMinimap.$reflectable = 1;
  MainElement.prototype.set$_main$__$shouldShowClassMinimap = function(receiver, v) {
    return receiver._main$__$shouldShowClassMinimap = v;
  };
  MainElement.prototype.set$_main$__$shouldShowClassMinimap.$reflectable = 1;
  MainElement.prototype.get$_main$__$showOrHideLibraries = function(receiver) {
    return receiver._main$__$showOrHideLibraries;
  };
  MainElement.prototype.get$_main$__$showOrHideLibraries.$reflectable = 1;
  MainElement.prototype.set$_main$__$showOrHideLibraries = function(receiver, v) {
    return receiver._main$__$showOrHideLibraries = v;
  };
  MainElement.prototype.set$_main$__$showOrHideLibraries.$reflectable = 1;
  MainElement.prototype.get$_main$__$showOrHideMinimap = function(receiver) {
    return receiver._main$__$showOrHideMinimap;
  };
  MainElement.prototype.get$_main$__$showOrHideMinimap.$reflectable = 1;
  MainElement.prototype.set$_main$__$showOrHideMinimap = function(receiver, v) {
    return receiver._main$__$showOrHideMinimap = v;
  };
  MainElement.prototype.set$_main$__$showOrHideMinimap.$reflectable = 1;
  MainElement.prototype.get$_main$__$showOrHideInherited = function(receiver) {
    return receiver._main$__$showOrHideInherited;
  };
  MainElement.prototype.get$_main$__$showOrHideInherited.$reflectable = 1;
  MainElement.prototype.set$_main$__$showOrHideInherited = function(receiver, v) {
    return receiver._main$__$showOrHideInherited = v;
  };
  MainElement.prototype.set$_main$__$showOrHideInherited.$reflectable = 1;
  MainElement.prototype.get$_main$__$showOrHideObjectMembers = function(receiver) {
    return receiver._main$__$showOrHideObjectMembers;
  };
  MainElement.prototype.get$_main$__$showOrHideObjectMembers.$reflectable = 1;
  MainElement.prototype.set$_main$__$showOrHideObjectMembers = function(receiver, v) {
    return receiver._main$__$showOrHideObjectMembers = v;
  };
  MainElement.prototype.set$_main$__$showOrHideObjectMembers.$reflectable = 1;
  MainElement.prototype.get$_main$__$showOrHidePackages = function(receiver) {
    return receiver._main$__$showOrHidePackages;
  };
  MainElement.prototype.get$_main$__$showOrHidePackages.$reflectable = 1;
  MainElement.prototype.set$_main$__$showOrHidePackages = function(receiver, v) {
    return receiver._main$__$showOrHidePackages = v;
  };
  MainElement.prototype.set$_main$__$showOrHidePackages.$reflectable = 1;
  MainElement.prototype.get$_openedAt = function(receiver) {
    return receiver._openedAt;
  };
  MainElement.prototype.get$_openedAt.$reflectable = 1;
  MainElement.prototype.set$_openedAt = function(receiver, v) {
    return receiver._openedAt = v;
  };
  MainElement.prototype.set$_openedAt.$reflectable = 1;
  MainElement.prototype.get$originalPadding = function(receiver) {
    return receiver.originalPadding;
  };
  MainElement.prototype.get$originalPadding.$reflectable = 1;
  MainElement.prototype.set$originalPadding = function(receiver, v) {
    return receiver.originalPadding = v;
  };
  MainElement.prototype.set$originalPadding.$reflectable = 1;
  MainElement.prototype.get$_buildIdentifier = function(receiver) {
    return receiver._buildIdentifier;
  };
  MainElement.prototype.get$_buildIdentifier.$reflectable = 1;
  MainElement.prototype.set$_buildIdentifier = function(receiver, v) {
    return receiver._buildIdentifier = v;
  };
  MainElement.prototype.set$_buildIdentifier.$reflectable = 1;
  function DartdocElement_ChangeNotifier1() {
  }
  DartdocElement_ChangeNotifier1.builtin$cls = "DartdocElement_ChangeNotifier1";
  if (!"name" in DartdocElement_ChangeNotifier1)
    DartdocElement_ChangeNotifier1.name = "DartdocElement_ChangeNotifier1";
  $desc = $collectedClasses.DartdocElement_ChangeNotifier1;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DartdocElement_ChangeNotifier1.prototype = $desc;
  function MainElement_collapseSearchAndOptionsIfNeeded_closure() {
  }
  MainElement_collapseSearchAndOptionsIfNeeded_closure.builtin$cls = "MainElement_collapseSearchAndOptionsIfNeeded_closure";
  if (!"name" in MainElement_collapseSearchAndOptionsIfNeeded_closure)
    MainElement_collapseSearchAndOptionsIfNeeded_closure.name = "MainElement_collapseSearchAndOptionsIfNeeded_closure";
  $desc = $collectedClasses.MainElement_collapseSearchAndOptionsIfNeeded_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MainElement_collapseSearchAndOptionsIfNeeded_closure.prototype = $desc;
  function MainElement_buildIdentifier_closure(this_0) {
    this.this_0 = this_0;
  }
  MainElement_buildIdentifier_closure.builtin$cls = "MainElement_buildIdentifier_closure";
  if (!"name" in MainElement_buildIdentifier_closure)
    MainElement_buildIdentifier_closure.name = "MainElement_buildIdentifier_closure";
  $desc = $collectedClasses.MainElement_buildIdentifier_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MainElement_buildIdentifier_closure.prototype = $desc;
  function MainElement_buildIdentifier_closure0() {
  }
  MainElement_buildIdentifier_closure0.builtin$cls = "MainElement_buildIdentifier_closure0";
  if (!"name" in MainElement_buildIdentifier_closure0)
    MainElement_buildIdentifier_closure0.name = "MainElement_buildIdentifier_closure0";
  $desc = $collectedClasses.MainElement_buildIdentifier_closure0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MainElement_buildIdentifier_closure0.prototype = $desc;
  function NullTreeSanitizer() {
  }
  NullTreeSanitizer.builtin$cls = "NullTreeSanitizer";
  if (!"name" in NullTreeSanitizer)
    NullTreeSanitizer.name = "NullTreeSanitizer";
  $desc = $collectedClasses.NullTreeSanitizer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  NullTreeSanitizer.prototype = $desc;
  function DartdocElement(_pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  DartdocElement.builtin$cls = "DartdocElement";
  if (!"name" in DartdocElement)
    DartdocElement.name = "DartdocElement";
  $desc = $collectedClasses.DartdocElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DartdocElement.prototype = $desc;
  DartdocElement.prototype.get$_pathname = function(receiver) {
    return receiver._pathname;
  };
  DartdocElement.prototype.get$_pathname.$reflectable = 1;
  DartdocElement.prototype.set$_pathname = function(receiver, v) {
    return receiver._pathname = v;
  };
  DartdocElement.prototype.set$_pathname.$reflectable = 1;
  function MemberElement(_item, _member$__$idName, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._item = _item;
    this._member$__$idName = _member$__$idName;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  MemberElement.builtin$cls = "MemberElement";
  if (!"name" in MemberElement)
    MemberElement.name = "MemberElement";
  $desc = $collectedClasses.MemberElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MemberElement.prototype = $desc;
  MemberElement.prototype.get$_item = function(receiver) {
    return receiver._item;
  };
  MemberElement.prototype.get$_item.$reflectable = 1;
  MemberElement.prototype.set$_item = function(receiver, v) {
    return receiver._item = v;
  };
  MemberElement.prototype.set$_item.$reflectable = 1;
  MemberElement.prototype.get$_member$__$idName = function(receiver) {
    return receiver._member$__$idName;
  };
  MemberElement.prototype.get$_member$__$idName.$reflectable = 1;
  MemberElement.prototype.set$_member$__$idName = function(receiver, v) {
    return receiver._member$__$idName = v;
  };
  MemberElement.prototype.set$_member$__$idName.$reflectable = 1;
  function DartdocElement_ChangeNotifier0() {
  }
  DartdocElement_ChangeNotifier0.builtin$cls = "DartdocElement_ChangeNotifier0";
  if (!"name" in DartdocElement_ChangeNotifier0)
    DartdocElement_ChangeNotifier0.name = "DartdocElement_ChangeNotifier0";
  $desc = $collectedClasses.DartdocElement_ChangeNotifier0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DartdocElement_ChangeNotifier0.prototype = $desc;
  function InheritedElement(_member$__$inheritedFrom, _member$__$commentFrom, _member$__$isInherited, _member$__$hasInheritedComment, _member$__$shouldShowComment, _member$__$shouldShowCommentFrom, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _item, _member$__$idName, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._member$__$inheritedFrom = _member$__$inheritedFrom;
    this._member$__$commentFrom = _member$__$commentFrom;
    this._member$__$isInherited = _member$__$isInherited;
    this._member$__$hasInheritedComment = _member$__$hasInheritedComment;
    this._member$__$shouldShowComment = _member$__$shouldShowComment;
    this._member$__$shouldShowCommentFrom = _member$__$shouldShowCommentFrom;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._item = _item;
    this._member$__$idName = _member$__$idName;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  InheritedElement.builtin$cls = "InheritedElement";
  if (!"name" in InheritedElement)
    InheritedElement.name = "InheritedElement";
  $desc = $collectedClasses.InheritedElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  InheritedElement.prototype = $desc;
  InheritedElement.prototype.get$_member$__$inheritedFrom = function(receiver) {
    return receiver._member$__$inheritedFrom;
  };
  InheritedElement.prototype.get$_member$__$inheritedFrom.$reflectable = 1;
  InheritedElement.prototype.set$_member$__$inheritedFrom = function(receiver, v) {
    return receiver._member$__$inheritedFrom = v;
  };
  InheritedElement.prototype.set$_member$__$inheritedFrom.$reflectable = 1;
  InheritedElement.prototype.get$_member$__$commentFrom = function(receiver) {
    return receiver._member$__$commentFrom;
  };
  InheritedElement.prototype.get$_member$__$commentFrom.$reflectable = 1;
  InheritedElement.prototype.set$_member$__$commentFrom = function(receiver, v) {
    return receiver._member$__$commentFrom = v;
  };
  InheritedElement.prototype.set$_member$__$commentFrom.$reflectable = 1;
  InheritedElement.prototype.get$_member$__$isInherited = function(receiver) {
    return receiver._member$__$isInherited;
  };
  InheritedElement.prototype.get$_member$__$isInherited.$reflectable = 1;
  InheritedElement.prototype.set$_member$__$isInherited = function(receiver, v) {
    return receiver._member$__$isInherited = v;
  };
  InheritedElement.prototype.set$_member$__$isInherited.$reflectable = 1;
  InheritedElement.prototype.get$_member$__$hasInheritedComment = function(receiver) {
    return receiver._member$__$hasInheritedComment;
  };
  InheritedElement.prototype.get$_member$__$hasInheritedComment.$reflectable = 1;
  InheritedElement.prototype.set$_member$__$hasInheritedComment = function(receiver, v) {
    return receiver._member$__$hasInheritedComment = v;
  };
  InheritedElement.prototype.set$_member$__$hasInheritedComment.$reflectable = 1;
  InheritedElement.prototype.get$_member$__$shouldShowComment = function(receiver) {
    return receiver._member$__$shouldShowComment;
  };
  InheritedElement.prototype.get$_member$__$shouldShowComment.$reflectable = 1;
  InheritedElement.prototype.set$_member$__$shouldShowComment = function(receiver, v) {
    return receiver._member$__$shouldShowComment = v;
  };
  InheritedElement.prototype.set$_member$__$shouldShowComment.$reflectable = 1;
  InheritedElement.prototype.get$_member$__$shouldShowCommentFrom = function(receiver) {
    return receiver._member$__$shouldShowCommentFrom;
  };
  InheritedElement.prototype.get$_member$__$shouldShowCommentFrom.$reflectable = 1;
  InheritedElement.prototype.set$_member$__$shouldShowCommentFrom = function(receiver, v) {
    return receiver._member$__$shouldShowCommentFrom = v;
  };
  InheritedElement.prototype.set$_member$__$shouldShowCommentFrom.$reflectable = 1;
  function MemberElement_ChangeNotifier() {
  }
  MemberElement_ChangeNotifier.builtin$cls = "MemberElement_ChangeNotifier";
  if (!"name" in MemberElement_ChangeNotifier)
    MemberElement_ChangeNotifier.name = "MemberElement_ChangeNotifier";
  $desc = $collectedClasses.MemberElement_ChangeNotifier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MemberElement_ChangeNotifier.prototype = $desc;
  function InheritedElement$created_closure(this_0) {
    this.this_0 = this_0;
  }
  InheritedElement$created_closure.builtin$cls = "InheritedElement$created_closure";
  if (!"name" in InheritedElement$created_closure)
    InheritedElement$created_closure.name = "InheritedElement$created_closure";
  $desc = $collectedClasses.InheritedElement$created_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  InheritedElement$created_closure.prototype = $desc;
  function MethodElement(_method$__$isNotConstructor, _method$__$modifiers, _method$__$constantModifier, _method$__$staticModifier, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _member$__$inheritedFrom, _member$__$commentFrom, _member$__$isInherited, _member$__$hasInheritedComment, _member$__$shouldShowComment, _member$__$shouldShowCommentFrom, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _item, _member$__$idName, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._method$__$isNotConstructor = _method$__$isNotConstructor;
    this._method$__$modifiers = _method$__$modifiers;
    this._method$__$constantModifier = _method$__$constantModifier;
    this._method$__$staticModifier = _method$__$staticModifier;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._member$__$inheritedFrom = _member$__$inheritedFrom;
    this._member$__$commentFrom = _member$__$commentFrom;
    this._member$__$isInherited = _member$__$isInherited;
    this._member$__$hasInheritedComment = _member$__$hasInheritedComment;
    this._member$__$shouldShowComment = _member$__$shouldShowComment;
    this._member$__$shouldShowCommentFrom = _member$__$shouldShowCommentFrom;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._item = _item;
    this._member$__$idName = _member$__$idName;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  MethodElement.builtin$cls = "MethodElement";
  if (!"name" in MethodElement)
    MethodElement.name = "MethodElement";
  $desc = $collectedClasses.MethodElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MethodElement.prototype = $desc;
  MethodElement.prototype.get$_method$__$isNotConstructor = function(receiver) {
    return receiver._method$__$isNotConstructor;
  };
  MethodElement.prototype.get$_method$__$isNotConstructor.$reflectable = 1;
  MethodElement.prototype.set$_method$__$isNotConstructor = function(receiver, v) {
    return receiver._method$__$isNotConstructor = v;
  };
  MethodElement.prototype.set$_method$__$isNotConstructor.$reflectable = 1;
  MethodElement.prototype.get$_method$__$modifiers = function(receiver) {
    return receiver._method$__$modifiers;
  };
  MethodElement.prototype.get$_method$__$modifiers.$reflectable = 1;
  MethodElement.prototype.set$_method$__$modifiers = function(receiver, v) {
    return receiver._method$__$modifiers = v;
  };
  MethodElement.prototype.set$_method$__$modifiers.$reflectable = 1;
  MethodElement.prototype.get$_method$__$constantModifier = function(receiver) {
    return receiver._method$__$constantModifier;
  };
  MethodElement.prototype.get$_method$__$constantModifier.$reflectable = 1;
  MethodElement.prototype.set$_method$__$constantModifier = function(receiver, v) {
    return receiver._method$__$constantModifier = v;
  };
  MethodElement.prototype.set$_method$__$constantModifier.$reflectable = 1;
  MethodElement.prototype.get$_method$__$staticModifier = function(receiver) {
    return receiver._method$__$staticModifier;
  };
  MethodElement.prototype.get$_method$__$staticModifier.$reflectable = 1;
  MethodElement.prototype.set$_method$__$staticModifier = function(receiver, v) {
    return receiver._method$__$staticModifier = v;
  };
  MethodElement.prototype.set$_method$__$staticModifier.$reflectable = 1;
  function InheritedElement_ChangeNotifier() {
  }
  InheritedElement_ChangeNotifier.builtin$cls = "InheritedElement_ChangeNotifier";
  if (!"name" in InheritedElement_ChangeNotifier)
    InheritedElement_ChangeNotifier.name = "InheritedElement_ChangeNotifier";
  $desc = $collectedClasses.InheritedElement_ChangeNotifier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  InheritedElement_ChangeNotifier.prototype = $desc;
  function MinimapElementClass(_item, _member$__$idName, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._item = _item;
    this._member$__$idName = _member$__$idName;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  MinimapElementClass.builtin$cls = "MinimapElementClass";
  if (!"name" in MinimapElementClass)
    MinimapElementClass.name = "MinimapElementClass";
  $desc = $collectedClasses.MinimapElementClass;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MinimapElementClass.prototype = $desc;
  function MinimapElement(_minimap_element$__$category, _minimap_element$__$item, _minimap_element$__$camelCaseName, _minimap_element$__$categoryLink, _minimap_element$__$itemsToShow, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._minimap_element$__$category = _minimap_element$__$category;
    this._minimap_element$__$item = _minimap_element$__$item;
    this._minimap_element$__$camelCaseName = _minimap_element$__$camelCaseName;
    this._minimap_element$__$categoryLink = _minimap_element$__$categoryLink;
    this._minimap_element$__$itemsToShow = _minimap_element$__$itemsToShow;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  MinimapElement.builtin$cls = "MinimapElement";
  if (!"name" in MinimapElement)
    MinimapElement.name = "MinimapElement";
  $desc = $collectedClasses.MinimapElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MinimapElement.prototype = $desc;
  MinimapElement.prototype.get$_minimap_element$__$category = function(receiver) {
    return receiver._minimap_element$__$category;
  };
  MinimapElement.prototype.get$_minimap_element$__$category.$reflectable = 1;
  MinimapElement.prototype.set$_minimap_element$__$category = function(receiver, v) {
    return receiver._minimap_element$__$category = v;
  };
  MinimapElement.prototype.set$_minimap_element$__$category.$reflectable = 1;
  MinimapElement.prototype.get$_minimap_element$__$item = function(receiver) {
    return receiver._minimap_element$__$item;
  };
  MinimapElement.prototype.get$_minimap_element$__$item.$reflectable = 1;
  MinimapElement.prototype.set$_minimap_element$__$item = function(receiver, v) {
    return receiver._minimap_element$__$item = v;
  };
  MinimapElement.prototype.set$_minimap_element$__$item.$reflectable = 1;
  MinimapElement.prototype.get$_minimap_element$__$camelCaseName = function(receiver) {
    return receiver._minimap_element$__$camelCaseName;
  };
  MinimapElement.prototype.get$_minimap_element$__$camelCaseName.$reflectable = 1;
  MinimapElement.prototype.set$_minimap_element$__$camelCaseName = function(receiver, v) {
    return receiver._minimap_element$__$camelCaseName = v;
  };
  MinimapElement.prototype.set$_minimap_element$__$camelCaseName.$reflectable = 1;
  MinimapElement.prototype.get$_minimap_element$__$categoryLink = function(receiver) {
    return receiver._minimap_element$__$categoryLink;
  };
  MinimapElement.prototype.get$_minimap_element$__$categoryLink.$reflectable = 1;
  MinimapElement.prototype.set$_minimap_element$__$categoryLink = function(receiver, v) {
    return receiver._minimap_element$__$categoryLink = v;
  };
  MinimapElement.prototype.set$_minimap_element$__$categoryLink.$reflectable = 1;
  MinimapElement.prototype.get$_minimap_element$__$itemsToShow = function(receiver) {
    return receiver._minimap_element$__$itemsToShow;
  };
  MinimapElement.prototype.get$_minimap_element$__$itemsToShow.$reflectable = 1;
  MinimapElement.prototype.set$_minimap_element$__$itemsToShow = function(receiver, v) {
    return receiver._minimap_element$__$itemsToShow = v;
  };
  MinimapElement.prototype.set$_minimap_element$__$itemsToShow.$reflectable = 1;
  function PolymerElement_ChangeNotifier2() {
  }
  PolymerElement_ChangeNotifier2.builtin$cls = "PolymerElement_ChangeNotifier2";
  if (!"name" in PolymerElement_ChangeNotifier2)
    PolymerElement_ChangeNotifier2.name = "PolymerElement_ChangeNotifier2";
  $desc = $collectedClasses.PolymerElement_ChangeNotifier2;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolymerElement_ChangeNotifier2.prototype = $desc;
  function MinimapElement$created_closure(this_0) {
    this.this_0 = this_0;
  }
  MinimapElement$created_closure.builtin$cls = "MinimapElement$created_closure";
  if (!"name" in MinimapElement$created_closure)
    MinimapElement$created_closure.name = "MinimapElement$created_closure";
  $desc = $collectedClasses.MinimapElement$created_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MinimapElement$created_closure.prototype = $desc;
  function MinimapElementLibrary(_item, _member$__$idName, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._item = _item;
    this._member$__$idName = _member$__$idName;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  MinimapElementLibrary.builtin$cls = "MinimapElementLibrary";
  if (!"name" in MinimapElementLibrary)
    MinimapElementLibrary.name = "MinimapElementLibrary";
  $desc = $collectedClasses.MinimapElementLibrary;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MinimapElementLibrary.prototype = $desc;
  function PageElement(_page$__$item, _page$__$isLibrary, _page$__$isMethod, _page$__$isClass, _page$__$isTypedef, _page$__$isHome, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._page$__$item = _page$__$item;
    this._page$__$isLibrary = _page$__$isLibrary;
    this._page$__$isMethod = _page$__$isMethod;
    this._page$__$isClass = _page$__$isClass;
    this._page$__$isTypedef = _page$__$isTypedef;
    this._page$__$isHome = _page$__$isHome;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  PageElement.builtin$cls = "PageElement";
  if (!"name" in PageElement)
    PageElement.name = "PageElement";
  $desc = $collectedClasses.PageElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PageElement.prototype = $desc;
  PageElement.prototype.get$_page$__$item = function(receiver) {
    return receiver._page$__$item;
  };
  PageElement.prototype.get$_page$__$item.$reflectable = 1;
  PageElement.prototype.set$_page$__$item = function(receiver, v) {
    return receiver._page$__$item = v;
  };
  PageElement.prototype.set$_page$__$item.$reflectable = 1;
  PageElement.prototype.get$_page$__$isLibrary = function(receiver) {
    return receiver._page$__$isLibrary;
  };
  PageElement.prototype.get$_page$__$isLibrary.$reflectable = 1;
  PageElement.prototype.set$_page$__$isLibrary = function(receiver, v) {
    return receiver._page$__$isLibrary = v;
  };
  PageElement.prototype.set$_page$__$isLibrary.$reflectable = 1;
  PageElement.prototype.get$_page$__$isMethod = function(receiver) {
    return receiver._page$__$isMethod;
  };
  PageElement.prototype.get$_page$__$isMethod.$reflectable = 1;
  PageElement.prototype.set$_page$__$isMethod = function(receiver, v) {
    return receiver._page$__$isMethod = v;
  };
  PageElement.prototype.set$_page$__$isMethod.$reflectable = 1;
  PageElement.prototype.get$_page$__$isClass = function(receiver) {
    return receiver._page$__$isClass;
  };
  PageElement.prototype.get$_page$__$isClass.$reflectable = 1;
  PageElement.prototype.set$_page$__$isClass = function(receiver, v) {
    return receiver._page$__$isClass = v;
  };
  PageElement.prototype.set$_page$__$isClass.$reflectable = 1;
  PageElement.prototype.get$_page$__$isTypedef = function(receiver) {
    return receiver._page$__$isTypedef;
  };
  PageElement.prototype.get$_page$__$isTypedef.$reflectable = 1;
  PageElement.prototype.set$_page$__$isTypedef = function(receiver, v) {
    return receiver._page$__$isTypedef = v;
  };
  PageElement.prototype.set$_page$__$isTypedef.$reflectable = 1;
  PageElement.prototype.get$_page$__$isHome = function(receiver) {
    return receiver._page$__$isHome;
  };
  PageElement.prototype.get$_page$__$isHome.$reflectable = 1;
  PageElement.prototype.set$_page$__$isHome = function(receiver, v) {
    return receiver._page$__$isHome = v;
  };
  PageElement.prototype.set$_page$__$isHome.$reflectable = 1;
  function DartdocElement_ChangeNotifier2() {
  }
  DartdocElement_ChangeNotifier2.builtin$cls = "DartdocElement_ChangeNotifier2";
  if (!"name" in DartdocElement_ChangeNotifier2)
    DartdocElement_ChangeNotifier2.name = "DartdocElement_ChangeNotifier2";
  $desc = $collectedClasses.DartdocElement_ChangeNotifier2;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DartdocElement_ChangeNotifier2.prototype = $desc;
  function ParameterElement(_parameters$__$parameters, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._parameters$__$parameters = _parameters$__$parameters;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  ParameterElement.builtin$cls = "ParameterElement";
  if (!"name" in ParameterElement)
    ParameterElement.name = "ParameterElement";
  $desc = $collectedClasses.ParameterElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ParameterElement.prototype = $desc;
  ParameterElement.prototype.get$_parameters$__$parameters = function(receiver) {
    return receiver._parameters$__$parameters;
  };
  ParameterElement.prototype.get$_parameters$__$parameters.$reflectable = 1;
  ParameterElement.prototype.set$_parameters$__$parameters = function(receiver, v) {
    return receiver._parameters$__$parameters = v;
  };
  ParameterElement.prototype.set$_parameters$__$parameters.$reflectable = 1;
  function DartdocElement_ChangeNotifier3() {
  }
  DartdocElement_ChangeNotifier3.builtin$cls = "DartdocElement_ChangeNotifier3";
  if (!"name" in DartdocElement_ChangeNotifier3)
    DartdocElement_ChangeNotifier3.name = "DartdocElement_ChangeNotifier3";
  $desc = $collectedClasses.DartdocElement_ChangeNotifier3;
  if ($desc instanceof Array)
    $desc = $desc[1];
  DartdocElement_ChangeNotifier3.prototype = $desc;
  function ParameterElement_addParameters_closure(outerSpan_0) {
    this.outerSpan_0 = outerSpan_0;
  }
  ParameterElement_addParameters_closure.builtin$cls = "ParameterElement_addParameters_closure";
  if (!"name" in ParameterElement_addParameters_closure)
    ParameterElement_addParameters_closure.name = "ParameterElement_addParameters_closure";
  $desc = $collectedClasses.ParameterElement_addParameters_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  ParameterElement_addParameters_closure.prototype = $desc;
  function Result(_results$__$item, _results$__$descriptiveName, _results$__$descriptiveType, _results$__$outerLibrary, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._results$__$item = _results$__$item;
    this._results$__$descriptiveName = _results$__$descriptiveName;
    this._results$__$descriptiveType = _results$__$descriptiveType;
    this._results$__$outerLibrary = _results$__$outerLibrary;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  Result.builtin$cls = "Result";
  if (!"name" in Result)
    Result.name = "Result";
  $desc = $collectedClasses.Result;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Result.prototype = $desc;
  Result.prototype.get$_results$__$item = function(receiver) {
    return receiver._results$__$item;
  };
  Result.prototype.get$_results$__$item.$reflectable = 1;
  Result.prototype.set$_results$__$item = function(receiver, v) {
    return receiver._results$__$item = v;
  };
  Result.prototype.set$_results$__$item.$reflectable = 1;
  Result.prototype.get$_results$__$descriptiveName = function(receiver) {
    return receiver._results$__$descriptiveName;
  };
  Result.prototype.get$_results$__$descriptiveName.$reflectable = 1;
  Result.prototype.set$_results$__$descriptiveName = function(receiver, v) {
    return receiver._results$__$descriptiveName = v;
  };
  Result.prototype.set$_results$__$descriptiveName.$reflectable = 1;
  Result.prototype.get$_results$__$descriptiveType = function(receiver) {
    return receiver._results$__$descriptiveType;
  };
  Result.prototype.get$_results$__$descriptiveType.$reflectable = 1;
  Result.prototype.set$_results$__$descriptiveType = function(receiver, v) {
    return receiver._results$__$descriptiveType = v;
  };
  Result.prototype.set$_results$__$descriptiveType.$reflectable = 1;
  Result.prototype.get$_results$__$outerLibrary = function(receiver) {
    return receiver._results$__$outerLibrary;
  };
  Result.prototype.get$_results$__$outerLibrary.$reflectable = 1;
  Result.prototype.set$_results$__$outerLibrary = function(receiver, v) {
    return receiver._results$__$outerLibrary = v;
  };
  Result.prototype.set$_results$__$outerLibrary.$reflectable = 1;
  function AnchorElement_Polymer(polymer$Polymer$syntax, polymer$Polymer$$) {
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  AnchorElement_Polymer.builtin$cls = "AnchorElement_Polymer";
  if (!"name" in AnchorElement_Polymer)
    AnchorElement_Polymer.name = "AnchorElement_Polymer";
  $desc = $collectedClasses.AnchorElement_Polymer;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnchorElement_Polymer.prototype = $desc;
  Polymer.prototype.get$syntax = function(receiver) {
    return receiver.polymer$Polymer$syntax;
  };
  Polymer.prototype.get$$$ = function(receiver) {
    return receiver.polymer$Polymer$$;
  };
  Polymer.prototype.get$$$.$reflectable = 1;
  function AnchorElement_Polymer_ChangeNotifier() {
  }
  AnchorElement_Polymer_ChangeNotifier.builtin$cls = "AnchorElement_Polymer_ChangeNotifier";
  if (!"name" in AnchorElement_Polymer_ChangeNotifier)
    AnchorElement_Polymer_ChangeNotifier.name = "AnchorElement_Polymer_ChangeNotifier";
  $desc = $collectedClasses.AnchorElement_Polymer_ChangeNotifier;
  if ($desc instanceof Array)
    $desc = $desc[1];
  AnchorElement_Polymer_ChangeNotifier.prototype = $desc;
  function Search(_search0$__$searchQuery, _search0$__$isFocused, _search0$__$results, _search0$__$dropdownOpen, currentIndex, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._search0$__$searchQuery = _search0$__$searchQuery;
    this._search0$__$isFocused = _search0$__$isFocused;
    this._search0$__$results = _search0$__$results;
    this._search0$__$dropdownOpen = _search0$__$dropdownOpen;
    this.currentIndex = currentIndex;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  Search.builtin$cls = "Search";
  if (!"name" in Search)
    Search.name = "Search";
  $desc = $collectedClasses.Search;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Search.prototype = $desc;
  Search.prototype.get$_search0$__$searchQuery = function(receiver) {
    return receiver._search0$__$searchQuery;
  };
  Search.prototype.get$_search0$__$searchQuery.$reflectable = 1;
  Search.prototype.set$_search0$__$searchQuery = function(receiver, v) {
    return receiver._search0$__$searchQuery = v;
  };
  Search.prototype.set$_search0$__$searchQuery.$reflectable = 1;
  Search.prototype.get$_search0$__$isFocused = function(receiver) {
    return receiver._search0$__$isFocused;
  };
  Search.prototype.get$_search0$__$isFocused.$reflectable = 1;
  Search.prototype.set$_search0$__$isFocused = function(receiver, v) {
    return receiver._search0$__$isFocused = v;
  };
  Search.prototype.set$_search0$__$isFocused.$reflectable = 1;
  Search.prototype.get$_search0$__$results = function(receiver) {
    return receiver._search0$__$results;
  };
  Search.prototype.get$_search0$__$results.$reflectable = 1;
  Search.prototype.set$_search0$__$results = function(receiver, v) {
    return receiver._search0$__$results = v;
  };
  Search.prototype.set$_search0$__$results.$reflectable = 1;
  Search.prototype.get$_search0$__$dropdownOpen = function(receiver) {
    return receiver._search0$__$dropdownOpen;
  };
  Search.prototype.get$_search0$__$dropdownOpen.$reflectable = 1;
  Search.prototype.set$_search0$__$dropdownOpen = function(receiver, v) {
    return receiver._search0$__$dropdownOpen = v;
  };
  Search.prototype.set$_search0$__$dropdownOpen.$reflectable = 1;
  Search.prototype.get$currentIndex = function(receiver) {
    return receiver.currentIndex;
  };
  Search.prototype.get$currentIndex.$reflectable = 1;
  Search.prototype.set$currentIndex = function(receiver, v) {
    return receiver.currentIndex = v;
  };
  Search.prototype.set$currentIndex.$reflectable = 1;
  function PolymerElement_ChangeNotifier3() {
  }
  PolymerElement_ChangeNotifier3.builtin$cls = "PolymerElement_ChangeNotifier3";
  if (!"name" in PolymerElement_ChangeNotifier3)
    PolymerElement_ChangeNotifier3.name = "PolymerElement_ChangeNotifier3";
  $desc = $collectedClasses.PolymerElement_ChangeNotifier3;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolymerElement_ChangeNotifier3.prototype = $desc;
  function Search_onBlurCallback_closure(this_0) {
    this.this_0 = this_0;
  }
  Search_onBlurCallback_closure.builtin$cls = "Search_onBlurCallback_closure";
  if (!"name" in Search_onBlurCallback_closure)
    Search_onBlurCallback_closure.name = "Search_onBlurCallback_closure";
  $desc = $collectedClasses.Search_onBlurCallback_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  Search_onBlurCallback_closure.prototype = $desc;
  function TypeElement(_type$__$type, _child, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._type$__$type = _type$__$type;
    this._child = _child;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  TypeElement.builtin$cls = "TypeElement";
  if (!"name" in TypeElement)
    TypeElement.name = "TypeElement";
  $desc = $collectedClasses.TypeElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TypeElement.prototype = $desc;
  TypeElement.prototype.get$_type$__$type = function(receiver) {
    return receiver._type$__$type;
  };
  TypeElement.prototype.get$_type$__$type.$reflectable = 1;
  TypeElement.prototype.set$_type$__$type = function(receiver, v) {
    return receiver._type$__$type = v;
  };
  TypeElement.prototype.set$_type$__$type.$reflectable = 1;
  TypeElement.prototype.get$_child = function(receiver) {
    return receiver._child;
  };
  TypeElement.prototype.get$_child.$reflectable = 1;
  TypeElement.prototype.set$_child = function(receiver, v) {
    return receiver._child = v;
  };
  TypeElement.prototype.set$_child.$reflectable = 1;
  function PolymerElement_ChangeNotifier4() {
  }
  PolymerElement_ChangeNotifier4.builtin$cls = "PolymerElement_ChangeNotifier4";
  if (!"name" in PolymerElement_ChangeNotifier4)
    PolymerElement_ChangeNotifier4.name = "PolymerElement_ChangeNotifier4";
  $desc = $collectedClasses.PolymerElement_ChangeNotifier4;
  if ($desc instanceof Array)
    $desc = $desc[1];
  PolymerElement_ChangeNotifier4.prototype = $desc;
  function TypedefElement(_item, _member$__$idName, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._item = _item;
    this._member$__$idName = _member$__$idName;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  TypedefElement.builtin$cls = "TypedefElement";
  if (!"name" in TypedefElement)
    TypedefElement.name = "TypedefElement";
  $desc = $collectedClasses.TypedefElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  TypedefElement.prototype = $desc;
  function VariableElement(_variable$__$annotations, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _member$__$inheritedFrom, _member$__$commentFrom, _member$__$isInherited, _member$__$hasInheritedComment, _member$__$shouldShowComment, _member$__$shouldShowCommentFrom, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _item, _member$__$idName, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._variable$__$annotations = _variable$__$annotations;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._member$__$inheritedFrom = _member$__$inheritedFrom;
    this._member$__$commentFrom = _member$__$commentFrom;
    this._member$__$isInherited = _member$__$isInherited;
    this._member$__$hasInheritedComment = _member$__$hasInheritedComment;
    this._member$__$shouldShowComment = _member$__$shouldShowComment;
    this._member$__$shouldShowCommentFrom = _member$__$shouldShowCommentFrom;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._item = _item;
    this._member$__$idName = _member$__$idName;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  VariableElement.builtin$cls = "VariableElement";
  if (!"name" in VariableElement)
    VariableElement.name = "VariableElement";
  $desc = $collectedClasses.VariableElement;
  if ($desc instanceof Array)
    $desc = $desc[1];
  VariableElement.prototype = $desc;
  VariableElement.prototype.get$_variable$__$annotations = function(receiver) {
    return receiver._variable$__$annotations;
  };
  VariableElement.prototype.get$_variable$__$annotations.$reflectable = 1;
  VariableElement.prototype.set$_variable$__$annotations = function(receiver, v) {
    return receiver._variable$__$annotations = v;
  };
  VariableElement.prototype.set$_variable$__$annotations.$reflectable = 1;
  function InheritedElement_ChangeNotifier0() {
  }
  InheritedElement_ChangeNotifier0.builtin$cls = "InheritedElement_ChangeNotifier0";
  if (!"name" in InheritedElement_ChangeNotifier0)
    InheritedElement_ChangeNotifier0.name = "InheritedElement_ChangeNotifier0";
  $desc = $collectedClasses.InheritedElement_ChangeNotifier0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  InheritedElement_ChangeNotifier0.prototype = $desc;
  function VariableHeading(_variable_heading$__$getter, _variable_heading$__$name, _variable_heading$__$isNotSetter, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _item, _member$__$idName, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, _pathname, change_notifier$ChangeNotifier$_changes, change_notifier$ChangeNotifier$_records, polymer$Polymer$_declaration, polymer$Polymer$_observers, polymer$Polymer$_unbound, polymer$Polymer$_unbindAllJob, polymer$Polymer$_propertyObserver, polymer$Polymer$syntax, polymer$Polymer$_shadowRoots, polymer$Polymer$$) {
    this._variable_heading$__$getter = _variable_heading$__$getter;
    this._variable_heading$__$name = _variable_heading$__$name;
    this._variable_heading$__$isNotSetter = _variable_heading$__$isNotSetter;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._item = _item;
    this._member$__$idName = _member$__$idName;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this._pathname = _pathname;
    this.change_notifier$ChangeNotifier$_changes = change_notifier$ChangeNotifier$_changes;
    this.change_notifier$ChangeNotifier$_records = change_notifier$ChangeNotifier$_records;
    this.polymer$Polymer$_declaration = polymer$Polymer$_declaration;
    this.polymer$Polymer$_observers = polymer$Polymer$_observers;
    this.polymer$Polymer$_unbound = polymer$Polymer$_unbound;
    this.polymer$Polymer$_unbindAllJob = polymer$Polymer$_unbindAllJob;
    this.polymer$Polymer$_propertyObserver = polymer$Polymer$_propertyObserver;
    this.polymer$Polymer$syntax = polymer$Polymer$syntax;
    this.polymer$Polymer$_shadowRoots = polymer$Polymer$_shadowRoots;
    this.polymer$Polymer$$ = polymer$Polymer$$;
  }
  VariableHeading.builtin$cls = "VariableHeading";
  if (!"name" in VariableHeading)
    VariableHeading.name = "VariableHeading";
  $desc = $collectedClasses.VariableHeading;
  if ($desc instanceof Array)
    $desc = $desc[1];
  VariableHeading.prototype = $desc;
  VariableHeading.prototype.get$_variable_heading$__$getter = function(receiver) {
    return receiver._variable_heading$__$getter;
  };
  VariableHeading.prototype.get$_variable_heading$__$getter.$reflectable = 1;
  VariableHeading.prototype.set$_variable_heading$__$getter = function(receiver, v) {
    return receiver._variable_heading$__$getter = v;
  };
  VariableHeading.prototype.set$_variable_heading$__$getter.$reflectable = 1;
  VariableHeading.prototype.get$_variable_heading$__$name = function(receiver) {
    return receiver._variable_heading$__$name;
  };
  VariableHeading.prototype.get$_variable_heading$__$name.$reflectable = 1;
  VariableHeading.prototype.set$_variable_heading$__$name = function(receiver, v) {
    return receiver._variable_heading$__$name = v;
  };
  VariableHeading.prototype.set$_variable_heading$__$name.$reflectable = 1;
  VariableHeading.prototype.get$_variable_heading$__$isNotSetter = function(receiver) {
    return receiver._variable_heading$__$isNotSetter;
  };
  VariableHeading.prototype.get$_variable_heading$__$isNotSetter.$reflectable = 1;
  VariableHeading.prototype.set$_variable_heading$__$isNotSetter = function(receiver, v) {
    return receiver._variable_heading$__$isNotSetter = v;
  };
  VariableHeading.prototype.set$_variable_heading$__$isNotSetter.$reflectable = 1;
  function MemberElement_ChangeNotifier0() {
  }
  MemberElement_ChangeNotifier0.builtin$cls = "MemberElement_ChangeNotifier0";
  if (!"name" in MemberElement_ChangeNotifier0)
    MemberElement_ChangeNotifier0.name = "MemberElement_ChangeNotifier0";
  $desc = $collectedClasses.MemberElement_ChangeNotifier0;
  if ($desc instanceof Array)
    $desc = $desc[1];
  MemberElement_ChangeNotifier0.prototype = $desc;
  function loadYamlStream_closure() {
  }
  loadYamlStream_closure.builtin$cls = "loadYamlStream_closure";
  if (!"name" in loadYamlStream_closure)
    loadYamlStream_closure.name = "loadYamlStream_closure";
  $desc = $collectedClasses.loadYamlStream_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  loadYamlStream_closure.prototype = $desc;
  function YamlException(_msg) {
    this._msg = _msg;
  }
  YamlException.builtin$cls = "YamlException";
  if (!"name" in YamlException)
    YamlException.name = "YamlException";
  $desc = $collectedClasses.YamlException;
  if ($desc instanceof Array)
    $desc = $desc[1];
  YamlException.prototype = $desc;
  function YamlMap(_yaml_map$_map) {
    this._yaml_map$_map = _yaml_map$_map;
  }
  YamlMap.builtin$cls = "YamlMap";
  if (!"name" in YamlMap)
    YamlMap.name = "YamlMap";
  $desc = $collectedClasses.YamlMap;
  if ($desc instanceof Array)
    $desc = $desc[1];
  YamlMap.prototype = $desc;
  function YamlMap_addAll_closure(this_0) {
    this.this_0 = this_0;
  }
  YamlMap_addAll_closure.builtin$cls = "YamlMap_addAll_closure";
  if (!"name" in YamlMap_addAll_closure)
    YamlMap_addAll_closure.name = "YamlMap_addAll_closure";
  $desc = $collectedClasses.YamlMap_addAll_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  YamlMap_addAll_closure.prototype = $desc;
  function YamlMap_forEach_closure(this_0, f_1) {
    this.this_0 = this_0;
    this.f_1 = f_1;
  }
  YamlMap_forEach_closure.builtin$cls = "YamlMap_forEach_closure";
  if (!"name" in YamlMap_forEach_closure)
    YamlMap_forEach_closure.name = "YamlMap_forEach_closure";
  $desc = $collectedClasses.YamlMap_forEach_closure;
  if ($desc instanceof Array)
    $desc = $desc[1];
  YamlMap_forEach_closure.prototype = $desc;
  function _WrappedHashKey(value) {
    this.value = value;
  }
  _WrappedHashKey.builtin$cls = "_WrappedHashKey";
  if (!"name" in _WrappedHashKey)
    _WrappedHashKey.name = "_WrappedHashKey";
  $desc = $collectedClasses._WrappedHashKey;
  if ($desc instanceof Array)
    $desc = $desc[1];
  _WrappedHashKey.prototype = $desc;
  _WrappedHashKey.prototype.get$value = function(receiver) {
    return this.value;
  };
  return [HtmlElement, _EntryArray, AnchorElement, AnimationEvent, AreaElement, AudioElement, AutocompleteErrorEvent, BRElement, BaseElement, BeforeLoadEvent, BeforeUnloadEvent, Blob, BodyElement, ButtonElement, CDataSection, CanvasElement, CharacterData, CloseEvent, Comment, CompositionEvent, ContentElement, CssFontFaceLoadEvent, CssStyleDeclaration, CustomEvent, DListElement, DataListElement, DetailsElement, DeviceMotionEvent, DeviceOrientationEvent, DialogElement, DivElement, Document, DocumentFragment, DocumentType, DomError, DomException, DomImplementation, Element, EmbedElement, ErrorEvent, Event, EventTarget, FieldSetElement, File, FileError, FocusEvent, FormElement, HRElement, HashChangeEvent, HeadElement, HeadingElement, History, HtmlCollection, HtmlDocument, HtmlFormControlsCollection, HtmlHtmlElement, HtmlOptionsCollection, HttpRequest, HttpRequestEventTarget, IFrameElement, ImageData, ImageElement, InputElement, KeyboardEvent, KeygenElement, LIElement, LabelElement, LegendElement, LinkElement, Location, MapElement, MediaElement, MediaError, MediaKeyError, MediaKeyEvent, MediaKeyMessageEvent, MediaKeyNeededEvent, MediaStream, MediaStreamEvent, MediaStreamTrackEvent, MenuElement, MessageEvent, MetaElement, MeterElement, MidiConnectionEvent, MidiInput, MidiMessageEvent, MidiOutput, MidiPort, ModElement, MouseEvent, MutationObserver, MutationRecord, Navigator, NavigatorUserMediaError, Node, NodeList, OListElement, ObjectElement, OptGroupElement, OptionElement, OutputElement, OverflowEvent, PageTransitionEvent, ParagraphElement, ParamElement, PopStateEvent, PositionError, PreElement, ProcessingInstruction, ProgressElement, ProgressEvent, QuoteElement, Range, ResourceProgressEvent, RtcDataChannelEvent, RtcDtmfToneChangeEvent, RtcIceCandidateEvent, ScriptElement0, SecurityPolicyViolationEvent, SelectElement, ShadowElement, ShadowRoot, SourceElement, SpanElement, SpeechInputEvent, SpeechInputResult, SpeechRecognitionAlternative, SpeechRecognitionError, SpeechRecognitionEvent, SpeechRecognitionResult, SpeechSynthesisEvent, StorageEvent, StyleElement, TableCaptionElement, TableCellElement, TableColElement, TableElement, TableRowElement, TableSectionElement, TemplateElement, Text, TextAreaElement, TextEvent, TitleElement, TouchEvent, TrackElement, TrackEvent, TransitionEvent, UIEvent, UListElement, UnknownElement, VideoElement, WheelEvent, Window, _Attr, _ClientRect, _Entity, _HTMLAppletElement, _HTMLBaseFontElement, _HTMLDirectoryElement, _HTMLFontElement, _HTMLFrameElement, _HTMLFrameSetElement, _HTMLMarqueeElement, _MutationEvent, _NamedNodeMap, _Notation, _SpeechInputResultList, _SpeechRecognitionResultList, _XMLHttpRequestProgressEvent, KeyRange, VersionChangeEvent, AElement, AltGlyphElement, AnimateElement, AnimateMotionElement, AnimateTransformElement, AnimatedEnumeration, AnimatedLength, AnimatedLengthList, AnimatedNumber, AnimatedNumberList, AnimatedString, AnimationElement, CircleElement, ClipPathElement, DefsElement, DescElement, EllipseElement, FEBlendElement, FEColorMatrixElement, FEComponentTransferElement, FECompositeElement, FEConvolveMatrixElement, FEDiffuseLightingElement, FEDisplacementMapElement, FEDistantLightElement, FEFloodElement, FEFuncAElement, FEFuncBElement, FEFuncGElement, FEFuncRElement, FEGaussianBlurElement, FEImageElement, FEMergeElement, FEMergeNodeElement, FEMorphologyElement, FEOffsetElement, FEPointLightElement, FESpecularLightingElement, FESpotLightElement, FETileElement, FETurbulenceElement, FilterElement, ForeignObjectElement, GElement, GraphicsElement, ImageElement0, LineElement, LinearGradientElement, MarkerElement, MaskElement, MetadataElement, PathElement, PatternElement, PolygonElement, PolylineElement, RadialGradientElement, RectElement, ScriptElement, SetElement, StopElement, StyleElement0, SvgDocument, SvgElement, SvgSvgElement, SwitchElement, SymbolElement, TSpanElement, TextContentElement, TextElement, TextPathElement, TextPositioningElement, TitleElement0, UseElement, ViewElement, ZoomEvent, _GradientElement, _SVGAltGlyphDefElement, _SVGAltGlyphItemElement, _SVGAnimateColorElement, _SVGComponentTransferFunctionElement, _SVGCursorElement, _SVGFEDropShadowElement, _SVGFontElement, _SVGFontFaceElement, _SVGFontFaceFormatElement, _SVGFontFaceNameElement, _SVGFontFaceSrcElement, _SVGFontFaceUriElement, _SVGGlyphElement, _SVGGlyphRefElement, _SVGHKernElement, _SVGMPathElement, _SVGMissingGlyphElement, _SVGVKernElement, AudioProcessingEvent, OfflineAudioCompletionEvent, ContextEvent, SqlError, NativeByteBuffer, NativeTypedData, NativeByteData, NativeFloat32List, NativeFloat64List, NativeInt16List, NativeInt32List, NativeInt8List, NativeUint16List, NativeUint32List, NativeUint8ClampedList, NativeUint8List, JS_CONST, Interceptor, JSBool, JSNull, JavaScriptObject, PlainJavaScriptObject, UnknownJavaScriptObject, JSArray, JSMutableArray, JSFixedArray, JSExtendableArray, JSNumber, JSInt, JSDouble, JSPositiveInt, JSUInt32, JSUInt31, JSString, _CodeUnits, startRootIsolate_closure, startRootIsolate_closure0, _Manager, _IsolateContext, _EventLoop, _EventLoop__runHelper_next, _IsolateEvent, _MainManagerStub, IsolateNatives__processWorkerMessage_closure, _BaseSendPort, _NativeJsSendPort, _NativeJsSendPort_send_closure, _WorkerSendPort, RawReceivePortImpl, ReceivePortImpl, _JsSerializer, _JsCopier, _JsDeserializer, _JsVisitedMap, _MessageTraverserVisitedMap, _MessageTraverser, _Copier, _Copier_visitMap_closure, _Serializer, _Deserializer, TimerImpl, TimerImpl_internalCallback, TimerImpl_internalCallback0, NoSideEffects, NoThrows, NoInline, ConstantMap, ConstantStringMap, ConstantStringMap_containsValue_closure, ConstantStringMap_forEach_closure, ConstantStringMap_values_closure, _ConstantMapKeyIterable, JSInvocationMirror, CachedInvocation, CachedCatchAllInvocation, CachedNoSuchMethodInvocation, ReflectionInfo, Primitives_functionNoSuchMethod_closure, Primitives_applyFunction_closure, TypeErrorDecoder, NullError, JsNoSuchMethodError, UnknownJsTypeError, unwrapException_saveStackTrace, _StackTrace, invokeClosure_closure, invokeClosure_closure0, invokeClosure_closure1, invokeClosure_closure2, invokeClosure_closure3, Closure, TearOffClosure, BoundClosure, Creates, Returns, JSName, CastErrorImplementation, RuntimeError, RuntimeType, RuntimeFunctionType, DynamicRuntimeType, RuntimeTypePlain, RuntimeTypeGeneric, UnimplementedNoSuchMethodError, TypeImpl, TypeVariable, initHooks_closure, initHooks_closure0, initHooks_closure1, JSSyntaxRegExp, _MatchImplementation, _AllMatchesIterable, _AllMatchesIterator, StringMatch, Container, Category, Category_memberNamed_closure, Category$forClasses_closure, Category$forVariables_closure, Category$forVariables_closure0, Category$forVariables_closure1, Category$forFunctions_closure, Category$forTypedefs_closure, Category_addInheritedItem_closure, Category_filteredContent_closure, Filter, Item, _sort_closure, _sort__closure, Home, Home_closure, Home__closure1, Home_closure0, Home__closure, Home__closure0, Home_makeMainLibrarySpecial_closure, Home_makeMainLibrarySpecial_closure0, Home_makeMainLibrarySpecial_closure1, Home_memberNamed_closure, LazyItem, LazyItem_load_closure, Library, Class, Class_addToHierarchy_closure, Class_addToHierarchy__closure, Class_loadValues_closure, Class_loadValues_closure0, Class_loadValues_closure1, Class__addVariable_closure, Class__addMethod_closure, AnnotationGroup, AnnotationGroup_closure, AnnotationGroup_closure0, Annotation, Annotation_hashCode_closure, Parameterized, Parameterized_getParameters_closure, Parameterized_parameterNamed_closure, Parameterized_parameterNamed_closure0, Typedef, Method, Parameter, Variable, NestedType, NestedType_closure, LinkableType, Composer, Constructor, Constructor_visitMapping_closure, closure, ListIterable, SubListIterable, ListIterator, MappedIterable, EfficientLengthMappedIterable, MappedIterator, MappedListIterable, WhereIterable, WhereIterator, ExpandIterable, ExpandIterator, TakeIterable, EfficientLengthTakeIterable, TakeIterator, SkipIterable, EfficientLengthSkipIterable, SkipIterator, EmptyIterator, FixedLengthListMixin, UnmodifiableListMixin, UnmodifiableListBase, ReversedListIterable, Symbol0, JsMirrorSystem, JsMirrorSystem_computeLibrariesByName_closure, JsMirror, JsIsolateMirror, JsIsolateMirror_rootLibrary_closure, JsDeclarationMirror, JsTypeVariableMirror, JsTypeMirror, JsLibraryMirror, JsDeclarationMirror_JsObjectMirror, JsLibraryMirror___members_addToResult, JsLibraryMirror_declarations_addToResult, filterMembers_closure, JsMixinApplication, JsTypeMirror_JsObjectMirror, JsObjectMirror, JsInstanceMirror, JsInstanceMirror_invoke_closure, JsTypeBoundClassMirror, JsTypeBoundClassMirror_typeArguments_addTypeArgument, JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure, JsTypeBoundClassMirror_typeArguments_closure, JsTypeBoundClassMirror_declarations_closure, JsClassMirror, JsTypeMirror_JsObjectMirror0, JsClassMirror_declarations_addToResult, JsClassMirror_declarations_closure, JsClassMirror__getSuperinterfacesWithOwner_lookupType, JsVariableMirror, JsClosureMirror, JsMethodMirror, JsParameterMirror, JsTypedefMirror, BrokenClassMirror, JsFunctionTypeMirror, typeMirrorFromRuntimeTypeRepresentation_getTypeArgument, typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable, extractMetadata_closure, extractMetadata_closure0, UnmodifiableMapView, computeReflectiveNames_closure, _AsyncError, _BroadcastStream, _BroadcastSubscription, _BroadcastStreamController, _SyncBroadcastStreamController, _SyncBroadcastStreamController__sendData_closure, _SyncBroadcastStreamController__sendError_closure, _SyncBroadcastStreamController__sendDone_closure, _AsyncBroadcastStreamController, Future, Future_wait_handleError, Future_wait_closure, _Completer, _AsyncCompleter, _SyncCompleter, _Future, _Future__addListener_closure, _Future__chainFutures_closure, _Future__chainFutures_closure0, _Future__asyncComplete_closure, _Future__asyncCompleteError_closure, _Future__propagateToListeners_closure, _Future__propagateToListeners_closure0, _Future__propagateToListeners__closure, _Future__propagateToListeners__closure0, Stream, Stream_fold_closure, Stream_fold__closure, Stream_fold__closure0, Stream_fold_closure1, Stream_fold_closure0, Stream_join_closure, Stream_join_closure1, Stream_join_closure0, Stream_contains_closure, Stream_contains__closure, Stream_contains__closure0, Stream_contains_closure0, Stream_forEach_closure, Stream_forEach__closure, Stream_forEach__closure0, Stream_forEach_closure0, Stream_any_closure, Stream_any__closure, Stream_any__closure0, Stream_any_closure0, Stream_length_closure, Stream_length_closure0, Stream_isEmpty_closure, Stream_isEmpty_closure0, Stream_toList_closure, Stream_toList_closure0, Stream_first_closure, Stream_first_closure0, Stream_last_closure, Stream_last_closure0, Stream_firstWhere_closure, Stream_firstWhere__closure, Stream_firstWhere__closure0, Stream_firstWhere_closure0, Stream_elementAt_closure, Stream_elementAt_closure0, StreamSubscription, _StreamController, _StreamController__subscribe_closure, _StreamController__recordCancel_complete, _SyncStreamControllerDispatch, _AsyncStreamControllerDispatch, _AsyncStreamController, _StreamController__AsyncStreamControllerDispatch, _SyncStreamController, _StreamController__SyncStreamControllerDispatch, _ControllerStream, _ControllerSubscription, _EventSink, _BufferingStreamSubscription, _BufferingStreamSubscription__sendError_sendError, _BufferingStreamSubscription__sendDone_sendDone, _StreamImpl, _DelayedEvent, _DelayedData, _DelayedError, _DelayedDone, _PendingEvents, _PendingEvents_schedule_closure, _StreamImplEvents, _cancelAndError_closure, _cancelAndErrorClosure_closure, _cancelAndValue_closure, _ForwardingStream, _ForwardingStreamSubscription, _WhereStream, _MapStream, _TakeStream, _SkipStream, Timer, ZoneSpecification, _ZoneSpecification, ZoneDelegate, Zone, _ZoneDelegate, _BaseZone, _BaseZone_bindCallback_closure, _BaseZone_bindCallback_closure0, _BaseZone_bindUnaryCallback_closure, _BaseZone_bindUnaryCallback_closure0, _BaseZone_bindBinaryCallback_closure, _BaseZone_bindBinaryCallback_closure0, _CustomizedZone, _rootHandleUncaughtError_closure, _rootHandleUncaughtError__closure, _rootFork_closure, _RootZoneSpecification, _RootZone, _HashMap, _HashMap_values_closure, _HashMap_containsValue_closure, _HashMap_addAll_closure, _CustomHashMap, _CustomHashMap_closure, HashMapKeyIterable, HashMapKeyIterator, _LinkedHashMap, _LinkedHashMap_values_closure, _LinkedHashMap_containsValue_closure, _LinkedHashMap_addAll_closure, _LinkedIdentityHashMap, _LinkedCustomHashMap, _LinkedCustomHashMap_closure, LinkedHashMapCell, LinkedHashMapKeyIterable, LinkedHashMapKeyIterator, _HashSet, _IdentityHashSet, HashSetIterator, _LinkedHashSet, LinkedHashSetCell, LinkedHashSetIterator, UnmodifiableListView, _HashSetBase, IterableBase, ListBase, ListMixin, Maps_mapToString_closure, ListQueue, _ListQueueIterator, _SplayTreeNode, _SplayTreeMapNode, _SplayTree, SplayTreeMap, SplayTreeMap_closure, SplayTreeMap_addAll_closure, SplayTreeMap_containsValue_visit, _SplayTreeIterator, _SplayTreeKeyIterable, _SplayTreeValueIterable, _SplayTreeKeyIterator, _SplayTreeValueIterator, _SplayTreeNodeIterator, _convertJsonToDart_closure, _convertJsonToDart_walk, Codec, Converter, Encoding, JsonCodec, JsonDecoder, Utf8Codec, Utf8Encoder, _Utf8Encoder, Utf8Decoder, _Utf8Decoder, Function__toMangledNames_closure, NoSuchMethodError_toString_closure, Deprecated, bool, Comparable, DateTime, DateTime_parse_parseIntOrZero, DateTime_parse_parseDoubleOrZero, DateTime_toString_fourDigits, DateTime_toString_threeDigits, DateTime_toString_twoDigits, Duration, Duration_toString_sixDigits, Duration_toString_twoDigits, Error, NullThrownError, ArgumentError, RangeError, NoSuchMethodError, UnsupportedError, UnimplementedError, StateError, ConcurrentModificationError, StackOverflowError, CyclicInitializationError, _ExceptionImplementation, FormatException, IntegerDivisionByZeroException, Expando, Function, Iterable, Iterator, Map, Null, Object, Match, StackTrace, Stopwatch, RuneIterator, StringBuffer, Symbol, Type, Uri, Uri__checkNonWindowsPathReservedCharacters_closure, Uri__makeScheme_isSchemeLowerCharacter, Uri__makeScheme_isSchemeCharacter, Uri__makePath_closure, Uri__makeQuery_closure, Uri__normalize_isNormalizedHexDigit, Uri__normalize_isLowerCaseHexDigit, Uri__normalize_isUnreserved, Uri__normalize_normalizeHexDigit, Uri__normalize_decodeHexDigitPair, Uri__normalize_fillResult, Uri_hashCode_combine, Uri_parseIPv4Address_error, Uri_parseIPv4Address_closure, Uri_parseIPv6Address_error, Uri_parseIPv6Address_parseHex, Uri_parseIPv6Address_closure, Uri__uriEncode_byteToHex, Console, Interceptor_CssStyleDeclarationBase, CssStyleDeclarationBase, _ChildrenElementList, _FrozenElementList, _FrozenElementList$_wrap_closure, _FrozenElementList_classes_closure, Element_Element$html_closure, Entry, Events, ElementEvents, Interceptor_ListMixin, Interceptor_ListMixin_ImmutableListMixin, HttpRequest_getString_closure, HttpRequest_request_closure0, HttpRequest_request_closure, MutationObserver_observe_override, _ChildNodeListLazy, Interceptor_ListMixin0, Interceptor_ListMixin_ImmutableListMixin0, Window_animationFrame_closure, Interceptor_ListMixin1, Interceptor_ListMixin_ImmutableListMixin1, Interceptor_ListMixin2, Interceptor_ListMixin_ImmutableListMixin2, Interceptor_ListMixin3, Interceptor_ListMixin_ImmutableListMixin3, _AttributeMap, _AttributeMap_addAll_closure, _ElementAttributeMap, _DataAttributeMap, _DataAttributeMap_addAll_closure, _DataAttributeMap_containsValue_closure, _DataAttributeMap_forEach_closure, _DataAttributeMap_keys_closure, _DataAttributeMap_values_closure, _MultiElementCssClassSet, _MultiElementCssClassSet_closure, _MultiElementCssClassSet_readClasses_closure, _MultiElementCssClassSet_modify_closure, _MultiElementCssClassSet_toggle_closure, _MultiElementCssClassSet_remove_closure, _MultiElementCssClassSet__modifyWithReturnValue_closure, _ElementCssClassSet, _ContentCssRect, _MarginCssRect, CssRect, Dimension, EventStreamProvider, _EventStream, _ElementEventStreamImpl, _ElementEventStreamImpl_matches_closure, _ElementEventStreamImpl_matches_closure0, _ElementListEventStreamImpl, _ElementListEventStreamImpl_matches_closure, _ElementListEventStreamImpl_matches_closure0, _EventStreamSubscription, _StreamPool, _StreamPool_add_closure, _CustomEventStreamProvider, _Html5NodeValidator, ImmutableListMixin, NodeValidatorBuilder, NodeValidatorBuilder_allowsElement_closure, NodeValidatorBuilder_allowsAttribute_closure, _SimpleNodeValidator, _TemplatingNodeValidator, _TemplatingNodeValidator_closure, _SvgNodeValidator, FixedSizeListIterator, _callConstructor_closure, _DOMWindowCrossFrame, _LocationCrossFrame, _LocationWrapper, NodeValidator, _SameOriginUriPolicy, _ValidatingTreeSanitizer, _ValidatingTreeSanitizer_sanitizeTree_walk, _AttributeClassSet, JsObject, JsFunction, JsArray, JsObject_ListMixin, _convertToJS_closure, _convertToJS_closure0, _wrapToDart_closure, _wrapToDart_closure0, _wrapToDart_closure1, _RectangleBase, MutableRectangle, Mirror, DeclarationMirror, InstanceMirror, LibraryMirror, TypeMirror, ClassMirror, TypeVariableMirror, MethodMirror, VariableMirror, ParameterMirror, MirrorsUsed, DefaultEquality, ListEquality, UnmodifiableMapView0, DelegatingMap_UnmodifiableMapMixin, UnmodifiableMapMixin, DelegatingMap, NativeTypedArray, NativeTypedArrayOfDouble, NativeTypedArray_ListMixin, NativeTypedArray_ListMixin_FixedLengthListMixin, NativeTypedArrayOfInt, NativeTypedArray_ListMixin0, NativeTypedArray_ListMixin_FixedLengthListMixin0, _convertDartToNative_PrepareForStructuredClone_findSlot, _convertDartToNative_PrepareForStructuredClone_readSlot, _convertDartToNative_PrepareForStructuredClone_writeSlot, _convertDartToNative_PrepareForStructuredClone_cleanupSlots, _convertDartToNative_PrepareForStructuredClone_walk, _convertDartToNative_PrepareForStructuredClone_walk_closure, convertNativeToDart_AcceptStructuredClone_findSlot, convertNativeToDart_AcceptStructuredClone_readSlot, convertNativeToDart_AcceptStructuredClone_writeSlot, convertNativeToDart_AcceptStructuredClone_walk, CssClassSetImpl, CssClassSetImpl_add_closure, CssClassSetImpl_addAll_closure, CssClassSetImpl_clear_closure, FilteredElementList, FilteredElementList__filtered_closure, FilteredElementList_removeRange_closure, DocsLocation, DocsLocation__extractPieces__check, DocsLocation_componentNames_closure, DocsLocation_itemFromList_closure, DocsLocation_itemFromList_closure0, Logger, Logger_Logger_closure, Level, LogRecord, SupportedBrowser, Experimental, DomName, DocsEditable, Unstable, Tag, Node0, SequenceNode, SequenceNode_toString_closure, AliasNode, ScalarNode, ScalarNode_canonicalContent_closure, MappingNode, MappingNode_toString_closure, ObservableLocationHash, ChangeNotifier, ChangeRecord, PropertyChangeRecord, CompoundPathObserver, CompoundPathObserver__resolve_closure, dirtyCheckZoneSpec_enqueueDirtyCheck, dirtyCheckZoneSpec_enqueueDirtyCheck_closure, dirtyCheckZoneSpec_wrapCallback, dirtyCheckZoneSpec_wrapCallback_closure, dirtyCheckZoneSpec_wrapUnaryCallback, dirtyCheckZoneSpec_wrapUnaryCallback_closure, ListChangeRecord, ObservableProperty, Reflectable, Observable, Observable_deliverChanges_closure, ObservableBox, ObservableList, ListBase_ChangeNotifier, ObservableList_listChanges_closure, MapChangeRecord, ObservableMap, ObservableMap_addAll_closure, ObservableMap_clear_closure, PathObserver, PathObserver_closure, PathObserver__observeIndex_closure, PathObserver__observeIndex_closure0, closure1, _toObservableDeep_closure, Parser, Parser_consumeChar_closure, Parser_nAtOnce_closure, Parser_nAtOnce__closure, Parser_rawString_closure, Parser_captureAs_closure, Parser_map_closure, Parser_annotateError_closure, Parser_blockScalarAdditionalIndentation_closure, Parser_blockScalarAdditionalIndentation__closure, Parser_blockScalarAdditionalIndentation___closure, Parser_c_indicator_closure, Parser_b_break_closure, Parser_b_asLineFeed_closure, Parser_b_nonContent_closure, Parser_c_escape_closure, Parser_ns_escNull_closure, Parser_ns_escBell_closure, Parser_ns_escBackspace_closure, Parser_ns_escHorizontalTab_closure, Parser_ns_escHorizontalTab__closure, Parser_ns_escLineFeed_closure, Parser_ns_escVerticalTab_closure, Parser_ns_escFormFeed_closure, Parser_ns_escCarriageReturn_closure, Parser_ns_escEscape_closure, Parser_ns_escNextLine_closure, Parser_ns_escNonBreakingSpace_closure, Parser_ns_escLineSeparator_closure, Parser_ns_escParagraphSeparator_closure, Parser_ns_escNBit_closure, Parser_ns_escNBit_closure0, Parser_ns_escNBit__closure, Parser_ns_escNBit_closure1, Parser_c_ns_escChar_closure, Parser_c_ns_escChar__closure, Parser_s_indent_closure, Parser_s_indent_closure0, Parser_s_indent__closure, Parser_s_indentLessThan_closure, Parser_s_separateInLine_closure, Parser_s_separateInLine__closure, Parser_s_separateInLine___closure, Parser_s_linePrefix_closure, Parser_s_flowLinePrefix_closure, Parser_l_empty_closure, Parser_l_empty__closure, Parser_l_empty__closure0, Parser_b_asSpace_closure, Parser_b_l_trimmed_closure, Parser_b_l_trimmed__closure, Parser_b_l_trimmed___closure, Parser_b_l_folded_closure, Parser_s_flowFolded_closure, Parser_c_nb_commentText_closure, Parser_l_comment_closure, Parser_s_separateLines_closure, Parser_c_ns_properties_closure, Parser_c_ns_properties_closure0, Parser_ns_anchorName_closure, Parser_ns_anchorName__closure, Parser_nb_doubleChar_closure, Parser_nb_doubleChar__closure, Parser_c_doubleQuoted_closure, Parser_c_doubleQuoted__closure, Parser_nb_doubleText_closure, Parser_s_doubleEscaped_closure, Parser_s_doubleEscaped__closure, Parser_s_doubleEscaped__closure0, Parser_s_doubleEscaped__closure1, Parser_s_doubleEscaped___closure, Parser_s_doubleBreak_closure, Parser_s_doubleBreak_closure0, Parser_nb_ns_doubleInLine_closure, Parser_nb_ns_doubleInLine__closure, Parser_nb_ns_doubleInLine___closure, Parser_s_doubleNextLine_closure, Parser_s_doubleNextLine__closure, Parser_s_doubleNextLine__closure0, Parser_s_doubleNextLine___closure, Parser_nb_doubleMultiLine_closure, Parser_nb_doubleMultiLine_closure0, Parser_nb_doubleMultiLine__closure, Parser_c_quotedQuote_closure, Parser_nb_singleChar_closure, Parser_nb_singleChar__closure, Parser_c_singleQuoted_closure, Parser_c_singleQuoted__closure, Parser_nb_singleText_closure, Parser_nb_ns_singleInLine_closure, Parser_nb_ns_singleInLine__closure, Parser_nb_ns_singleInLine___closure, Parser_s_singleNextLine_closure, Parser_s_singleNextLine__closure, Parser_s_singleNextLine__closure0, Parser_s_singleNextLine___closure, Parser_nb_singleMultiLine_closure, Parser_nb_singleMultiLine_closure0, Parser_nb_singleMultiLine__closure, Parser_ns_plain_closure, Parser_ns_plain__closure, Parser_nb_ns_plainInLine_closure, Parser_nb_ns_plainInLine__closure, Parser_nb_ns_plainInLine___closure, Parser_s_ns_plainNextLine_closure, Parser_ns_plainMultiLine_closure, Parser_c_flowSequence_closure, Parser_c_flowSequence__closure, Parser_c_flowSequence__closure0, Parser_ns_s_flowSeqEntries_closure, Parser_ns_s_flowSeqEntries_closure0, Parser_ns_s_flowSeqEntries_closure1, Parser_ns_flowSeqEntry_closure, Parser_ns_flowSeqEntry_closure0, Parser_c_flowMapping_closure, Parser_c_flowMapping_closure0, Parser_ns_s_flowMapEntries_closure, Parser_ns_s_flowMapEntries_closure0, Parser_ns_flowMapEntry_closure, Parser_ns_flowMapEntry__closure, Parser_ns_flowMapEntry_closure0, Parser_ns_flowMapExplicitEntry_closure, Parser_ns_flowMapExplicitEntry_closure0, Parser_ns_flowMapImplicitEntry_closure, Parser_ns_flowMapImplicitEntry_closure0, Parser_ns_flowMapImplicitEntry_closure1, Parser_ns_flowMapYamlKeyEntry_closure, Parser_ns_flowMapYamlKeyEntry__closure, Parser_ns_flowMapYamlKeyEntry___closure, Parser_c_ns_flowMapSeparateValue_closure, Parser_c_ns_flowMapSeparateValue__closure, Parser_c_ns_flowMapSeparateValue___closure, Parser_c_ns_flowMapJsonKeyEntry_closure, Parser_c_ns_flowMapJsonKeyEntry__closure, Parser_c_ns_flowMapJsonKeyEntry___closure, Parser_c_ns_flowMapAdjacentValue_closure, Parser_c_ns_flowMapAdjacentValue__closure, Parser_c_ns_flowMapAdjacentValue___closure, Parser_ns_flowPair_closure, Parser_ns_flowPair__closure, Parser_ns_flowPair_closure0, Parser_ns_flowPairEntry_closure, Parser_ns_flowPairEntry_closure0, Parser_ns_flowPairEntry_closure1, Parser_ns_flowPairYamlKeyEntry_closure, Parser_c_ns_flowPairJsonKeyEntry_closure, Parser_ns_s_implicitYamlKey_closure, Parser_c_s_implicitJsonKey_closure, Parser_c_flowJsonContent_closure, Parser_c_flowJsonContent_closure0, Parser_c_flowJsonContent_closure1, Parser_c_flowJsonContent_closure2, Parser_ns_flowContent_closure, Parser_ns_flowContent_closure0, Parser_ns_flowYamlNode_closure, Parser_ns_flowYamlNode_closure0, Parser_ns_flowYamlNode__closure, Parser_ns_flowYamlNode___closure, Parser_c_flowJsonNode_closure, Parser_c_flowJsonNode__closure, Parser_c_flowJsonNode___closure, Parser_ns_flowNode_closure, Parser_ns_flowNode_closure0, Parser_ns_flowNode__closure, Parser_ns_flowNode___closure, Parser_ns_flowNode____closure, Parser_c_b_blockHeader_closure, Parser_l_stripEmpty_closure, Parser_l_stripEmpty__closure, Parser_l_stripEmpty___closure, Parser_l_stripEmpty__closure0, Parser_l_keepEmpty_closure, Parser_l_keepEmpty__closure0, Parser_l_keepEmpty_closure0, Parser_l_keepEmpty__closure, Parser_l_trailComments_closure, Parser_c_l_literal_closure, Parser_l_nb_literalText_closure, Parser_l_nb_literalText__closure, Parser_l_nb_literalText___closure, Parser_l_nb_literalText__closure0, Parser_l_nb_literalText__closure1, Parser_b_nb_literalNext_closure, Parser_l_literalContent_closure, Parser_l_literalContent__closure, Parser_l_literalContent___closure, Parser_c_l_folded_closure, Parser_s_nb_foldedText_closure, Parser_s_nb_foldedText__closure, Parser_s_nb_foldedText__closure0, Parser_l_nb_foldedLines_closure, Parser_l_nb_foldedLines__closure, Parser_s_nb_spacedText_closure, Parser_s_nb_spacedText__closure, Parser_s_nb_spacedText__closure0, Parser_b_l_spaced_closure, Parser_b_l_spaced__closure, Parser_l_nb_spacedLines_closure, Parser_l_nb_spacedLines__closure, Parser_l_nb_sameLines_closure, Parser_l_nb_sameLines__closure, Parser_l_nb_sameLines___closure, Parser_l_nb_sameLines__closure0, Parser_l_nb_sameLines__closure1, Parser_l_nb_diffLines_closure, Parser_l_nb_diffLines__closure, Parser_l_foldedContent_closure, Parser_l_foldedContent__closure, Parser_l_blockSequence_closure, Parser_l_blockSequence__closure, Parser_l_blockSequence___closure, Parser_c_l_blockSeqEntry_closure, Parser_s_l_blockIndented_closure, Parser_s_l_blockIndented__closure, Parser_s_l_blockIndented___closure, Parser_s_l_blockIndented___closure0, Parser_s_l_blockIndented_closure0, Parser_s_l_blockIndented_closure1, Parser_ns_l_compactSequence_closure, Parser_ns_l_compactSequence__closure, Parser_ns_l_compactSequence___closure, Parser_l_blockMapping_closure, Parser_l_blockMapping__closure, Parser_l_blockMapping___closure, Parser_ns_l_blockMapEntry_closure, Parser_ns_l_blockMapEntry_closure0, Parser_c_l_blockMapExplicitEntry_closure, Parser_c_l_blockMapExplicitKey_closure, Parser_l_blockMapExplicitValue_closure, Parser_ns_l_blockMapImplicitEntry_closure, Parser_ns_s_blockMapImplicitKey_closure, Parser_ns_s_blockMapImplicitKey__closure, Parser_ns_s_blockMapImplicitKey__closure0, Parser_c_l_blockMapImplicitValue_closure, Parser_c_l_blockMapImplicitValue__closure, Parser_c_l_blockMapImplicitValue___closure, Parser_c_l_blockMapImplicitValue___closure0, Parser_ns_l_compactMapping_closure, Parser_ns_l_compactMapping__closure, Parser_ns_l_compactMapping___closure, Parser_s_l_blockNode_closure, Parser_s_l_blockNode_closure0, Parser_s_l_flowInBlock_closure, Parser_s_l_blockInBlock_closure, Parser_s_l_blockInBlock_closure0, Parser_s_l_blockScalar_closure, Parser_s_l_blockScalar__closure, Parser_s_l_blockScalar__closure0, Parser_s_l_blockScalar__closure1, Parser_s_l_blockCollection_closure, Parser_s_l_blockCollection__closure, Parser_s_l_blockCollection__closure0, Parser_s_l_blockCollection__closure1, Parser_l_documentSuffix_closure, Parser_c_forbidden_closure, Parser_l_yamlStream_closure, SyntaxError, _Pair, _BlockHeader, _Range, _RangeMap, Context, Context_join_closure, Context_joinAll_closure, Context_split_closure, _validateArgList_closure, ParsedPath, Style, PosixStyle, UrlStyle, WindowsStyle, _preventFlashOfUnstyledContent_closure, PolymerDeclaration, PolymerDeclaration_waitingForExtendee_closure, PolymerDeclaration_accumulateInstanceAttributes_closure, PolymerDeclaration_addAttributeDelegates_closure, PolymerDeclaration_installLocalSheets_closure, PolymerDeclaration_cssTextForScope_matcher, PolymerDeclaration__lowerCaseMap_closure, closure4, _closure7, PublishedProperty, Polymer, Polymer_onMutation_closure, Polymer_copyInstanceAttributes_closure, Polymer_copyInstanceAttributes__closure, Polymer_cancelUnbindAll_closure, Polymer__unbindNodeTree_closure, Polymer_notifyPropertyChanges_closure, Polymer_notifyPropertyChanges_closure0, Polymer_observeArrayValue_closure, Polymer_prepareBinding_closure, Polymer_prepareBinding__closure, Polymer__invokeMethod_closure, Polymer_unveilElements_closure, Polymer_unveilElements__closure, _PolymerBinding, PolymerElement, HtmlElement_Polymer, HtmlElement_Polymer_ChangeNotifier, _PropertyValue, _PolymerExpressionsWithEventDelegate, _Job, CustomTag, _initPolymerOptimized_closure, _loadLibrary_closure, _loadLibrary_closure0, _maybeInvoke_closure, _InitMethodAnnotation, closure0, _closure, _closure0, _closure1, _closure2, _closure3, __closure0, _closure4, __closure, _classAttributeConverter_closure, _styleAttributeConverter_closure, PolymerExpressions, PolymerExpressions_prepareBinding_closure, PolymerExpressions_prepareInstanceModel_closure, _Binding, _Binding_closure, _Binding__setValue_closure, StreamBinding, StreamBinding_closure, closure5, closure6, closure7, closure8, closure9, closure10, closure11, closure12, closure13, closure14, closure15, closure16, closure17, closure18, closure19, closure20, assign_notAssignable, Scope, ExpressionObserver, Updater, ObserverBuilder, ObserverBuilder_visitInvoke_closure, ObserverBuilder_visitMapLiteral_closure, EmptyObserver, LiteralObserver, MapLiteralObserver, MapLiteralObserver__updateSelf_closure, MapLiteralEntryObserver, IdentifierObserver, IdentifierObserver__updateSelf_closure, IdentifierObserver__updateSelf__closure, UnaryObserver, BinaryObserver, BinaryObserver__updateSelf_closure, GetterObserver, GetterObserver__updateSelf_closure, GetterObserver__updateSelf__closure, IndexObserver, IndexObserver__updateSelf_closure, IndexObserver__updateSelf__closure, InvokeObserver, InvokeObserver__updateSelf_closure, InvokeObserver__updateSelf_closure0, InvokeObserver__updateSelf__closure, InObserver, InObserver__updateSelf_closure, Comprehension, Method0, EvalException, AstFactory, Expression, EmptyExpression, Literal, MapLiteral, MapLiteralEntry, ParenthesizedExpression, Identifier, UnaryOperator, BinaryOperator, InExpression, Index, Getter, Invoke, _hashList_closure, Parser0, IndexedValue, EnumerateIterable, EnumerateIterator, Token, Tokenizer, ParseException, Visitor0, RecursiveVisitor, SearchResult, Hit, _splitQueryTerms_closure, _splitQueryTerms_closure0, _splitQueryTerms_closure1, lookupSearchResults_closure, lookupSearchResults_closure0, lookupSearchResults_closure1, SearchIndex, _ElementExtension, _AttributeBinding, _OptionValueBinding, _InputBinding, closure2, _closure5, _closure6, _ValueBinding, _CheckedBinding, _CheckedBinding__getAssociatedRadioButtons_closure, _CheckedBinding__getAssociatedRadioButtons_closure0, _SelectBinding, _SelectBinding_valueChanged_closure, _SelectBinding__toInt_closure, _InputElementExtension, _InstanceBindingMap, NodeBindExtension, TemplateInstance, _SelectElementExtension, TemplateBindExtension, TemplateBindExtension_bootstrap__bootstrap, closure3, _TemplateBinding, _parseAttributeBindings_closure, _MustacheTokens, _TemplateIterator, _TemplateIterator_resolve_closure, _TemplateIterator_resolve_valueFn, _TemplateIterator_resolve_closure0, _BoundNodes, _TextExtension, _TextBinding, _TextAreaElementExtension, BindingDelegate, NodeBinding, NodeBinding_closure, hashCodeFor_closure, Visitor, Visitor_visitSequence_closure, AnnotationElement, PolymerElement_ChangeNotifier, Viewer, Viewer__updateLibraries_closure, Viewer$__closure, Viewer$__closure0, Viewer__scrollScreen_closure, Viewer__scrollScreen_closure0, Viewer_queryEverywhere_closure, Viewer__loadAndUpdatePage_closure, Viewer__loadAndUpdatePage_closure0, Viewer_getItem_closure, Viewer_getItem_closure0, Viewer_getMember_closure, Viewer_getMember__closure, Viewer_getMember___closure, Viewer_getMember_closure0, _init_closure, _init_closure0, _init_closure1, concat_closure, _DefaultSyntaxWithEvents, Breadcrumbs, PolymerElement_ChangeNotifier0, Breadcrumbs_enteredView_closure, CategoryElement, DartdocElement_ChangeNotifier, CategoryElement$created_closure, CategoryElement$created__closure, ClassElement, ClassElement$created_closure, ClassElement$created__closure, ClassElement__loadCategories_closure, ClassElement_addSubclasses_closure, ClassElement_makeLinks_closure, ClassElement_makeLinks_closure0, CommentElement, DivElement_Polymer, DivElement_Polymer_ChangeNotifier, HomeElement, ItemElement, LazyListLoader, _LazyListCopier, LibraryElement, LibraryPanel, LibraryPanel_shadowRootReady_closure, LinkElement0, PolymerElement_ChangeNotifier1, MainElement, DartdocElement_ChangeNotifier1, MainElement_collapseSearchAndOptionsIfNeeded_closure, MainElement_buildIdentifier_closure, MainElement_buildIdentifier_closure0, NullTreeSanitizer, DartdocElement, MemberElement, DartdocElement_ChangeNotifier0, InheritedElement, MemberElement_ChangeNotifier, InheritedElement$created_closure, MethodElement, InheritedElement_ChangeNotifier, MinimapElementClass, MinimapElement, PolymerElement_ChangeNotifier2, MinimapElement$created_closure, MinimapElementLibrary, PageElement, DartdocElement_ChangeNotifier2, ParameterElement, DartdocElement_ChangeNotifier3, ParameterElement_addParameters_closure, Result, AnchorElement_Polymer, AnchorElement_Polymer_ChangeNotifier, Search, PolymerElement_ChangeNotifier3, Search_onBlurCallback_closure, TypeElement, PolymerElement_ChangeNotifier4, TypedefElement, VariableElement, InheritedElement_ChangeNotifier0, VariableHeading, MemberElement_ChangeNotifier0, loadYamlStream_closure, YamlException, YamlMap, YamlMap_addAll_closure, YamlMap_forEach_closure, _WrappedHashKey];
}
